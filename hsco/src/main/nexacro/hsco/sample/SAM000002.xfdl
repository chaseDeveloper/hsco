<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="Sample_03" classname="Sample_03" left="0" top="0" width="1039" height="799" titletext="공통 콤보 표준 (OLD)" oninit="Sample_03_oninit" onload="Sample_03_onload">
    <Layouts>
      <Layout>
        <Div id="div_search" taborder="0" left="20" top="20" height="91" style="border:1 solid #808080ff ;" right="20">
          <Layouts>
            <Layout>
              <Static id="sta_gubun00" taborder="0" text="구분0 :" left="21" top="15" width="42" height="25"/>
              <Combo id="cmb_gubun00" taborder="1" left="77" top="15" width="260" height="25"/>
              <Static id="sta_gubun01" taborder="2" text="구분1 :" left="21" top="47" width="42" height="25"/>
              <Combo id="cmb_gubun01" taborder="3" left="77" top="47" width="260" height="25" innerdataset="@ds_gubun01" codecolumn="CODE" datacolumn="CODE_NM"/>
              <Static id="sta_gubunExp00" taborder="4" left="345" top="15" width="485" height="25" text="InnerDataset을 만들지 않는 경우"/>
              <Static id="sta_gubunExp01" taborder="5" text="InnerDataset을 만들고 연결시킨 경우" left="345" top="49" width="485" height="25"/>
            </Layout>
          </Layouts>
        </Div>
        <TextArea id="txa_explanation" taborder="1" left="20" top="155" bottom="20" value="I.  공통 함수 원형 위치&#13;&#10;  1. lib::comDataset.xjs&#13;&#10;&#13;&#10;II. 사용 함수&#13;&#10;  1. this.gfn_loadCodeCombo = function(form:Form, combo:Combo, strDs, strGrpCode, strOptCode, strUseYn, strVal, strCodeView, strAfterCallback)&#13;&#10;    : Combo에 사용되는 Dataset을 Form에서 생성하지 않는 경우 사용. 함수 내부에서 dataset 명을 받아 생성함.&#13;&#10;  2. this.gfn_loadCodeComboWithDs = function(form:Form, combo:Combo, ds:Dataset, strGrpCode, strOptCode, strUseYn, strVal, strCodeView, strAfterCallback)&#13;&#10;    : Combo에 사용되는 Dataset을 Form에서 생성하고 연결시키는 경우 사용. 반드시, Form에서 dataset을 생성해야 한다.&#13;&#10;&#13;&#10;III.  함수 상세 설명&#13;&#10;  1. gfn_loadCodeCombo&#13;&#10;     * 함수명  &#9;: gfn_loadCodeCombo&#13;&#10;     * 설명 &#9;&#9;: 화면에 있는 Combo에 데이터를 Loading.&#13;&#10;     * params  &#9;:   1. form    &#9;: 해당 Form 객체(Object)&#13;&#10;                    2. combo&#9;&#9;: 데이터를 Load할 Combo (Object)&#13;&#10;                    3. strDs&#9;&#9;: InnerDataset으로 사용할 Dataset 명 (String)&#13;&#10;                    4. strGrpCode&#9;: Group Code&#13;&#10;                    5. strOptCode&#9;: Opt. Code&#13;&#10;                    6. strUseYn&#9;: Code 사용 여부&#13;&#10;                    &#9;&#9;&#9;  Y:사용(기본값), &quot;&quot;(grpCode에 속한 전체 코드)&#13;&#10;                    7. strVal&#9;&#9;: Combo 박스의 Text 초기값 설정&#13;&#10;                    &#9;&#9;&#9;  &quot;전체&quot;, &quot;선택&quot; 등의 텍스트. 단, Space(&quot; &quot;)는 선택없는 콤보. &quot;&quot;은 코드값 첫번째 선택.&#13;&#10;                    8. strCodeView: Text에 보여주는 형태&#13;&#10;                    &#9;&#9;&#9;  &quot;N&quot; : 코드명만. &quot;Y&quot; : 코드 + 코드값 형식&#13;&#10;                    9. strAfterCallback : Data Load 후, 별도 처리해야할 함수 (String)&#13;&#10;                    &#9;&#9;&#9;  사용 예 : &quot;fn_afterLoading&quot;&#13;&#10;     * return Type &#9;: None&#13;&#10;     * 사용법&#9;&#9;: this.gfn_loadCodeCombo(this, this.div_search.cmb_gubun00, &quot;ds_gubun00&quot;, &quot;COM002&quot;, &quot;&quot;, &quot;Y&quot;, &quot;전체&quot;, &quot;N&quot;, &quot;fn_callBackAfter&quot;);&#13;&#10;&#13;&#10;  2. gfn_loadCodeComboWithDs&#13;&#10;     * 함수명  &#9;: gfn_loadCodeComboWithDs&#13;&#10;     * 설명 &#9;&#9;: 화면에 있는 Combo에 데이터를 Loading.&#13;&#10;     * params  &#9;: 1. form    &#9;: 해당 Form 객체(Object)&#13;&#10;                  2. combo&#9;&#9;: 데이터를 Load할 Combo (Object)&#13;&#10;                  3. ds&#9;&#9;&#9;: InnerDataset으로 사용할 Dataset (Object)&#13;&#10;                  4. strGrpCode&#9;: Group Code&#13;&#10;                  5. strOptCode&#9;: Opt. Code&#13;&#10;                  6. strUseYn&#9;: Code 사용 여부&#13;&#10;                  &#9;&#9;&#9;  Y:사용(기본값), &quot;&quot;(grpCode에 속한 전체 코드)&#13;&#10;                  7. strVal&#9;&#9;: Combo 박스의 Text 초기값 설정&#13;&#10;                  &#9;&#9;&#9;  &quot;전체&quot;, &quot;선택&quot; 등의 텍스트. 단, Space(&quot; &quot;)는 선택없는 콤보. &quot;&quot;은 코드값 첫번째 선택.&#13;&#10;                  8. strCodeView: Text에 보여주는 형태&#13;&#10;                  &#9;&#9;&#9;  &quot;N&quot; : 코드명만. &quot;Y&quot; : 코드 + 코드값 형식&#13;&#10;                  9. strAfterCallback : Data Load 후, 별도 처리해야할 함수 (String)&#13;&#10;                  &#9;&#9;&#9;  사용 예 : &quot;fn_afterLoading&quot;&#13;&#10;     * return Type &#9;: None&#13;&#10;     * 사용법&#9;&#9;: this.gfn_loadCodeComboWithDs(this, this.div_search.cmb_gubun01, this.ds_gubun01, &quot;COM002&quot;, &quot;&quot;, &quot;N&quot;, &quot;선택&quot;, &quot;N&quot;, &quot;&quot;);&#13;&#10;&#13;&#10;IV. 사용 위치&#13;&#10;    1. 함수 사용 위치 설명&#13;&#10;      - 함수 fn_loadCombo 를 생성한 후, 내부에서 정의된 함수를 사용한다.&#13;&#10;      - fn_loadCombo 함수는 fn_init_dataset 함수 내부에서 호출한다.&#13;&#10;      - Combo 데이터를 로드한 후, 처리해야 할 부분이 있다면, fn_loadCombo 아래에 함수를 만들어 기술한다.&#13;&#10;&#13;&#10;    2. 사용 예제&#13;&#10;&#13;&#10;    /*--- 중략 ---*/&#13;&#10;&#13;&#10;    /*&#13;&#10;     * 함수명  &#9;: fn_init_dataset&#13;&#10;     * 설명 &#9;&#9;: Dataset을 초기화한다.&#13;&#10;     *                주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.&#13;&#10;     * params  &#9;&#9;: None&#13;&#10;     * return Type &#9;: None&#13;&#10;     * 사용법&#9;&#9;: this.fn_init_dataset();&#13;&#10;     */&#13;&#10;    this.fn_init_dataset = function()&#13;&#10;    {&#13;&#10;    &#9;// 조건에 사용되는 Dataset 초기화&#13;&#10;    &#9;this.gfn_initCondDs(this, this.div_search);&#13;&#10;    &#9;&#13;&#10;    &#9;//================================================&#13;&#10;    &#9;// Combo에 사용되는 Dataset Load&#13;&#10;    &#9;//================================================&#13;&#10;    &#9;this.fn_loadCombo();&#13;&#10;    &#9;//================================================&#13;&#10;    &#13;&#10;    &#9;// 조건 Dataset, Combo 외에 초기화가 필요한 Dataset에 대한 초기화 코드를 추가한다.&#13;&#10;    &#9;// TODO&#13;&#10;    }&#13;&#10;&#13;&#10;    /*&#13;&#10;     * 함수명  &#9;: fn_loadCombo&#13;&#10;     * 설명 &#9;&#9;: 화면의 Combo 에 데이터를 불러온다.&#13;&#10;     * params  &#9;&#9;: None&#13;&#10;     * return Type &#9;: None&#13;&#10;     * 사용법&#9;&#9;: this.fn_loadCombo();&#13;&#10;     */&#13;&#10;    this.fn_loadCombo = function ()&#13;&#10;    {&#13;&#10;    &#9;this.gfn_loadCodeCombo(this, this.div_search.cmb_gubun00, &quot;ds_gubun00&quot;, &quot;COM002&quot;, &quot;&quot;, &quot;Y&quot;, &quot;전체&quot;, &quot;N&quot;, &quot;fn_callBackAfter00&quot;);&#13;&#10;    &#9;this.gfn_loadCodeComboWithDs(this, this.div_search.cmb_gubun01, this.ds_gubun01, &quot;COM002&quot;, &quot;&quot;, &quot;N&quot;, &quot;선택&quot;, &quot;N&quot;, &quot;&quot;);&#13;&#10;    }&#13;&#10;    &#13;&#10;    /*&#13;&#10;     * 함수명  &#9;: fn_callBackAfter00&#13;&#10;     * 설명 &#9;&#9;: 공통 Callback 함수에서 호출할 함수&#13;&#10;     * params  &#9;&#9;: None&#13;&#10;     * return Type &#9;: None&#13;&#10;     * 사용법&#9;&#9;: this.fn_callBackAfter00();&#13;&#10;     */&#13;&#10;    this.fn_callBackAfter00 = function ()&#13;&#10;    {&#13;&#10;    &#9;this.alert(&quot;Gubun 데이터를 조회하였습니다.&quot;);&#13;&#10;    }&#13;&#10;    &#13;&#10;    /*--- 이하 생략 ---*/&#13;&#10;" readonly="true" right="20" wordwrap="english"/>
        <Static id="sta_explanation" taborder="2" text="&gt;&gt; 설명" left="20" top="125" width="231" height="26"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_gubun01" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="GRP_CODE" type="STRING" size="256"/>
          <Column id="CODE_NM" type="STRING" size="256"/>
          <Column id="CODE_CN" type="STRING" size="256"/>
          <Column id="CODE_ORDR" type="STRING" size="256"/>
          <Column id="VAL0" type="STRING" size="256"/>
          <Column id="VAL1" type="STRING" size="256"/>
          <Column id="VAL2" type="STRING" size="256"/>
          <Column id="VAL3" type="STRING" size="256"/>
          <Column id="VAL4" type="STRING" size="256"/>
          <Column id="INT_VAL" type="STRING" size="256"/>
          <Column id="MSTK_VAL" type="STRING" size="256"/>
          <Column id="ETC1" type="STRING" size="256"/>
          <Column id="ETC2" type="STRING" size="256"/>
          <Column id="ETC3" type="STRING" size="256"/>
          <Column id="USE_YN" type="STRING" size="256"/>
          <Column id="ALL_CODE_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="gubun00" type="STRING" size="256"/>
          <Column id="gubun01" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="div_search.cmb_gubun00" propid="value" datasetid="ds_cond" columnid="gubun00"/>
      <BindItem id="item1" compid="div_search.cmb_gubun01" propid="value" datasetid="ds_cond" columnid="gubun01"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 화면ID   : SAM000002
 * 화면명   : 조건 Combo Template
 * 화면설명 : 조건으로 사용되는 Combo에 데이터를 불러온다.
 * 작성일   : 2015.07.27
 * 작성자   : 송금준
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ***********************************************************************/
// 시스템 공통 라이브러리 Include
include "lib::comInclude.xjs";

/***********************************************************************
 * 화면 변수 선언부
 ***********************************************************************/

/***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.Sample_03_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	// Form 초기화
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}

this.Sample_03_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	// 화면 로드 시 조회를 해야 하는 경우
	//========================================
	// Combo에 사용되는 Dataset Load
	this.fn_loadCombo();

	// 검색조건 컴포넌트 초기값 부여
	// 조회 이벤트 / 함수 호출
}

/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/

/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	// 시스템 공통으로 Form을 Initialize 한다.
	this.gfn_initForm(this);
}

/*
 * 함수명  	: fn_init_dataset
 * 설명 		: Dataset을 초기화한다.
 *                주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_init_dataset();
 */
this.fn_init_dataset = function()
{
	// 조건에 사용되는 Dataset 초기화
	this.gfn_initCondDs(this, this.div_search);

	// 조건 Dataset, Combo 외에 초기화가 필요한 Dataset에 대한 초기화 코드를 추가한다.
	// TODO
}

/*
 * 함수명  	: fn_loadCombo
 * 설명 		: 화면의 Combo 에 데이터를 불러온다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_loadCombo(); CTR005
 */
this.fn_loadCombo = function ()
{
// 	this.gfn_loadCodeCombo(this, this.div_search.cmb_gubun00, "ds_gubun00", "CMP001", "", "1", "전체", "N", "fn_callBackAfter00");
// 	this.gfn_loadCodeComboWithDs(this, "", this.ds_gubun01, "HOU0A2", "", "", "", "N", "");
	this.gfn_loadCodeCombo(this, this.div_search.cmb_gubun00, "ds_gubun00", "CTR005", "", "1", "전체", "N", "fn_callBackAfter00");
	this.gfn_loadCodeComboWithDs(this, "", this.ds_gubun01, "CTR005", "", "", "", "N", "");
}

/*
 * 함수명  	: fn_callBackAfter00
 * 설명 		: 공통 Callback 함수에서 호출할 함수
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_callBackAfter00();
 */
this.fn_callBackAfter00 = function ()
{
	this.alert("Gubun 데이터를 조회하였습니다.");
}
]]></Script>
  </Form>
</FDL>
