<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="SAM000008" classname="SAM000008" left="0" top="0" width="1059" height="735" titletext="messageBox Sample">
    <Layouts>
      <Layout>
        <Button id="btn_alert" taborder="0" text="인자없는 Alert" left="17" top="23" width="223" height="23" onclick="btn_alert_onclick"/>
        <Button id="btn_alert00" taborder="1" text="인자 1개인 Alert" left="17" top="55" width="223" height="23" onclick="btn_alert00_onclick"/>
        <Static id="sta_stmt" taborder="2" left="344" top="55" width="577" height="23" text="{0} 항목을 하나 이상 선택하십시오."/>
        <Static id="sta_org" taborder="3" text="메시지 원문 : " left="253" top="55" width="83" height="23"/>
        <Static id="sta_org00" taborder="4" text="메시지 원문 : " left="253" top="23" width="83" height="23"/>
        <Static id="sta_stmt00" taborder="5" left="344" top="23" width="577" height="23" text="선택된 데이터가 없습니다.\\n처리할 데이터를 선택하여 주십시오."/>
        <Button id="btn_alert01" taborder="6" text="인자 2개인 Alert" left="17" top="87" width="223" height="23" onclick="btn_alert01_onclick"/>
        <Static id="sta_org01" taborder="7" text="메시지 원문 : " left="253" top="87" width="83" height="23"/>
        <Static id="sta_stmt01" taborder="8" text="{0}항목은 {1} 자 이상 입력하셔야 합니다." left="344" top="87" width="577" height="23"/>
        <Button id="btn_alert02" taborder="9" text="인자 3개인 Alert" left="17" top="119" width="223" height="23" onclick="btn_alert02_onclick"/>
        <Static id="sta_org02" taborder="10" text="메시지 원문 : " left="253" top="119" width="83" height="23"/>
        <Static id="sta_stmt02" taborder="11" text="{0}항목은 {1} ~ {2} 범위 내에서 입력하셔야 합니다." left="344" top="119" width="577" height="23"/>
        <Button id="btn_confirm" taborder="12" text="인자 없는 Confirm" left="17" top="151" width="223" height="23" onclick="btn_confirm_onclick"/>
        <Static id="sta_org03" taborder="13" text="메시지 원문 : " left="253" top="151" width="83" height="23"/>
        <Static id="sta_stmt03" taborder="14" text="수정 하시겠습니까?" left="344" top="151" width="577" height="23"/>
        <Button id="btn_confirm00" taborder="15" text="인자 1개인 Confirm" left="17" top="183" width="223" height="23" onclick="btn_confirm00_onclick"/>
        <Static id="sta_org04" taborder="16" text="메시지 원문 : " left="253" top="183" width="83" height="23"/>
        <Static id="sta_stmt04" taborder="17" text="{0} 하시겠습니까?" left="344" top="183" width="577" height="23"/>
        <Button id="btn_confirm01" taborder="18" text="인자 2개인 Confirm" left="17" top="215" width="223" height="23" onclick="btn_confirm01_onclick"/>
        <Static id="sta_org05" taborder="19" text="메시지 원문 : " left="253" top="215" width="83" height="23"/>
        <Static id="sta_stmt05" taborder="20" text="사용중인 코드(하위그룹코드 : {0}건, 코드 : {1}건)가 있습니다. \\n삭제하시겠습니까?" left="344" top="215" width="577" height="23"/>
        <Button id="btn_confirm02" taborder="21" text="Callback" left="17" top="247" width="223" height="23" onclick="btn_confirm02_onclick"/>
        <Button id="btn_longStmt" taborder="22" text="추가 텍스트가 있는 경우" left="17" top="279" width="223" height="23" onclick="btn_longStmt_onclick"/>
        <Static id="sta_org06" taborder="23" text="&lt;== 주로 DB 오류 등을 별도로 표시할 경우 적용됨. 일반적인 화면 오류에는 거의 사용될 일이 없음." left="253" top="279" width="611" height="23"/>
        <TextArea id="txa_comment" taborder="24" left="17" top="313" width="1025" bottom="10" value="1. 사용 함수 :&#13;&#10;  i.  this.gfn_message = function (msg_cd, msg, errStmt, svc_id, callback)&#13;&#10;  ii. this.gfn_callBackMsg = function (sid, errNo, errMsg)&#13;&#10;&#13;&#10;2. 함수 위치 : lib::comLib.xjs&#13;&#10;&#13;&#10;3. 함수 설명&#13;&#10;  i. gfn_message의 Parameters 설명&#13;&#10;    * msg_cd   : {string} Message Code (필수)&#13;&#10;    * msg      : {string} Message (메시지 원문의 Argument 부분에 대체될 Text, Argument 구분은 &quot;|&quot;로 한다.)&#13;&#10;    * errStmt  : {string} Error Statement (별도로 보여줘야 할 추가 메시지)&#13;&#10;    * svc_id   : {string} Service ID (Modal Popup ID : 생략되면 &quot;MessagePopup&quot;이 적용됨)&#13;&#10;    * callback : {Function} Callback Function (사용하지 않음, 추후에 필요에 따라 적용. 현재는 생략)&#13;&#10;&#13;&#10;  ii. gfn_callBackMsg의 Parameters 설명&#13;&#10;    * sid      : {string} Service ID (Callback 함수의 Service ID를 그대로 사용)&#13;&#10;    * errNo    : {number} Error No (Callback 함수의 ErrorNo를 그대로 사용)&#13;&#10;    * errMsg   : {string} Error Message (Callback 함수의 ErrorMsg를 그대로 사용)&#13;&#10;&#13;&#10;  ii. 예제&#13;&#10;    * 화면 코딩 참조&#13;&#10;" wordwrap="char"/>
        <Static id="sta_org07" taborder="25" text="&lt;== Transaction Callback 함수에서 사용되는 Message 예제" left="253" top="247" width="611" height="23"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="DS_SEARCH" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <ConstColumn id="pageIndex" type="INT" size="30" value="1"/>
          <ConstColumn id="pageSize" type="INT" size="30" value="5"/>
          <ConstColumn id="pageUnit" type="INT" size="30" value="5"/>
          <Column id="GRP_CODE" type="STRING" size="100"/>
          <Column id="GRP_CODE_NM" type="STRING" size="100"/>
          <Column id="SYS_SE_CODE" type="STRING" size="256"/>
          <Column id="JOB_SE_CODE" type="STRING" size="256"/>
          <Column id="USE_AT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="GRP_CODE_NM"/>
            <Col id="GRP_CODE">0</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.0"><![CDATA[include "lib::comInclude.xjs";

this.btn_alert_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_message("info.선택데이터.없음.선택.요청");
}

this.btn_alert00_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_message("comm.항목.다중선택.요청", "검색");
}

this.btn_alert01_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_message("errors.항목.입력글자수.이상", "검색|5");
}

this.btn_alert02_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_message("errors.항목.입력값.범위", "시간|00|24");
}

this.btn_confirm_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.수정여부"))
	{
		alert("수정 했음");
	}
	else
	{
		alert("수정 안했음");
	}
}

this.btn_confirm00_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("comm.행위여부", "출근"))
	{
		alert("출근");
	}
	else
	{
		alert("결근");
	}
}

this.btn_confirm01_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.권한그룹.사용자메뉴존재.삭제여부", "1|119"))
	{
		alert("삭제");
	}
	else
	{
		alert("유지");
	}
}

this.btn_confirm02_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	//그룹코드목록조회 Search
	var sSvcID        	= "SYM030100List";                    
    var sController   	= "hsco/com/sym/cdm/SYM030100/SYM030100List.do";
    
	var sInDatasets   	= "input1=DS_SEARCH";
	var sOutDatasets  	= "DS_GRP_CODE=output1";
	var sArgs = "";	
	
	Ex.core.tran(this,sSvcID, sController, sInDatasets, sOutDatasets, sArgs); 
}

/* callBack함수 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	this.gfn_callBackMsg(strSvcId, nErrorCode, strErrorMsg);
	
	if (nErrorCode < 0) 
	{
		return;
	}
	
	switch (strSvcId)
	{
		case "SYM030100List":
			break;
		default:
			break;
	}
}

this.btn_longStmt_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.gfn_message("err.에러.발생", "", "이렇고 저렇고 구구절절한 이유로 \n 긴 문장을 필요로 하는 오류가 발생했습니다.");
}
]]></Script>
  </Form>
</FDL>
