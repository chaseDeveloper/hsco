<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript5.0"><![CDATA[/*****************************************************************************
 * 프로그램명 		: 	comForm.xjs
 * 작  성  자  	: 	정윤원
 * 작  성  일   	: 	2015.06.20
 * 설      명  		:   FORM 관련 공통함수
 * 수  정  자  	: 	정윤원
 * 수 정 이력  	: 	2013.06.20
 * 사용방법	    :   개발가이드 -> 팝업호출 참조
*******************************************************************************/

/*******************************************************************************
 * 공통 팝업 화면(comPopup.xfdl)을 사용하여 팝업화면을 보여준다.
 * parameter 1. strId  : Dialog ID
             2. strURL : Form URL
             3. strURL : Form Title
             4. nTop   : Form TOP Position
             5. nLeft  : Form Left Position
             6. nWidth : Form Width
             7. nHeight: Form Height
             8. bShowTitle : Form Title 을 표시 할지 여부
             9. strAlign: Dialog 의 위치 - '-1' : 모니터의 중앙
                                          - 'Bottom Left' : Click 된 마우스 위치의 좌측 하단 정렬
                                          - 'Top Left' : Click 된 마우스 위치의 좌측 상단 정렬
                                          - 'Bottom Right' : Click 된 마우스 위치의 우측 하단 정렬
                                          - 'Top Right' : Click 된 마우스 위치의 우측 상단 정렬
                                          - 'offset' : Click 된 마우스 위치에서 nTop,nLeft만큼 들여쓰기.
                                          - 'absolute' : 입력된 좌표를 Screen 좌표로 인식.
                                          - '0' : 사용자 임의 정렬
            10. strArgument	: Dialog 로 전달될 Argument - {strMessage1:'E'}
            11. isModeless	: 10번째 true 면 Dialog 를 Modeless로 띄운다.
            12. isLayered	: 11번째 true 면 Dialog 를 Layered로 띄운다.
            13. bAutoSize	: 오토 사이즈 여부
 * return 	: N/A
 * 작성자 	: 정윤원
 ******************************************************************************/
//  
//  this.fn_createPopUp = function(openerForm, nWidth, nHeight, strTitle, strURL, params){
// 
// 	var childFrame = new ChildFrame;	
// 	
// 	//strName(id),position,nLeft,nTop,nWidth,nHeight,nRight,nBttom,strURL
// 	childFrame.init("popup","absolute" ,0, 0, nWidth, nHeight, null, null, strURL);		
// 
// 	
// 	childFrame.set_titletext(strTitle)
// 	childFrame.set_showtitlebar(false);
// 	childFrame.set_autosize(true);			
// 	childFrame.set_resizable(false);
// 	childFrame.set_openalign("center middle");
// 	childFrame.set_showtitlebar(true);
// 
// 	childFrame.showModal(this.getOwnerFrame(),  params , openerForm, "", false); 	
// }

//include "lib::comDebug.xjs";	// 개발전용
/*******************************************************************************
 * 함수명  	: gfn_initForm
 * 설명 		: Form을 초기화한다.
 * params  		: 1. objForm    : 초기화할 Form 객체 (Object)
 *				  2. e			: Event
 * return Type 	: None
 * 사용법		: this.gfn_initForm(this);
 ******************************************************************************/
this.gfn_initForm = function ($context, e)
{
	// 개발전용
//	var context = ($context && $context instanceof nexacro.Form) ? $context : this;
// 	if(this.dbg_initForm(context)) {	// QuickView
// 		return;
// 	}
	
//	devFlag = (window.location.hostname == "localhost" && window.console !== undefined) ? true : false;
// 	trace('URL:'+window.location.hostname + ';' + context.titletext);

// 	function devSupport() {
// 		if (devFlag/* 개발모드 */) {
// 			var _name, name;
// 			if (context.url != undefined) {
// 				_name = context.url.split(".")[0].split("/"), name = _name[_name.length - 1];
// 			} else {
// 				_name = context.name;
// 				name = _name.indexOf("form") > -1 ? context.id : _name;
// 			}
// 			if (name.indexOf(":") > -1) {
// 				name = name.substr(name.lastIndexOf(":") + 1);
// 			}
// 			if (window["_form"] == undefined) {
// 				window["_form"] = {};
// 			}
// 			if (context instanceof nexacro.Form) {
// 				window._d = window.asdf = context
// 			}
// 			window["_form"][name] = context;
// 		}
// 	}
// 	devSupport();
	this.gfn_initGridCommon();
}
/*******************************************************************************
 * 함수명      : gfn_authcode
 * 설명        	: 입력한 권한코드가 부여되었는지를 체크한다.
 * argument     : String
 * return Type 	: Boolean
 * 작성자 		: 조진연
 ******************************************************************************/
this.gfn_authcode = function(strAuthCode)
{
	var nRow = application.gds_auth.findRow("AUTH_CODE", strAuthCode );	
	return nRow;
}

/*******************************************************************************
 * 함수명      : gfn_authGrpId
 * 설명        	: 입력한 그룹ID가 부여되었는지를 체크한다.
 * argument     : String
 * return Type 	: Boolean
 * 작성자 		: 박세현
 ******************************************************************************/
this.gfn_authGrpId = function(strAuthGrpId)
{
	var nRow = application.gds_auth.findRow("AUTH_GRP_ID", strAuthGrpId );	
	return nRow;
}

/*
 * 함수명  	: fn_getComp
 * 설명 		: 컴포넌트 아이디를 이용하여 컴포넌트 객체를 가져온다.
 * params  		: None
 * return Type 	: Object
 * 사용법		: 
 */
this.fn_getComp = function (obj, strComp)
{
	var objTarget = obj.components[strComp];
	
	return objTarget;
}

/*
 * 함수명  	: gfn_applyAuth
 * 설명 		: 권한을 적용한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: 
 */
this.gfn_applyAuthButton = function ()
{
	var strBtnId;

	for(var i = 0; i < application.gds_menuSet_XXX.rowcount; i++)
	{
		var objComp = this;
		
		strBtnId = application.gds_menuSet_XXX.getColumn(i, "SET_NM");
		arrComps = strBtnId.split(".");

		for(var j = 0; j < arrComps.length; j++)
		{			
			objComp = this.fn_getComp(objComp, arrComps[j]);
		}
		
		if(null != objComp) objComp.set_visible(false);
	}
}


/*******************************************************************************
 * 함수명  	: gfn_initCondDs
 * 설명 		: 조회조건으로 사용될 Dataset을 초기화한다.
 * params  		: 1. objForm    : 해당 Form 객체(Object)
 *                2. objDiv     : 조건 컴포넌트를 포함하고 있는 Division 객체(Object)
 * return Type 	: None
 * 사용법		: this.gfn_initCondDs(this, this.div_SEARCH);
 ******************************************************************************/
this.gfn_initCondDs = function(objForm, objDiv)
{
	var objObjs = objForm.objects;
	
	for(var i = 0; i < objObjs.length; i++)
	{
		if(typeof(objObjs[i].id) != "undefined"){
			if(objObjs[i].name.substr(0, 7).toLowerCase() == "ds_cond")
			{
				if(objObjs[i].rowcount == 0)
				{
					objObjs[i].addRow();
				}
			}
		}
	}
}

/*******************************************************************************
 * 함수명  	: gfn_resetDatasets
 * 설명 		: Dataset을 Reset 한다.
 * params  		: 1. objForm    : 해당 Form 객체(Object)
 *                2. strCase    : 처리할 Dataset 종류에 따른 구분자
 *                                (ALL : 전체, COND : 조건 Dataset, DATA : Data Dataset)
 * return Type 	: None
 * 사용법		: this.gfn_initCondDs(this, this.div_SEARCH);
 ******************************************************************************/
this.gfn_resetDatasets = function (objForm, strCase)
{
	var objObjs = objForm.objects;
	
	for(var i = 0; i < objObjs.length; i++)
	{
		if(typeof(objObjs[i]) != "dataset") {
			continue;
		}
		switch (strCase) {
			case "ALL" : 
				objObjs[i].reset();
				objObjs[i].applyChange();
				break;
			case "COND" : 
				if(objObjs[i].name.substr(0, 7).toUpperCase() == "DS_COND")
				{
					objObjs[i].reset();
					objObjs[i].applyChange();
				}
				break;
			case "DATA" : 
				if(objObjs[i].name.substr(0, 7).toUpperCase() != "DS_COND")
				{
					objObjs[i].reset();
					objObjs[i].applyChange();
				}
				break;
		}
	}
}

/*******************************************************************************
 * 함수명  	: gfn_addForm
 * 설명 		: Menu에 해당하는 Form을 만든다.
 * params  		: 1. menuId    : 메뉴 아이디
 *                2. menuNm    : 메뉴 명
 *                3. sysSeCode : 시스템 구분 명
 *                4. formUrl   : Form URL
 * return Type 	: None
 * 사용법		: this.gfn_addForm(menuId, menuNm, sysSeCode, formUrl);
 ******************************************************************************/
this.gfn_addForm = function (menuId, menuNm, sysSeCode, formUrl)
{
	var strId = sysSeCode + "_" + menuId;
	application.gv_formUrl = formUrl;
	if(!this.comUtils.isNullEmpty(application.gv_curFormId))
	{
		application.gv_preFormId = application.gv_curFormId;
	}
	application.gv_curFormId = strId;
	
	var obj = new ChildFrame();
	obj.init(strId, "absolute", 0, 0, 1074, 796, null, null);
	obj.set_titletext(menuNm);
	obj.set_formurl("frame::WorkFrameDiv.xfdl");
	obj.addEventHandler("onsyscommand", this._onsyscommand, obj);

	this.gfn_changeFrameStyle(obj, application.gv_windowStatus);
	
	application.gv_formFrameSet.addChild(strId, obj);
	
	application.gv_formFrameSet.arrange(application.gv_arrangeType);
	obj.show();
}

this._onsyscommand = function (obj:ChildFrame, e:nexacro.SysCommandEventInfo)
{
// 	return false;
}

/*******************************************************************************
 * 함수명  	: gfn_removeForm
 * 설명 		: 해당 Form을 닫는다.
 *				  (순서 : Form 닫기 -> gds_openMenu 에서 삭제 -> MDI Tabpage 삭제)
 * params  		: 1. idx		: TabIndex (== gds_openMenu의 rowposition)
 *                2. frameId    : Frame 명 (== mdi의 tabpage 명)
 * return Type 	: None
 * 사용법		: this.gfn_addForm(menuId, menuNm, sysSeCode, formUrl);
 ******************************************************************************/
this.gfn_removeForm = function (idx, frameId)
{
	var obj = application.gv_formFrameSet.removeChild(frameId);

	obj.destroy();
	obj = null;
	
//	application.gds_openMenu.deleteRow(idx);
}

/*******************************************************************************
 * 함수명  	: gfn_changeFrameStyle
 * 설명 		: Frame 스타일을 바꾼다.
 * params  		: 1. obj      : child frame object
 *                2. style    : 화면 스타일 (maximize : default, normal)
 * return Type 	: None
 * 사용법		: this.gfn_addForm(menuId, menuNm, sysSeCode, formUrl);
 ******************************************************************************/
this.gfn_changeFrameStyle = function (obj:ChildFrame, style)
{
	if(this.comUtils.isNullEmpty(style))
	{
		style = "maximize";
	}
	
	if(style == "maximize")
	{
		obj.set_left(0);
		obj.set_width(application.gv_formFrameSet.width);
		obj.set_height(application.gv_formFrameSet.height);

		obj.set_openstatus("maximize");
		obj.set_showstatusbar(false);
		obj.set_showtitlebar(false);
		obj.set_resizable(false);
		obj.set_autosize(false);
		obj.set_dragmovetype("none");
		obj.style.set_border("0px none #3c4246");
		
		application.gv_windowStatus = "maximize";
	}
	else // normal style
	{
		obj.set_openstatus("normal");
		obj.set_showstatusbar(false);
		obj.set_showtitlebar(true);
		obj.set_resizable(true);
		obj.set_autosize(false);
		obj.set_dragmovetype("normal");
		obj.style.set_border("1px solid #3c4246");
		
		application.gv_windowStatus = "normal";
	}
	
	obj.setFocus();
}

/*******************************************************************************
 * 함수명  	: gfn_decorateTitleBar
 * 설명 		: Frame title의 배경색을 상황에 맞게 변경한다.
 * params  		: 1. obj      : child frame object
 * return Type 	: None
 * 사용법		: 
 ******************************************************************************/
this.gfn_decorateTitleBar = function (obj:ChildFrame)
{
	for(var i = 0; i < application.gv_formFrameSet.frames.length; i++)
	{
		var titleBar = application.gv_formFrameSet.frames[i].titlebar;
		
		if(!this.comUtils.isNullEmpty(titleBar))
		{
			titleBar.style.set_background("#5d6a7b");
		}
	}
	
	if(!this.comUtils.isNullEmpty(obj.titlebar))
	{
		obj.titlebar.style.set_background("#5d6a7b");
	}
}

this.cv_nTop = 8;
this.cv_nLeft = 15;
this.cv_nH = 21;
this.cv_nHGap = 8;
this.cv_nVGap = 8;
this.cv_nMaxWidth = 50;
this.cv_nAddPix = 50;

/*******************************************************************************
 * 함수명  	: gfn_makeCheckGroup
 * 설명 		: Dataset을 토대로 CheckBox를 생성한다.
 * params  		: 1. ds - Dataset
				  2. div - Div
				  3. cols - CheckBox의 열 수 (예 : 1 - 1줄, 2 - 2줄, ...)
 * return Type 	: None
 * 사용법		: this.gfn_makeCheckGroup(this.ds_chkGrp, this.div_chkGrp, 3);
 ******************************************************************************/
this.gfn_makeCheckGroup = function (ds : Dataset, div : Div, cols)
{
	if(this.comUtils.isNullEmpty(cols) || cols == 0)
	{
		cols = 1;
	}
	
	var nLineH = this.cv_nH + this.cv_nHGap;
	
	this.gfn_destroyAll(div);
	
	this._makeCheckAll(div);
	this._calcMaxWidth(ds);
	
	for(var i = 0; i < ds.rowcount; i++)
	{
		var objChk = new CheckBox();
		var strId = "chk_" + ds.getColumn(i, "CODE");
		var strTxt = ds.getColumn(i, "CODE_NM");
		var objSize;
		var nW;
		var nLeft = this.cv_nLeft + ((this.cv_nMaxWidth + this.cv_nAddPix) * (i % cols));

		objChk.init(strId, "absolute", nLeft, this.cv_nTop + nLineH * (nexacro.floor(i / cols) + 1), 100, this.cv_nH);
		objChk.set_text(strTxt);

		nW = this.cv_nMaxWidth + this.cv_nAddPix;

		objChk.set_width(nW);
		objChk.addEventHandler("onclick", this._chk_onclick, this);
		
		div.addChild(strId, objChk);
		
		objChk.show();
	}
}

/*******************************************************************************
 * 함수명  	: _chk_onclick
 * 설명 		: 개별 CheckBox의 클릭 이벤트 함수
 ******************************************************************************/
this._chk_onclick = function(obj:CheckBox, e:nexacro.ClickEventInfo)
{
	obj.parent.chk_all.set_value(false);
	this.gfn_makeSearchStr(obj.parent);
}

/*******************************************************************************
 * 함수명  	: _makeCheckAll
 * 설명 		: 전체 선택 CheckBox를 생성한다.
 * params  		: 1. div - Div
 * return Type 	: None
 * 사용법		: 
 ******************************************************************************/
this._makeCheckAll = function (div : Div)
{
	var objChk = new CheckBox();
	var strId = "chk_all";
	var objSize;
	var nW;

	objChk.init(strId, "absolute", this.cv_nLeft, this.cv_nTop, 100, this.cv_nH);
	objChk.set_text("전체 선택");

	objSize = this.comUtils.getTextSize("전체 선택", objChk);
	nW = (objSize[0] > this.cv_nMaxWidth ? objSize[0] : this.cv_nMaxWidth) + this.cv_nAddPix;
	this.cv_nMaxWidth = nW - this.cv_nAddPix;

	objChk.set_width(nW);
	objChk.addEventHandler("onclick", this._chk_all_onclick, this);
	
	div.addChild(strId, objChk);
	
	objChk.show();
}

/*******************************************************************************
 * 함수명  	: _chk_all_onclick
 * 설명 		: 전체 선택 CheckBox의 클릭 이벤트 함수
 ******************************************************************************/
this._chk_all_onclick = function(obj:CheckBox, e:nexacro.ClickEventInfo)
{
	this._checkAll(obj.parent, obj.value);
	this.gfn_makeSearchStr(obj.parent);
}

/*******************************************************************************
 * 함수명  	: _checkAll
 * 설명 		: 전체 CheckBox에 체크 또는 해제를 한다.
 * params  		: 1. obj - Div
 *				  2. bVal - true / false (Boolean)
 * return Type 	: None
 * 사용법		: 
 ******************************************************************************/
this._checkAll = function (obj, bVal)
{
	var comps = obj.components;
	for(var i = 0; i < comps.length; i++)
	{
		comps[i].set_value(bVal);
	}
}

/*******************************************************************************
 * 함수명  	: _calcMaxWidth
 * 설명 		: CheckBox에 표현될 Text의 최대 길이를 가져온다.
 * params  		: 1. ds : Dataset
 * return Type 	: Number (문자열 최대 길이(픽셀))
 * 사용법		: 
 ******************************************************************************/
this._calcMaxWidth = function (ds : Dataset)
{
	var objChk = new CheckBox();
	objChk.init("chkTemp", "absolute", this.cv_nLeft, this.cv_nTop, 100, this.cv_nH);
	
	for(var i = 0; i < ds.rowcount; i++)
	{
		objChk.set_text(ds.getColumn(i, "CODE_NM"));
		objSize = this.comUtils.getTextSize(objChk.text, objChk);
		this.cv_nMaxWidth = (objSize[0] > this.cv_nMaxWidth ? objSize[0] : this.cv_nMaxWidth);
	}
	
	// Destroy Object  
	objChk.destroy(); 
	objChk = null;
	
	return this.cv_nMaxWidth;
}

/*******************************************************************************
 * 함수명  	: gfn_destroyAll
 * 설명 		: 생성된 CheckBox를 모두 삭제한다.
 * params  		: 1. div    : CheckBox이 표현된 Div.
 * return Type 	: 없음
 * 사용법		: this.gfn_destroyAll(this.div_chkGrp);
 ******************************************************************************/
this.gfn_destroyAll = function (div : Div)
{
	var comps = div.components;
	var nCnt = comps.length;
	
	for(var i = nCnt - 1; i >= 0; --i)
	{
		var comp = comps[i];
		
		div.removeChild(comp.name);
		comp.destroy();
		comp = null;
	}
}

/*******************************************************************************
 * 함수명  	: gfn_makeSearchStr
 * 설명 		: 체크된 값을 얻어오는 함수 (","로 구분). Div의 text Property에 값을 넣어준다.
 * params  		: 1. div    : CheckBox이 표현된 Div.
 * return Type 	: String (","로 값 구분)
 * 사용법		: this.gfn_makeSearchStr(this.div_chkGrp);
 ******************************************************************************/
this.gfn_makeSearchStr = function (div : Div)
{
	var comps = div.components;
	var nCnt = comps.length;
	var strSearchStr = "";
	
	for(var i = 0; i < nCnt; i++)
	{
		var comp = comps[i];
		if(comp.name == "chk_all")
		{
			if(comp.value)
			{
				strSearchStr = "";
				break;
			}
			
			continue;
		}
		
		if(comp.value)
		{
			strSearchStr += nexacro.wrapQuote(comp.name.substr(4)) + ",";
		}
	}
	
	if(this.comUtils.isNullEmpty(strSearchStr))
	{
		div.set_text("");
	}
	else
	{
		div.set_text(strSearchStr.substr(0, strSearchStr.length-1));
	}
	
	return div.text;
}

this.gfn_getAuthPopup = function (form:Form, url)
{
/*
	//팝업 권한버튼 오류로 주석체크
	var dsCond = new Dataset;
	dsCond.set_id("ds_condAuth");
	dsCond.addColumn("FORM_URL", "string");
	form.addChild("ds_condAuth", dsCond);
	dsCond.addRow();
	
	var dsCondIndInfo = new Dataset;
	dsCondIndInfo.set_id("ds_condIndInfo");
	dsCondIndInfo.addColumn("FORM_URL", "string");
	form.addChild("ds_condAuth", dsCondIndInfo);
	dsCondIndInfo.addRow();

	this.ds_condAuth.setColumn(0, "FORM_URL", url);
	this.dsCondIndInfo.setColumn(0, "FORM_URL", url);

	var sSvcID        	= "loadAuth";
	var sController   	= "hsco/cmm/author/controller/AuthorController/getAuthBtnList.do";
	var sInDatasets   	= "input1=ds_condAuth input2=ds_condIndInfo";
	var sOutDatasets  	= "ds_auth=output1 ds_indivisualInfoButton=output2";
	var sArgs = "FORM_URL='"+url + "' POPUP_AT='0'";
	

	var dsAuth = new Dataset;
	dsAuth.set_id("ds_auth");
	form.addChild("ds_auth", dsAuth);
	var ds_indivisualInfoButton = new Dataset;
	ds_indivisualInfoButton.set_id("ds_indivisualInfoButton");
	form.addChild("ds_indivisualInfoButton", ds_indivisualInfoButton);

	Ex.core.tran(this, sSvcID, sController, sInDatasets, sOutDatasets, sArgs, "_authCallBack");
*/	
}

// CallBack Function
this._authCallBack = function (sid, errNo, errMsg)
{
	this.gfn_applyAuth();
	this.fn_addEventHandler();
}

this.fn_addEventHandler = function(){
    var ds_indivisualInfoButton = obj.components["ds_indivisualInfoButton"];
    
    for(var i=0; i<ds_indivisualInfoButton.getRowCount(); i++){
        var buttonId = ds_indivisualInfoButton.getColumn(i, "BUTTON_ID");
        var obj = this.lookup(buttonId);
        
        obj.addEventHandlerLookup( "onclick", "fn_logIndivisualInfo", this );
    } 
}

this.fn_logIndivisualInfo = function(obj:Button, e:nexacro.ClickEventInfo){
    var ds_indivisualInfoButton = obj.components["ds_indivisualInfoButton"];
    var ds_log_indivisualInfo = obj.components["ds_log_indivisualInfo"];
    var fRow = ds_indivisualInfoButton.findRow("BUTTON_ID", obj.name);
    //trace("fRow=" + fRow + ",buttonId=" + obj.name);
    var processSeCode = "";
    if(fRow > -1){
        processSeCode = ds_indivisualInfoButton.getColumn(fRow, "PROCESS_SE_CODE");
        //trace("PROCESS_SE_CODE=" + processSeCode);
        if(ds_log_indivisualInfo.getRowCount()==0)
            ds_log_indivisualInfo.addRow();
        ds_log_indivisualInfo.copyRow(0, ds_indivisualInfoButton, fRow);
        //ds_log_indivisualInfo.saveXML();
    }
    
    var sSvcID        	= "logIndInfo";
	var sController   	= "hsco/cmm/log/insertIndInfoLog.do";
	var sInDatasets   	= "input1=ds_log_indivisualInfo";
	var sOutDatasets  	= "ds_log_indivisualInfo=output1";
	var sArgs = "";
	Ex.core.tran(this, sSvcID, sController, sInDatasets, sOutDatasets, sArgs, "indLogCallBack");
}

this.indLogCallBack = function(){

}

/*
 * 함수명  	: _getComp
 * 설명 		: 컴포넌트 아이디를 이용하여 컴포넌트 객체를 가져온다.
 * params  		: None
 * return Type 	: Object
 * 사용법		: 
 */
this._getComp = function (obj, strComp)
{
	var objTarget = obj.components[strComp];
	
	return objTarget;
}

/*
 * 함수명  	: gfn_Link2Page
 * 설명 		: 링크할 페이지의 메뉴를 화면으로 오픈한다.
 * params  		: nRow - 선택한 메뉴의 Row
 * return Type 	: None
 * 사용법		:
 */
this.gfn_Link2Page = function (pageUrl, param)
{
    var strExpr0 = "PAGE_URL=='" + pageUrl + "'";
    application.gds_menu.filter("");
	var nRow = application.gds_menu.findRowExpr(strExpr0);
	var strMenuId = application.gds_menu.getColumn(nRow, "MENU_ID");
	var strMenuNm = application.gds_menu.getColumn(nRow, "MENU_NM");
	var strSysSeCode = application.gds_menu.getColumn(nRow, "SYS_SE_CODE");
	var strUrl = application.gds_menu.getColumn(nRow, "PAGE_URL");
	
	
	var strExpr = "MENU_ID==" + strMenuId + " && SYS_SE_CODE=='" + strSysSeCode + "'";
	var nFRow = application.gds_openMenu.findRowExpr(strExpr);

	
	if(nFRow > -1)
	{
		var obj = application.gv_formFrameSet.frames[strSysSeCode + "_" + strMenuId]; 
		obj.destroy();
	}
	var nNewRow = application.gds_openMenu.addRow();
	application.gds_openMenu.copyRow(nNewRow, application.gds_menu, nRow);
    
	var nRow = application.gds_mdiParam.findRowExpr(strExpr0);
	if(nRow < 0) {
	        nRow = application.gds_mdiParam.addRow();
	}
	application.gds_mdiParam.setColumn(nRow, "PAGE_URL", pageUrl);
	application.gds_mdiParam.setColumn(nRow, "param", param);

	application.gv_mdiFrame.form.fn_addMenu(strMenuId, strMenuNm, strSysSeCode);
	
	this.gfn_addForm4LinkPage(strMenuId, strMenuNm, strSysSeCode, strUrl, param);
}

/*******************************************************************************
 * 함수명  	: gfn_addForm4LinkPage
 * 설명 		: 링크할 페이지에 해당하는 Form을 만든다.
 * params  		: 1. menuId    : 메뉴 아이디
 *                2. menuNm    : 메뉴 명
 *                3. sysSeCode : 시스템 구분 명
 *                4. formUrl   : Form URL
 * return Type 	: None
 * 사용법		: this.gfn_addForm4LinkPage(menuId, menuNm, sysSeCode, formUrl, param);
 ******************************************************************************/
this.gfn_addForm4LinkPage = function (menuId, menuNm, sysSeCode, formUrl, param)
{
	var strId = sysSeCode + "_" + menuId;
	application.gv_formUrl = formUrl;
	if(!this.comUtils.isNullEmpty(application.gv_curFormId))
	{
		application.gv_preFormId = application.gv_curFormId;
	}
	application.gv_curFormId = strId;
	
	var obj = new ChildFrame();
	obj.init(strId, "absolute", 0, 0, 1074, 796, null, null);
	obj.set_titletext(menuNm);
	obj.set_formurl("frame::WorkFrameDiv.xfdl");
	obj.addEventHandler("onsyscommand", this._onsyscommand, obj);
	
	this.gfn_changeFrameStyle(obj, application.gv_windowStatus);
	application.gv_formFrameSet.addChild(strId, obj);
	application.gv_formFrameSet.arrange(application.gv_arrangeType);
	obj.show();
}

/*******************************************************************************
 * 함수명  	: gfn_addDsToFormAsChild
 * 설명 		: 현재 Form 객체에 Dataset Child를 동적으로 추가한다.
 * params  		: 1. datasetName    : 추가될 Dataset 객체의 Id 문자열
 *                2. strColumnInfo  : 추가될 Dataset 객체의 ColumnInfo 문자열 
 *                3. frmObj : 현재 FORM 객체
 * return Type 	: None 
 * 사용법		: this.gfn_addDsToFormAsChild(datasetName, strColumnInfo, frmObj);
 ******************************************************************************/
this.gfn_addDsToFormAsChild = function(datasetId, strColumnInfo, frmObj)
{
            var obj = new Dataset(datasetId, form);
            obj.set_firefirstcount("0");
            obj.set_useclientlayout("false");
            obj.set_updatecontrol("true");
            obj.set_enableevent("true");
            obj.set_loadkeymode("keep");
            obj.set_loadfiltermode("keep");
            obj.set_reversesubsum("false");
            obj._setContents(strColInfo);
            //trace("XML===" + obj.saveXML());
            form.addChild(obj.name, obj);
            
            return form.obj;
}

this.gfn_openHelpPopup = function(){
	var strMenuId = application.gv_curFormId.split("_")[1];
    var nRow = application.gds_menu.findRow("MENU_ID", strMenuId);
	if(nRow < 1){
		// nRow == 0 일때는 ROOT 이므로 Form 메뉴로서 의미가 없음.
		return;
	}
		
	var param = {
		PAGE_URL : application.gds_menu.getColumn(nRow, "PAGE_URL"),
		MENU_ID : application.gds_menu.getColumn(nRow, "MENU_ID"),
		MENU_NM : application.gds_menu.getColumn(nRow, "MENU_NM")
    };
    
	var nWidth = 1150;
	var nHeight = 830;
	var nLeft = system.clientToScreenX(this,10);
	var nTop = system.clientToScreenY(this,10);
	var sOpenStyle  = "dragmovetype=all"
					+ " autosize=false"
					+ " resizable=false"
					+ " titletext=DUCOS 온라인도움말"
					+ " showtitlebar=false"
					+ " showstatusbar=false"
					+ " layered=true";
	
	if(application.popupframes["hscos_onlinehelp"] != undefined){
		application.popupframes["hscos_onlinehelp"].form.close();
	}
	application.open("hscos_onlinehelp", "com_sym_ohm::SYM060000.xfdl", this.getOwnerFrame(),
					 param, sOpenStyle, nLeft, nTop, nWidth, nHeight, this);
}]]></Script>
