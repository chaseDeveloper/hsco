<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="deptCode" classname="deptCode" left="0" top="0" width="195" height="21" titletext="부서검색" onload="deptCode_onload" oninit="deptCode_oninit">
    <Layouts>
      <Layout>
        <Div id="div_Search" taborder="3" text="Div00" left="0" top="0" bottom="0" right="0">
          <Layouts>
            <Layout>
              <Edit id="edt_deptCode" taborder="0" maxlength="6" left="0" top="0" onkeydown="edit_onkeydown" onchanged="edit_onchanged" bottom="0" width="76"/>
              <Button id="btn_dept" taborder="1" left="54" top="0" onclick="div_Search_btn_dept_onclick" width="22" bottom="0" cssclass="btn_WF_Search"/>
              <Edit id="edt_deptNm" taborder="2" left="78" top="0" right="0" onkeyup="edit_onkeyup" onkeydown="edit_onkeydown" onchanged="edit_onchanged" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_searchDept" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="DEPT_CODE" type="STRING" size="256"/>
          <Column id="DEPT_NM" type="STRING" size="256"/>
          <Column id="FORM_ID" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_deptCode" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="DEPT_CODE" type="STRING" size="6"/>
          <Column id="DEPT_NM" type="STRING" size="50"/>
          <Column id="DEPT_SE" type="STRING" size="3"/>
          <Column id="DEPT_LEVEL" type="BIGDECIMAL" size="22"/>
          <Column id="UPPER_DEPT_CODE" type="STRING" size="6"/>
          <Column id="BEFORE_DEPT_CODE" type="STRING" size="6"/>
          <Column id="BPLC_SE" type="STRING" size="3"/>
          <Column id="USE_AT" type="STRING" size="1"/>
          <Column id="USE_BGNDE" type="STRING" size="8"/>
          <Column id="USE_ENDDE" type="STRING" size="8"/>
          <Column id="OUTPT_ORDR" type="BIGDECIMAL" size="22"/>
          <Column id="RM" type="STRING" size="200"/>
          <Column id="REGISTER_ID" type="STRING" size="12"/>
          <Column id="REGIST_DT" type="DATE" size="7"/>
          <Column id="UPDUSR_ID" type="STRING" size="12"/>
          <Column id="UPDT_DT" type="DATE" size="7"/>
          <Column id="LAST_AT" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 01. 업무구분 : 부서검색 팝업
 * 02. 화면명   : deptCode.xfdl
 * 03. 화면설명 : 부서검색을 관리한다.
 * 04. 작성일   : 2015.07.14
 * 05. 작성자   : 정윤원
 * 06. 수정이력 : 
 ***********************************************************************
 *     수정일     작성자   내용
 ***********************************************************************
 *    
 ***********************************************************************
 */



/**********************************************************************
* Script Include 
***********************************************************************/
// 시스템 공통 라이브러리 Include
include "lib::comInclude.xjs";



/**********************************************************************
* 화면 변수 선언부
***********************************************************************/
this.bSearchPopup = true;
this.onlySelectLast = false;
this.authorCtrlAt = null;
this.parentFormId = null;

/**********************************************************************
* onInit / onLoad 영역
***********************************************************************/

this.deptCode_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	// Form 초기화
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}

this.deptCode_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	// TODO..
}



/**********************************************************************
* Form/Dataset 오브젝트 초기화
***********************************************************************/

/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	this.gfn_initForm(this);	// 시스템 공통으로 Form을 Initialize 한다.
	
	// 초기 검색조건
	this.ds_searchDept.clearData();
	this.ds_searchDept.addRow();
	
	// 공통코드(TODO..)
}


/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	// 조건 Dataset 외에 초기화가 필요한 Dataset에 대한 초기화 코드를 추가
}



/**********************************************************************
* Transaction 영역 시작
***********************************************************************
*
* 1. Transaction 관련 이벤트 핸들러
* 2. call Transaction 영역
* 3. callback 영역(Transaction, Popup)
* 
***********************************************************************/



/**********************************************************************
* Transaction 관련 이벤트 핸들러 
***********************************************************************/

/*
 * 함수명  	: fn_searchDeptCode
 * 설명 		: 조회 이벤트 처리(부서)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_searchDeptCode();
 */
this.fn_searchDeptCode = function()
{
	// clear dataset
	this.ds_deptCode.clearData();
	
	// transaction
	this.fn_transaction("selectDeptCode");
}



/**********************************************************************
* call Transaction 영역
***********************************************************************/

/*
 * 함수명  	: fn_transaction
 * 설명 		: Transaction 요청 처리 함수
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	switch (strSvcId) {
		case "selectDeptCode":	// 세부사업 조회
			var sController   	= "hsco/com/sym/cdm/deptCode/selectDeptCode.do";
			var sInDatasets   	= "input1=ds_searchDept";
			var sOutDatasets  	= "ds_deptCode=output1";
			break;
	}

	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets); 
}



/**********************************************************************
* Transaction Callback 영역
***********************************************************************/

 /*
 * 함수명  	: fn_callBack
 * 설명 		: Transaction Callback 처리
 * params  		: strSvcId    : 서비스요청 ID
 *                nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *                strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type 	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	if(strErrorMsg) {
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	}

	if (nErrorCode == 0){
		switch (strSvcId) {
			case "selectDeptCode":	// 조회(부서)
				if(this.ds_deptCode.getRowCount() == 1) {
					var deptCode = this.ds_deptCode.getColumn(0, "DEPT_CODE");
					var deptNm   = this.ds_deptCode.getColumn(0, "DEPT_NM");
					this.div_Search.edt_deptCode.set_value(deptCode);
					this.div_Search.edt_deptNm.set_value(deptNm);
				} else if(this.ds_deptCode.getRowCount() > 1) {
					this.ds_deptCode.clearData();
					this.ds_deptCode.addRow();
					if(this.bSearchPopup) {
						this.div_Search_btn_dept_onclick();
					}
				}
				break;
		}
	}
	
	// 후처리(기본적으로 조회결과가 많을경우에는 팝업
	this.bSearchPopup = true;
}

 /*
 * 함수명  	: fn_popupCallBack
 * 설명 		: Popup Callback 처리
 * params  		: sPopupId    : 팝업 ID
 *                sReturn  : 팝업 처리 결과(dataset.saveXML())
 * return Type 	: None
 * 사용법		: 
 */
this.fn_popupCallBack = function(sPopupId, sReturn)
{
	if(sPopupId == "deptPop") {
		this.ds_deptCode.clearData();
		nRowCnt = this.ds_deptCode.loadXML(sReturn);
		if(nRowCnt){
			this.div_Search.edt_deptCode.set_value(this.ds_deptCode.getColumn(0, "DEPT_CODE"));
			this.div_Search.edt_deptNm.set_value(this.ds_deptCode.getColumn(0, "DEPT_NM"));
		}
	}
}



/**********************************************************************
* Transaction 영역 끝
***********************************************************************/



/**********************************************************************
* non-Transaction 관련 컴포넌트 이벤트 처리 함수
***********************************************************************
*
* 1. Edit 관련 이벤트 처리
* 2. Button 관련 이벤트 처리
* 3. 사용자 정의함수
* 
***********************************************************************/



/**********************************************************************
* Edit 관련 이벤트 처리
***********************************************************************/

/*
 * 함수명  	: edit_onkeydown
 * 설명 		: Edit에서 키 입력 후 이벤트 처리(검색조건 Edit - 부서코드,부서명)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.edit_onkeydown(obj,e);
 */
this.edit_onkeydown = function(obj:Edit, e:nexacro.KeyEventInfo)
{
	if(e.keycode == '13') {	// ENTER
		if(this.comUtils.isNull(obj.value)) {
			this.div_Search.edt_deptCode.set_value("");
			this.div_Search.edt_deptNm.set_value("");
			this.ds_searchDept.setColumn(0, "DEPT_CODE", "");
			this.ds_searchDept.setColumn(0, "DEPT_NM",   "");
			this.bSearchPopup = false;
		} else if(obj.name == 'edt_deptCode') {
			this.ds_searchDept.setColumn(0, "DEPT_CODE", obj.value);
		} else if(obj.name == 'edt_deptNm') {
			this.ds_searchDept.setColumn(0, "DEPT_NM", obj.value);
		}
		this.fn_searchDeptCode();
	}
}


/*
 * 함수명  	: edit_onchanged
 * 설명 		: Edit에서 데이터 변경 후 이벤트 처리(검색조건 Edit - 부서코드,부서명)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.edit_onchanged(obj,e);
 */
this.edit_onchanged = function(obj:Edit, e:nexacro.ChangeEventInfo)
{
	if(this.comUtils.isNull(e.postvalue)) {
		this.div_Search.edt_deptCode.set_value("");
		this.div_Search.edt_deptNm.set_value("");
		this.ds_searchDept.setColumn(0, "DEPT_CODE", "");
		this.ds_searchDept.setColumn(0, "DEPT_NM",   "");
		
		this.bSearchPopup = false;
		this.fn_searchDeptCode();
	}
}


/**********************************************************************
* Button 관련 이벤트 처리
***********************************************************************/

/*
 * 함수명  	: div_Search_btn_dept_onclick
 * 설명 		: '부서팝업' 버튼 클릭 후 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.div_Search_btn_dept_onclick(obj,e);
 */
this.div_Search_btn_dept_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var deptCode = !obj ? this.div_Search.edt_deptCode.value : '';
	var deptNm   = !obj ? this.div_Search.edt_deptNm.value   : '';
	
	var parm = {
		 arg_0          : this
		,deptCode       : deptCode
		,deptNm         : deptNm
		,onlySelectLast : this.onlySelectLast
		,authorCtrlAt   : this.authorCtrlAt
		,parentFormId   : this.parentFormId
	};
	this.gfn_popup("deptPop", 400, 400, "부서선택", parm, "com::deptCode_P01.xfdl", "fn_popupCallBack", true);
}



/**********************************************************************
* 사용자 정의함수
***********************************************************************/

/*
 * 함수명  	: GetValue
 * 설명 		: 데이터셋의 원하는 컬럼값 가져오기
 * params  		: None
 * return Type 	: None
 * 사용법		: this.GetValue(sColumnId);
 */
this.GetValue = function(sColumnId)
{
	return this.ds_deptCode.getColumn(0,sColumnId);
}


/*
 * 함수명  	: SetDeptCode
 * 설명 		: 부서코드 셋팅하기
 * params  		: None
 * return Type 	: None
 * 사용법		: this.SetDeptCode(sColumnValue);
 */
this.SetDeptCode = function(sColumnValue)
{
	this.ds_deptCode.clearData();
	var nRow = this.ds_deptCode.addRow();
	this.ds_deptCode.setColumn(nRow, "DEPT_CODE", sColumnValue);
}

/*
 * 함수명  	: fn_setBind
 * 설명 		: 데이터셋 바인딩(외부->해당화면)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_setBind("Dataset명","부서코드Column","부서명Column");
 */
this.fn_setBind = function(strDS, strDeptCode, strDeptNm)
{
	var objBind1 = new BindItem();
	objBind1.init("COM_DEPT_CODE_EDT01", "div_Search.edt_deptCode", "value", strDS, strDeptCode);
	this.addChild("COM_DEPT_CODE_EDT01", objBind1); 
	this.COM_DEPT_CODE_EDT01.bind();
	
	var objBind2 = new BindItem();
	objBind2.init("COM_DEPT_NM_EDT01", "div_Search.edt_deptNm", "value", strDS, strDeptNm);
	this.addChild("COM_DEPT_NM_EDT01", objBind2); 
	this.COM_DEPT_NM_EDT01.bind();
}


/*
 * 함수명  	: fn_setReadonly
 * 설명 		: 수정가능여부 설정
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_setReadonly(bReadOnly);
 */
this.fn_setReadonly = function(bReadOnly)
{
	this.div_Search.edt_deptCode.set_readonly(bReadOnly);
	this.div_Search.edt_deptNm.set_readonly(bReadOnly);
	this.div_Search.btn_dept.set_enable(!bReadOnly);
	
	if(bReadOnly) {
		this.div_Search.edt_deptCode.set_cssclass("edt_WF_Readonly");
		this.div_Search.edt_deptNm.set_cssclass("edt_WF_Readonly");
	} else {
		this.div_Search.edt_deptCode.set_cssclass("");
		this.div_Search.edt_deptNm.set_cssclass("");
	}
}

/*
 * 함수명  	: fn_setCssclass
 * 설명 		: cssclass 설정
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_setCssclass(cssClassName);
 */
this.fn_setCssclass = function(cssClassName)
{
	this.div_Search.edt_deptCode.set_cssclass(cssClassName);
	this.div_Search.edt_deptNm.set_cssclass(cssClassName);
	
	switch(cssClassName) {
		case "edt_WF_Readonly":
			this.div_Search.edt_deptCode.set_readonly(true);
			this.div_Search.edt_deptNm.set_readonly(true);
			this.div_Search.btn_dept.set_visible(false);
			break;
	}
}



this.fn_set_enable = function(_bEnable)
{
	this.div_Search.btn_dept.set_enable(_bEnable);
	this.div_Search.edt_deptCode.set_enable(_bEnable);
	this.div_Search.edt_deptNm.set_enable(_bEnable);
}


this.fn_set_onlyLast = function(_bEnable)
{
	this.onlySelectLast = _bEnable;
}]]></Script>
  </Form>
</FDL>
