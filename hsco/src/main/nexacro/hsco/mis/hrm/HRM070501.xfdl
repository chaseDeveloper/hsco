<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\default_typedef.xml"/>
  <Form id="HRM070501" classname="HRM070501" left="0" top="0" width="1059" height="735" titletext="현장체재비관리" onload="HRM070501_onload" oninit="HRM070501_oninit">
    <Layouts>
      <Layout>
        <Static id="Static00" taborder="2" text="15" visible="false" top="0" right="13" width="15" height="735" style="background:#1b3cd23c;align:center middle;"/>
        <Static id="Static01" taborder="3" text="스&#13;&#10;크&#13;&#10;롤&#13;&#10;13" visible="false" top="0" right="0" width="13" height="735" style="background:#d07b173c;align:center middle;"/>
        <Div id="div_search" taborder="0" left="0" top="0" right="28" height="33" cssclass="div_WFSA_Box">
          <Layouts>
            <Layout>
              <Static id="sta_registDe" taborder="2" text="기준년월" cssclass="sta_WFSA_Label" left="15" top="6" width="64" height="21"/>
              <Static id="sta_searchDept" taborder="4" text="대상부서" cssclass="sta_WFSA_Label" left="179" top="6" width="64" height="21"/>
              <Div id="div_DEPT" taborder="5" url="com::deptCode.xfdl" left="243" top="6" width="195" height="21" async="false"/>
              <Div id="div_pymntYm" taborder="6" url="common::frmMonCal.xfdl" left="79" top="6" width="85" height="21" async="false"/>
              <Static id="sta_closeInfo" taborder="7" text="Static00" left="453" top="6" width="265" height="21" style="color:red;font:bold 9 Gulim;"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta_pblancList" taborder="4" text="현장체재비 등록내역" cssclass="sta_WF_Title02" left="0" top="42" width="150" height="19"/>
        <Grid id="grd_sptScstList" taborder="5" binddataset="ds_sptScstList" autoenter="select" useinputpanel="false" onheadclick="div_work_grd_pblancList_onheadclick" onexpandup="div_work_grd_pblancList_onexpandup" left="0" top="62" bottom="144" right="28" autoupdatetype="itemselect">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="0"/>
                <Column size="40"/>
                <Column size="80"/>
                <Column size="100"/>
                <Column size="90"/>
                <Column size="150"/>
                <Column size="100"/>
                <Column size="150"/>
                <Column size="100"/>
                <Column size="100"/>
                <Column size="60"/>
                <Column size="50"/>
                <Column size="50"/>
                <Column size="50"/>
                <Column size="40"/>
                <Column size="55"/>
                <Column size="50"/>
                <Column size="60"/>
                <Column size="100"/>
                <Column size="250"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell/>
                <Cell col="1" rowspan="2" text="마감&#13;&#10;여부"/>
                <Cell col="2" colspan="4" text="사원"/>
                <Cell col="6" colspan="2" text="근무지역"/>
                <Cell col="8" colspan="2" text="기간"/>
                <Cell col="10" rowspan="2" text="월근무&#13;&#10;기준일수"/>
                <Cell col="11" colspan="6" text="산출제외일수"/>
                <Cell col="17" rowspan="2" text="현장근무&#13;&#10;일수"/>
                <Cell col="18" rowspan="2" text="총지급액"/>
                <Cell col="19" rowspan="2" text="비고"/>
                <Cell row="1"/>
                <Cell row="1" col="2" style="background:URL('theme://images/grd_WF_HeadEssential.png') left top;" text="사번"/>
                <Cell row="1" col="3" text="성명"/>
                <Cell row="1" col="4" text="직급"/>
                <Cell row="1" col="5" text="부서"/>
                <Cell row="1" col="6" style="background: ;" text="지급구분"/>
                <Cell row="1" col="7" style="background:URL('theme://images/grd_WF_HeadEssential.png') left top;" text="지역명"/>
                <Cell row="1" col="8" style="background:URL('theme://images/grd_WF_HeadEssential.png') left top;" text="현근무처시작일"/>
                <Cell row="1" col="9" style="background:URL('theme://images/grd_WF_HeadEssential.png') left top;" text="현근무처종료일"/>
                <Cell row="1" col="11" text="교육"/>
                <Cell row="1" col="12" text="병가"/>
                <Cell row="1" col="13" text="연차"/>
                <Cell row="1" col="14" text="반차"/>
                <Cell row="1" col="15" text="국외출장"/>
                <Cell row="1" col="16" text="기타"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" text="bind:CNFIRM_AT"/>
                <Cell col="1" displaytype="checkbox" edittype="expr:comp.parent.admin ? &quot;checkbox&quot; : &quot;none&quot;" text="bind:CLOS_AT"/>
                <Cell col="2" text="bind:EMPNO" expandshow="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;hide&quot; : &quot;show&quot; : &quot;hide&quot;"/>
                <Cell col="3" text="bind:EMPNM"/>
                <Cell col="4" text="bind:HR_CLSF_NM"/>
                <Cell col="5" text="bind:DEPT_NM"/>
                <Cell col="6" displaytype="combo" style="align:center middle;" text="bind:PYMNT_SE" combodataset="ds_hrm032" combocodecol="CODE" combodatacol="CODE_NM" combodisplay="edit"/>
                <Cell col="7" style="align:center middle;" text="bind:AREA_NM" expandshow="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;hide&quot; : &quot;show&quot; : &quot;hide&quot;"/>
                <Cell col="8" displaytype="date" edittype="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;none&quot; : &quot;date&quot; : &quot;none&quot;" style="align:center middle;" text="bind:BGNDE" calendardisplay="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;edit&quot; : &quot;display&quot; : &quot;edit&quot;" calendardisplaynulltype="none"/>
                <Cell col="9" displaytype="date" edittype="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;none&quot; : &quot;date&quot; : &quot;none&quot;" style="align:center middle;" text="bind:ENDDE" calendardisplay="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;edit&quot; : &quot;display&quot; : &quot;edit&quot;" calendardisplaynulltype="none"/>
                <Cell col="10" style="align:center middle;" text="expr:nexacro.toNumber(WORK_DAYCNT+EDC_DAYCNT+SLE_DAYCNT+HALF_DAYCNT+YRYC_DAYCNT+OUTNATN_DAYCNT+ETC_DAYCNT,null,null,null)"/>
                <Cell col="11" style="align:center middle;" text="bind:EDC_DAYCNT"/>
                <Cell col="12" style="align:center middle;" text="bind:SLE_DAYCNT"/>
                <Cell col="13" style="align:center middle;" text="bind:YRYC_DAYCNT"/>
                <Cell col="14" text="bind:HALF_DAYCNT"/>
                <Cell col="15" style="align:center middle;" text="bind:OUTNATN_DAYCNT"/>
                <Cell col="16" edittype="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;none&quot; : &quot;normal&quot; : &quot;none&quot;" editfilter="integer" style="align:center middle;" text="bind:ETC_DAYCNT" editdisplay="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;edit&quot; : &quot;display&quot; : &quot;edit&quot;"/>
                <Cell col="17" style="align:center middle;" text="bind:WORK_DAYCNT"/>
                <Cell col="18" displaytype="number" text="bind:MT_PYMNTAMT"/>
                <Cell col="19" edittype="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;none&quot; : &quot;normal&quot; : &quot;none&quot;" text="bind:RM" editdisplay="expr:comp.parent.updateYn == 'Y' ? CLOS_AT == &quot;1&quot; ? &quot;edit&quot; : &quot;display&quot; : &quot;edit&quot;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static02" taborder="6" text="5" visible="false" left="0" top="57" width="1031" height="5" style="background:#dc143c3c;align:center middle;"/>
        <Static id="Static36" taborder="7" text="10" visible="false" left="0" top="33" width="1031" height="10" style="background:#dc143c3c;align:center middle;"/>
        <GroupBox id="GroupBox00" taborder="8" left="5" right="33" bottom="5" height="129" text="총 지급액 산출공식"/>
        <Static id="Static03" taborder="9" left="15" width="433" text="① 현장근무 일 수, 15일 이상일 경우&#13;&#10;  - 지역별 등록된 월정액 적용&#13;&#10;&#13;&#10;② 현장근무 일 수, 15일 미만일 경우 (※ 천원단위 미만 절사)&#13;&#10;  - (지역별 등록된 월정액 / 15일) * 현장근무 일 수" bottom="15" height="100"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_sptScstList" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" cancolumnchange="ds_sptScstList_cancolumnchange" oncolumnchanged="ds_sptScstList_oncolumnchanged">
        <ColumnInfo>
          <Column id="EMPNO" type="STRING" size="256"/>
          <Column id="EMPNM" type="STRING" size="256"/>
          <Column id="HR_CLSF_NM" type="STRING" size="256"/>
          <Column id="PYMNT_YM" type="STRING" size="256"/>
          <Column id="DEPT_CODE" type="STRING" size="256"/>
          <Column id="DEPT_NM" type="STRING" size="256"/>
          <Column id="CLOS_AT" type="STRING" size="256"/>
          <Column id="AREA_CODE" type="STRING" size="256"/>
          <Column id="AREA_NM" type="STRING" size="256"/>
          <Column id="PYMNT_SE" type="STRING" size="256"/>
          <Column id="PYMNT_AMOUNT" type="BIGDECIMAL" size="256"/>
          <Column id="BGNDE" type="STRING" size="256"/>
          <Column id="ENDDE" type="STRING" size="256"/>
          <Column id="MT_PYMNTAMT" type="BIGDECIMAL" size="256"/>
          <Column id="WORK_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="EDC_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="SLE_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="HALF_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="YRYC_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="OUTNATN_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="ETC_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="RM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_cond_oncolumnchanged" cancolumnchange="ds_cond_cancolumnchange">
        <ColumnInfo>
          <Column id="PYMNT_YM" type="STRING" size="256"/>
          <Column id="DEPT_CODE" type="STRING" size="256"/>
          <Column id="DEPT_NM" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_validation" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId">ds_sptScstList</Col>
            <Col id="colId">EMPNO</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">성명</Col>
          </Row>
          <Row>
            <Col id="compId">ds_sptScstList</Col>
            <Col id="colId">AREA_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">지역명</Col>
          </Row>
          <Row>
            <Col id="compId">ds_sptScstList</Col>
            <Col id="colId">BGNDE</Col>
            <Col id="from"/>
            <Col id="msgId">현근무지시작일</Col>
            <Col id="notNull">Y</Col>
          </Row>
          <Row>
            <Col id="colId">ENDDE</Col>
            <Col id="compId">ds_sptScstList</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">현근무지종료일</Col>
          </Row>
          <Row>
            <Col id="compId">ds_sptScstList</Col>
            <Col id="colId">ENDDE</Col>
            <Col id="from">BGNDE</Col>
            <Col id="msgId">현근무지종료일^현근무지시작일</Col>
          </Row>
          <Row>
            <Col id="colId">PYMNT_YM</Col>
            <Col id="compId">ds_cond</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">기준년월</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_hrm032" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="GRP_CODE_SN" type="bigdecimal" size="16"/>
          <Column id="CODE_CN" type="string" size="32"/>
          <Column id="CODE_ORDR" type="bigdecimal" size="16"/>
          <Column id="USE_AT" type="string" size="32"/>
          <Column id="CODE_NM" type="string" size="32"/>
          <Column id="GRP_CODE" type="string" size="32"/>
          <Column id="CODE" type="string" size="32"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond_sub" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="EMPNO" type="STRING" size="256"/>
          <Column id="BGNDE" type="STRING" size="256"/>
          <Column id="ENDDE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_yrycInfo" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_sptScstList_oncolumnchanged">
        <ColumnInfo>
          <Column id="STDR_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="EDC_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="SLE_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="YRYC_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="OUTNATN_DAYCNT" type="BIGDECIMAL" size="256"/>
          <Column id="HALF_DAYCNT" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_sptScstCloseDt" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" cancolumnchange="ds_sptScstList_cancolumnchange" oncolumnchanged="ds_sptScstList_oncolumnchanged">
        <ColumnInfo>
          <Column id="STDR_YR" type="STRING" size="256"/>
          <Column id="STDR_YM" type="STRING" size="256"/>
          <Column id="REGIST_CLOS_DE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 화면ID   : HRM070501
 * 화면명   : 현장체재비 관리
 * 화면설명 : 현장체재비를 관리한다.
 * 작성일   : 2017.05.29
 * 작성자   : 양성모
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *    
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ***********************************************************************/
// 시스템 공통 라이브러리 Include
include "lib::comInclude.xjs";
include "mis_lib::misUtil.xjs";
/**********************************************************************
* 화면 변수 선언부
***********************************************************************/
this.srcYm = '';
this.admin = true;
this.updateYn = 'N';
/**********************************************************************
* onInit / onLoad 영역
***********************************************************************/

this.HRM070501_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{

}

this.HRM070501_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{	
	// Form 초기화
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}



/**********************************************************************
* Form/Dataset 오브젝트 초기화
***********************************************************************/
/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.init_Form();
 */
this.fn_init_form = function()
{
	this.gfn_initForm(this);	// 시스템 공통으로 Form을 Initialize 한다.
	this.fn_misFormInit(this);
	
	// 관리자 여부 함수 추가 필요 TODO....
	this.admin = true;
	
	this.div_search.div_pymntYm.msk_mon.set_cssclass("msk_WF_Essential");
	this.div_search.div_DEPT.fn_setBind("ds_cond","DEPT_CODE","DEPT_NM");
	this.div_search.div_pymntYm.fn_setBind("ds_cond","PYMNT_YM");
	
	this.ds_cond.setColumn(0, "DEPT_CODE", this.gfn_getDeptId());
	this.ds_cond.setColumn(0, "DEPT_NM", this.gfn_getDeptName());
	
	this.ds_cond.set_enableevent(false);
	this.ds_cond.setColumn(0, "PYMNT_YM", this.gfn_today().substr(0, 6));
	this.ds_cond.set_enableevent(true);
	
	// 공통코드
	/*******************************************************************************
	 * params  		: 1. param_1    : 반환받을 DATASET 명 			(예: DS_AREA_NO_CODE)
					  2. param_2	: 그룹코드						(예 : COM007)
					  3. param_3	: 사용여부		    			(예 : A(전체), Y(사용), N(사용안함))
					  4. param_4	: 콤보박스INDEX(0) 표시		(예 : A(전체), S(선택), E(공백), D(첫번째데이터부터시작) )
					  5. param_5	: 코드+코드명					(예 : G(코드명), B(코드-코드명) )
	 ******************************************************************************/
	var comboParams = [
	    ["ds_hrm032", "HRM032", "Y", "E", "B"]	// ds_hrm032 : 급지구분(현장체재비)
	];
	var callback = function (svcId, errorCode, errorMsg) {
			
		this.fn_search();
	};
	this.gfn_comboLoad (comboParams, callback);
}


/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	// 조건 Dataset 외에 초기화가 필요한 Dataset에 대한 초기화 코드를 추가
	this.gfn_initCondDs(this, this.div_search);
}


/**********************************************************************
* Transaction 영역 시작
***********************************************************************
*
* 1. Transaction 관련 이벤트 핸들러
* 2. call Transaction 영역
* 3. callback 영역(Transaction, Popup)
* 
***********************************************************************/



/**********************************************************************
* Transaction 관련 이벤트 핸들러 
***********************************************************************/


/*
 * 함수명  	: fn_search
 * 설명 		: 조회 이벤트 처리(공고대장)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	// validation 체크
	if(!this.gfn_checkValidation_NoUpdChk(this.ds_cond, this.ds_validation)) {
		return;
	}
	
	this.ds_sptScstList.clearData();
	
	this.srcYm = this.ds_cond.getColumn(0, "PYMNT_YM");

	this.fn_transaction("selectSptScstList");
}


/*
 * 함수명  	: fn_save
 * 설명 		: 저장 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save();
 */
this.fn_save = function()
{
	// 데이터셋 수정 여부체크
	if (!this.comUtils.isDatasetUpdated(this.ds_sptScstList)) {
		this.gfn_message("comm.데이터.변경.없음");
		return false;
	}
	
	// validation 체크
	if(!this.gfn_checkValidation_NoUpdChk(this.ds_sptScstList, this.ds_validation)) {
		return;
	}
	
	if(this.gfn_message("confirm.저장.여부"))	{
		this.fn_transaction("saveSptScstCUD");
	}
}

/**********************************************************************
* call Transaction 영역
***********************************************************************/

/*
 * 함수명  	: fn_transaction
 * 설명 		: Transaction 요청 처리 함수
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	switch (strSvcId) {
		case "selectSptScstList":	// 현장체재비 조회
			var sController   	= "/hsco/mis/hrm/HRM070501/selectSptScstList.do";
			var sInDatasets   	= "input1=ds_cond";
			var sOutDatasets  	= "ds_sptScstList=output1 ds_sptScstCloseDt=output2";
			break;
		case "saveSptScstCUD":		// 저장
			var sController   	= "/hsco/mis/hrm/HRM070501/saveSptScstCUD.do";
			var sInDatasets   	= "input1=ds_sptScstList:U";
			var sOutDatasets  	= "";
			break;
		case "selectYrycInfo":		// 사용자 월 근무일수 및 산출제외 연가현황 조회
			var sController   	= "/hsco/mis/hrm/HRM070501/selectYrycInfo.do";
			var sInDatasets   	= "input1=ds_cond_sub";
			var sOutDatasets  	= "ds_yrycInfo=output1";
			break;
	}

	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets); 
}



/**********************************************************************
* Transaction Callback 영역
***********************************************************************/

 /*
 * 함수명  	: fn_callBack
 * 설명 		: Transaction Callback 처리
 * params  		: strSvcId    : 서비스요청 ID
 *                nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *                strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type 	: None
 * 사용법		: 
 */
 
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	if(nErrorCode != '0') {
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	}
	
	if (nErrorCode == 0){
		switch (strSvcId) {
			case "selectSptScstList":	// 조회(현장체재비)
				if(this.ds_sptScstCloseDt.rowcount > 0){
					var closeDe = this.ds_sptScstCloseDt.getColumn(0, "REGIST_CLOS_DE");
					var closeInfo = "등록마감일자 : "+closeDe.substr(0,4)+"년 "+closeDe.substr(4,2)+"월 "+closeDe.substr(6,2)+"일";
					this.div_search.sta_closeInfo.set_text(closeInfo);
					
					// 관리자 여부에 따른 그리드 제어 영역
					if(this.admin){	// 관리자일 경우
						this.updateYn = 'Y';
						
					} else {	// 일반사용자일 경우
						if(this.gfn_today() > closeDe){
							this.updateYn = 'N';
						} else {
							this.updateYn = 'Y';
						}
					}
				} else {
					this.updateYn = 'Y';
					this.div_search.sta_closeInfo.set_text(null);
				}
				
				if(this.ds_sptScstList.rowcount > 0){
					this.ds_sptScstList.set_rowposition(-1);
					this.ds_sptScstList.set_rowposition(0);
				}
				break;
			case "saveSptScstCUD": 		// 저장
				this.gfn_message("success.처리.성공");
				this.fn_search();
				break;
			case "selectYrycInfo": 		// 사용자 월 근무일수 및 산출제외 연가현황 조회
				var nRow = this.ds_sptScstList.rowposition;
				if(this.ds_yrycInfo.rowcount > 0){
					var temp1 = this.ds_yrycInfo.getColumn(0, "STDR_DAYCNT");		// 월 근무 기준일수
					var temp2 = this.ds_yrycInfo.getColumn(0, "EDC_DAYCNT");		// 교육출장
					var temp3 = this.ds_yrycInfo.getColumn(0, "SLE_DAYCNT");		// 병가
					var temp4 = this.ds_yrycInfo.getColumn(0, "YRYC_DAYCNT");		// 연차
					var temp5 = this.ds_yrycInfo.getColumn(0, "HALF_DAYCNT");		// 반차
					var temp6 = this.ds_yrycInfo.getColumn(0, "OUTNATN_DAYCNT");	// 국외출장
					
					var etcCnt = this.ds_sptScstList.getColumn(nRow, "ETC_DAYCNT");	// 기타
					var areaCd = this.ds_sptScstList.getColumn(nRow, "PYMNT_SE");	// 지급구분
					if(this.comUtils.isNull(etcCnt)){
						etcCnt = 0;
						
						this.ds_sptScstList.set_enableevent(false);
						this.ds_sptScstList.setColumn(nRow, "ETC_DAYCNT", etcCnt);
						this.ds_sptScstList.set_enableevent(true);
					}
					
					var workCnt = temp1-(temp2+temp3+temp4+temp5+temp6+etcCnt);
					
					this.ds_sptScstList.setColumn(nRow, "EDC_DAYCNT", temp2);
					this.ds_sptScstList.setColumn(nRow, "SLE_DAYCNT", temp3);
					this.ds_sptScstList.setColumn(nRow, "YRYC_DAYCNT", temp4);
					this.ds_sptScstList.setColumn(nRow, "HALF_DAYCNT", temp5);
					this.ds_sptScstList.setColumn(nRow, "OUTNATN_DAYCNT", temp6);
					this.ds_sptScstList.setColumn(nRow, "WORK_DAYCNT", workCnt);
				}
				break;
		}
	}
}

 /*
 * 함수명  	: fn_popupCallBack
 * 설명 		: Popup Callback 처리
 * params  		: sPopupId    : 팝업 ID
 *                sReturn  : 팝업 처리 결과(dataset.saveXML())
 * return Type 	: None
 * 사용법		: 
 */
this.fn_popupCallBack = function(sPopupId, sReturn)
{
	if(sPopupId == "EMPNO_P01") {
		var dsEmpNo = new Dataset();
		var loadCnt = dsEmpNo.loadXML(sReturn);
		if(loadCnt) {
			
			var deptCode = dsEmpNo.getColumn(0, "DEPT_CODE");
			var deptNm   = dsEmpNo.getColumn(0, "DEPT_NM");
			var empNo    = dsEmpNo.getColumn(0, "EMPNO");
			var empNm    = dsEmpNo.getColumn(0, "EMPNM");
			var clsfNm    = dsEmpNo.getColumn(0, "HR_CLSF_NM");
			
			var fRow = this.ds_sptScstList.findRow("EMPNO", empNo);
			if(fRow < 0){
				var nRow     = this.ds_sptScstList.rowposition;
				this.ds_sptScstList.setColumn(nRow, "DEPT_CODE", deptCode);
				this.ds_sptScstList.setColumn(nRow, "DEPT_NM", deptNm);
				this.ds_sptScstList.setColumn(nRow, "EMPNO", empNo);
				this.ds_sptScstList.setColumn(nRow, "EMPNM", empNm);
				this.ds_sptScstList.setColumn(nRow, "HR_CLSF_NM", clsfNm);
				
				this.fn_yrycInfo();
			} else {
				alert("동일한 대상자가 존재합니다.");
			}
		}
	}
	
	if(sPopupId == "HRM070503_P01") {
		var dsTemp = new Dataset();
		var loadCnt = dsTemp.loadXML(sReturn);
		if(loadCnt) {
			
			var temp1 = dsTemp.getColumn(0, "AREA_CODE");
			var temp2 = dsTemp.getColumn(0, "PYMNT_SE");
			var temp3 = dsTemp.getColumn(0, "AREA_NM");
			var temp4 = dsTemp.getColumn(0, "PYMNT_AMOUNT");
			
			var nRow     = this.ds_sptScstList.rowposition;
			this.ds_sptScstList.setColumn(nRow, "PYMNT_AMOUNT", temp4);
			this.ds_sptScstList.setColumn(nRow, "AREA_CODE", temp1);
			this.ds_sptScstList.setColumn(nRow, "PYMNT_SE", null);
			this.ds_sptScstList.setColumn(nRow, "PYMNT_SE", temp2);
			this.ds_sptScstList.setColumn(nRow, "AREA_NM", temp3);
			
		} else {
			var nRow     = this.ds_sptScstList.rowposition;
			this.ds_sptScstList.setColumn(nRow, "PYMNT_AMOUNT", 0);
			this.ds_sptScstList.setColumn(nRow, "AREA_CODE", null);
			this.ds_sptScstList.setColumn(nRow, "PYMNT_SE", null);
			this.ds_sptScstList.setColumn(nRow, "AREA_NM", null);
			
		}
	}
}

/**********************************************************************
* Transaction 영역 끝
***********************************************************************/


/**********************************************************************
* non-Transaction 관련 컴포넌트 이벤트 처리 함수
***********************************************************************
*
* 1. Gird 관련 이벤트 처리
* 2. 공통함수 처리
* 
***********************************************************************/


/**********************************************************************
* Grid 관련 이벤트 처리
***********************************************************************/

 /*
 * 함수명  	: div_work_grd_pblancList_onexpandup
 * 설명 		: 담당자 정보 입력
 *                
 * params  		: None
 * return Type 	: None
 * 사용법		: this.div_work_grd_pblancList_onexpandup();
 */
this.div_work_grd_pblancList_onexpandup = function(obj:Grid, e:nexacro.GridMouseEventInfo)
{
	if(e.cell == '2') {
		this.gfn_popup("EMPNO_P01", 500,457, '', {deptCode:"",empNo:"",empNm:"",deptCd:this.ds_cond.getColumn(0, "DEPT_CODE")}, "com::empno_P01.xfdl", "fn_popupCallBack", true);
	}
	
	if(e.cell == '7') {
		this.gfn_popup("HRM070503_P01", 500,457, '', null, "mis_hrm::HRM070503_P01.xfdl", "fn_popupCallBack", true);
	}
}

/*
* 함수명		: div_work_grd_pblancList_onheadclick
* 설명			: 헤드클릭 정렬, 체크박스 전체전택
* params		: None
* return Type	: None
* 사용법		: this.div_work_grd_pblancList_onheadclick();
*/
this.div_work_grd_pblancList_onheadclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	this.gfn_gridSort(obj, e);
}

/**********************************************************************
* 공통함수 처리
***********************************************************************/

 /*
 * 함수명  	: fn_insert
 * 설명 		: 신규 버튼 이벤트 처리(행추가)
 * params  		: Non
 * return Type 	: None
 * 사용법		: this.fn_insert();
 */
this.fn_insert = function()
{
	if(this.updateYn == 'Y'){
		var nRow = this.ds_sptScstList.addRow();
		this.ds_sptScstList.setColumn(nRow, "PYMNT_SE", "");
		this.ds_sptScstList.setColumn(nRow, "PYMNT_YM", this.srcYm);
		this.ds_sptScstList.setColumn(nRow, "BGNDE", this.srcYm+"01");
		this.ds_sptScstList.setColumn(nRow, "ENDDE", this.dateUtils.format(this.dateUtils.getLastDay(this.srcYm+"01"), "yyyymmdd"));
	} else {
		alert("등록마감일이 경과되었습니다.");
	}
}

/*
 * 함수명  	: fn_delete
 * 설명 		: 삭제 버튼 이벤트 처리(행삭제)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_delete();
 */
this.fn_delete = function()
{
	if(this.updateYn == 'Y'){
		var rowposition = this.ds_sptScstList.rowposition;
		var cnfirmAt = this.ds_sptScstList.getColumn(rowposition, "CLOS_AT");
		
		if(cnfirmAt != "1"){
			if(this.gfn_message("confirm.삭제여부")){
				
				this.ds_sptScstList.deleteRow(rowposition);
			}
		} else {
			this.gfn_message("fail.삭제.불가", "마감이 완료되어");
		}
	} else {
		alert("등록마감일이 경과되었습니다.");
	}
}


/*
 * 함수명  	: fn_cancel
 * 설명 		: 취소 버튼 이벤트 처리(Dataset 변경 내역 Reset)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_cancel();
 */
this.fn_cancel = function()
{
	if(this.gfn_message("confirm.취소여부")) {
		this.ds_sptScstList.reset();		//DATASET ROLLBACK
		this.ds_sptScstList.applyChange();	//DATASET COMMIT
		return;
	}
}

/*
 * 함수명  	: fn_yrycInfo
 * 설명 		: 사용자 근무일 구하는 함수
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_yrycInfo();
 */
this.fn_yrycInfo = function(){
	var nRow = this.ds_sptScstList.rowposition;
	var empno = this.ds_sptScstList.getColumn(nRow, "EMPNO");
	var bgnde = this.ds_sptScstList.getColumn(nRow, "BGNDE");
	var endde = this.ds_sptScstList.getColumn(nRow, "ENDDE");
	
	if(!this.comUtils.isNull(empno) && !this.comUtils.isNull(bgnde) && !this.comUtils.isNull(endde)){
		this.ds_cond_sub.clearData();
		this.ds_cond_sub.addRow();
		this.ds_cond_sub.setColumn(0, "EMPNO", empno);
		this.ds_cond_sub.setColumn(0, "BGNDE", bgnde);
		this.ds_cond_sub.setColumn(0, "ENDDE", endde);
		
		this.fn_transaction("selectYrycInfo");
	} else {
		this.ds_sptScstList.setColumn(nRow, "EDC_DAYCNT", null);
		this.ds_sptScstList.setColumn(nRow, "SLE_DAYCNT", null);
		this.ds_sptScstList.setColumn(nRow, "YRYC_DAYCNT", null);
		this.ds_sptScstList.setColumn(nRow, "HALF_DAYCNT", null);
		this.ds_sptScstList.setColumn(nRow, "OUTNATN_DAYCNT", null);
		this.ds_sptScstList.setColumn(nRow, "WORK_DAYCNT", null);
	}
	
	
}

/*
 * 함수명  	: ds_sptScstList_cancolumnchange
 * 설명 		: 현장체재비 데이터셋 컬럼 값 변경 전 이벤트
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_sptScstList_cancolumnchange();
 */
this.ds_sptScstList_cancolumnchange = function(obj:Dataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "BGNDE" || e.columnid == "ENDDE"){
		var pymntYm = this.ds_cond.getColumn(0, "PYMNT_YM");	// 기준년월
		
		if(e.columnid == "BGNDE" && !this.comUtils.isNull(e.newvalue)){
			
			if(pymntYm == e.newvalue.substr(0, 6)){
				var endde = this.ds_sptScstList.getColumn(e.row, "ENDDE");
				
				if(!this.comUtils.isNull(endde)){
					if(e.newvalue < endde){
						// 월 근무 기준일수 및 연차사용 현황 조회
						//return;
					} else {
						alert("종료일은 시작일보다 크거나 같아야 합니다.");
						return false;
					}
				}
			} else {
				alert("시작일은 기준년월에 해당되어야 합니다.");
				return false;
			}
		}
		
		if(e.columnid == "ENDDE" && !this.comUtils.isNull(e.newvalue)){
			
			if(pymntYm == e.newvalue.substr(0, 6)){
				
				var bgnde = this.ds_sptScstList.getColumn(e.row, "BGNDE");
				
				if(!this.comUtils.isNull(bgnde)){
					if(bgnde < e.newvalue){
						// 월 근무 기준일수 및 연차사용 현황 조회
						//return;
					} else {
						alert("종료일은 시작일보다 크거나 같아야 합니다.");
						return false;
					}
				}
			} else {
				alert("종료일은 기준년월에 해당되어야 합니다.");
				return false;
			}
		}
	}
}

/*
 * 함수명  	: ds_sptScstList_oncolumnchanged
 * 설명 		: 현장체재비 데이터셋 컬럼 값 변경 후 이벤트
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_sptScstList_oncolumnchanged();
 */
this.ds_sptScstList_oncolumnchanged = function(obj:Dataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "BGNDE" || e.columnid == "ENDDE"){
		this.fn_yrycInfo();
	}
	
	if(e.columnid == "ETC_DAYCNT"){
		
		if(this.comUtils.isNull(e.newvalue)){
			obj.set_enableevent(false);
			obj.setColumn(e.row, e.columnid, 0);
			obj.set_enableevent(true);
		}
		
		var temp1 = obj.getColumn(e.row, "ETC_DAYCNT");
		var temp2 = obj.getColumn(e.row, "WORK_DAYCNT");
		var temp3 = obj.getColumn(e.row, "PYMNT_SE");
		
		if(!this.comUtils.isNull(temp2)){
			this.ds_sptScstList.setColumn(e.row, "WORK_DAYCNT", nexacro.toNumber(temp2+e.oldvalue-temp1,null,null,null));
			
			if(!this.comUtils.isNull(temp3)){
				this.fn_mt_pymntAmt();
			}
		}
		
	}
	
	if(e.columnid == "PYMNT_SE"){
		if(!this.comUtils.isNull(e.newvalue)){
			var workCnt = obj.getColumn(e.row, "WORK_DAYCNT");
			
			if(!this.comUtils.isNull(workCnt)){
				this.fn_mt_pymntAmt();
			} else {
				obj.setColumn(e.row, "MT_PYMNTAMT", null);
			}
		} else {
			obj.setColumn(e.row, "MT_PYMNTAMT", null);
		}
	}
	
	if(e.columnid == "WORK_DAYCNT"){
		if(!this.comUtils.isNull(e.newvalue)){
			var areaCd = obj.getColumn(e.row, "PYMNT_SE");
			
			if(!this.comUtils.isNull(areaCd)){
				this.fn_mt_pymntAmt();
			} else {
				obj.setColumn(e.row, "MT_PYMNTAMT", null);
			}
		} else {
			obj.setColumn(e.row, "MT_PYMNTAMT", null);
		}
	}
}

/*
 * 함수명  	: fn_mt_pymntAmt
 * 설명 		: 총 지급액 계산 함수
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_mt_pymntAmt();
 */
this.fn_mt_pymntAmt = function(){

	var nRow = this.ds_sptScstList.rowposition;
	var workCnt = this.ds_sptScstList.getColumn(nRow, "WORK_DAYCNT");
	var areaCd = this.ds_sptScstList.getColumn(nRow, "PYMNT_SE");
	var pymntAmt = this.ds_sptScstList.getColumn(nRow, "PYMNT_AMOUNT");
	
	var mtPymntAmt = 0;	// 총 지급액
	
	if(workCnt >= 15){	//15일 이상일 경우, 월정액 지급
		mtPymntAmt = pymntAmt;
	} else {			// 15일 미만일 경우, 일할 계산 지급
		// 공식 : 월정액(거리별) / 월정액지급 기준일(15일) * 근무일수
		// 천단위 미만 절삭
		
		if(areaCd == 'A'){
			mtPymntAmt = nexacro.floor(pymntAmt/15, -3) * workCnt;
		}
		
		if(areaCd == 'B'){
			mtPymntAmt = nexacro.floor(pymntAmt/15, -3) * workCnt;
		}
	}
	
	this.ds_sptScstList.setColumn(nRow, "MT_PYMNTAMT", mtPymntAmt);
}

/*
 * 함수명  	: ds_cond_oncolumnchanged
 * 설명 		: 조회 데이터셋 컬럼 값 변경 후 이벤트
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_cond_oncolumnchanged();
 */
this.ds_cond_oncolumnchanged = function(obj:Dataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "PYMNT_YM"){
		this.fn_search();
	}
}

/*
 * 함수명  	: ds_cond_cancolumnchange
 * 설명 		: 조회 데이터셋 컬럼 값 변경 후 이벤트
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_cond_cancolumnchange();
 */
this.ds_cond_cancolumnchange = function(obj:Dataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "PYMNT_YM"){
		if(!this.comUtils.isNull(e.newvalue)){
			//공사채변동금리 목록의 업데이트 여부
			if(Ex.util.isUpdated(this.ds_sptScstList)){
				if (this.gfn_message("confirm.변경.취소.여부")) {
					return true;
				}else{
					return false;
				}
			}else{
				//변경되지 않았을 경우.
				return true;
			}
		} else {
			return false;
		}
	}
}]]></Script>
  </Form>
</FDL>
