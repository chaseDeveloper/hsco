<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\default_typedef.xml"/>
  <Form id="HRM010101" classname="HRM010101" left="0" top="0" width="1059" height="735" titletext="인사코드관리" oninit="HRM010101_oninit" onload="HRM010101_onload" ontimer="HRM010101_ontimer">
    <Layouts>
      <Layout>
        <Div id="div_sym" taborder="0" left="0" top="0" url="com_sym_cdm::SYM030100.xfdl" right="0" bottom="0"/>
      </Layout>
    </Layouts>
    <Objects/>
    <Bind/>
    <Script type="xscript5.0"><![CDATA[
/***********************************************************************
 * Script Include 
 ************************************************************************/
// 시스템 공통 라이브러리 Include
include "lib::comInclude.xjs";
include "mis_lib::misUtil.xjs";



/**********************************************************************
* 화면 변수 선언부
***********************************************************************/
this.isLoad = false;


/**********************************************************************
* onInit / onLoad 영역
***********************************************************************/

this.HRM010101_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	// Form 초기화
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}

this.HRM010101_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	//..
}


/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/
 
/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	this.gfn_initForm(this);
	this.fn_misFormInit(this);
	
	this.setTimer(0, 800);
}

this.HRM010101_ontimer = function(obj:Form, e:nexacro.TimerEventInfo)
{
	if(this.isLoad == false && this.div_sym.DS_JOB_CODE.getRowCount() > 0) {

		this.isLoad = true;
		this.killTimer(0);
	
		// 검색조건 읽기전용 기능
		this.div_sym.div_search.Combo01.set_readonly(true);
		this.div_sym.div_search.Combo02.set_readonly(true);
		
		// 검색조건 읽기전용 표시
		this.div_sym.div_search.Combo01.set_cssclass("cmb_WF_Readonly");
		this.div_sym.div_search.Combo02.set_cssclass("cmb_WF_Readonly");
		
		// 행추가,삭제,취소 버튼 숨김
		this.div_sym.div_work.btn_mstAdd.set_visible(false);
		this.div_sym.div_work.btn_mstDel.set_visible(false);
		this.div_sym.div_work.btn_mstCls.set_visible(false);
		
		// 초기 검색조건 지정
		this.div_sym.DS_SEARCH.setColumn(0, "SYS_SE_CODE", "MIS");
		this.div_sym.DS_SEARCH.setColumn(0, "JOB_SE_CODE", "HRM");
		
		// 신규 행추가 시 기능 제한
		this.div_sym.div_work.grd_GRP_CODE.setCellProperty("body", 3, "edittype", "none");
		this.div_sym.div_work.grd_GRP_CODE.setCellProperty("body", 4, "edittype", "none");
	
		this.fn_search();
	}
}


/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다.
 *                주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	//..
}



/**********************************************************************
* non-Transaction 관련 컴포넌트 이벤트 처리 함수
***********************************************************************
*
* 1. 공통함수 처리
* 2. 사용자 정의 함수 처리
*
***********************************************************************/



/**********************************************************************
* 공통함수 처리
***********************************************************************/

/*
 * 함수명  	: fn_search
 * 설명 		: div 내부 공통함수 호출(조회)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_search(obj,e);
 */
this.fn_search = function()
{
	this.div_sym.fn_search();
}


/*
 * 함수명  	: fn_save
 * 설명 		: div 내부 공통함수 호출(저장)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save(obj,e);
 */
this.fn_save = function()
{
	this.div_sym.fn_save();
}


/*
 * 함수명  	: fn_insert
 * 설명 		: div 내부 공통함수 호출(추가)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_insert(obj,e);
 */
this.fn_insert = function()
{
	var nRow = this.div_sym.DS_GRP_CODE.addRow();
	this.div_sym.DS_GRP_CODE.setColumn(nRow, "SYS_SE_CODE", "MIS");
	this.div_sym.DS_GRP_CODE.setColumn(nRow, "JOB_SE_CODE", "HRM");
}


/*
 * 함수명  	: fn_delete
 * 설명 		: div 내부 공통함수 호출(삭제)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_delete(obj,e);
 */
this.fn_delete = function()
{
	this.div_sym.fn_delete();
}


/*
 * 함수명  	: fn_cancel
 * 설명 		: div 내부 공통함수 호출(취소)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_cancel(obj,e);
 */
this.fn_cancel = function()
{
	this.div_sym.fn_cancel();
}



/**********************************************************************
* 사용자 정의 함수 처리
***********************************************************************/

/*
 * 함수명  	: fn_divInit
 * 설명 		: 팝업을 읽기전용으로 변환
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_divInit(obj,e);
 */
this.fn_divInit = function(arrCtrlObj)
{
	// 모든 오브젝트에 대하여 readonly 이벤트 추가
	_fn_setButtonVisible = function(obj){
		var innerComp   = obj;
		var fRow       = 0;
		var compLength = obj.components.length;
		while(fRow < compLength ){
			innerComp = obj.components[fRow];
			
			var isCtrl = false;
			for(var rRow = 0; rRow < arrCtrlObj.length; rRow++) {
				if(innerComp.name == arrCtrlObj[rRow]) {
					isCtrl = true;
				}
			}
			
			switch(innerComp.toString()){
				case "[object Edit]":
					if(!isCtrl) {
						innerComp.set_cssclass("edt_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object MaskEdit]":
					if(!isCtrl) {
						innerComp.set_cssclass("msk_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object Spin]":
					if(!isCtrl) {
						innerComp.set_cssclass("spn_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object Combo]":
					if(!isCtrl) {
						innerComp.set_cssclass("cmb_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object Calendar]":
					if(!isCtrl) {
						innerComp.set_cssclass("cal_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object TextArea]":
					if(!isCtrl) {
						innerComp.set_cssclass("txt_WF_Readonly");
						innerComp.set_readonly(true);
					}
					break;
				case "[object CheckBox]":
					if(!isCtrl) {
						innerComp.set_enable(false);
					}
					break;
				case "[object Button]":
					if(!isCtrl) {
						switch(innerComp.cssclass) {
							case "btn_WF_PopupClose": case "btn_WF_CRUD":
								break;
							default:
								innerComp.set_visible(false);
								break;
						}
					} else {
						innerComp.set_visible(true);
					}
					break;
				case "[object Form]":
				case "[object Div]":
				case "[object Tab]":
				case "[object Tabpage]":
					if(!isCtrl) {
						_fn_setButtonVisible(innerComp);
					}
					break;
				case "[object Grid]":
					if(!isCtrl) {
						for(var cRow = 0; cRow < innerComp.getCellCount("Body"); cRow++) {
							innerComp.setCellProperty("Body", cRow, "edittype",   "none");
							innerComp.setCellProperty("Body", cRow, "expandshow", "hide");
						}
					}
					break;
			}
			fRow++;
		}
	}
	_fn_setButtonVisible(this);
}

]]></Script>
  </Form>
</FDL>
