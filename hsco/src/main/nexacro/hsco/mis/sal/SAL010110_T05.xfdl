<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\default_typedef.xml"/>
  <Form id="SAL010110_T05" classname="SAL010110_T05" left="0" top="0" width="658" height="428" titletext="학비보조" onload="SAL010110_T05_onload" oninit="SAL010110_T05_oninit">
    <Layouts>
      <Layout>
        <Static id="sta_EMPL_BANK00" taborder="0" text="학비보조" cssclass="sta_WF_Title03" left="0" top="5" width="81" height="26" style="align:left middle;"/>
        <Grid id="grd_schxpnAsstnList" taborder="1" binddataset="ds_schxpnAsstnList" readonly="true" autoenter="select" useinputpanel="false" autofittype="col" left="0" top="27" right="0" bottom="0">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="39"/>
                <Column size="87"/>
                <Column size="69"/>
                <Column size="138"/>
                <Column size="57"/>
                <Column size="131"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell text="순번"/>
                <Cell col="1" text="지급년월"/>
                <Cell col="2" text="자녀성명"/>
                <Cell col="3" text="학교명"/>
                <Cell col="4" text="학년"/>
                <Cell col="5" text="지급금액"/>
              </Band>
              <Band id="body">
                <Cell displaytype="number" text="expr:currow+1"/>
                <Cell col="1" displaytype="normal" edittype="none" text="bind:PYMNT_PREARNGE_YM" mask="####-##"/>
                <Cell col="2" displaytype="normal" edittype="none" text="bind:FAMILY_NM"/>
                <Cell col="3" text="bind:SCHUL_NM"/>
                <Cell col="4" text="bind:GRADE"/>
                <Cell col="5" displaytype="number" style="align:right;" text="bind:REQST_AMOUNT"/>
              </Band>
              <Band id="summary">
                <Cell/>
                <Cell col="1"/>
                <Cell col="2"/>
                <Cell col="3"/>
                <Cell col="4"/>
                <Cell col="5" displaytype="number" text="expr:dataset.getSum('REQST_AMOUNT')"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects/>
    <Bind>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 업무구분 : 급여기준정보관리
 * 화면ID   : SAL010110
 * 화면명   : 급여기준정보관리
 * 화면설명 : 급여기준정보관리정보를 관리한다.
 * 작성일   : 2017.04.05
 * 작성자   : 정  민
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ************************************************************************/
include "lib::comInclude.xjs";
include "mis_lib::misUtil.xjs";

/***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.SAL010110_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	this.fn_init_form();
	this.fn_init_dataset();
}

this.SAL010110_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	this.fn_loadCombo();
	this.fn_search();  
}

/**********************************************************************
* Form/Dataset 오브젝트 초기화
***********************************************************************/

/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	this.gfn_initForm(this);
	this.fn_misFormInit(this);

	this.ds_riskWorkCode.clearData();
	this.ds_spcifyJobCode.clearData();
	this.ds_sfmngAt.clearData();
	this.ds_radioItm.clearData();

	
	this.div_search.div_EMP.fn_setBind("ds_cond", "EMPNO", "EMPNM");
	this.div_search.div_EMP.setFocus(true);

}

/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	this.gfn_initCondDs(this, this.div_search);	
}

/**********************************************************************
 * 설명: 공통조회
 ************************************************************************/
this.fn_loadCombo = function ()
{
	var comboParams = [
						 ["ds_jssfc"   , "HRM001", 1, "전체"]	// 직종(검색조건)
						,["ds_bankCode", "COM021", 1, ""]		// 은행코드    
			     	  ];    
					
	this.gfn_comboLoad(comboParams, this.fn_callbackAfter);
	
	// 사원상세정보 콤보박스 항목 셋팅
	this.fn_transaction("selectPymntDdcDetailCodeList");
	
	// 라디오버튼 기본값 셋팅
	var nRow = this.ds_radioItm.addRow();
	this.ds_radioItm.setColumn(nRow, "CODE"   , "1");
	this.ds_radioItm.setColumn(nRow, "CODE_NM", "Y");
	nRow = this.ds_radioItm.addRow();
	this.ds_radioItm.setColumn(nRow, "CODE"   , "0");
	this.ds_radioItm.setColumn(nRow, "CODE_NM", "N");
	
}


/**********************************************************************
* Transaction 영역 시작
***********************************************************************
*
* 1. Transaction 관련 이벤트 핸들러
* 2. call Transaction 영역
* 3. callback 영역(Transaction, Popup)
* 
***********************************************************************/

/**********************************************************************
* Transaction 관련 이벤트 핸들러 
***********************************************************************/

/*
 * 함수명 	 	: fn_search
 * 설명 		: 조회 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	this.fn_transaction("selectEmplInfoList");
}

/*
 * 함수명  	: fn_save
 * 설명 		: 저장 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save();
 */
this.fn_save= function()
{

	
	// Validation 체크
 	/*
 	if(!(this.gfn_checkValidation(this.ds_emplDetailInfo, this.ds_validation) && this.gfn_checkValidation(this.ds_emplDetailInfoTab1, this.ds_validation))) {
		return;
 	}*/
	
	if(this.gfn_message("confirm.저장.여부"))	{
		this.fn_transaction("saveEmplDetailInfo");
		this.fn_transaction("saveEmplDetailInfoTab");
	}
}

/**********************************************************************
* call Transaction 영역
***********************************************************************/

/*
 * 함수명  	: fn_transaction
 * 설명 		: Transaction 요청 처리 함수
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	switch (strSvcId) {
		// 사원정보 목록조회
		case "selectEmplInfoList":
			var sController  = "hsco/mis/sal/SAL010110/selectEmplInfoList.do";
			var sInDatasets  = "input1=ds_cond";
			var sOutDatasets = "ds_emplInfoList=output1";
			break;
		// 사원상세정보 조회
		case "selectEmplDetailInfo":
			var sController  = "hsco/mis/sal/SAL010110/selectEmplDetailInfo.do";
			var sInDatasets  = "input1=ds_cond2";
			var sOutDatasets = "ds_emplDetailInfo=output1";
			break;
		// 사원상세정보 탭 조회
		case "selectEmplDetailInfoTab":
			var sController  = "hsco/mis/sal/SAL010110/selectEmplDetailInfoTab.do";
			var sInDatasets  = "input1=ds_cond2";
			var sOutDatasets = "ds_emplDetailInfoTab1=output1 ds_emplDetailInfoTab2=output2 ds_emplDetailInfoTab3=output3 ds_emplDetailInfoTab4=output4 ds_emplDetailInfoTab5=output5 ds_emplDetailInfoTab6=output6";
			break;
		// 사원상세정보 저장
		case "saveEmplDetailInfo":
			var sController  = "hsco/mis/sal/SAL010110/emplDetailInfoU.do";
			var sInDatasets  = "input1=ds_emplDetailInfo";
			var sOutDatasets = "";
			break;
		// 사원상세정보 탭 저장
		case "saveEmplDetailInfoTab":
			var sController  = "hsco/mis/sal/SAL010110/emplDetailInfoTabU.do";
			var sInDatasets  = "input1=ds_emplDetailInfoTab1 input2=ds_emplDetailInfoTab2 input3=ds_emplDetailInfoTab3 input4=ds_emplDetailInfoTab4 input5=ds_emplDetailInfoTab5 input6=ds_emplDetailInfoTab6 input7=ds_cond2";
			var sOutDatasets = "";
			break;
		// 지급공제상세코드 목록 조회
		case "selectPymntDdcDetailCodeList":
			this.ds_pymntDdcCode.addRow();
			this.ds_pymntDdcCode.setColumn(0, "RISK_WORK_CODE", "1080");
			this.ds_pymntDdcCode.setColumn(0, "DRV_ALLWNC_AT" , "1100");
			this.ds_pymntDdcCode.setColumn(0, "SPCIFY_JOB_AT" , "1110");
			this.ds_pymntDdcCode.setColumn(0, "SFMNG_CODE"    , "1120");
			this.ds_pymntDdcCode.setColumn(0, "ALPINE_CLUB_AT", "2100");
			var sController  = "hsco/mis/sal/SAL010110/selectPymntDdcDetailCodeList.do";
			var sInDatasets  = "input1=ds_pymntDdcCode";
			var sOutDatasets = "ds_riskWorkCode=output1 ds_drvAllwncAt=output2 ds_spcifyJobCode=output3 ds_sfmngAt=output4 alpineClubAt=output5";
			break;
	}
	
	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets); 
}


/**********************************************************************
* callback 영역(Transaction, Popup)
***********************************************************************/

/*
 * 함수명  		: fn_callBack
 * 설명 		: Transaction Callback 처리
 * params  		: strSvcId    : 서비스요청 ID
 *                nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *                strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type 	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	if(nErrorCode != '0') {
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	}

	if (nErrorCode == 0){
		switch (strSvcId) {
			case "selectEmplDetailInfo":
			break;
			case "selectPymntDdcDetailCodeList":
			
				//콤보에 '해당없음' 값 셋팅
				this.ds_riskWorkCode.insertRow(0);
				this.ds_riskWorkCode.setColumn(0, "CODE"   , "0");
				this.ds_riskWorkCode.setColumn(0, "CODE_NM", "해당없음");
				
				this.ds_spcifyJobCode.insertRow(0);
				this.ds_spcifyJobCode.setColumn(0, "CODE"   , "0");
				this.ds_spcifyJobCode.setColumn(0, "CODE_NM", "해당없음");
				
				this.ds_sfmngAt.insertRow(0);
				this.ds_sfmngAt.setColumn(0, "CODE"   , "0");
				this.ds_sfmngAt.setColumn(0, "CODE_NM", "해당없음");
			break;
			case "selectEmplDetailInfoTab":
			break;
		}
	}
}


/**********************************************************************
* Transaction 영역 끝
***********************************************************************/

 


/**********************************************************************
* non-Transaction 관련 컴포넌트 이벤트 처리 함수
***********************************************************************
*
* 1. Dataset 관련 이벤트
* 2. Grid 관련 이벤트
* 3. Button 관련 이벤트
* 
***********************************************************************/

/**********************************************************************
* Dataset 관련 이벤트 처리
***********************************************************************/

/*
 * 함수명  	: ds_emplInfoList_onrowposchanged
 * 설명 		: 사원정보 rowpostion 변경시 발생
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_emplInfoList_onrowposchanged()
 */
this.ds_emplInfoList_onrowposchanged = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	this.ds_cond2.clearData();
	var nRow = this.ds_cond2.addRow();
	this.ds_cond2.setColumn(nRow, "EMPNO", obj.getColumn(e.newrow, "EMPNO"));
	
	//사원상세정보 조회
	this.fn_transaction("selectEmplDetailInfo");
	
	//사원상세정보 - 탭
	this.ds_cond2.addRow();
	this.ds_cond2.setColumn(0, "TAB_IDX", "1");
	this.fn_transaction("selectEmplDetailInfoTab");
}


/**********************************************************************
* Grid 관련 이벤트 처리
***********************************************************************/

/*
 * 함수명  	: tab_emplDetailInfo_onchanged
 * 설명 		: 사원상세정보 탭 변경시 발생
 * params  		: None
 * return Type 	: None
 * 사용법		: tab_emplDetailInfo_onchanged
 */
this.tab_emplDetailInfo_onchanged = function(obj:Tab, e:nexacro.TabIndexChangeEventInfo)
{
	
	// 차후에 확인
	//this.ds_cond2.setColumn(0, "TAB_IDX", e.postindex+1);
	//this.fn_transaction("selectEmplDetailInfoTab");
	
}

/**********************************************************************
* Button 관련 이벤트 처리
***********************************************************************/

/*
 * 함수명  	: div_search_chk_retireEmpl_onclick
 * 설명 		: 사원정보 조회시 퇴사자 포함/제외
 * params  		: None
 * return Type 	: None
 * 사용법		: div_search_chk_retireEmpl_onclick
 */
this.div_search_chk_retireEmpl_onclick = function(obj:CheckBox,  e:nexacro.ClickEventInfo)
{	
	this.ds_cond.setColumn(0, "RETIRE_EMPL", this.chk_retireEmpl.value);
}
]]></Script>
  </Form>
</FDL>
