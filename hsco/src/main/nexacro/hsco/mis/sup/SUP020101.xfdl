<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\default_typedef.xml"/>
  <Form id="SUP020101" classname="SUP020101" left="0" top="0" width="1059" height="735" titletext="채점표기준등록" oninit="SUP020101_oninit" onload="SUP020101_onload">
    <Layouts>
      <Layout>
        <Static id="Static04" taborder="9" text="10" visible="false" left="0" top="33" right="0" height="10" style="background:bisque;border:0 none transparent ;"/>
        <Static id="Static00" taborder="0" text="항목구분기준정보" cssclass="sta_WF_Title02" left="0" top="44" width="186" height="19"/>
        <Static id="Static01" taborder="10" text="5" visible="false" left="0" top="63" right="34" height="5" style="background:bisque;border:0 none transparent ;"/>
        <Button id="btn_Add_R01" taborder="4" text="행추가" onclick="btn_Add_R_onclick" cssclass="btn_WF_Gridadd" top="44" right="162" width="64" height="19"/>
        <Button id="btn_Del_R01" taborder="5" text="행삭제" onclick="btn_Del_R_onclick" cssclass="btn_WF_Griddel" top="44" right="95" width="64" height="19"/>
        <Button id="btn_Can_R01" taborder="6" text="행취소" onclick="btn_Can_R_onclick" cssclass="btn_WF_Gridcnl" top="44" right="28" width="64" height="19"/>
        <Static id="Static05" taborder="11" text="10" visible="false" left="440" top="42" width="10" style="background:#1b3cd23c;align:center middle;" bottom="38"/>
        <Grid id="grd_propseIemStdr" taborder="7" useinputpanel="false" left="0" top="68" width="440" bottom="0" autofittype="col" binddataset="ds_propseIemStdr" autoenter="select">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="150"/>
                <Column size="80"/>
                <Column size="150"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" text="제안구분"/>
                <Cell col="1" colspan="2" text="평가항목"/>
                <Cell col="3" rowspan="2" text="점수"/>
                <Cell row="1" col="1" text="코드"/>
                <Cell row="1" col="2" text="항목명"/>
              </Band>
              <Band id="body">
                <Cell displaytype="combo" edittype="expr:dataset.getRowType(currow)==2 ? 'combo' : 'none'" style="align:left;padding:0 0 0 10;" text="bind:PROPSE_SE" combodataset="ds_sup004" combocodecol="CODE" combodatacol="CODE_NM" combodisplaynulltext="선택" combodisplay="expr:dataset.getRowType(currow)==2 ? 'display' : 'edit'" autosizerow="limitmin" autosizecol="limitmin"/>
                <Cell col="1" text="bind:EVL_IEM_CODE"/>
                <Cell col="2" edittype="normal" style="align:left;padding:0 0 0 10;" text="bind:EVL_IEM_NM" editautoselect="true" editdisplay="display"/>
                <Cell col="3" displaytype="number" edittype="masknumber" editfilter="integer" style="align:right;padding:0 10 0 0;" text="bind:PROPSE_EVL_SCORE" mask="expr:!PROPSE_EVL_SCORE ? &quot;!###&quot; : &quot;!##0&quot;" editlimit="3" editautoselect="true" editdisplay="display" editlimitbymask="integer" combocodecol="bind:PROPSE_EVL_SCORE"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd_propseIemGrad" taborder="8" useinputpanel="false" autofittype="col" left="450" top="68" bottom="0" right="28" binddataset="ds_propseIemGrad" autoenter="select">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="150"/>
                <Column size="80"/>
                <Column size="150"/>
                <Column size="80"/>
                <Column size="40"/>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" text="제안구분"/>
                <Cell col="1" colspan="2" text="평가항목"/>
                <Cell col="3" rowspan="2" text="항목점수"/>
                <Cell col="4" rowspan="2" text="등급"/>
                <Cell col="5" rowspan="2" text="등급점수&#13;&#10;(FROM)"/>
                <Cell col="6" rowspan="2" text="등급점수&#13;&#10;(TO)"/>
                <Cell row="1" col="1" text="코드"/>
                <Cell row="1" col="2" text="항목명"/>
              </Band>
              <Band id="body">
                <Cell displaytype="combo" edittype="none" text="bind:PROPSE_SE" combodataset="ds_sup004" combocodecol="CODE" combodatacol="CODE_NM" autosizerow="limitmin" autosizecol="limitmin"/>
                <Cell col="1" text="bind:EVL_IEM_CODE"/>
                <Cell col="2" text="bind:EVL_IEM_NM"/>
                <Cell col="3" displaytype="number" text="bind:PROPSE_EVL_SCORE"/>
                <Cell col="4" displaytype="combo" edittype="expr:dataset.getRowType(currow)==Dataset.ROWTYPE_INSERT ? 'combo':'none'" style="align:center;" text="bind:EVL_IEM_GRAD" combodataset="ds_iemGrad" combocodecol="CODE" combodatacol="CODE_NM" combodisplaynulltext="선택" combodisplay="expr:dataset.getRowType(currow)==Dataset.ROWTYPE_INSERT ? 'display':'edit'"/>
                <Cell col="5" displaytype="number" edittype="masknumber" editfilter="none" style="align:right;padding:0 10 0 0;" text="bind:EVL_IEM_SCORE_BEGIN" mask="expr:!EVL_IEM_SCORE_BEGIN ? &quot;!###&quot; : &quot;!##0&quot;" editlimit="3" editautoselect="true" editdisplay="display" editlimitbymask="integer"/>
                <Cell col="6" displaytype="number" edittype="masknumber" style="align:right;padding:0 10 0 0;" text="bind:EVL_IEM_SCORE_END" mask="expr:!EVL_IEM_SCORE_END ? &quot;!###&quot; : &quot;!##0&quot;" editlimit="3" editautoselect="true" editdisplay="display" editlimitbymask="integer"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_Add_R00" taborder="1" text="행추가" onclick="btn_Add_R_onclick" cssclass="btn_WF_Gridadd" top="44" width="64" height="19" left="242" visible="false"/>
        <Button id="btn_Del_R00" taborder="2" text="행삭제" onclick="btn_Del_R_onclick" cssclass="btn_WF_Griddel" top="44" width="64" height="19" left="309" visible="false"/>
        <Button id="btn_Can_R00" taborder="3" text="행취소" onclick="btn_Can_R_onclick" cssclass="btn_WF_Gridcnl" top="44" width="64" height="19" left="376" visible="false"/>
        <Static id="Static02" taborder="12" text="상세기준정보" cssclass="sta_WF_Title02" left="450" top="44" width="186" height="19"/>
        <Div id="div_search" taborder="13" text="Div01" left="0" top="0" right="28" height="33" cssclass="div_WFSA_Box">
          <Layouts>
            <Layout width="1025" height="41">
              <Static id="Static16" taborder="61" text="기준년도" cssclass="sta_WFSA_Label" left="15" top="5" width="64" height="21"/>
              <Static id="Static00" taborder="62" text="차수" cssclass="sta_WFSA_Label" left="174" top="5" width="38" height="21"/>
              <Spin id="spn_RECIPT_YEAR" taborder="66" value="0" max="9999" min="1000" cssclass="spn_WF_Essential" left="79" top="5" width="80" height="21"/>
              <Static id="Static06" taborder="67" text="15" visible="false" left="0" top="0" width="15" height="33" style="background:#00ffff66;"/>
              <Static id="Static02" taborder="68" text="15" visible="false" left="159" top="0" width="15" height="33" style="background:#00ffff66;"/>
              <Combo id="Combo00" taborder="69" left="212" top="5" width="90" height="21" codecolumn="codecolumn" datacolumn="datacolumn" cssclass="cmb_WF_Essential">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">1</Col>
                      <Col id="datacolumn">상반기</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">2</Col>
                      <Col id="datacolumn">하반기</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Button id="btn_copy" taborder="70" text="데이터복사" onclick="btn_copy_onclick" cssclass="btn_WF_Process" top="7" right="5" width="79" height="19"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_propseIemStdr" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" onrowposchanged="ds_propseIemStdr_onrowposchanged" canrowposchange="ds_propseIemStdr_canrowposchange">
        <ColumnInfo>
          <Column id="STDR_YEAR" type="STRING" size="256"/>
          <Column id="ODR_SE" type="STRING" size="256"/>
          <Column id="PROPSE_SE" type="STRING" size="256"/>
          <Column id="EVL_IEM_CODE" type="STRING" size="256"/>
          <Column id="EVL_IEM_NM" type="STRING" size="256"/>
          <Column id="PROPSE_EVL_SCORE" type="BIGDECIMAL" size="256"/>
          <Column id="REGISTER_ID" type="STRING" size="256"/>
          <Column id="REGIST_DT" type="STRING" size="256"/>
          <Column id="UPDUSR_ID" type="STRING" size="256"/>
          <Column id="UPDT_DT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_sup004" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="CODE_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_iemGrad" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="CODE_NM" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">A</Col>
            <Col id="CODE_NM">A</Col>
          </Row>
          <Row>
            <Col id="CODE">B</Col>
            <Col id="CODE_NM">B</Col>
          </Row>
          <Row>
            <Col id="CODE">C</Col>
            <Col id="CODE_NM">C</Col>
          </Row>
          <Row>
            <Col id="CODE">D</Col>
            <Col id="CODE_NM">D</Col>
          </Row>
          <Row>
            <Col id="CODE">E</Col>
            <Col id="CODE_NM">E</Col>
          </Row>
          <Row>
            <Col id="CODE">F</Col>
            <Col id="CODE_NM">F</Col>
          </Row>
          <Row>
            <Col id="CODE">G</Col>
            <Col id="CODE_NM">G</Col>
          </Row>
          <Row>
            <Col id="CODE">H</Col>
            <Col id="CODE_NM">H</Col>
          </Row>
          <Row>
            <Col id="CODE">I</Col>
            <Col id="CODE_NM">I</Col>
          </Row>
          <Row>
            <Col id="CODE">J</Col>
            <Col id="CODE_NM">J</Col>
          </Row>
          <Row>
            <Col id="CODE">K</Col>
            <Col id="CODE_NM">K</Col>
          </Row>
          <Row>
            <Col id="CODE">L</Col>
            <Col id="CODE_NM">L</Col>
          </Row>
          <Row>
            <Col id="CODE">M</Col>
            <Col id="CODE_NM">M</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="CODE_NM">N</Col>
          </Row>
          <Row>
            <Col id="CODE">O</Col>
            <Col id="CODE_NM">O</Col>
          </Row>
          <Row>
            <Col id="CODE">P</Col>
            <Col id="CODE_NM">P</Col>
          </Row>
          <Row>
            <Col id="CODE">Q</Col>
            <Col id="CODE_NM">Q</Col>
          </Row>
          <Row>
            <Col id="CODE">R</Col>
            <Col id="CODE_NM">R</Col>
          </Row>
          <Row>
            <Col id="CODE">S</Col>
            <Col id="CODE_NM">S</Col>
          </Row>
          <Row>
            <Col id="CODE">T</Col>
            <Col id="CODE_NM">T</Col>
          </Row>
          <Row>
            <Col id="CODE">U</Col>
            <Col id="CODE_NM">U</Col>
          </Row>
          <Row>
            <Col id="CODE">V</Col>
            <Col id="CODE_NM">V</Col>
          </Row>
          <Row>
            <Col id="CODE">W</Col>
            <Col id="CODE_NM">W</Col>
          </Row>
          <Row>
            <Col id="CODE">X</Col>
            <Col id="CODE_NM">X</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="CODE_NM">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">Z</Col>
            <Col id="CODE_NM">Z</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_validation" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">PROPSE_SE</Col>
            <Col id="msgId">제안구분</Col>
            <Col id="notNull">Y</Col>
          </Row>
          <Row>
            <Col id="colId">PROPSE_EVL_SCORE</Col>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">평가항목 점수</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">PROPSE_EVL_SCORE</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull"/>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from">0</Col>
            <Col id="to">[Undefined]</Col>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">평가항목 점수^0</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">PROPSE_EVL_SCORE</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull"/>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from">[Undefined]</Col>
            <Col id="to">100</Col>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">평가항목 점수^100</Col>
          </Row>
          <Row>
            <Col id="colId">EVL_IEM_GRAD</Col>
            <Col id="compId">ds_propseIemGrad</Col>
            <Col id="PK">Y</Col>
            <Col id="msgId">등급</Col>
            <Col id="notNull">Y</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemGrad</Col>
            <Col id="colId">EVL_IEM_SCORE_BEGIN</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull">Y</Col>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from"/>
            <Col id="to"/>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">등급 시작점수</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">EVL_IEM_SCORE_BEGIN</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull"/>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from">0</Col>
            <Col id="to">[Undefined]</Col>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">등급 시작점수^0</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">EVL_IEM_SCORE_BEGIN</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull"/>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from">[Undefined]</Col>
            <Col id="to">100</Col>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">등급 시작점수^100</Col>
          </Row>
          <Row>
            <Col id="colId">EVL_IEM_SCORE_END</Col>
            <Col id="compId">ds_propseIemGrad</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">등급 종료점수</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemStdr</Col>
            <Col id="colId">EVL_IEM_SCORE_END</Col>
            <Col id="PK">[Undefined]</Col>
            <Col id="notNull"/>
            <Col id="type">[Undefined]</Col>
            <Col id="nlength">[Undefined]</Col>
            <Col id="from">[Undefined]</Col>
            <Col id="to">100</Col>
            <Col id="lengthChkGb">[Undefined]</Col>
            <Col id="msgId">등급 종료점수^100</Col>
          </Row>
          <Row>
            <Col id="compId">ds_propseIemGrad</Col>
            <Col id="colId">EVL_IEM_SCORE_BEGIN</Col>
            <Col id="to">EVL_IEM_SCORE_END</Col>
            <Col id="msgId">등급 시작점수^등급 종료점수</Col>
            <Col id="from">EVL_IEM_SCORE_BEGIN</Col>
            <Col id="notNull"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_cond" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="STDR_YEAR" type="STRING" size="256"/>
          <Column id="ODR_SE" type="STRING" size="256"/>
          <Column id="PROPSE_SE" type="STRING" size="256"/>
          <Column id="EVL_IEM_CODE" type="STRING" size="256"/>
          <Column id="AGO_STDR_YEAR" type="STRING" size="256"/>
          <Column id="AGO_ODR_SE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_propseIemGrad" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="STDR_YEAR" type="STRING" size="256"/>
          <Column id="ODR_SE" type="STRING" size="256"/>
          <Column id="PROPSE_SE" type="STRING" size="256"/>
          <Column id="EVL_IEM_CODE" type="STRING" size="256"/>
          <Column id="EVL_IEM_NM" type="STRING" size="256"/>
          <Column id="PROPSE_EVL_SCORE" type="STRING" size="256"/>
          <Column id="EVL_IEM_GRAD" type="STRING" size="256"/>
          <Column id="EVL_IEM_SCORE_BEGIN" type="BIGDECIMAL" size="256"/>
          <Column id="EVL_IEM_SCORE_END" type="BIGDECIMAL" size="256"/>
          <Column id="REGISTER_ID" type="STRING" size="256"/>
          <Column id="REGIST_DT" type="STRING" size="256"/>
          <Column id="UPDUSR_ID" type="STRING" size="256"/>
          <Column id="UPDT_DT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_propseIemGradCopy" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" keystring="S:EVL_IEM_GRAD+">
        <ColumnInfo>
          <Column id="STDR_YEAR" type="STRING" size="256"/>
          <Column id="ODR_SE" type="STRING" size="256"/>
          <Column id="PROPSE_SE" type="STRING" size="256"/>
          <Column id="EVL_IEM_CODE" type="STRING" size="256"/>
          <Column id="EVL_IEM_NM" type="STRING" size="256"/>
          <Column id="PROPSE_EVL_SCORE" type="STRING" size="256"/>
          <Column id="EVL_IEM_GRAD" type="STRING" size="256"/>
          <Column id="EVL_IEM_SCORE_BEGIN" type="BIGDECIMAL" size="256"/>
          <Column id="EVL_IEM_SCORE_END" type="BIGDECIMAL" size="256"/>
          <Column id="REGISTER_ID" type="STRING" size="256"/>
          <Column id="REGIST_DT" type="STRING" size="256"/>
          <Column id="UPDUSR_ID" type="STRING" size="256"/>
          <Column id="UPDT_DT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="div_search.spn_RECIPT_YEAR" propid="value" datasetid="ds_cond" columnid="STDR_YEAR"/>
      <BindItem id="item1" compid="div_search.Combo00" propid="value" datasetid="ds_cond" columnid="ODR_SE"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 화면ID   : SUP020101
 * 화면명   : 채점표기준등록
 * 화면설명 : 채점표기준을를 관리한다.
 * 작성일   : 2015.10.19
 * 작성자   : 양성모
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *    
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ***********************************************************************/
// 시스템 공통 라이브러리 Include
include "lib::comInclude.xjs";
include "mis_lib::misUtil.xjs";

/***********************************************************************
 * 화면 변수 선언부
 ***********************************************************************/
this.saveRow = -1;
this.checkDs = [this.ds_propseIemStdr, this.ds_propseIemGrad];

/***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.SUP020101_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	// Form 초기화
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}

this.SUP020101_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{	
	var se;
	if(this.dateUtils.today().substr(4,2) > 6){
		se = "2";
	} else {
		se = "1";
	}
	
	this.ds_cond.setColumn(0, "STDR_YEAR", this.dateUtils.today().substr(0,4));
	this.ds_cond.setColumn(0, "ODR_SE", se);
	
	// 공통코드
	var comboParams = [
		["ds_sup004", "SUP004", "Y", ""]	// 제안구분
	];
	var callback = function (svcId, errorCode, errorMsg) {
		this.fn_search();
	};
	this.gfn_comboLoad (comboParams, callback);
}

/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/
/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	// 시스템 공통으로 Form을 Initialize 한다.
	this.gfn_initForm(this);
	this.fn_misFormInit(this);
}

/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	this.gfn_initCondDs(this, this.div_search);
}


/***********************************************************************
* Transaction 영역 시작
************************************************************************/

/***********************************************************************
 * Transaction 관련 이벤트 핸들러 
 **********************************************************************/
/*
 * 함수명  	: fn_search
 * 설명 		: 조회 이벤트 처리(제안항목기준)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	this.ds_propseIemStdr.clearData();
	this.ds_propseIemGrad.clearData();
	this.fn_transaction("selectIemStdr");
}

/*
 * 함수명  	: fn_searchIemGrad
 * 설명 		: 조회 이벤트 처리(제안항목등록)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_searchIemGrad();
 */
this.fn_searchIemGrad = function()
{
	this.ds_cond.setColumn(0, "PROPSE_SE", this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "PROPSE_SE"));
	this.ds_cond.setColumn(0, "EVL_IEM_CODE", this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "EVL_IEM_CODE"));	
	
	this.ds_propseIemGrad.clearData();
	this.fn_transaction("selectIemGrad");
}

/*
 * 함수명  	: fn_save
 * 설명 		: 저장 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save();
 */
this.fn_save= function()
{
	if(Ex.util.isUpdated(this.ds_propseIemStdr) || Ex.util.isUpdated(this.ds_propseIemGrad)) {	
		// validation 체크
		if(!this.gfn_checkValidation_NoUpdChk(this.ds_propseIemStdr, this.ds_validation)) {
			return;
		}
		
		
		for(var i=0; i<this.ds_sup004.rowcount; i++){
			var code = this.ds_sup004.getColumn(i, "CODE");
			var codeNm = this.ds_sup004.getColumn(i, "CODE_NM");
			
			var totScore = this.ds_propseIemStdr.getCaseSum("PROPSE_SE == '"+code+"'", "PROPSE_EVL_SCORE");
			if(totScore > 100){
				this.gfn_message("info.항목.초과.입력불가", "각 제안별 평가 총점은|100점");
				return;
			}
		}
		
		this.ds_propseIemGradCopy.copyData(this.ds_propseIemGrad);
		//등급별로 소팅하기위하여 데이터복사함
		for(var j=0; j < this.ds_propseIemGradCopy.getRowCount(); j++){
			var bgnScore = this.ds_propseIemGradCopy.getColumn(j, "EVL_IEM_SCORE_BEGIN");
			var endScore = this.ds_propseIemGradCopy.getColumn(j, "EVL_IEM_SCORE_END");
			
			var bgnRow = this.ds_propseIemGradCopy.findRowExpr("EVL_IEM_SCORE_END >= "+bgnScore,j+1);
			var endRow = this.ds_propseIemGradCopy.findRowExpr("EVL_IEM_SCORE_BEGIN >= "+endScore,j+1);
			if(bgnRow>-1 || endRow>-1){
				this.gfn_message("errors.항목.값.무효","등급별 구간점수");
				return;
			}
		}
		
		if(!this.gfn_checkValidation_NoUpdChk(this.ds_propseIemGrad, this.ds_validation)) {
			return;
		}
		
		this.saveRow = this.ds_propseIemStdr.rowposition;
		this.fn_transaction("save");
	} else {	
	    this.gfn_message("comm.데이터.변경.없음");
	}

}

/**********************************************************************
 * CALL TRANSACTION 영역
 **********************************************************************/
 
/*
 * 함수명  	: fn_transaction
 * 설명 		: Transaction 요청 처리 함수
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{

	switch (strSvcId) {
		case "selectIemStdr":	// 채점표항목기준 조회
			var sController   	= "hsco/mis/sup/SUP020101/selectIemStdr.do";
			var sInDatasets   	= "input1=ds_cond";
			var sOutDatasets  	= "ds_propseIemStdr=output1";
			break;
		case "selectIemGrad": 	// 채점표항목등급 조회
			var sController   	= "hsco/mis/sup/SUP020101/selectIemGrad.do";
			var sInDatasets   	= "input1=ds_cond";
			var sOutDatasets  	= "ds_propseIemGrad=output1";
			break;		
		case "save":    		// 채점표기준 저장
			var sController   	= "hsco/mis/sup/SUP020101/savePropseIem.do";
			var sInDatasets   	= "input1=ds_propseIemGrad:U input2=ds_propseIemStdr:U";
			var sOutDatasets  	= "";
			break;
		case "COPY": 			// 데이터복사
			var year;
			var odrSe = this.ds_cond.getColumn(0, "ODR_SE");
			
			if(odrSe == '1'){
				odrSe = '2'
				year = nexacro.toNumber(this.ds_cond.getColumn(0, "STDR_YEAR")) - 1;
			}else {
				odrSe = '1'
				year = this.ds_cond.getColumn(0, "STDR_YEAR");
			}
			this.ds_cond.setColumn(0, "AGO_STDR_YEAR", year);
			this.ds_cond.setColumn(0, "AGO_ODR_SE", odrSe);
			var sController   	= "hsco/mis/sup/SUP020101/propseIemStdrCOPY.do";
			var sInDatasets   	= "input1=ds_cond";
			var sOutDatasets  	= "";
			break;
	}

	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets);
}

 /**********************************************************************
 * Transaction Callback 영역
 ***********************************************************************/
 
 /*
 * 함수명  	: fn_callBack
 * 설명 		: Transaction Callback 처리
 * params  		: strSvcId    : 서비스요청 ID
 *                nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *                strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type 	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	// 오류 및 성공 메시지를 화면에 보여준다.
	if (nErrorCode != 0){
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	} else {
		// 실패 메시지를 보여주는 동작 외에 처리할 내용이 있으면 아래에 기술.
		switch (strSvcId) {	
			case "selectIemStdr":	// 채점표항목기준 조회
				this.ds_propseIemStdr.applyChange();
				
				if(this.saveRow > -1){
					this.ds_propseIemStdr.set_rowposition(this.saveRow);
					this.saveRow = -1;
				}
				break;
			case "selectIemGrad":	// 채점표항목등급 조회
				this.ds_propseIemGrad.applyChange();	                                 //DATASET COMMIT
				break;				
			case "save":	// 채점표기준 저장
			    this.gfn_message("success.처리.성공");
			    this.fn_search();
				break;
			case "COPY":
				this.gfn_message("success.처리.성공");
				this.fn_search();
				break;
		}
	}
}

/***********************************************************************
* Transaction 영역 끝
************************************************************************/

/***********************************************************************
* non-Transaction 관련 컴포넌트 이벤트 처리 함수
************************************************************************
* 
* 1. Button 영역 
* 2. Dataset 영역
************************************************************************/


/**********************************************************************
* Button 영역 
***********************************************************************/
/*
 * 함수명  	: fn_insert
 * 설명 		: 신규 버튼 이벤트(마스터)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_insert();
 */
this.fn_insert = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_propseIemStdr.addRow();
	
	this.ds_propseIemStdr.setColumn(nRow, "STDR_YEAR", this.ds_cond.getColumn(0 ,"STDR_YEAR"));
	this.ds_propseIemStdr.setColumn(nRow, "ODR_SE",    this.ds_cond.getColumn(0 ,"ODR_SE"));
}

/*
 * 함수명  	: fn_delete
 * 설명 		: 삭제 버튼 이벤트(마스터)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_delete();
 */
this.fn_delete = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.삭제여부")){
		var nRow = this.ds_propseIemStdr.rowposition;
		this.ds_propseIemStdr.deleteRow(nRow);
		
		this.fn_searchIemGrad();
	}	
}

/*
 * 함수명  	: fn_cancel
 * 설명 		: 취소 버튼 이벤트(마스터)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_cancel();
 */
this.fn_cancel = function(obj:Button,  e:nexacro.ClickEventInfo)
{	
	if (this.gfn_message("confirm.취소여부")) {
		this.ds_propseIemStdr.reset();		                                 //DATASET ROLLBACK
		this.ds_propseIemStdr.applyChange();	                             //DATASET COMMIT
		
		this.fn_searchIemGrad();
		return;
	}
}

/*
 * 함수명  	: btn_Add_R_onclick
 * 설명 		: 행추가 버튼 이벤트
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.btn_Add_R_onclick();
 */
this.btn_Add_R_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(obj.name == "btn_Add_R00"){
		var nRow = this.ds_propseIemStdr.addRow();
		
		this.ds_propseIemStdr.setColumn(nRow, "STDR_YEAR", this.ds_cond.getColumn(0 ,"STDR_YEAR"));
		this.ds_propseIemStdr.setColumn(nRow, "ODR_SE",    this.ds_cond.getColumn(0 ,"ODR_SE"));
	}

	if(obj.name == "btn_Add_R01"){
		if(this.ds_propseIemStdr.rowcount > 0){
			var strPropseSe   = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "PROPSE_SE");
			var strEvlIemCode = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "EVL_IEM_CODE");
			var strEvlIemNme  = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "EVL_IEM_NM");
			var nPropseEvlScore = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "PROPSE_EVL_SCORE");
			var strYear = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "STDR_YEAR");
			var strOdrSe = this.ds_propseIemStdr.getColumn(this.ds_propseIemStdr.rowposition, "ODR_SE");
			
			if(!strEvlIemCode){
				if (this.gfn_message("info.진행가능", "신규 항목구분 기준정보를 저장")) {
					
					return;
				}
				
			} else {
				var nRow = this.ds_propseIemGrad.addRow();
				
				this.ds_propseIemGrad.setColumn(nRow, "STDR_YEAR",    strYear);
				this.ds_propseIemGrad.setColumn(nRow, "ODR_SE",       strOdrSe);
				this.ds_propseIemGrad.setColumn(nRow, "PROPSE_SE",    strPropseSe);
				this.ds_propseIemGrad.setColumn(nRow, "EVL_IEM_CODE", strEvlIemCode);
				this.ds_propseIemGrad.setColumn(nRow, "EVL_IEM_NM",   strEvlIemNme);
				this.ds_propseIemGrad.setColumn(nRow, "PROPSE_EVL_SCORE" , nPropseEvlScore);
			}		
		} else {
			this.gfn_message("info.항목.선택.알림", "항목구분기준정보");
		}
	}
}

/*
 * 함수명  	: btn_Del_R_onclick
 * 설명 		: 행삭제 버튼 이벤트
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.btn_Del_R_onclick();
 */
this.btn_Del_R_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.삭제여부")){
		if(obj.name == "btn_Del_R00"){
			var nRow = this.ds_propseIemStdr.rowposition;
			this.ds_propseIemStdr.deleteRow(nRow);
			
			this.fn_searchIemGrad();
		}
		
		if(obj.name == "btn_Del_R01"){
			var nRow = this.ds_propseIemGrad.rowposition;
			this.ds_propseIemGrad.deleteRow(nRow);	
		}
	}
}

/*
 * 함수명  	: btn_Can_R_onclick
 * 설명 		: 행취소 버튼 이벤트
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.btn_Can_R_onclick();
 */
this.btn_Can_R_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(obj.name == "btn_Can_R00"){
		if (this.gfn_message("confirm.취소여부")) {
			this.ds_propseIemStdr.reset();		                                 //DATASET ROLLBACK
			this.ds_propseIemStdr.applyChange();	                             //DATASET COMMIT
			
			this.fn_searchIemGrad();
			return;
		}
	}
	
	if(obj.name == "btn_Can_R01"){
		if (this.gfn_message("confirm.취소여부")) {
			this.ds_propseIemGrad.reset();		                                 //DATASET ROLLBACK
			this.ds_propseIemGrad.applyChange();	                             //DATASET COMMIT
			return;
		}
	}	
}

/**********************************************************************
* Dataset 영역 
***********************************************************************/
/*
 * 함수명  	: ds_propseIemStdr_onrowposchanged
 * 설명 		: 데이터셋 row변경 전 이벤트(채점항목기준)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_propseIemStdr_onrowposchanged();
 */
this.ds_propseIemStdr_canrowposchange = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	if(Ex.util.isUpdated(this.ds_propseIemGrad)){
	    if (this.gfn_message("confirm.변경.취소.여부")) {
	        return true;
	    } else {
			return false;
	    }
	}
}

/*
 * 함수명  	: ds_propseIemStdr_onrowposchanged
 * 설명 		: 데이터셋 row변경 후 이벤트(채점항목기준)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_propseIemStdr_onrowposchanged();
 */
this.ds_propseIemStdr_onrowposchanged = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	this.fn_searchIemGrad();
}

/*
 * 함수명  	: btn_copy_onclick
 * 설명 		: 전년도 복사 이벤트
 * params  		: None
 * return Type 	: None
 * 사용법		: this.btn_copy_onclick()
 */
this.btn_copy_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.삭제.진행", "현재 조회된 자료를 삭제한 후, 이전자료로 덮어씁니다")) {
		this.fn_transaction("COPY");
		return false;
	}
}]]></Script>
  </Form>
</FDL>
