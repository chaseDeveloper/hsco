<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="RNT040101" classname="RNT040101" left="0" top="0" width="1059" height="735" titletext="공종코드등록" oninit="RNT040101_oninit" onload="RNT040101_onload">
    <Layouts>
      <Layout>
        <Static id="Static06" taborder="55" text="10" onclick="Static47_onclick" visible="false" left="333" top="10" height="692" style="background:#1b3cd23c;align:center middle;" width="10"/>
        <Grid id="Grid04" taborder="56" useinputpanel="false" left="0" top="34" width="333" bottom="0" autofittype="col" binddataset="ds_cmmn_m">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="128"/>
                <Column size="213"/>
              </Columns>
              <Rows>
                <Row size="25" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell style="font:9 돋움;" text="코드"/>
                <Cell col="1" style="font:9 돋움;" text="코드명"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CODE"/>
                <Cell col="1" edittype="normal" text="bind:CODE_NM"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="Grid00" taborder="65" useinputpanel="false" left="343" top="34" bottom="0" autofittype="col" binddataset="ds_cmmn_d" oncellclick="Grid00_oncellclick" right="28">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="100"/>
                <Column size="80"/>
                <Column size="100"/>
                <Column size="20"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell style="font:9 돋움;" text="코드"/>
                <Cell col="1" style="font:9 돋움;" text="코드명"/>
                <Cell col="2" style="font:9 돋움;" text="교체주기"/>
                <Cell col="3" colspan="2" style="font:9 돋움;" text="첨부파일"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CODE"/>
                <Cell col="1" edittype="normal" text="bind:CODE_NM"/>
                <Cell col="2" edittype="normal" text="bind:INT_VAL"/>
                <Cell col="3" text="bind:FILE_NM"/>
                <Cell col="4" displaytype="normal" text="bind:BTN" expandshow="show"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static01" taborder="71" text="스&#13;&#10;크&#13;&#10;롤&#13;&#10;13" visible="false" top="0" width="13" height="735" style="background:#d07b173c;align:center middle;" right="0"/>
        <Static id="Static00" taborder="72" text="15" visible="false" left="1031" top="0" width="15" height="735" style="background:#1b3cd23c;align:center middle;"/>
        <Static id="Static02" taborder="76" text="5" visible="false" left="0%" top="29" right="2.64%" height="5" style="background:#dc143c3c;align:center middle;"/>
        <Static id="Static08" taborder="79" text="10" visible="false" left="0" top="0" right="28" height="10" style="background:#dc143c3c;align:center middle;"/>
        <Button id="Button08" taborder="80" text="행삭제" cssclass="btn_WF_Griddel" top="10" width="64" height="19" visible="true" onclick="Button08_onclick" right="28"/>
        <Button id="Button05" taborder="81" text="행추가" cssclass="btn_WF_Gridadd" top="10" height="19" visible="true" onclick="Button05_onclick" right="95" width="64"/>
        <Static id="Static03" taborder="83" text="공정코드" cssclass="sta_WF_Title02" top="10" height="19" width="169" left="343"/>
        <Static id="Static04" taborder="84" text="공종구분" cssclass="sta_WF_Title02" top="10" height="19" width="168" left="0"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_cmmn_m" useclientlayout="true" onrowposchanged="ds_cmmn_m_onrowposchanged" canrowposchange="ds_cmmn_m_canrowposchange">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="255"/>
          <Column id="CODE_NM" type="STRING" size="255"/>
          <Column id="GRP_CODE" type="STRING" size="255"/>
          <Column id="CODE_ORDR" type="STRING" size="255"/>
          <Column id="VAL0" type="STRING" size="255"/>
          <Column id="INT_VAL" type="BIGDECIMAL" size="10"/>
          <Column id="REGISTER_ID" type="STRING" size="255"/>
          <Column id="REGIST_DT" type="STRING" size="255"/>
          <Column id="UPDUSR_ID" type="STRING" size="255"/>
          <Column id="UPDT_DT" type="STRING" size="255"/>
          <Column id="GRP_CODE_SN" type="STRING" size="256"/>
          <Column id="USE_AT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cmmn_d" useclientlayout="true" onrowposchanged="ds_cmmn_d_onrowposchanged">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="255"/>
          <Column id="CODE_NM" type="STRING" size="255"/>
          <Column id="GRP_CODE" type="STRING" size="255"/>
          <Column id="CODE_ORDR" type="STRING" size="255"/>
          <Column id="VAL0" type="STRING" size="255"/>
          <Column id="INT_VAL" type="BIGDECIMAL" size="10"/>
          <Column id="REGISTER_ID" type="STRING" size="255"/>
          <Column id="REGIST_DT" type="STRING" size="255"/>
          <Column id="UPDUSR_ID" type="STRING" size="255"/>
          <Column id="UPDT_DT" type="STRING" size="255"/>
          <Column id="USE_AT" type="STRING" size="255"/>
          <Column id="GRP_CODE_SN" type="STRING" size="256"/>
          <Column id="FILE_ORDR" type="STRING" size="256"/>
          <Column id="FILE_SN" type="STRING" size="256"/>
          <Column id="FILE_EXTSN" type="STRING" size="256"/>
          <Column id="FILE_NM" type="STRING" size="256"/>
          <Column id="BTN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond00" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="VAL0" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_validation" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="colId">CODE_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="compId">Grid00</Col>
            <Col id="msgId">코드명</Col>
            <Col id="from"/>
            <Col id="to"/>
          </Row>
          <Row>
            <Col id="colId">INT_VAL</Col>
            <Col id="compId">Grid00</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">교체주기</Col>
          </Row>
          <Row>
            <Col id="compId">Grid04</Col>
            <Col id="colId">CODE_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">코드명</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_cnt" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="cnt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond01" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="THNG_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cond05" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="CODE_NM" type="STRING" size="256"/>
          <Column id="USE_AT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 01. 업무구분 : 
 * 02. 화면명   : RNT040101.xfdl
 * 03. 화면설명 : 공종코드 등록
 * 04. 작성일   :
 * 05. 작성자   : 이광원
 * 06. 수정이력 : 2015.11.17 최초생성
 ***********************************************************************
 *     수정일     작성자   내용
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ************************************************************************/
include "pms_lib::pmsUtilInclude.xjs";	// PMS 업무공통 라이브러리
/***********************************************************************
 * 화면 변수 선언부
 ************************************************************************/
/***********************************************************************
 * Form Function
 ************************************************************************/
this.FILE_MANAGER = null;
/***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.RNT040101_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	// Form 초기화
	this.fn_init();	
	this.fn_init_form();

	// DataSet 초기화
	this.fn_init_dataset();
}
 
 
this.RNT040101_onload = function (obj:Form, e:LoadEventInfo)
{
	this.fn_search();
	
 	var fileConfig = {
		onChange: this.fn_onFileSelected,
		onSuccess : this.fn_onFileSuccess
	};
	this.FILE_MANAGER = new this.fileManager(this, "PMS", "RPA");
	this.FILE_MANAGER.init(fileConfig);			
}	
	
/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/
 
/*
 * 함수명  	: initForm
 * 설명 		: Form을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	// 시스템 공통으로 Form을 Initialize 한다.
	this.gfn_initForm(this);
	
	// 해당 Form에 필요한 초기화 부분 기술
	// =======================================

    // Form Eliments 초기화

    // Grid 초기화(필요한 경우)
    // 공통코드콤보 초기화
    // 부서콤보 초기화
}

/*
 * 함수명  	: initDataset
 * 설명 		: Dataset을 초기화한다.
 *                주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.
 * params  		: None
 * return Type 	: None
 * 사용법		: this.initDataset();
 */
this.fn_init_dataset = function()
{
	this.checkDs.push(this.ds_cmmn_m);
	this.checkDs.push(this.ds_cmmn_d);
	// 조건 Dataset 외에 초기화가 필요한 Dataset에 대한 초기화 코드를 추가한다.
	// TODO
}
/***********************************************************************
* Transaction 영역 시작
************************************************************************/
/***********************************************************************
 * Transaction 관련 이벤트 핸들러 
 **********************************************************************/
 /*
 * 함수명  	: fn_search
 * 설명 		: 물품코드조회 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	this.fn_transaction("selectSlaryList");	
}
/*
 * 함수명  	: fn_save
 * 설명 		: 물품코드 저장 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save();
 */
this.fn_save = function()
{ 
	if(this.ds_cmmn_m.getRowType(this.ds_cmmn_m.rowposition) > 1)
	{
			if(!this.gfn_checkValidation(this.Grid04, this.ds_validation)) {
			return;
		}
	}
	if(this.ds_cmmn_d.getRowType(this.ds_cmmn_d.rowposition) > 1)
	{
			if(!this.gfn_checkValidation(this.Grid00, this.ds_validation)) {
			return;
		}
	}		
	if(this.gfn_message("confirm.저장.여부"))	{
		this.fn_transaction("saveSlaryList");
	}
}

/*
 * 함수명  	: this.fn_save2
 * 설명 		: 사진 저장 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_save2();
 */
this.fn_save2 = function()
{
	// 파일 첨부여부 확인
	var hasAttFile = this.FILE_MANAGER.hasFile();
	if(hasAttFile){
		var attFileCount = this.FILE_MANAGER.getfileCount();
		var sController = "hsco/pms/rnt/rnt040101/atchCUD.do";
		var oInDatasets = "input1=ds_cond05";
		var sOutDatasets = "ds_failList=failList";
		this.FILE_MANAGER.upload(sController, oInDatasets, sOutDatasets);
	}else{
			this.fn_transaction("saveSlaryList2");		// 첨부파일저장
	}	
}
/**********************************************************************
 * CALL TRANSACTION 영역
 **********************************************************************/
/*
 * 함수명  	: fn_transaction
 * 설명 		: Transaction 요청 처리 함수
 * params  		: strSvcId : 서비스요청 ID
 * return Type 	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	switch (strSvcId) {
		case "selectSlaryList": // 공종코드 마스터 정보 불러 오기
				var sController   	= "hsco/pms/rnt/rnt040101/getList.do";
				var sInDatasets   	= "";
				var sOutDatasets  	= "ds_cmmn_m=output1";
				break;	
		case "selectSlaryList1": // 공종코드 디테일 정보 불러 오기
				this.ds_cond00.clearData();
				var nRow = this.ds_cond00.addRow();

				if(this.ds_cmmn_m.getRowType(this.ds_cmmn_m.rowposition) == '2') 
				  this.ds_cond00.setColumn(nRow , "VAL0" , "0");
				else this.ds_cond00.setColumn(nRow , "VAL0" , this.ds_cmmn_m.getColumn(this.ds_cmmn_m.rowposition ,"CODE"));
              
              	
	   			var sController   	= "hsco/pms/rnt/rnt040101/getList1.do";
				var sInDatasets   	= "input1=ds_cond00";
				var sOutDatasets  	= "ds_cmmn_d=output1";
				break;		

		case "Cnt": // 사용중인 코드 건
				this.ds_cond01.clearData();
				this.ds_cnt.clearData();
				var nRow = this.ds_cond01.addRow();
				this.ds_cond01.setColumn(nRow , "THNG_CODE" , this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition ,"CODE"));
				
				var sController   	= "hsco/pms/rnt/rnt040101/cnt.do";
				var sInDatasets   	= "input1=ds_cond01";
				var sOutDatasets  	= "ds_cnt=output1";
				break;	
																		
		case "saveSlaryList":	// 공종코드 디테일 저장하기
				var sController   	= "hsco/pms/rnt/rnt040101/listCUD.do";	
				var s  = "input1=ds_cmmn_d:U"
					   + " input2=ds_cmmn_m:U";
				var sInDatasets   	= s;
				var sOutDatasets  	= "";
				break;
				
		case "saveSlaryList2":	// 사진 저장
				var sController   	= "hsco/pms/rnt/rnt040101/atchCUD.do";	
				var sInDatasets 	= "input1=ds_cond05";                  
				var sOutDatasets  	= "";
				break;					
	}
	
	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets); 	

}
 /*
 * 함수명  	: fn_callBack
 * 설명 		: Transaction Callback 처리
 * params  		: strSvcId    : 서비스요청 ID
 *                nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *                strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type 	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
	// 오류 및 성공 메시지를 화면에 보여준다.
	if(strSvcId == "saveSlaryList")
	{
	    if(this.gfn_message("success.처리.성공"));
		this.fn_transaction("selectSlaryList1");	
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);		
	}	
	if(nErrorCode == 0) return;	
		this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);

}

/***********************************************************************
* Transaction 영역 끝
************************************************************************/

/***********************************************************************
 * non-Transaction 관련 컴포넌트 이벤트 처리 함수
 ***********************************************************************/
/*
 * 함수명  	: ds_cmmn_m_onrowposchanged
 * 설명 		: 마스터조회시 디테일 조회
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_cmmn_m_onrowposchanged();
 */
this.ds_cmmn_m_onrowposchanged = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	//if(obj.getRowType(obj.rowposition) == '2') return;
	
		this.fn_transaction("selectSlaryList1");	
}

/*
 * 함수명  	: ds_cmmn_m_canrowposchange
 * 설명 		: rowchange 전 이벤트 호출
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_cmmn_m_canrowposchange();
 */
this.ds_cmmn_m_canrowposchange = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	for(var i = 1; i < this.checkDs.length; i++) 
	{
		if(this.comUtils.isDatasetUpdated(this.checkDs[i])) 
		{
			var bCancel = this.gfn_message("confirm.변경.취소.여부");
			if(bCancel)
			{
				this.checkDs[i].reset();
				this.ds_cmmn_m_onrowposchanged();	// 수정사항 되도록리기
			}	
			return bCancel;
		}
	}		
}

 /*
 * 함수명  	: fn_insert
 * 설명 		: 신규 버튼 이벤트 처리(행추가)
 * params  		: Non
 * return Type 	: None
 * 사용법		: this.fn_insert();
 */
this.Button05_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.comUtils.isDatasetUpdated(this.ds_cmmn_m)== true) {
	  alert("공종구분을 선택하세요.");
	  return;
	}
	
	var nRow = this.ds_cmmn_d.addRow();
	this.ds_cmmn_d.setColumn(nRow , "USE_AT" , '1');
	this.ds_cmmn_d.setColumn(nRow , "VAL0" , this.ds_cmmn_m.getColumn(this.ds_cmmn_m.rowposition , "CODE"));
	this.ds_cmmn_d.setColumn(nRow , "GRP_CODE_SN" , this.ds_cmmn_m.getColumn(this.ds_cmmn_m.rowposition , "GRP_CODE_SN"));	
}

/*
 * 함수명  	: fn_delete
 * 설명 		: 삭제 버튼 이벤트 처리(행삭제)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_delete();
 */
this.Button08_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.삭제여부"))	{
		if(this.ds_cnt.getColumn( 0 , "CNT") > 0 )
		{
			alert("사용중인 코드입니다.");
			return;
		}
		var nCurRow = this.ds_cmmn_d.rowposition;
		var nRowType = this.ds_cmmn_d.getRowType(nCurRow);
		this.ds_cmmn_d.deleteRow(nCurRow);	
	}	
}

 /*
 * 함수명  	: fn_insert
 * 설명 		: 신규 버튼 이벤트 처리
 * params  		: Non
 * return Type 	: None
 * 사용법		: this.fn_insert();
 */
this.fn_insert = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.comUtils.isDatasetUpdated(this.ds_cmmn_d)== true) return;
	
	var nRow = this.ds_cmmn_m.addRow();
	//this.fn_transaction("selectSlaryList1");	
	this.ds_cmmn_m.setColumn(nRow , "VAL0" , 'M');
	this.ds_cmmn_m.setColumn(nRow , "GRP_CODE_SN" , this.ds_cmmn_m.getColumn(this.ds_cmmn_m.rowposition -1 , "GRP_CODE_SN"));	
	this.ds_cmmn_m.setColumn(nRow , "USE_AT" , '1');	
}

/*
 * 함수명  	: fn_delete
 * 설명 		: 삭제 버튼 이벤트 처리
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_delete();
 */
this.fn_delete = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	if(this.gfn_message("confirm.삭제여부"))	{
		if(this.ds_cmmn_d.rowcount > 0 )
		{
			alert("사용중인 코드입니다.");
			return; 
		}	
		var nCurRow = this.ds_cmmn_m.rowposition;
		var nRowType = this.ds_cmmn_m.getRowType(nCurRow);
		this.ds_cmmn_m.deleteRow(nCurRow);	
	}		
}

/*
 * 함수명  	: fn_cancel
 * 설명 		: 취소 버튼 이벤트 처리(Dataset 변경 내역 Reset)
 * params  		: None
 * return Type 	: None
 * 사용법		: this.fn_cancel();
 */
this.fn_cancel = function()
{
	for(var i = 0; i < this.checkDs.length; i++) 
	{
		if(this.comUtils.isDatasetUpdated(this.checkDs[i])) 
		{
			var bCancel = this.gfn_message("confirm.변경.취소.여부");
			if(bCancel)
			{
				this.checkDs[i].reset();	// 수정사항 되도록리기
			}	
			return bCancel;
		}
	}		
}

/*
 * 함수명  	: ds_cmmn_d_onrowposchanged
 * 설명 		: 디테일 코드 조회시 사용중인 코드 건수 조회
 * params  		: None
 * return Type 	: None
 * 사용법		: this.ds_cmmn_d_onrowposchanged();
 */
this.ds_cmmn_d_onrowposchanged = function(obj:Dataset, e:nexacro.DSRowPosChangeEventInfo)
{
	this.fn_transaction("Cnt");		
}



/* ==================================================
 첨부파일 처리 관련
 ==================================================*/
/*
 * 파일업로드 파일 선택
 * @param 
 * @return void
 */
  /*
 * 함수명  	: Grid00_oncellclick
 * 설명 		: 파일업로드 / 다운로드
 * params  		: Non
 * return Type 	: None
 * 사용법		: this.Grid00_oncellclick();
 */
this.Grid00_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	if(e.cell == obj.getBindCellIndex("body", "FILE_NM"))
	{
		if(!this.ds_cmmn_d.getColumn(e.row, 'FILE_SN'))
			return;

		if(this.confirm("선택한 파일을 다운로드 하시겠습니까?")){
			this.fn_downloadAtchFile();
			}
			return;
	}
	else if(e.cell == obj.getBindCellIndex("body", "BTN"))
	{
		if(this.ds_cmmn_d.getRowType(this.ds_cmmn_d.rowposition) != Dataset.ROWTYPE_NORMAL) return;
		this.fn_addAtchFile();	
	}
}
this.fn_addAtchFile = function(){
// 	var allowFile = ["jpg"];	// 선택 허용 파일유형 - Confilg에서 설정이 가능하나 선택시에도 처리가능하게
// 	this.FILE_MANAGER.addFiles(allowFile, false);	
	this.FILE_MANAGER.addFiles();
}

/**
 * 파일업로드 파일 선택 이벤트 핸들러
 * @param fileFullName 선택 전체 파일명
 * @param type 실행구분(ExtFileUpload/ExtFileDownload)
 * @param fileFullName 선택 파일명
 * @return void
 */
this.fn_onFileSelected = function(type, fileFullName){
	if(type == this.FILE_MANAGER.TYPE_UPLOADER){
		var isNmArray = this.pmsUtil.isArray(fileFullName);
		
		if(isNmArray){
		  // 단건입력임으로 필요 없음.
		}else{
			this.ds_cond05.clearData();
			var nRow = this.ds_cond05.addRow();
			this.ds_cond05.setColumn(nRow , "CODE" , this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "CODE"));
			this.ds_cond05.setColumn(nRow , "CODE_NM" , this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "CODE"));
			this.ds_cond05.setColumn(nRow , "USE_AT" , this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "USE_AT"));
			this.fn_save2();
			//this.fn_setAtchFileView();		// 첨부파일 영역 처리
		}
	}
}

/* 파일다운로드 */
this.fn_downloadAtchFile = function(){

	var fileSn = this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "FILE_SN"); 	// 파일일련번호(파일경로)
	var fileOrder = this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "FILE_ORDR");					// 임시 : 첨부파일은 공통으로 파일일련번호와 파일순차로 조회가능하나 현재(2015/10/21) 컬럼이 맞지않음
	var fileName = this.ds_cmmn_d.getColumn(this.ds_cmmn_d.rowposition , "FILE_NM");	// 실제 파일명	
	this.FILE_MANAGER.download(fileSn, fileOrder, fileName);	
}

/**
 * 파일업로드 파일 업로드 성공 이벤트 핸들러
 * @param fileFullName 선택 전체 파일명
 * @param type 실행구분(ExtFileUpload/ExtFileDownload)
 * @param e 발생이벤트
 * @return void
 */
this.fn_onFileSuccess = function(type, e){
	if(type == this.FILE_MANAGER.TYPE_UPLOADER){
		this.fn_transaction("selectSlaryList1");
	}
	if(type == this.FILE_MANAGER.TYPE_DOWNLOADER){
		this.gfn_message("success.파일.다운로드.성공");
	}
}


]]></Script>
  </Form>
</FDL>
