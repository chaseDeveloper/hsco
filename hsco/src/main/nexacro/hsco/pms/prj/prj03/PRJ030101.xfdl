<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="PRJ030101" classname="PRJ030101" left="0" top="0" width="1059" height="735" titletext="PRJ030101_원가항목코드관리" onload="PRJ030101_onload" oninit="PRJ030101_oninit">
    <Layouts>
      <Layout>
        <Static id="sta_gud_v01" text="28" top="0" width="28" bottom="0" right="0" style="background:#1b3cd23c;align:center;" visible="0" onclick="sta_gud_v01_onclick"/>
        <Div id="div_search" taborder="1" left="0" top="0" height="33" right="28" cssclass="div_WFSA_Box">
          <Layouts>
            <Layout>
              <Static id="sta_2" taborder="2" left="15" top="6" width="62" height="20" cssclass="sta_WFSA_Label" text="회계년도" visible="true" onclick="div_search_sta_2_onclick"/>
              <Spin id="spn_2" taborder="3" left="81" top="5" width="80" height="21" onspin="fn_search" visible2="0"/>
              <Static id="sta_1" taborder="4" text="판매구분" cssclass="sta_WFSA_Label" left="183" top="6" width="60" height="21" onclick="div_search_sta_1_onclick"/>
              <Combo id="cmb_1" taborder="5" innerdataset="@ds_PRJ011" codecolumn="CODE" datacolumn="CODE_NM" onitemchanged="cmb_onitemchanged" left="248" top="5" width="140" height="21"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_work" taborder="2" left="0" top="33" right="28" bottom="0">
          <Layouts>
            <Layout>
              <Div id="div_1" taborder="1" left="0" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta_gud_h01" text="10" visible="0" left="0" top="0" right="0" height="10" style="background:#dc143c3c;align:center;"/>
                    <Static id="sta_gud_h02" text="5" visible="0" left="0" right="0" height="5" style="background:#dc143c3c;align:center;" top="29"/>
                    <Static id="sta_1" text="원가코드" cssclass="sta_WF_Title01" left="0" top="10" width="200" height="19" onclick="div_work_div_1_sta_1_onclick" style="background:transparent URL('theme://images/sta_WF_Title02.png') left middle;"/>
                    <Grid id="grd_1" taborder="2" binddataset="ds_1" useinputpanel="false" autofittype="col" oncellclick="div_work_div_1_grd_1_oncellclick" left="0" top="34" bottom="0" right="0">
                      <Formats>
                        <Format id="default">
                          <Columns>
                            <Column size="70"/>
                            <Column size="70"/>
                            <Column size="130"/>
                            <Column size="130"/>
                            <Column size="150"/>
                            <Column size="70"/>
                            <Column size="74"/>
                            <Column size="100"/>
                            <Column size="200"/>
                          </Columns>
                          <Rows>
                            <Row size="24" band="head"/>
                            <Row size="24"/>
                          </Rows>
                          <Band id="head">
                            <Cell text="분류구분"/>
                            <Cell col="1" text="원가코드"/>
                            <Cell col="2" text="원가항목명(대분류)"/>
                            <Cell col="3" text="원가항목명(중분류)"/>
                            <Cell col="4" text="원가항목명(소분류)"/>
                            <Cell col="5" text="형식구분"/>
                            <Cell col="6" text="회계년도"/>
                            <Cell col="7" text="계정코드"/>
                            <Cell col="8" text="계정과목명"/>
                          </Band>
                          <Band id="body">
                            <Cell displaytype="combo" edittype="none" text="bind:CL_SE" combodataset="ds_PRJ010" combocodecol="CODE" combodatacol="CODE_NM"/>
                            <Cell col="1" edittype="none" text="bind:STD_PRMPC_CODE" mask="@@-@@-@@" editlimit="0"/>
                            <Cell col="2" edittype="expr:dataset.getColumn(currow, 'CL_SE')==1 ? 'text' : ''" style="align:left;padding:0 5 0 5;" text="bind:LCLAS_NM" editlimit="0" editimemode="hangul"/>
                            <Cell col="3" edittype="expr:dataset.getColumn(currow, 'CL_SE')==2 ? 'text' : ''" style="align:left;padding:0 5 0 5;" text="bind:MLSFC_NM" editlimit="0" editimemode="hangul"/>
                            <Cell col="4" edittype="expr:dataset.getColumn(currow, 'CL_SE')==3 ? 'text' : ''" style="align:left;padding:0 5 0 5;" text="bind:SCLAS_NM" editlimit="0" editimemode="hangul"/>
                            <Cell col="5" displaytype="combo" edittype="combo" text="bind:FOM_SE" combodataset="ds_PRJ016" combocodecol="CODE" combodatacol="CODE_NM"/>
                            <Cell col="6" text="bind:ACCNUT_YEAR"/>
                            <Cell col="7" edittype="expr:dataset.getColumn(currow, 'CL_SE')==3 ? 'expand' : ''" text="bind:ACCNUT_ACNT_CODE" expandshow="expr:dataset.getColumn(currow, 'CL_SE')==3 ? 'show': ''"/>
                            <Cell col="8" text="bind:ACCNUT_ACNT_CODE_NM"/>
                          </Band>
                        </Format>
                      </Formats>
                    </Grid>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_1" cancolumnchange="ds_cancolumnchange" useclientlayout="1">
        <ColumnInfo>
          <Column id="STD_PRMPC_CODE" type="STRING" size="6"/>
          <Column id="CL_SE" type="STRING" size="3"/>
          <Column id="LCLAS_NM" type="STRING" size="50"/>
          <Column id="MLSFC_NM" type="STRING" size="50"/>
          <Column id="SCLAS_NM" type="STRING" size="50"/>
          <Column id="FOM_SE" type="INT" size="1"/>
          <Column id="CD1" type="STRING" size="2"/>
          <Column id="CD2" type="STRING" size="2"/>
          <Column id="CD3" type="STRING" size="2"/>
          <Column id="ACCNUT_YEAR" type="STRING" size="4"/>
          <Column id="ACCNUT_ACNT_CODE" type="STRING" size="8"/>
          <Column id="ACCNUT_ACNT_CODE_NM" type="STRING" size="100"/>
          <Column id="SAL_SE" type="STRING" size="3"/>
          <Column id="STATE" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_validation1">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">STD_PRMPC_CODE</Col>
            <Col id="PK">Y</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가코드</Col>
          </Row>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">LCLAS_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가항목명(대분류)</Col>
            <Col id="expr"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_cond1">
        <ColumnInfo>
          <Column id="ACCNUT_YEAR" type="STRING" size="4"/>
          <Column id="STD_PRMPC_CODE" type="STRING" size="6"/>
          <Column id="ACCNUT_ACNT_CODE" type="STRING" size="8"/>
          <Column id="SAL_SE" type="STRING" size="3"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Acnt"/>
      <Dataset id="ds_PRJ010"/>
      <Dataset id="ds_PRJ016"/>
      <Dataset id="ds_PRJ011"/>
      <Dataset id="ds_2" cancolumnchange="ds_cancolumnchange" useclientlayout="1" updatecontrol="false">
        <ColumnInfo>
          <Column id="STD_PRMPC_CODE" type="STRING" size="6"/>
          <Column id="CL_SE" type="STRING" size="3"/>
          <Column id="LCLAS_NM" type="STRING" size="50"/>
          <Column id="MLSFC_NM" type="STRING" size="50"/>
          <Column id="SCLAS_NM" type="STRING" size="50"/>
          <Column id="FOM_SE" type="INT" size="1"/>
          <Column id="CD1" type="STRING" size="2"/>
          <Column id="CD2" type="STRING" size="2"/>
          <Column id="CD3" type="STRING" size="2"/>
          <Column id="ACCNUT_YEAR" type="STRING" size="4"/>
          <Column id="ACCNUT_ACNT_CODE" type="STRING" size="8"/>
          <Column id="ACCNUT_ACNT_CODE_NM" type="STRING" size="100"/>
          <Column id="SAL_SE" type="STRING" size="3"/>
          <Column id="STATE" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_validation2">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">STD_PRMPC_CODE</Col>
            <Col id="PK">Y</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가코드</Col>
          </Row>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">MLSFC_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가항목명(중분류)</Col>
            <Col id="expr"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_validation3">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">STD_PRMPC_CODE</Col>
            <Col id="PK">Y</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가코드</Col>
          </Row>
          <Row>
            <Col id="compId">ds_1</Col>
            <Col id="colId">SCLAS_NM</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">원가항목명(소분류)</Col>
            <Col id="expr"/>
          </Row>
          <Row>
            <Col id="colId">ACCNUT_ACNT_CODE</Col>
            <Col id="compId">ds_1</Col>
            <Col id="notNull">Y</Col>
            <Col id="msgId">계정코드</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <!--
      <BindItem id="item02" compid="div_search.spn_2" propid="value" datasetid="ds_cond1" columnid="ACCNUT_YEAR"/>
      -->
      <BindItem id="item01" compid="div_search.cmb_1" propid="value" datasetid="ds_cond1" columnid="CL_SE"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 화면ID   : PRJ030101.xfdl
 * 화면명   : 원가항목코드 관리
 * 화면설명 : 
 * 작성일   :
 * 작성자   : 
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ***********************************************************************/
// 시스템 공통 라이브러리 Include
include "pms_lib::pmsUtilInclude.xjs";

/***********************************************************************
 * 화면 변수 선언부
 ***********************************************************************/

 /***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.PRJ030101_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	this.fn_init();				//공통 폼 초기화
	this.fn_init_form();		//폼 초기화
	this.fn_init_dataset();		//Dataset 초기화

	this.form_id = application.gv_curFormId + '_';
}

this.PRJ030101_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	// 공통코드처리
	this.fn_loadCombo();
}

/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/
/*
 * 함수명		: initForm
 * 설명			: Form을 초기화한다.
 * params		: None
 * return Type	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	// 시스템 공통으로 Form을 Initialize 한다.
//	this.gfn_initForm(this);
}

/*
 * 함수명		: fn_init_dataset
 * 설명 		: Dataset을 초기화한다.
 *					주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_init_dataset();
 */
this.fn_init_dataset = function()
{
	// 조건에 사용되는 Dataset 초기화
	this.gfn_initCondDs(this, this.div_search);

	this.checkDs.push(this.ds_1);
	this.checkDs.push(this.ds_2);
}

/***********************************************************************
 * 공통 코드 조회
 ***********************************************************************/
/*
 * 함수명		: fn_loadCombo
 * 설명			: 화면의 Combo 에 데이터를 불러온다.
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_loadCombo();
 */
this.fn_loadCombo = function ()
{
	// 기준년도 초기화
	var yr = this.gfn_today().substr(0,4);
	this.div_search.spn_2.set_value(yr);
/*
	params		: 1. param_1	: 반환받을 DATASET 명			(예: ds_comCode00)
				  2. param_2	: 그룹코드						(예 : COM007)
				  3. param_3	: 사용여부						(예 : 1(사용), ""(사용안함))
				  4. param_4	: 콤보박스INDEX(0) 표시			(예 : "전체", "선택", " "(공백), ""(첫번째데이터부터시작) )
*/
	var comboParams = [
		 ['ds_PRJ010','PRJ010',1,'A']		// 
		,['ds_PRJ016','PRJ016',1,'']		// 
		,['ds_PRJ011','PRJ011',1,'']		// 
	];

	var callback = function (svcId, errorCode, errorMsg) {
		this.ds_PRJ011.set_filterstr('CODE < 3');
		this.fn_search();
	};

	this.gfn_comboLoad (comboParams, callback);
}

/***********************************************************************
* Transaction 영역 시작
************************************************************************/


/***********************************************************************
 * Transaction 관련 이벤트 핸들러 
 **********************************************************************/

/*
 * 함수명		: fn_search
 * 설명			: 조회 이벤트 처리
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	// 필터 초기화
	this.ds_1.filter("");
	// 조회	
	this.fn_transaction("mList");
}

/*
 * 함수명		: fn_save
 * 설명 		: 저장 이벤트 처리
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_save();
 */
this.fn_save = function()
{
	var clSe = this.ds_1.getColumn(this.ds_1.rowposition, "CL_SE");
	
	// Validation 체크
	switch (clSe) {
		case "1":		// 대분류
			if(!this.gfn_checkValidation(this.ds_1, this.ds_validation1)) {
				return;
			}
			break;
		case "2":		// 중분류
			if(!this.gfn_checkValidation(this.ds_1, this.ds_validation2)) {
				return;
			}
			break;
		case "3":		// 소분류
			if(!this.gfn_checkValidation(this.ds_1, this.ds_validation3)) {
				return;
			}		
			break;
	}
	
	if(this.gfn_message("confirm.저장.여부")) {
		this.ds_2.copyData(this.ds_1);
		
		for (var i = 0; i < this.ds_2.rowcount; i++) {
			if (this.ds_2.getColumn(i, "STATE") == "1") {
				this.ds_2.setRowType(i, Dataset.ROWTYPE_INSERT);
			} else if (this.ds_2.getColumn(i, "STATE") == "2") {
				this.ds_2.setRowType(i, Dataset.ROWTYPE_UPDATE);
			} else if (this.ds_2.getRowType(i) == Dataset.ROWTYPE_DELETE && (this.ds_2.getColumn(i, "ACCNUT_ACNT_CODE") == undefined || this.ds_2.getColumn(i, "ACCNUT_ACNT_CODE") == "")) {
				this.ds_2.setRowType(i, Dataset.ROWTYPE_NORMAL);
			}
		}
		
		this.fn_transaction("save");
	}
}

/**********************************************************************
 * CALL TRANSACTION 영역
 **********************************************************************/
/*
 * 함수명		: fn_transaction
 * 설명			: Transaction 요청 처리 함수
 * params		: strSvcId : 서비스요청 ID
 * return Type	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	if(this.ds_cond1.rowcount < 1) return;

	var ds_s;
	var sCols;
	var sController = "hsco/pms/prj/PRJ030101/" + strSvcId + ".do";
	var sInDatasets = "input1=ds_cond1";
	var sOutDatasets = "";
	switch (strSvcId) {
		case "mList":		// 조회
			this.ds_cond1.setColumn(0, "ACCNUT_YEAR", this.div_search.spn_2.value);
			this.ds_cond1.setColumn(0, "SAL_SE", this.div_search.cmb_1.value);
			sOutDatasets = "ds_1=output1";
			this.ds_1.clearData();
			this.ds_2.clearData();
			break;
		case "rList":		// 상세 조회
			ds_s = this.ds_1;
			sCols = "STD_PRMPC_CODE=STD_PRMPC_CODE,";
			sOutDatasets = "ds_2=output1";
			this.ds_2.clearData();
			break;
		case "save":		// 저장
			sInDatasets  =  "input1=ds_1:U";
			sInDatasets += " input2=ds_2:U";
			break;
	}

	if(sCols) {
		this.ds_cond1.copyRow(0, ds_s, ds_s.rowposition, sCols);
	}

	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets);// , "", sCallbackFunc, sShowProgress, bAsync, bBinary); 
}

 /**********************************************************************
 * Transaction Callback 영역
 ***********************************************************************/
 /*
 * 함수명		: fn_callBack
 * 설명			: Transaction Callback 처리
 * params		: strSvcId    : 서비스요청 ID
 *					nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *					strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
this.debug("fn_callBack() - " + strSvcId + ',' + nErrorCode + ',' + strErrorMsg);
	if (nErrorCode != 0) 
	{
		// 오류 메시지를 보여주는 동작 외에 처리할 내용이 있으면 아래에 기술.
		// 처리할 내용이 없다면, switch 문은 생략합니다.
		return this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	}

	switch(strSvcId)
	{
		case "mList":
			break;
		case "rList":
			break;
		case "save":
			this.fn_transaction("mList");
			break;
	}
}

/**********************************************************************
 * Transaction Callback 영역 끝
 ***********************************************************************/
 
/**********************************************************************
 * Non-Transaction 영역
 ***********************************************************************/

// 추가 버튼 클릭시 이벤트 처리
this.fn_insert = function(ds:Dataset)
{
	this.fn_insertDSNew(this.ds_1);
}

// 삭제 버튼 클릭시 이벤트 처리
this.fn_delete = function(ds:Dataset)
{
	this.fn_deleteDS(this.ds_1);
}

this.fn_incCodeStr = function(cd:String)
{
	return (1 + parseInt(cd)||0).toString().padLeft(2, '0');
}

this.fn_insertDSNew = function(ds:Dataset)
{
	var cd  = ds.getColumn(ds.rowposition, "STD_PRMPC_CODE");
	var cd1 = ds.getColumn(ds.rowposition, "CD1");
	var cd2 = ds.getColumn(ds.rowposition, "CD2");
	var cd3 = ds.getColumn(ds.rowposition, "CD3");
	
	var clSe = ds.getColumn(ds.rowposition, "CL_SE");
	var salSe = ds.getColumn(ds.rowposition, "SAL_SE");
	
	var strFilter;
	
	if (clSe == "1") {
		strFilter = "CL_SE == '1'";	
	} else if (clSe == "2") {
		strFilter = "(CL_SE == '1' || CL_SE == '2') && (CD1 == '" + cd1 + "')";	
	} else if (clSe == "3") {
		strFilter = "(CD1 == '" + cd1  + "' && CL_SE == '1') || (CD1 == '" + cd1 + "' && CD2 == '" + cd2 + "')";	
	}
		
	ds.filter(strFilter);
	
	var row = ds.addRow();	
	var row_s = ds.rowcount-1;
	
	if(row_s < 0) {
		cd = '000000';
	}
	
	switch(clSe) {
		case '1':
			cd = (1 + parseInt(ds.getColumn(row_s - 1, "CD1"))||0).toString().padLeft(2, '0') + '0000';
			break;
		case '2':
			cd = cd1 + (1 + parseInt(ds.getColumn(row_s - 1, "CD2"))||0).toString().padLeft(2, '0') + '00';
			break;
		case '3':
			cd = cd1 + cd2 + (1 + parseInt(ds.getColumn(row_s - 1, "CD3"))||0).toString().padLeft(2, '0');
			break;
	}
	
	ds.setColumn(row, 'CL_SE', clSe);
	ds.setColumn(row, 'STD_PRMPC_CODE', cd);
	ds.setColumn(row, 'SAL_SE', salSe);
	ds.setColumn(row, 'FOM_SE', 2);
}

this.fn_insertDS = function(ds:Dataset)
{
	var row_s = ds.rowcount-1;
	var gb = parseInt(this.div_search.cmb_1.value)||1;
	var cd = ds.getColumn(row_s, 'STD_PRMPC_CODE');
this.debug('fn_insertDS() - ' + ds.name + ':' + row_s + '='+cd);

	var row = ds.addRow();
	var cd, cd1, cd2, cd3;
	if(row_s < 0) {
		cd = '000000';
	}

	cd1 = cd.substr(0,2);
	cd2 = cd.substr(2,2);
	cd3 = cd.substr(4,2);

	switch(gb) {
		default:
		case 1:
			cd = this.fn_incCodeStr(cd.substr(0,2)) + '0000';
			break;
		case 2:
			cd = cd1 + this.fn_incCodeStr(cd.substr(2,2)) + '00';
			break;
		case 3:
			cd = cd1 + cd2 + this.fn_incCodeStr(cd.substr(4,2));
			break;
	}

	ds.setColumn(row, 'STD_PRMPC_CODE', cd);
	ds.setColumn(row, 'SAL_SE', gb);
	ds.setColumn(row, 'FOM_SE', 2);

//	this.debug('fn_insertDS() - ' + ds.name + ':' + row);
}

/*
this.fn_insertDS_bak = function(ds:Dataset)
{
	var row_s = ds.rowposition;
	var gb = parseInt(this.div_search.cmb_1.value)||1;
	gb = parseInt(ds.getColumn(row_s, 'CL_SE'))||1;
this.debug('fn_insertDS() - ' + ds.name + ':' + row_s + '='+ds.getColumn(row_s, 'STD_PRMPC_CODE'));
	var nFOM_SE = 2;

//	var row = ds.addRow();

	var cd, cd1, cd2, cd3;
	if(row_s < 0) {
		cd1 = '00';
		cd2 = '00';
		cd3 = '00';
	} else {
		cd1 = ds.getColumn(row_s, 'CD1');
		cd2 = ds.getColumn(row_s, 'CD2');
		cd3 = ds.getColumn(row_s, 'CD3');
		nFOM_SE = parseInt(ds.getColumn(row_s, 'FOM_SE'))||2;
this.debug('row_s:'+row_s+'='+cd1+'/'+cd2+'/'+cd3+':'+nFOM_SE);
	}

	switch(gb) {
		default:
		case 1:
			if(row_s < 0) {
				cd1 = '01';
			} else {
				row_s = ds.rowcount-1;
				cd1 = ds.getColumn(row_s, 'CD1');
				cd1 = this.fn_incCodeStr(cd1);
			}

			cd = cd1 + '0000';
			break;
		case 2:
			row_s = ds.getCaseMax("CD1=="+cd1,"currow");
			cd2 = ds.getColumn(row_s, 'CD2');
			cd2 = this.fn_incCodeStr(cd2);
			cd = cd1 + cd2 + '00';
			break;
		case 3:
			row_s = ds.getCaseMax("CD1=="+cd1+" && CD2=="+cd2,"currow");
			cd3 = ds.getColumn(row_s, 'CD3');
			cd3 = this.fn_incCodeStr(cd3);
			cd = cd1 + cd2 + cd3;
			break;
	}

	var row = ds.insertRow(row_s+1);
	ds.set_rowposition(row);
//	cd = this.fn_incCodeStr(cd, gb);
	ds.setColumn(row, 'STD_PRMPC_CODE', cd);
	ds.setColumn(row, 'CL_SE', gb);
	ds.setColumn(row, 'FOM_SE', nFOM_SE);
	ds.setColumn(row, 'CD1', cd1);
	ds.setColumn(row, 'CD2', cd2);
	ds.setColumn(row, 'CD3', cd3);

//	this.debug('fn_insertDS() - ' + ds.name + ':' + row);
}
*/

this.fn_deleteDS = function(ds:Dataset)
{
//	this.debug('fn_deleteDS() - ' + ds.name + ':' + ds.rowposition);

	ds.deleteRow(ds.rowposition);
}



this.ds_cancolumnchange = function(obj:Dataset, e:nexacro.DSColChangeEventInfo)
{
	var col;
	var val = e.newvalue;
	switch(e.columnid)
	{
		case 'STD_PRMPC_CODE':
			col = e.columnid;
			break;
		default:
			return;
	}

	var row = obj.findRowExpr(col + " == '" + val + "'");
	if(-1 < row) {
		alert('중복 오류 : ' + val);
		return false;
	}
}

// 행추가
this.btn_21_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.fn_PopupAcnt();
}

// 행삭제
this.btn_22_onclick = function(obj:Button, e:nexacro.ClickEventInfo)
{
	this.fn_deleteDS(this.ds_2);
//	this.ds_2.deleteRow(this.ds_2.rowposition);
}

// 계정과목 팝업
this.fn_PopupAcnt = function()
{
	var fn_cb = function(sPopupId, sReturn) {
		if(!sReturn) return;
//		this.debug('OK\n'  + sReturn);

		var dsRet = new Dataset();
		nRowCnt = dsRet.loadXML(sReturn);
		if(nRowCnt < 1) return;

//		this.debug('CD:' + dsRet.getColumn(0, 'CODE'));

		var ds1 = this.ds_1;
		var cd = ds1.getColumn(ds1.rowposition, 'STD_PRMPC_CODE');
		
		if(ds1.getColumn(ds1.rowposition, "ACCNUT_ACNT_CODE") == undefined || ds1.getColumn(ds1.rowposition, "ACCNUT_ACNT_CODE") == "" || ds1.getColumn(ds1.rowposition, "STATE") == "1") {
			ds1.setColumn(ds1.rowposition, "STATE", "1");
		} else {
			if (ds1.getColumn(ds1.rowposition, "ACCNUT_YEAR") != dsRet.getColumn(0, "ACCNUT_YEAR") || ds1.getColumn(ds1.rowposition, "ACCNUT_ACNT_CODE") != dsRet.getColumn(0, "CODE")) {
				ds1.setColumn(ds1.rowposition, "STATE", "2");
			}
		}
		
		ds1.setColumn(ds1.rowposition, "STD_PRMPC_CODE", cd);
		ds1.setColumn(ds1.rowposition, "SAL_SE", parseInt(this.div_search.cmb_1.value)||1);
		ds1.setColumn(ds1.rowposition, "ACCNUT_YEAR", dsRet.getColumn(0, "ACCNUT_YEAR"));
		ds1.setColumn(ds1.rowposition, "ACCNUT_ACNT_CODE", dsRet.getColumn(0, "CODE"));
		ds1.setColumn(ds1.rowposition, "ACCNUT_ACNT_CODE_NM", dsRet.getColumn(0, "CODE_NM"));
		

/*
		ds2.copyRow(r2, dsRet, 0, 
			 'ACCNUT_ACNT_CODE=CODE,'
			+'ACCNUT_YEAR=ACCNUT_YEAR,'
			+'CODE_NM=CODE_NM,'
		);
*/		
		
	}

	var param = {
		 AUTO_RET:true
	};
	this.gfn_popup('popAcnt', 500, 500, '', param, "pms_prj::popAcnt.xfdl", fn_cb, 1);
}

this.cmb_onitemchanged = function(obj:Combo, e:nexacro.ItemChangeEventInfo)
{
	this.fn_search();
}


this.div_work_div_1_grd_1_oncellclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	// 계정코드 선택 시 회계코드 맵핑
	if(obj.getCellPos() == '7' && this.ds_1.getColumn(this.ds_1.rowposition, "CL_SE") == "3") {
		this.fn_PopupAcnt();
	}
}

this.div_search_sta_1_onclick = function(obj:Static,  e:nexacro.ClickEventInfo)
{
	
}
]]></Script>
  </Form>
</FDL>
