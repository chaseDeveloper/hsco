<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="PRJ040201_P02" classname="PRJ040201_P02" left="0" top="0" width="500" height="500" titletext="홈페이지연동(공정) 팝업" onload="PRJ040201_P02_onload" oninit="PRJ040201_P02_oninit">
    <Layouts>
      <Layout>
        <Static id="sta_bg" left="0" top="0" height="500" right="0" cssclass="sta_WF_PopupBg"/>
        <Static id="sta_gud_v1" text="15" left="2" top="2" bottom="2" width="15" visible="0" style="background:#1b3cd23c;"/>
        <Static id="sta_gud_v2" text="15" top="2" width="15" bottom="2" right="2" visible="0" style="background:#1b3cd23c;"/>
        <Static id="sta_gud_h1" text="15" left="17" top="2" height="15" right="17" visible="0" style="background:#dc143c3c;align:center;"/>
        <Static id="sta_gud_h2" text="5" left="17" top="42" height="5" right="17" visible="0" style="background:#dc143c3c;align:center;"/>
        <Static id="sta_gud_h3" taborder="15" text="5" visible="0" left="17" top="258" right="17" height="5" style="background:#dc143c3c;align:center;"/>
        <Static id="sta_gud_h4" taborder="16" text="5" visible="0" left="17" top="287" right="17" height="5" style="background:#dc143c3c;align:center;"/>
        <Static id="sta_gud_h9" text="15" left="17" height="15" bottom="2" right="17" visible="0" style="background:#dc143c3c;align:center;"/>
        <Static id="sta_1" text="공사진행현황(공정율)" left="17" top="19" height="21" width="197" cssclass="sta_WF_Title01"/>
        <Static id="sta_2" taborder="14" text="공사진행월별 사진 부문" cssclass="sta_WF_Title02" left="16" top="265" width="197" height="21"/>
        <Button id="btn_Search" taborder="2" text="조회" top="17" height="25" width="50" right="123" onclick="fn_search" cssclass="btn_WF_CRUD" visible="0"/>
        <Button id="btn_Confirm" taborder="3" text="확인" top="17" height="25" width="50" right="70" onclick="fn_confirm" cssclass="btn_WF_CRUD"/>
        <Button id="btn_Close" taborder="4" text="종료" top="17" height="25" width="50" right="17" onclick="close" cssclass="btn_WF_CRUD"/>
        <TextArea id="txt_1" taborder="12" left="17" top="47" height="213" right="17"/>
        <ImageViewer id="img_2" taborder="13" left="17" top="292" bottom="17" right="17"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_1"/>
      <Dataset id="ds_cond1">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="5"/>
          <Column id="TXT" type="STRING" size="1000"/>
          <Column id="IMG" type="STRING" size="512"/>
          <Column id="GB" type="STRING" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_validation">
        <ColumnInfo>
          <Column id="compId" type="STRING" size="256"/>
          <Column id="colId" type="STRING" size="256"/>
          <Column id="PK" type="STRING" size="256"/>
          <Column id="notNull" type="STRING" size="256"/>
          <Column id="type" type="STRING" size="256"/>
          <Column id="nlength" type="STRING" size="256"/>
          <Column id="from" type="STRING" size="256"/>
          <Column id="to" type="STRING" size="256"/>
          <Column id="lengthChkGb" type="STRING" size="256"/>
          <Column id="msgId" type="STRING" size="256"/>
          <Column id="expr" type="STRING" size="256"/>
          <Column id="func" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="compId"/>
            <Col id="colId"/>
            <Col id="notNull"/>
            <Col id="msgId"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_GB">
        <ColumnInfo>
          <Column id="CODE" size="256"/>
          <Column id="CODE_NM" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_PRJ009"/>
      <Dataset id="ds_PRJ012"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="txt_1" propid="value" datasetid="ds_cond1" columnid="TXT"/>
      <BindItem id="item1" compid="img_2" propid="image" datasetid="ds_cond1" columnid="IMG"/>
    </Bind>
    <Script type="xscript5.0"><![CDATA[/***********************************************************************
 * 화면ID   : 
 * 화면명   : 
 * 화면설명 : 사용예
				var fn_cb = function(sPopupId, sReturn) {
				}

				var param = {
					 TXT:sTXT
					,IMG:sIMG
				};

				this.gfn_popup('PRJ040201_P02', 500, 500, '', param, "pms_prj04::PRJ040201_P02.xfdl", fn_cb, 1);
 * 작성일   :
 * 작성자   : 
 * 수정이력 : 
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *
 ***********************************************************************
 */

/***********************************************************************
 * Script Include 
 ***********************************************************************/
// 시스템 공통 라이브러리 Include
include "pms_lib::pmsUtilInclude.xjs";

/***********************************************************************
 * 화면 변수 선언부
 ***********************************************************************/
this.TXT = this.parent.TXT;	// 
this.IMG = this.parent.IMG;	// 

 /***********************************************************************
 * onInit / onLoad 영역
 ***********************************************************************/
this.PRJ040201_P02_oninit = function(obj:Form, e:nexacro.InitEventInfo)
{
	this.fn_init();				//공통 폼 초기화
	this.fn_init_form();		//폼 초기화
}

this.PRJ040201_P02_onload = function(obj:Form, e:nexacro.LoadEventInfo)
{
	this.fn_init_dataset();		//Dataset 초기화
	// 공통코드처리
//	this.fn_loadCombo();
return;
	if(this.TXT)
		this.ds_cond1.setColumn(0, 'TXT', this.TXT);

	if(this.IMG)
		this.ds_cond1.setColumn(0, 'IMG', this.IMG);
}

/***********************************************************************
 * Form/Dataset 오브젝트 초기화
 ***********************************************************************/
/*
 * 함수명		: initForm
 * 설명			: Form을 초기화한다.
 * params		: None
 * return Type	: None
 * 사용법		: this.initForm();
 */
this.fn_init_form = function()
{
	// 시스템 공통으로 Form을 Initialize 한다.
//	this.gfn_initForm(this);
}

/*
 * 함수명		: fn_init_dataset
 * 설명 		: Dataset을 초기화한다.
 *					주로, 조건 Dataset들(ds_cond, ds_cond_00, ds_cond_01, ...) 을 초기화한다.
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_init_dataset();
 */
this.fn_init_dataset = function()
{
	// 조건에 사용되는 Dataset 초기화
	this.gfn_initCondDs(this, this.div_search);
}

/***********************************************************************
 * 공통 코드 조회
 ***********************************************************************/
/*
 * 함수명		: fn_loadCombo
 * 설명			: 화면의 Combo 에 데이터를 불러온다.
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_loadCombo();
 */
this.fn_loadCombo = function ()
{
/*
	params		: 1. param_1	: 반환받을 DATASET 명			(예: ds_comCode00)
				  2. param_2	: 그룹코드						(예 : COM007)
				  3. param_3	: 사용여부						(예 : 1(사용), ""(사용안함))
				  4. param_4	: 콤보박스INDEX(0) 표시			(예 : "전체", "선택", " "(공백), ""(첫번째데이터부터시작) )
*/
	var comboParams = [
		 ['ds_PRJ009','PRJ009',1,'A']	// 진행구분
		,['ds_PRJ012','PRJ012',1,'']	// 사업유형
	];

	var callback = function (svcId, errorCode, errorMsg) {
//		this.div_search.rdo_PRJ.set_index(this.BSNS_GB);
		this.fn_search();
	};

	this.gfn_comboLoad (comboParams, callback);
}

/***********************************************************************
* Transaction 영역 시작
************************************************************************/


/***********************************************************************
 * Transaction 관련 이벤트 핸들러 
 **********************************************************************/

/*
 * 함수명		: fn_search
 * 설명			: 조회 이벤트 처리
 * params		: None
 * return Type	: None
 * 사용법		: this.fn_search();
 */
this.fn_search = function()
{
	// Validation 체크
	if(!this.gfn_checkValidation(this.div_search, this.ds_validation)) {
		return;
	}

	// 조회
	this.fn_transaction("acntList");
}

/**********************************************************************
 * CALL TRANSACTION 영역
 **********************************************************************/
/*
 * 함수명		: fn_transaction
 * 설명			: Transaction 요청 처리 함수
 * params		: strSvcId : 서비스요청 ID
 * return Type	: None
 * 사용법		: this.fn_transaction("SELECT");
 */
this.fn_transaction = function(strSvcId)
{
	var ds_s;
	var sCols;
	var sController = "hsco/pms/prj/" + strSvcId + ".do";
	var sInDatasets = "";//"input1=ds_cond1";
	var sOutDatasets = "";
	switch (strSvcId) {
		case "acntList":		// 조회
			sOutDatasets = "ds_1=output1";
			this.ds_1.clearData();
			break;
	}

	if(ds_s) {
		this.ds_cond1.copyRow(0, ds_s, ds_s.rowposition, sCols);
	}

	Ex.core.tran(this, strSvcId, sController, sInDatasets, sOutDatasets);// , "", sCallbackFunc, sShowProgress, bAsync, bBinary); 
}

 /**********************************************************************
 * Transaction Callback 영역
 ***********************************************************************/
 /*
 * 함수명		: fn_callBack
 * 설명			: Transaction Callback 처리
 * params		: strSvcId    : 서비스요청 ID
 *					nErrorCode  : 오류 메시지 코드 ([예] 0 : Success, 그밖의 경우, error)
 *					strErrorMsg : 오류 메시지([예]  success.insert|정상적으로 등록되었습니다.)
 * return Type	: None
 * 사용법		: 
 */
this.fn_callBack = function (strSvcId, nErrorCode, strErrorMsg)
{
this.debug("fn_callBack() - " + strSvcId + ',' + nErrorCode + ',' + strErrorMsg);
	if (nErrorCode != 0) 
	{
		// 오류 메시지를 보여주는 동작 외에 처리할 내용이 있으면 아래에 기술.
		// 처리할 내용이 없다면, switch 문은 생략합니다.
		return this.gfn_callback_message(strSvcId, nErrorCode, strErrorMsg);
	}

	switch(strSvcId)
	{
		case "acntList":
			this.grd_1.setFocus();
			if(this.AUTO_RET && this.ds_1.rowcount == 1) {
				this.fn_confirm();
			}
			break;
	}
}

/**********************************************************************
 * Transaction Callback 영역 끝
 ***********************************************************************/
 
/**********************************************************************
 * Non-Transaction 영역
 ***********************************************************************/

this.fn_confirm = function()
{
	var dsRet = new Dataset();
	var ds = this.ds_1;
	var row = ds.rowposition;

	ds.filter("RN==" + (row+1));
	dsRet.copyData(ds, true);

//	this.debug('RET:'+ row + ' - '  + dsRet.rowcount + '\n' + dsRet.saveCSV());
	this.close(dsRet.saveXML());
}

/**********************************************************************
 * 사용자정의 함수
 ***********************************************************************/
this.grd_1_oncelldblclick = function(obj:Grid, e:nexacro.GridClickEventInfo)
{
	this.fn_confirm();
}


this.grd_1_onkeydown = function(obj:Grid, e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13) {
		this.fn_confirm();
	}
}

]]></Script>
  </Form>
</FDL>
