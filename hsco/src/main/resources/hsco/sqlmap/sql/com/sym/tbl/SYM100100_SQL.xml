<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SYM100100_SQL">
<!--  설명  : 데이터 전환 처리
	작성자 : 지효정 --> 
	
	<!--AS-IS 테이블 정보 목록 -->
	<select id="SYM100100DAO.asisTableList" parameterClass="hashmap" resultClass="outmap">
		SELECT 
			CASE 
				WHEN SUBSTR(A.TABLE_NAME,1,2) = 'AD' THEN '감사시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PS' THEN '인사관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PY' THEN '보수관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'BG' THEN '예산관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'EX' THEN '지출관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CL' THEN '결산관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'FN' THEN '자금관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'AS' THEN '자산관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CS' THEN '원가관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'ST' THEN '임원관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SL' THEN '주택관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'LN' THEN '토지관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'RN' THEN '임대관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CP' THEN '보상관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'BZ' THEN '사업관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CN' THEN '공사관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CT' THEN '계약관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'DM' THEN '하자관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PT' THEN '포털시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'GW' THEN '전자결재시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SM' THEN '공사_하자관리시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SH' THEN '검색엔진시스템'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'ZZ' THEN '기준정보'
                WHEN SUBSTR(A.TABLE_NAME,1,3) = 'ITT' THEN 'ITSM'
                WHEN SUBSTR(A.TABLE_NAME,1,2) = 'VA' THEN '가상계좌관리시스템'
	         END AS SYSTEM_NM
			,A.TABLE_NAME    AS TABLE_ID
			,C.COMMENTS      AS TABLE_NM
			,A.NUM_ROWS     AS TABLE_NUM_ROW
			,TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' ) AS LAST_ANALYZED
		FROM 	 
			 ALL_TABLES@DL_IMS A
      		,ALL_TAB_COMMENTS@DL_IMS C
		WHERE A.OWNER = 'DUCOIS'
		AND   A.OWNER = C.OWNER
		AND   A.TABLE_NAME = C.TABLE_NAME
		<isNotEmpty property="asisSystemNm">
		AND (SUBSTR(A.TABLE_NAME,1,5) = #asisSystemNm# OR SUBSTR(A.TABLE_NAME,1,2) = #asisSystemNm#)
		</isNotEmpty>
		ORDER BY 1,A.TABLE_NAME 
	</select>

	<!--TO-BE 테이블 정보 목록 -->
	<select id="SYM100100DAO.tobeTableList" parameterClass="hashmap" resultClass="outmap">
    	SELECT 
    		CASE 
    			WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBAUD' THEN '감사시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBHRM' THEN '인사관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSAL' THEN '보수관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBBDG' THEN '예산관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBACC' THEN '회계관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBFUN' THEN '자금관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBASS' THEN '자산관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBPRJ' THEN '사업관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSLS' THEN '판매관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBRNT' THEN '임대관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCMP' THEN '보상관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCTR' THEN '구매계약관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBPOT' THEN '포털시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCOM' THEN '기준정보'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBACH' THEN '성과관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCUS' THEN '고객관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBITM' THEN 'ITSM시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBLAW' THEN '법무관리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSUP' THEN '이사회관리리시스템'
	            WHEN SUBSTR(A.TABLE_NAME,1,2) = 'VA' THEN '가상계좌시스템'
       		END AS SYSTEM_NM
			,A.TABLE_NAME    AS TABLE_ID
			,C.COMMENTS      AS TABLE_NM
			,A.NUM_ROWS     AS TABLE_NUM_ROW
			, TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' ) AS LAST_ANALYZED
  		FROM 
  			 ALL_TABLES A
      		,ALL_TAB_COMMENTS C
		WHERE A.OWNER = 'DUCOOPR'
		AND A.OWNER = C.OWNER
		AND A.TABLE_NAME = C.TABLE_NAME
		<isNotEmpty property="tobeSystemNm">
		AND (SUBSTR(A.TABLE_NAME,1,5) = #tobeSystemNm# OR SUBSTR(A.TABLE_NAME,1,2) = #tobeSystemNm#)
		</isNotEmpty>
		ORDER BY 1,A.TABLE_NAME 
    </select>
    
    <!-- 전환일자 목록 -->
    <select id="SYM100100DAO.cnvrsDeList" parameterClass="hashmap" resultClass="outmap">
	    SELECT 
	    	CNVRS_DE AS CODE
	    	,TO_CHAR(TO_DATE(CNVRS_DE, 'YYYYMMDD'), 'YYYY-MM-DD') AS CODE_NM  
		FROM TBCOM_DATA_CONVERSION_VRIFY
		GROUP BY CNVRS_DE 
		ORDER BY CODE DESC
    </select>
    
    <!-- 데이터전환 목록 -->
    <select id="SYM100100DAO.dataConversionVrifyList" parameterClass="hashmap" resultClass="outmap">
    	SELECT 
	    	 A.CNVRS_DE        	/*전환일자*/
			,A.TABLE_SN 		/*이전테이블순번*/
			,A.JOB_SYS_NM      	/*업무시스템명*/
			,A.BEFORE_TABLE_ID 	/*이전테이블ID*/
			,A.BEFORE_TABLE_NM 	/*이전테이블명*/
			,A.BEFORE_DTA_CO   	/*이전자료건수*/
			,A.BEFORE_STATS_DE 	/*이전통계일자*/
			,A.AFTER_TABLE_ID  	/*이후테이블ID*/
			,A.AFTER_TABLE_NM  	/*이후테이블명*/
			,A.AFTER_DTA_CO    	/*이후자료건수*/
			,A.AFTER_STATS_DE  	/*이후통계일자*/
			,NVL(A.CNVRS_AT, '0') AS CNVRS_AT        	/*전환여부*/
			,A.CNVRS_DC        	/*전환설명*/
			,A.RM              	/*비고*/
			,NVL(A.NEW_AT, '0') AS NEW_AT         /*신규여부*/
            ,A.ERYY_DATA        /*초기데이터*/
            ,DECODE(A.AFTER_TABLE_ID, NULL, 3, DECODE(A.BEFORE_TABLE_ID, NULL, 2, 1)) AS ORDER_NO
    	FROM TBCOM_DATA_CONVERSION_VRIFY A
    	<isEqual property="lastDataAt" compareValue="1">
	    ,(
	      SELECT 
	         MAX(CNVRS_DE) AS CNVRS_DE
    		,BEFORE_TABLE_ID 
	      FROM TBCOM_DATA_CONVERSION_VRIFY
	      GROUP BY BEFORE_TABLE_ID
	    )B
    	</isEqual>
    	WHERE 1=1
    	<isEqual property="lastDataAt" compareValue="1">
    	AND   A.BEFORE_TABLE_ID = B.BEFORE_TABLE_ID
		AND   A.CNVRS_DE = B.CNVRS_DE
    	</isEqual>
    	
    	<isEqual property="lastDataAt" compareValue="0">
    	<isNotEmpty property="cnvrsDe">
    	AND   A.CNVRS_DE = #cnvrsDe#
    	</isNotEmpty> 
    	</isEqual>
    	
    	<isNotEmpty property="jobSysNm">
    	AND   A.JOB_SYS_NM LIKE '%' || #jobSysNm# || '%'
    	</isNotEmpty>
    	ORDER BY A.CNVRS_DE DESC, JOB_SYS_NM, ORDER_NO, BEFORE_TABLE_ID, AFTER_TABLE_ID
    </select>
    
    <!-- 데이터전환 생성 -->
    <update id="SYM100100DAO.dataConversionVrifyCU" parameterClass="hashmap">
    	MERGE INTO TBCOM_DATA_CONVERSION_VRIFY
		USING DUAL ON(
		      TABLE_SN = #TABLE_SN#)
		WHEN MATCHED THEN 
			UPDATE SET
            	 CNVRS_DE = #CNVRS_DE#
				,BEFORE_TABLE_ID = #BEFORE_TABLE_ID#
				,BEFORE_TABLE_NM = #BEFORE_TABLE_NM#
				,AFTER_TABLE_ID = #AFTER_TABLE_ID#
				,AFTER_TABLE_NM = #AFTER_TABLE_NM#
				,AFTER_DTA_CO = #AFTER_DTA_CO#
				,AFTER_STATS_DE = #AFTER_STATS_DE#
				,CNVRS_AT = #CNVRS_AT#
				,CNVRS_DC = #CNVRS_DC#   
				,RM = #RM#
				,NEW_AT = #NEW_AT#         
				,ERYY_DATA = #ERYY_DATA#         
				,UPDUSR_ID = #S_USER_ID#
				,UPDT_DT = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT(
				 CNVRS_DE        	/*전환일자*/
				,TABLE_SN 			/*이전테이블순번*/
				,BEFORE_TABLE_ID 	/*이전테이블ID*/
				,JOB_SYS_NM      	/*업무시스템명*/
				,BEFORE_TABLE_NM 	/*이전테이블명*/
				,AFTER_TABLE_ID  	/*이후테이블ID*/
				,AFTER_TABLE_NM  	/*이후테이블명*/
				,BEFORE_DTA_CO   	/*이전자료건수*/
				,AFTER_DTA_CO    	/*이후자료건수*/
				,BEFORE_STATS_DE 	/*이전통계일자*/
				,AFTER_STATS_DE  	/*이후통계일자*/
				,CNVRS_AT        	/*전환여부*/
				,CNVRS_DC        	/*전환설명*/
				,RM				 	/*비고*/
				,NEW_AT          	/*신규여부*/
				,ERYY_DATA        	/*초기데이터*/
				,REGISTER_ID
				,REGIST_DT  
				,UPDUSR_ID  
				,UPDT_DT    
    		)
    		VALUES(
				 #CNVRS_DE#        
				,(SELECT NVL(MAX(TABLE_SN), 0) + 1 FROM TBCOM_DATA_CONVERSION_VRIFY)
				,#BEFORE_TABLE_ID#
				,#JOB_SYS_NM#
				,#BEFORE_TABLE_NM# 
				,#AFTER_TABLE_ID#
				,#AFTER_TABLE_NM#
				,#BEFORE_DTA_CO#
				,#AFTER_DTA_CO#
				,#BEFORE_STATS_DE#
				,#AFTER_STATS_DE#  
				,NVL(#CNVRS_AT#, '0')
				,#CNVRS_DC#   
				,#RM#
				,NVL(#NEW_AT#, '0')
				,#ERYY_DATA#
				,#S_USER_ID#
				,SYSDATE
				,#S_USER_ID#
				,SYSDATE
			)
    </update>
    
    <!-- 데이터전환 삭제 -->
    <delete id="SYM100100DAO.dataConversionVrifyD" parameterClass="hashmap">
    	DELETE FROM TBCOM_DATA_CONVERSION_VRIFY
    	WHERE CNVRS_DE = #CNVRS_DE#
		AND	  TABLE_SN = #TABLE_SN#
    </delete>
    
    <!-- 전환데이터일괄 생성 목록 -->
    <select id="SYM100100DAO.dataConversionAllNewVrifyList" parameterClass="hashmap" resultClass="outmap">
		WITH TABLE_INFO AS(
		SELECT
			CASE 
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'AD' THEN '감사시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PS' THEN '인사관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PY' THEN '보수관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'BG' THEN '예산관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'EX' THEN '지출관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CL' THEN '결산관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'FN' THEN '자금관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'AS' THEN '자산관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CS' THEN '원가관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'ST' THEN '임원관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SL' THEN '주택관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'LN' THEN '토지관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'RN' THEN '임대관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CP' THEN '보상관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'BZ' THEN '사업관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CN' THEN '공사관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'CT' THEN '계약관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'DM' THEN '하자관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'PT' THEN '포털시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'GW' THEN '전자결재시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SM' THEN '공사_하자관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'SH' THEN '검색엔진시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'ZZ' THEN '기준정보'
	          WHEN SUBSTR(A.TABLE_NAME,1,3) = 'ITT' THEN 'ITSM'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'VA' THEN '가상계좌관리시스템'
	       END AS BEFORE_SYSTEM_NM
	      ,A.TABLE_NAME    AS BEFORE_TABLE_ID
	      ,C.COMMENTS      AS BEFORE_TABLE_NM
	      ,A.NUM_ROWS     AS BEFORE_DTA_CO
	      ,TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' ) AS BEFORE_STATS_DE
	      ,NULL AS AFTER_SYSTEM_NM
	      ,NULL AS AFTER_TABLE_ID
	      ,NULL AS AFTER_TABLE_NM
	      ,NULL AS AFTER_DTA_CO
	      ,NULL AS AFTER_STATS_DE
		FROM 	 
	       ALL_TABLES@DL_IMS A
	      ,ALL_TAB_COMMENTS@DL_IMS C
	    WHERE A.OWNER = 'DUCOIS'
	    AND   A.OWNER = C.OWNER
	    AND   A.TABLE_NAME = C.TABLE_NAME
	        
	    UNION ALL
	        
		SELECT 
	       NULL AS BEFORE_SYSTEM_NM
	      ,NULL AS BEFORE_TABLE_ID
	      ,NULL AS BEFORE_TABLE_NM
	      ,NULL AS BEFORE_DTA_CO
	      ,NULL AS BEFORE_STATS_DE
	     ,CASE 
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBAUD' THEN '감사시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBHRM' THEN '인사관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSAL' THEN '보수관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBBDG' THEN '예산관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBACC' THEN '회계관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBFUN' THEN '자금관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBASS' THEN '자산관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBPRJ' THEN '사업관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSLS' THEN '판매관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBRNT' THEN '임대관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCMP' THEN '보상관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCTR' THEN '구매계약관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBPOT' THEN '포털시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCOM' THEN '기준정보'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBACH' THEN '성과관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBCUS' THEN '고객관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBITM' THEN 'ITSM시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBLAW' THEN '법무관리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,5) = 'TBSUP' THEN '이사회관리리시스템'
	          WHEN SUBSTR(A.TABLE_NAME,1,2) = 'VA' THEN '가상계좌시스템'
	      END AS AFTER_SYSTEM_NM
	      ,A.TABLE_NAME    AS AFTER_TABLE_ID
	      ,C.COMMENTS      AS AFTER_TABLE_NM
	      ,A.NUM_ROWS     AS AFTER_DTA_CO
	      ,TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' ) AS AFTER_STATS_DE
		FROM 
	       ALL_TABLES A
	      ,ALL_TAB_COMMENTS C
	    WHERE A.OWNER = 'DUCOOPR'
	    AND A.OWNER = C.OWNER
	    AND A.TABLE_NAME = C.TABLE_NAME
	    
	    UNION ALL
	    
	    SELECT 
	       NULL AS BEFORE_SYSTEM_NM
	      ,NULL AS BEFORE_TABLE_ID
	      ,NULL AS BEFORE_TABLE_NM
	      ,NULL AS BEFORE_DTA_CO
	      ,NULL AS BEFORE_STATS_DE
	      ,NULL AS AFTER_SYSTEM_NM
	      ,NULL AS AFTER_TABLE_ID
	      ,NULL AS AFTER_TABLE_NM
	      ,NULL AS AFTER_DTA_CO
	      ,NULL AS AFTER_STATS_DE
	    FROM DUAL
	  )
	    SELECT *
	    FROM(
	    SELECT 
	       A.TABLE_SN          		
	      ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS CNVRS_DE        	/*전환일자*/
	      ,A.JOB_SYS_NM				/*업무시스템명*/
	      ,B.BEFORE_TABLE_ID 		/*이전테이블ID*/
	      ,B.BEFORE_TABLE_NM    	/*이전테이블명*/
	      ,B.BEFORE_DTA_CO  		/*이전자료건수*/
	      ,B.BEFORE_STATS_DE		/*이전통계일자*/
	      ,C.AFTER_TABLE_ID			/*이후테이블ID*/
	      ,C.AFTER_TABLE_NM     	/*이후테이블명*/
	      ,C.AFTER_DTA_CO 			/*이전자료건수*/
	      ,C.AFTER_STATS_DE			/*이전통계일자*/
	      ,NVL(A.CNVRS_AT, '0') AS CNVRS_AT     /*전환여부*/
	      ,A.CNVRS_DC        					/*전환설명*/
	      ,NVL(A.NEW_AT, '0') AS NEW_AT			/*신규여부*/
	      ,A.ERYY_DATA							/*초기데이터*/
	      ,DECODE(B.AFTER_TABLE_ID, NULL, 3, DECODE(B.BEFORE_TABLE_ID, NULL, 2, 1)) AS ORDER_NO
		FROM 
			 TBCOM_DATA_CONVERSION_VRIFY A
	        ,TABLE_INFO B
	        ,TABLE_INFO C
	    WHERE 1=1
	    AND  ( 
	  			(      
	                A.BEFORE_TABLE_ID = B.BEFORE_TABLE_ID 
	             AND    A.AFTER_TABLE_ID = C.AFTER_TABLE_ID 
	            ) 
	            OR
	            (      
	                A.BEFORE_TABLE_ID = B.BEFORE_TABLE_ID 
	             AND C.AFTER_TABLE_ID IS NULL
	             AND C.BEFORE_TABLE_ID IS NULL
	             AND   NOT EXISTS(SELECT * FROM TABLE_INFO WHERE AFTER_TABLE_ID IS NOT NULL AND AFTER_TABLE_ID = A.AFTER_TABLE_ID)
	            ) 
	            OR
	            (      
	                A.AFTER_TABLE_ID = B.AFTER_TABLE_ID 
	             AND C.AFTER_TABLE_ID IS NULL
	             AND C.BEFORE_TABLE_ID IS NULL
	             AND   NOT EXISTS(SELECT * FROM TABLE_INFO WHERE BEFORE_TABLE_ID IS NOT NULL AND BEFORE_TABLE_ID = A.BEFORE_TABLE_ID)
	            ) 
	    	 )
	    AND   A.CNVRS_DE = #cnvrsDe#
	    
	    UNION ALL
	    	SELECT
					 NULL AS TABLE_SN
					,TO_CHAR(SYSDATE, 'YYYYMMDD') AS CNVRS_DE   /*전환일자*/
					,A.AFTER_SYSTEM_NM AS JOB_SYS_NM			/*업무시스템명*/
					,NULL AS BEFORE_TABLE_ID 	/*이전테이블ID*/
					,NULL AS BEFORE_TABLE_NM    /*이전테이블명*/
					,NULL AS BEFORE_DTA_CO  	/*이전자료건수*/
					,NULL AS BEFORE_STATS_DE	/*이전통계일자*/
					,A.AFTER_TABLE_ID			/*이후테이블ID*/
					,A.AFTER_TABLE_NM     		/*이후테이블명*/
					,A.AFTER_DTA_CO 			/*이전자료건수*/
					,A.AFTER_STATS_DE			/*이전통계일자*/
					,NULL AS CNVRS_AT        	/*전환여부*/
					,NULL AS CNVRS_DC        	/*전환설명*/
					,'1' AS NEW_AT				/*신규여부*/
					,NULL AS ERYY_DATA			/*초기데이터*/
					,3 AS ORDER_NO
				FROM 
	 				TABLE_INFO A
				WHERE A.AFTER_TABLE_ID IS NOT NULL
				AND   NOT EXISTS (SELECT * FROM TBCOM_DATA_CONVERSION_VRIFY WHERE AFTER_TABLE_ID = A.AFTER_TABLE_ID  AND CNVRS_DE = #cnvrsDe#)
	    )
	    ORDER BY CNVRS_DE DESC, JOB_SYS_NM, ORDER_NO, BEFORE_TABLE_ID, AFTER_TABLE_ID
    </select>
    
    <insert id="SYM100100DAO.dataConversionVrifyC" parameterClass="hashmap">
    	INSERT
		INTO   TBCOM_DATA_CONVERSION_VRIFY
		       (
		              CNVRS_DE,
		              TABLE_SN,
		              JOB_SYS_NM,
		              BEFORE_TABLE_ID,
		              BEFORE_TABLE_NM,
		              AFTER_TABLE_ID,
		              AFTER_TABLE_NM,
		              BEFORE_DTA_CO,
		              AFTER_DTA_CO,
		              CNVRS_AT,
		              CNVRS_DC,
		              CNVRS_COMPT,
		              NEW_AT,
		              ERYY_DATA,
		              CUD_PROGRM,
		              VRIFER,
		              VRIFY_DE,
		              RM,
		              BEFORE_STATS_DE,
		              AFTER_STATS_DE,
		              REGISTER_ID,
		              REGIST_DT,
		              UPDUSR_ID,
		              UPDT_DT
		       )
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDD'),
		       TABLE_SN,
		       JOB_SYS_NM,
		       BEFORE_TABLE_ID,
		       BEFORE_TABLE_NM,
		       AFTER_TABLE_ID,
		       AFTER_TABLE_NM,
		       BEFORE_DTA_CO,
		       AFTER_DTA_CO,
		       CNVRS_AT,
		       CNVRS_DC,
		       CNVRS_COMPT,
		       NEW_AT,
		       ERYY_DATA,
		       CUD_PROGRM,
		       VRIFER,
		       VRIFY_DE,
		       RM,
		       BEFORE_STATS_DE,
		       AFTER_STATS_DE,
		       #S_USER_ID#,
		       SYSDATE,
		       #S_USER_ID#,
		       SYSDATE
		FROM   TBCOM_DATA_CONVERSION_VRIFY
		WHERE  CNVRS_DE =
		       ( SELECT MAX(CNVRS_DE) AS CNVRS_DE
		           FROM TBCOM_DATA_CONVERSION_VRIFY
		       )
    </insert>
    
    <update id="SYM100100DAO.dataConversionVrifyU" parameterClass="hashmap">
    	UPDATE TBCOM_DATA_CONVERSION_VRIFY
		SET    BEFORE_DTA_CO =
		       (SELECT A.NUM_ROWS
		       FROM    ALL_TABLES@DL_IMS A
		       WHERE   A.OWNER      = 'DUCOIS'
		       AND     A.TABLE_NAME = BEFORE_TABLE_ID
		       )
		       ,
		       AFTER_DTA_CO =
		       (SELECT A.NUM_ROWS
		       FROM    ALL_TABLES A
		       WHERE   A.OWNER      = 'DUCOOPR'
		       AND     A.TABLE_NAME = AFTER_TABLE_ID
		       )
		       ,
		       BEFORE_STATS_DE =
		       (SELECT TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' )
		       FROM    ALL_TABLES@DL_IMS A
		       WHERE   A.OWNER      = 'DUCOIS'
		       AND     A.TABLE_NAME = BEFORE_TABLE_ID
		       )
		       ,
		       AFTER_STATS_DE =
		       (SELECT TO_CHAR( A.LAST_ANALYZED, 'YYYYMMDD' )
		       FROM    ALL_TABLES A
		       WHERE   A.OWNER      = 'DUCOOPR'
		       AND     A.TABLE_NAME = AFTER_TABLE_ID
		       )
		WHERE  CNVRS_DE = TO_CHAR(SYSDATE, 'YYYYMMDD')
    </update>
</sqlMap>