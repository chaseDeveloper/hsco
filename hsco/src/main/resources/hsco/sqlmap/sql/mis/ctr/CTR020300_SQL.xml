<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="CTR020300_SQL">
	
	
	<!-- 계약의뢰 조회 -->
	<select id="CTR020300DAO.selectCntrctReqestList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*CTR020300DAO.selectCntrctReqestList*/]]>
		SELECT ''                                              AS CHK
		     , T1.REQEST_NO
		     , T1.ORDER_YEAR
		     , T1.ORDER_SN
		     , T6.ORDER_NM
		     , T1.BSNS_CODE
		     , T2.BSNS_NM
		     , T1.REQEST_SE
		     , T1.DETAIL_SE
		     , T1.REQEST_DE
		     , T1.REQEST_DEPT_CODE
		     , T3.DEPT_NM                                      AS REQEST_DEPT_NM
		     , T1.CLIENT_EMPNO
		     , T4.EMPNM                                        AS CLIENT_EMPNM
		     , T1.REQEST_NM
		     , T1.REQEST_AMOUNT
		     , DECODE(NVL(T1.CONFM_AT, '0'), '1', '0', '1')    AS ENABLE_AT
		     , NVL(T1.CONFM_AT, '0')                           AS CONFM_AT
		     , NVL(t7.CNTRCT_AT,'0')                           AS CNTRCT_AT
		     , T7.CNTRCT_NO
		     , t1.SANCTN_NO1                                   AS SANCTN_NO1
		     , T8.SANCTN_KND                                   AS SANCTN_KND1
		     , t1.SANCTN_NO2                                   AS SANCTN_NO2
		     , T9.SANCTN_KND                                   AS SANCTN_KND2
		     , T6.REGIST_DT                                    AS ORDER_PLAN_REGIST_DT
		     , T7.MIN_CNTRCT_NO
		     , T7.MIN_REGIST_DT
		     , T7.MIN_BSNS_CODE
		     , CASE WHEN T7.CNTRCT_NO IS NOT NULL AND T7.MIN_BSNS_CODE IS NULL AND T6.REGIST_DT > T7.MIN_REGIST_DT THEN 'Y'
		            ELSE 'N'
		       END AS RE_CREAT_ENABLE_AT
		  FROM TBCTR_CNTRCT_REQEST T1
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE T2
		            ON T1.BSNS_CODE = T2.BSNS_CODE
		       LEFT OUTER JOIN TBHRM_DEPT T3
		            ON T1.REQEST_DEPT_CODE = T3.DEPT_CODE
		       LEFT OUTER JOIN TBHRM_HR_MASTR T4
		            ON T1.CLIENT_EMPNO = T4.EMPNO
		       LEFT OUTER JOIN TBCTR_BCNC_MASTR T5
		            ON T1.PRVCNTR_ENTRPS_CODE = T5.BCNC_CODE
		       LEFT OUTER JOIN TBCTR_ORDER_PLAN T6
		            ON T1.REQEST_NO = T6.REQEST_NO
		       LEFT OUTER JOIN (
		                        SELECT REQEST_NO
		                              ,DECODE(COUNT(1), 0, '0', '1')   AS CNTRCT_AT
		                              ,LISTAGG('['||REGEXP_REPLACE(CNTRCT_NO,'([0-9]{4})([0-9]{1})([0-9]{5})','\1-\2-\3')||']', ', ') WITHIN GROUP (ORDER BY CNTRCT_NO)           AS CNTRCT_NO
		                              ,MIN(CNTRCT_NO) AS MIN_CNTRCT_NO
		                              ,MIN(REGIST_DT) AS MIN_REGIST_DT
		                              ,MIN(BSNS_CODE) AS MIN_BSNS_CODE
		                        FROM   TBCTR_CNTRCT
		                        WHERE  REQEST_NO IS NOT NULL
		                        GROUP BY REQEST_NO
		                       ) T7
		            ON T1.REQEST_NO = T7.REQEST_NO
		       LEFT OUTER JOIN INTRAWARE.VIEW_MIS_SANCTN_KND@DL_INTRACITY T8
		            ON T1.SANCTN_NO1 = T8.SANCTN_NO
		       LEFT OUTER JOIN INTRAWARE.VIEW_MIS_SANCTN_KND@DL_INTRACITY T9
		            ON T1.SANCTN_NO2 = T9.SANCTN_NO
		 WHERE 1=1
		   AND SUBSTR(T1.REQEST_NO, 1, 4) = #REQEST_YEAR#
		<isNotEmpty property="REQEST_SE">
		   AND T1.REQEST_SE               = #REQEST_SE#
		</isNotEmpty>
		<isNotEmpty property="DETAIL_SE">
		   AND T1.DETAIL_SE               = #DETAIL_SE#
		</isNotEmpty>
		<isNotEqual property="CONFM_AT" compareValue="A">
		   AND NVL(T1.CONFM_AT, '0')      = #CONFM_AT#
		</isNotEqual>
		<isNotEmpty property="BSNS_CODE">
		   AND T1.BSNS_CODE               = #BSNS_CODE#
		</isNotEmpty>
		<isNotEmpty property="CLIENT_EMPNO">
		   AND T1.CLIENT_EMPNO            = #CLIENT_EMPNO#
		</isNotEmpty>
		<isNotEmpty property="REQEST_DEPT_CODE">
			<isNotEqual property="REQEST_DEPT_CODE" compareValue="000000" prepend="AND ">
		       (T1.REQEST_DEPT_CODE='000000' OR T1.REQEST_DEPT_CODE = #REQEST_DEPT_CODE#)
			</isNotEqual>
		</isNotEmpty>
		<isEqual property="SEARCH_SE" compareValue="0">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
		       (T1.REQEST_NO LIKE '%' || #SEARCH_VAL# || '%' OR T1.REQEST_NM LIKE '%' || #SEARCH_VAL# || '%')
			</isNotEmpty>
		</isEqual>
		<isEqual property="SEARCH_SE" compareValue="1">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
		       T1.REQEST_NO LIKE '%' || #SEARCH_VAL# || '%'
			</isNotEmpty>
		</isEqual>
		<isEqual property="SEARCH_SE" compareValue="2">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
		       T1.REQEST_NM LIKE '%' || #SEARCH_VAL# || '%'
			</isNotEmpty>
		</isEqual>
		ORDER BY T1.BSNS_CODE
		       , T1.REQEST_DEPT_CODE
		       , T1.REQEST_NO
	</select>


	<!-- 첨부파일 -->
	<select id="CTR020300DAO.selectCntrctReqestFile" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT t1.REQEST_NO
			      ,t2.FILE_SN
			      ,t2.FILE_ORDR
			      ,t2.ORGINL_FILE_NM
			      ,t2.FILE_STRE_COURS
			FROM   TBCTR_CNTRCT_REQEST t1
			       LEFT OUTER JOIN TBCOM_CMMN_ATCHMNFL t2
			            ON t1.FILE_SN = t2.FILE_SN
			WHERE  1=1
			AND SUBSTR(T1.REQEST_NO, 1, 4) = #REQEST_YEAR#
		<isNotEmpty property="REQEST_SE">
			AND    t1.REQEST_SE               = #REQEST_SE#
		</isNotEmpty>
		<isNotEmpty property="DETAIL_SE">
			AND    t1.DETAIL_SE               = #DETAIL_SE#
		</isNotEmpty>
		<isNotEmpty property="CONFM_AT">
			AND    t1.CONFM_AT                = #CONFM_AT#
		</isNotEmpty>
		<isNotEmpty property="BSNS_CODE">
			AND    t1.BSNS_CODE               = #BSNS_CODE#
		</isNotEmpty>
		<isNotEmpty property="CLIENT_EMPNO">
			AND    t1.CLIENT_EMPNO            = #CLIENT_EMPNO#
		</isNotEmpty>
		<isNotEmpty property="REQEST_DEPT_CODE">
			<isNotEqual property="REQEST_DEPT_CODE" compareValue="000000" prepend="AND ">
				(t1.REQEST_DEPT_CODE='000000' OR t1.REQEST_DEPT_CODE = #REQEST_DEPT_CODE#)
			</isNotEqual>
		</isNotEmpty>
		<isEqual property="SEARCH_SE" compareValue="0">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
				(t1.REQEST_NO LIKE '%' || #SEARCH_VAL# || '%' OR t1.REQEST_NM LIKE '%' || #SEARCH_VAL# || '%')
			</isNotEmpty>
		</isEqual>
		<isEqual property="SEARCH_SE" compareValue="1">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
				t1.REQEST_NO LIKE '%' || #SEARCH_VAL# || '%'
			</isNotEmpty>
		</isEqual>
		<isEqual property="SEARCH_SE" compareValue="2">
			<isNotEmpty property="SEARCH_VAL" prepend="AND ">
				t1.REQEST_NM LIKE '%' || #SEARCH_VAL# || '%'
			</isNotEmpty>
		</isEqual>
	</select>


	<!-- 의뢰별발주내역 조회 -->
	<select id="CTR020300DAO.selectReqestOrderPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		WITH EXECUT_BUDGET_TM AS (
		    SELECT t1.YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , t1.DETAIL_BSNS_CODE AS BSNS_CODE
		         , MAX(t4.BSNS_NM)     AS BSNS_NM
		         , MAX(t2.HANG_NM || '-' || t2.SEHANG_NM || '-' || t2.MOK_NM || '-' || t2.SEMOK_NM) AS BUDGET_ACNT_NM
		         , t1.DEPT_CODE
		         , MAX(t5.DEPT_NM)     AS DEPT_NM
		         , t1.BUDGET_ACNT_CODE
		         , t1.EXPNDTR_UNIT_CODE AS BUKIP_CODE
		         , MAX(t3.BUKIP_NM)     AS BUKIP_NM
		         , SUM(NVL(t1.ORIBDGT, 0)
		                  + NVL(t1.RVSPBGT_1_ODR, 0)
		                  + NVL(t1.RVSPBGT_2_ODR, 0) 
		                  + NVL(t1.RVSPBGT_3_ODR, 0) 
		                  + NVL(t1.RVSPBGT_4_ODR, 0)
		                  + NVL(t1.RVSPBGT_5_ODR, 0)
		                  + NVL(t1.RVSPBGT_6_ODR, 0)
		                  + NVL(t1.RVSPBGT_7_ODR, 0)
		                  + NVL(t1.CYFD_BUDGET, 0)
		                  + NVL(t1.MVMN_AM, 0)
		                  + NVL(t1.BUKIP_MVMN_AM, 0)
		                  + NVL(t1.DVR_AM, 0)
		                  + NVL(t1.RSVFND_REQST_AM, 0)
		                  + NVL(t1.TRSF_AM, 0)
		            ) AS EXECUT_BUDGET_AMT
		    FROM TBBDG_EXECUT_BUDGET t1
		        INNER JOIN VHBDG_BUDGET_ACNT_CODE t2
		          ON  t1.YEAR             = t2.YEAR
		          AND t1.BSNS_SE          = t2.BSNS_SE
		          AND t1.BALC_SE          = t2.BALC_SE
		          AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		        LEFT OUTER JOIN TBBDG_BUKIP_CODE t3
		          ON  t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
		        LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		          ON  t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		        LEFT OUTER JOIN TBHRM_DEPT t5
		          ON  t1.DEPT_CODE = t5.DEPT_CODE
		    GROUP BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , t1.DETAIL_BSNS_CODE
		           , t1.DEPT_CODE
		           , t1.BUDGET_ACNT_CODE
		           , t1.EXPNDTR_UNIT_CODE
		    ORDER BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , t1.DETAIL_BSNS_CODE
		           , t1.BUDGET_ACNT_CODE
		           , t1.EXPNDTR_UNIT_CODE
		)
		, EXP_DSN_MASTR_TM AS (
		    SELECT BUDGET_YEAR AS YEAR
		         , BSNS_SE
		         , BALC_SE
		         , BUDGET_ACNT_CODE
		         , EXPNDTR_UNIT_CODE AS BUKIP_CODE
		         , DEPT_CODE
		         , SUM(DECSN_AMOUNT) AS DECSN_AMOUNT
		    FROM TBACC_EXP_DSN_MASTR
		    GROUP BY BUDGET_YEAR
		           , BSNS_SE
		           , BALC_SE
		           , BUDGET_ACNT_CODE
		           , EXPNDTR_UNIT_CODE
		           , DEPT_CODE
		)
		SELECT t1.ORDER_PLAN_YEAR
		      ,t1.ORDER_PLAN_SN
		      ,t1.SN
		      ,t4.ORDER_PLAN_MT||'월'  AS ORDER_PLAN_MT    /*발주계획월*/
		      ,t4.ORDER_NM                                /*발주명*/
		      ,t4.CNTRCT_SE_CODE                          /*계약구분코드*/
		      ,t4.THTI_ODR_OUTSRC_AM                      /*금차도급액*/
		      ,t1.BUDGET_YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.BSNS_CODE
		      ,t1.DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE
		      ,t1.BUKIP_CODE
		      ,t1.RM
		      ,t2.BSNS_NM
		      ,t2.DEPT_NM
		      ,t2.BUDGET_ACNT_NM
		      ,t2.BUKIP_NM
		      ,t2.EXECUT_BUDGET_AMT
		      ,t3.DECSN_AMOUNT
		FROM   TBCTR_ORDER_BUDGET t1
		       LEFT OUTER JOIN EXECUT_BUDGET_TM t2
		           ON t1.BUDGET_YEAR       = t2.YEAR
		          AND t1.BSNS_SE           = t2.BSNS_SE
		          AND t1.BALC_SE           = t2.BALC_SE
		          AND t1.BSNS_CODE         = t2.BSNS_CODE
		          AND t1.DEPT_CODE         = t2.DEPT_CODE
		          AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		          AND t1.BUKIP_CODE        = t2.BUKIP_CODE
		       LEFT OUTER JOIN EXP_DSN_MASTR_TM t3
		           ON t2.YEAR              = t3.YEAR
		          AND t2.BSNS_SE           = t3.BSNS_SE
		          AND t2.BALC_SE           = t3.BALC_SE
		          AND t2.DEPT_CODE         = t3.DEPT_CODE
		          AND t2.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
		          AND t2.BUKIP_CODE        = t3.BUKIP_CODE
		       LEFT OUTER JOIN TBCTR_ORDER_PLAN t4
		            ON t1.ORDER_PLAN_YEAR  = t4.ORDER_PLAN_YEAR
		           AND t1.ORDER_PLAN_SN    = t4.ORDER_PLAN_SN
		WHERE  t2.EXECUT_BUDGET_AMT <> 0
	]]>
	<isNotEmpty property="REQEST_NO">
		AND    t4.REQEST_NO = #REQEST_NO#
	</isNotEmpty>
	<isEmpty property="REQEST_NO">
		<isNotEmpty property="ORDER_PLAN_YEAR">
			<isNotEmpty property="ORDER_PLAN_SN">
				AND    t1.ORDER_PLAN_YEAR = #ORDER_PLAN_YEAR#
				AND    t1.ORDER_PLAN_SN   = #ORDER_PLAN_SN#
			</isNotEmpty>
		</isNotEmpty>
	</isEmpty>
	<![CDATA[
		ORDER BY t1.ORDER_PLAN_YEAR
		        ,t1.ORDER_PLAN_SN
		        ,t1.BUDGET_YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.BSNS_CODE
		        ,t1.DEPT_CODE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.BUKIP_CODE
	]]>
	</select>


	<!-- 계약번호 생성 -->
	<select id="CTR020300DAO.cntrctNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<![CDATA[/*CTR020300DAO.cntrctNo*/]]>
		SELECT SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 1, 4) || #CNTRCT_SE# || NVL(LPAD(TO_NUMBER(SUBSTR(MAX(CNTRCT_NO), 6, 5)) + 1, 5, '0'), '00001')
		FROM   TBCTR_CNTRCT
		WHERE  CNTRCT_NO LIKE SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 1, 4) || #CNTRCT_SE# || '%'
	</select>


	<!-- 계약정보 생성 대상 -->
	<select id="CTR020300DAO.selectCntrctTrget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT t2.BSNS_CODE                AS BSNS_CODE
		      ,t1.REQEST_NO                AS REQEST_NO
		      ,t1.REQEST_SE                AS CNTRCT_SE
		      ,t2.CNTRCT_KND_CODE          AS DETAIL_SE
		      ,t2.ORDER_NM                 AS CNTRCT_NM
		      ,t1.REQEST_AMOUNT            AS CNTRCT_AMOUNT
		      ,t1.REQEST_AMOUNT            AS FRST_CNTRCT_AMOUNT
		      ,t1.REQEST_AMOUNT            AS DSGN_AMOUNT
		      ,t1.REQEST_AMOUNT            AS BSIS_AMOUNT
		      ,t1.COPERTN_OUTSRC_SE        AS OUTSRC_MTH_SE
		      ,t1.REQEST_DE                AS CNTRCT_DE               /*의뢰일을 계약일로 넣는것도 이상하긴 한데... SYSDATE는 더 이상하고...*/
		      ,t1.STRWRK_DE                AS STRWRK_DE
		      ,t1.COMPET_DE                AS COMPET_DE
		      ,t1.PRVCNTR_PRVONSH          AS PRVCNTR_PRVONSH
		      ,t1.REQEST_DEPT_CODE         AS MNG_DEPT_CODE
		      ,'0'                         AS INFRML_CNTRCT_AT
		      ,t1.CNTRCT_MTH_SE            AS CNTRCT_MTH_SE
		      ,'001'                       AS PROGRS_SE               /*CTR043 : 001(진행)*/
		      ,'0'                         AS RCEPT_SE                /*CTR050 : 0(미접수)*/
		      ,t2.ORDER_PLAN_YEAR          AS ORDER_PLAN_YEAR
		      ,t2.ORDER_PLAN_SN            AS ORDER_PLAN_SN
		FROM   TBCTR_CNTRCT_REQEST t1
		       LEFT OUTER JOIN TBCTR_ORDER_PLAN t2
		            ON t1.REQEST_NO = t2.REQEST_NO
		WHERE  SFCOM_GET_SANCTN_KND(t1.SANCTN_NO1) = '5'
		AND    t1.REQEST_NO = #REQEST_NO#
	</select>


	<!-- 계약대장(마스터) 등록 -->
	<insert id="CTR020300DAO.insertCntrct" parameterClass="java.util.HashMap">
	<![CDATA[/*CTR020300DAO.insertCntrct*/]]>
		INSERT INTO TBCTR_CNTRCT (
		     CNTRCT_NO
		    ,BSNS_CODE
		    ,REQEST_NO
		    ,CNTRCT_SE
		    ,DETAIL_SE
		    ,CNTRCT_NM
		    ,CNTRCT_AMOUNT
		    ,FRST_CNTRCT_AMOUNT
		    ,DSGN_AMOUNT
		    ,BSIS_AMOUNT
		    ,OUTSRC_MTH_SE
		    ,CNTRCT_DE
		    ,STRWRK_DE
		    ,COMPET_DE
		    ,PRVCNTR_PRVONSH
		    ,MNG_DEPT_CODE
		    ,INFRML_CNTRCT_AT
		    ,CNTRCT_MTH_SE
		    ,PROGRS_SE
		    ,RCEPT_SE
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		) VALUES (
		     #CNTRCT_NO#
		    ,#BSNS_CODE#
		    ,#REQEST_NO#
		    ,#CNTRCT_SE#
		    ,#DETAIL_SE#
		    ,#CNTRCT_NM#
		    ,#CNTRCT_AMOUNT#
		    ,#FRST_CNTRCT_AMOUNT#
		    ,#DSGN_AMOUNT#
		    ,#BSIS_AMOUNT#
		    ,#OUTSRC_MTH_SE#
		    ,#CNTRCT_DE#
		    ,#STRWRK_DE#
		    ,#COMPET_DE#
		    ,#PRVCNTR_PRVONSH#
		    ,#MNG_DEPT_CODE#
		    ,#INFRML_CNTRCT_AT#
		    ,#CNTRCT_MTH_SE#
		    ,#PROGRS_SE#
		    ,#RCEPT_SE#
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#S_USER_ID#
		    ,SYSDATE
		)
	</insert>
	
	
	<!-- 계약대장(마스터) 수정 -->
	<update id="CTR020300DAO.updateCntrct" parameterClass="java.util.HashMap">
		<![CDATA[/*CTR020300DAO.updateCntrct*/]]>
		UPDATE TBCTR_CNTRCT
		   SET BSNS_CODE          = #BSNS_CODE#
		     , REQEST_NO          = #REQEST_NO#
		     , CNTRCT_SE          = #CNTRCT_SE#
		     , DETAIL_SE          = #DETAIL_SE#
		     , CNTRCT_NM          = #CNTRCT_NM#
		     , CNTRCT_AMOUNT      = #CNTRCT_AMOUNT#
		     , FRST_CNTRCT_AMOUNT = #FRST_CNTRCT_AMOUNT#
		     , DSGN_AMOUNT        = #DSGN_AMOUNT#
		     , BSIS_AMOUNT        = #BSIS_AMOUNT#
		     , OUTSRC_MTH_SE      = #OUTSRC_MTH_SE#
		     , CNTRCT_DE          = #CNTRCT_DE#
		     , STRWRK_DE          = #STRWRK_DE#
		     , COMPET_DE          = #COMPET_DE#
		     , PRVCNTR_PRVONSH    = #PRVCNTR_PRVONSH#
		     , MNG_DEPT_CODE      = #MNG_DEPT_CODE#
		     , INFRML_CNTRCT_AT   = #INFRML_CNTRCT_AT#
		     , CNTRCT_MTH_SE      = #CNTRCT_MTH_SE#
		     , PROGRS_SE          = #PROGRS_SE#
		     , RCEPT_SE           = #RCEPT_SE#
		     , REGISTER_ID        = #S_USER_ID#
		     , REGIST_DT          = SYSDATE
		     , UPDUSR_ID          = #S_USER_ID#
		     , UPDT_DT            = SYSDATE
		 WHERE CNTRCT_NO = #MIN_CNTRCT_NO#
	</update>
	
	
	<!-- 계약대장(예산배정) 등록 -->
	<insert id="CTR020300DAO.insertCntrctBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*CTR020300DAO.insertCntrctBudget*/]]>
		INSERT INTO TBCTR_CNTRCT_BUDGET (
		      CNTRCT_NO
		     ,SN
		     ,BUDGET_YEAR
		     ,BSNS_SE
		     ,BALC_SE
		     ,BSNS_CODE
		     ,DEPT_CODE
		     ,BUDGET_ACNT_CODE
		     ,BUKIP_CODE
		     ,RM
		     ,REGISTER_ID
		     ,REGIST_DT
		     ,UPDUSR_ID
		     ,UPDT_DT
		)
		SELECT #CNTRCT_NO#    AS CNTRCT_NO
		      ,SN
		      ,BUDGET_YEAR
		      ,BSNS_SE
		      ,BALC_SE
		      ,BSNS_CODE
		      ,DEPT_CODE
		      ,BUDGET_ACNT_CODE
		      ,BUKIP_CODE
		      ,RM
		      ,#S_USER_ID#
		      ,SYSDATE
		      ,#S_USER_ID#
		      ,SYSDATE
		FROM   TBCTR_ORDER_BUDGET
		WHERE  ORDER_PLAN_YEAR = #ORDER_PLAN_YEAR#
		AND    ORDER_PLAN_SN   = #ORDER_PLAN_SN#
	</insert>
	
	
	<!-- 계약대장(물품) 등록 -->
	<insert id="CTR020300DAO.insertCntrctThng" parameterClass="java.util.HashMap">
		<![CDATA[/*CTR020300DAO.insertCntrctThng*/]]>
		INSERT INTO TBCTR_CNTRCT_THNG (
		      CNTRCT_NO
		     ,SN
		     ,THNG_CL_NO
		     ,THNG_IDNTFC_NO
		     ,THNG_CL_NM
		     ,STNDRD_NM
		     ,QY
		     ,UNTPC
		     ,UNIT_SE
		     ,AMOUNT
		     ,DVYFG_MTHD
		     ,DVYFG_CO
		     ,DVYFG_PLACE
		     ,DVYFG_TMLMT_DE
		     ,DVYFG_DEMAND_NO
		     ,DVYFG_DEMAND_DE
		     ,RM
		     ,REGISTER_ID
		     ,REGIST_DT
		     ,UPDUSR_ID
		     ,UPDT_DT
		)
		SELECT #CNTRCT_NO#    AS CNTRCT_NO
		      ,(SELECT NVL(MAX(SN), 0) + 1
		        FROM   TBCTR_CNTRCT_THNG
		        WHERE  CNTRCT_NO = #CNTRCT_NO#) + (ROWNUM - 1)    AS SN
		      ,THNG_CL_NO
		      ,THNG_IDNTFC_NO
		      ,THNG_CL_NM
		      ,STNDRD_NM
		      ,QY
		      ,UNTPC
		      ,UNIT_SE
		      ,AMOUNT
		      ,DVYFG_MTHD
		      ,DVYFG_CO
		      ,DVYFG_PLACE
		      ,DVYFG_TMLMT_DE
		      ,DVYFG_DEMAND_NO
		      ,DVYFG_DEMAND_DE
		      ,RM
		      ,#S_USER_ID#
		      ,SYSDATE
		      ,#S_USER_ID#
		      ,SYSDATE
		FROM   TBCTR_CNTRCT_REQEST_THNG
		WHERE  REQEST_NO = #REQEST_NO#
	</insert>
	
	
 </sqlMap>