<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG050101_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


    <!-- 입력가능여부 조회 -->
    <select id="BDG050101DAO.selectInpYn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.selectInpYn*/]]>
        SELECT CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END AS INP_YN
        FROM   TBBDG_BUDGET_FRMTN_PD t1
               LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT t2
                    ON t1.YEAR = t2.YEAR
                   AND t1.SN = t2.SN
        WHERE  t1.USE_AT = '1'
        AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN t1.BGNDE AND t1.ENDDE
        AND    t1.YEAR = #YEAR#
        AND    t1.BUDGET_SE = #BUDGET_SE#
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (t2.DEPT_CODE='000000' OR t2.DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </select>


	<!-- 예산집행계획 조회 -->
	<select id="BDG050101DAO.selectExecutBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG050101DAO.selectExcutBudget*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,NVL(t3.BSNS_NM,'기타')                   AS DETAIL_BSNS_NM
		      ,t1.DETAIL_BSNS_CODE||'.'||t3.BSNS_NM    AS DETAIL_BSNS_NM2
		      ,t1.DEPT_CODE
		      ,t2.DEPT_NM
		      ,t1.DEPT_CODE||'.'||t2.DEPT_NM   AS DEPT_NM2
		      ,t1.BUDGET_ACNT_CODE
		      ,t4.BUDGET_ACNT_NM
		      ,(CASE WHEN t4.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t4.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(t4.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t4.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t4.BUDGET_ACNT_CODE, 4, 3)
		             ELSE SUBSTR(t4.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t4.BUDGET_ACNT_CODE, 4)    END) ||'.'|| t4.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM2
		      ,t5.BUKIP_CODE
		      ,t6.BUKIP_NM
		      ,t5.BUKIP_CODE || '.' || t6.BUKIP_NM    AS BUKIP_NM2
		      ,NVL(t1.ORIBDGT,0)    AS ORIBDGT
		      ,NVL(t1.RVSPBGT_1_ODR,0)
		           +NVL(t1.RVSPBGT_2_ODR,0)
		           +NVL(t1.RVSPBGT_3_ODR,0)
		           +NVL(t1.RVSPBGT_4_ODR,0)
		           +NVL(t1.RVSPBGT_5_ODR,0)
		           +NVL(t1.RVSPBGT_6_ODR,0)
		           +NVL(t1.RVSPBGT_7_ODR,0)    AS RVSPBGT_ODR
		      ,NVL(t1.CYFD_BUDGET,0)    AS CYFD_BUDGET
		      ,NVL(t1.TRSF_AM,0)+NVL(t1.MVMN_AM,0)+NVL(t1.BUKIP_MVMN_AM,0)+NVL(t1.DVR_AM,0)+NVL(t1.RSVFND_REQST_AM,0)    AS MVMN_AM
		      ,NVL(t1.ORIBDGT,0)
		           +NVL(t1.RVSPBGT_1_ODR,0)
		           +NVL(t1.RVSPBGT_2_ODR,0)
		           +NVL(t1.RVSPBGT_3_ODR,0)
		           +NVL(t1.RVSPBGT_4_ODR,0)
		           +NVL(t1.RVSPBGT_5_ODR,0)
		           +NVL(t1.RVSPBGT_6_ODR,0)
		           +NVL(t1.RVSPBGT_7_ODR,0)
		           +NVL(t1.CYFD_BUDGET,0)
		           +NVL(t1.TRSF_AM,0)+NVL(t1.MVMN_AM,0)+NVL(t1.BUKIP_MVMN_AM,0)+NVL(t1.DVR_AM,0)+NVL(t1.RSVFND_REQST_AM,0)    AS TOT_BUDGET_AM
		      ,TRUNC((NVL(t1.ORIBDGT,0)
		           +NVL(t1.RVSPBGT_1_ODR,0)
		           +NVL(t1.RVSPBGT_2_ODR,0)
		           +NVL(t1.RVSPBGT_3_ODR,0)
		           +NVL(t1.RVSPBGT_4_ODR,0)
		           +NVL(t1.RVSPBGT_5_ODR,0)
		           +NVL(t1.RVSPBGT_6_ODR,0)
		           +NVL(t1.RVSPBGT_7_ODR,0)
		           +NVL(t1.CYFD_BUDGET,0)
		           +NVL(t1.TRSF_AM,0)+NVL(t1.MVMN_AM,0)+NVL(t1.BUKIP_MVMN_AM,0)+NVL(t1.DVR_AM,0)+NVL(t1.RSVFND_REQST_AM,0)) * DECODE(t1.BSNS_SE||t1.BALC_SE,'22',1,'12',1,0.85))    AS TRG_BDG_AMT
		      ,NVL(t7.ASIGN_AM_01,0) + NVL(t7.ASIGN_AM_02,0) + NVL(t7.ASIGN_AM_03,0) + NVL(t7.ASIGN_AM_04,0) + NVL(t7.ASIGN_AM_05,0) + NVL(t7.ASIGN_AM_06,0)
               + NVL(t7.ASIGN_AM_07,0) + NVL(t7.ASIGN_AM_08,0) + NVL(t7.ASIGN_AM_09,0) + NVL(t7.ASIGN_AM_10,0) + NVL(t7.ASIGN_AM_11,0) + NVL(t7.ASIGN_AM_12,0)    AS ASIGN_AM
              ,NVL(t7.ASIGN_AM_01,0)    AS ASIGN_AM_01
              ,NVL(t7.ASIGN_AM_02,0)    AS ASIGN_AM_02
              ,NVL(t7.ASIGN_AM_03,0)    AS ASIGN_AM_03
              ,NVL(t7.ASIGN_AM_04,0)    AS ASIGN_AM_04
              ,NVL(t7.ASIGN_AM_05,0)    AS ASIGN_AM_05
              ,NVL(t7.ASIGN_AM_06,0)    AS ASIGN_AM_06
              ,NVL(t7.ASIGN_AM_07,0)    AS ASIGN_AM_07
              ,NVL(t7.ASIGN_AM_08,0)    AS ASIGN_AM_08
              ,NVL(t7.ASIGN_AM_09,0)    AS ASIGN_AM_09
              ,NVL(t7.ASIGN_AM_10,0)    AS ASIGN_AM_10
              ,NVL(t7.ASIGN_AM_11,0)    AS ASIGN_AM_11
              ,NVL(t7.ASIGN_AM_12,0)    AS ASIGN_AM_12
              ,NVL(t8.DECSN_AM,0)       AS DECSN_AM
              ,NVL(t8.DECSN_AM01,0)     AS DECSN_AM_01
              ,NVL(t8.DECSN_AM02,0)     AS DECSN_AM_02
              ,NVL(t8.DECSN_AM03,0)     AS DECSN_AM_03
              ,NVL(t8.DECSN_AM04,0)     AS DECSN_AM_04
              ,NVL(t8.DECSN_AM05,0)     AS DECSN_AM_05
              ,NVL(t8.DECSN_AM06,0)     AS DECSN_AM_06
              ,NVL(t8.DECSN_AM07,0)     AS DECSN_AM_07
              ,NVL(t8.DECSN_AM08,0)     AS DECSN_AM_08
              ,NVL(t8.DECSN_AM09,0)     AS DECSN_AM_09
              ,NVL(t8.DECSN_AM10,0)     AS DECSN_AM_10
              ,NVL(t8.DECSN_AM11,0)     AS DECSN_AM_11
              ,NVL(t8.DECSN_AM12,0)     AS DECSN_AM_12
              ,t7.PROGRS_STTUS
              ,t7.DCSN_AT
              ,t7.ELPD_EXCUT_RATE
		FROM   TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN VWHRM_DEPT t2
		            ON t1.DEPT_CODE = t2.DEPT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t4
		            ON t1.YEAR    = t4.YEAR
		           AND t1.BSNS_SE = t4.BSNS_SE
		           AND t1.BALC_SE = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t5
					ON t1.YEAR               = t5.YEAR
				   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
				   AND t1.EXPNDTR_UNIT_CODE = t5.BUKIP_CODE
					LEFT OUTER JOIN TBBDG_BUKIP_CODE t6
					ON t1.EXPNDTR_UNIT_CODE = t6.BUKIP_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_EXCUT_PLAN t7
		            ON t1.YEAR              = t7.YEAR
		           AND t1.BSNS_SE           = t7.BSNS_SE
		           AND t1.BALC_SE           = t7.BALC_SE
		           AND t1.DETAIL_BSNS_CODE  = t7.DETAIL_BSNS_CODE
		           AND t1.DEPT_CODE         = t7.DEPT_CODE
		           AND t1.BUDGET_ACNT_CODE  = t7.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t7.EXPNDTR_UNIT_CODE
		           LEFT OUTER JOIN (
									<isEqual property="YEAR_SE" compareValue="1">
									    SELECT A.BUDGET_YEAR
									          ,A.BSNS_SE
									          ,A.BALC_SE
									          ,A.BSNS_CODE
									          ,A.DEPT_CODE
									          ,A.BUDGET_ACNT_CODE
									          ,A.EXPNDTR_UNIT_CODE
									          ,NVL(SUM(A.DECSN_AMOUNT),0)                                                 AS DECSN_AM
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'01',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM01
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'02',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM02
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'03',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM03
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'04',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM04
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'05',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM05
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'06',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM06
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'07',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM07
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'08',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM08
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'09',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM09
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'10',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM10
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'11',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM11
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'12',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM12
									    FROM   VHACC_EXP_DSN_MASTR A
									    WHERE  1=1
									    AND    SUBSTR(A.CAUSE_ACTION_DE, 1, 4) = #YEAR#
									    GROUP BY A.BUDGET_YEAR
									            ,A.BSNS_SE
									            ,A.BALC_SE
									            ,A.BSNS_CODE
									            ,A.DEPT_CODE
									            ,A.BUDGET_ACNT_CODE
									            ,A.EXPNDTR_UNIT_CODE
									</isEqual>
									<isEqual property="YEAR_SE" compareValue="2">
									    SELECT A.BUDGET_YEAR
									         , A.BSNS_SE
									         , A.BALC_SE
									         , A.BSNS_CODE
									         , A.BUDGET_DEPT_CODE                                                           AS DEPT_CODE
									         , A.BUDGET_ACNT_CODE
									         , A.EXPNDTR_UNIT_CODE
									         , SUM(DECSN_AMOUNT)                                                            AS DECSN_AM
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '01', DECSN_AMOUNT, 0))    AS DECSN_AM01
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '02', DECSN_AMOUNT, 0))    AS DECSN_AM02
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '03', DECSN_AMOUNT, 0))    AS DECSN_AM03
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '04', DECSN_AMOUNT, 0))    AS DECSN_AM04
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '05', DECSN_AMOUNT, 0))    AS DECSN_AM05
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '06', DECSN_AMOUNT, 0))    AS DECSN_AM06
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '07', DECSN_AMOUNT, 0))    AS DECSN_AM07
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '08', DECSN_AMOUNT, 0))    AS DECSN_AM08
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '09', DECSN_AMOUNT, 0))    AS DECSN_AM09
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '10', DECSN_AMOUNT, 0))    AS DECSN_AM10
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '11', DECSN_AMOUNT, 0))    AS DECSN_AM11
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '12', DECSN_AMOUNT, 0))    AS DECSN_AM12
									      FROM TBACC_EXP_DSN_MASTR A /*지출결의마스터*/
									     WHERE 1=1
									       AND DECSN_YEAR = #YEAR#
									    GROUP BY A.BUDGET_YEAR
									           , A.BSNS_SE
									           , A.BALC_SE
									           , A.BSNS_CODE
									           , A.BUDGET_DEPT_CODE
									           , A.BUDGET_ACNT_CODE
									           , A.EXPNDTR_UNIT_CODE
									</isEqual>
									   ) t8
				    ON t1.YEAR = t8.BUDGET_YEAR
				   AND t1.BSNS_SE = t8.BSNS_SE
				   AND t1.BALC_SE = t8.BALC_SE
				   AND t1.DETAIL_BSNS_CODE  = t8.BSNS_CODE
				   AND t1.DEPT_CODE         = t8.DEPT_CODE
				   AND t1.BUDGET_ACNT_CODE = t8.BUDGET_ACNT_CODE
				   AND t1.EXPNDTR_UNIT_CODE = t8.EXPNDTR_UNIT_CODE
		WHERE  t1.YEAR    = #YEAR#
		AND    t1.BALC_SE = #BALC_SE#
		<isNotEmpty property="BSNS_SE"          prepend="AND    ">t1.BSNS_SE          = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BSNS_CODE"        prepend="AND    ">t1.DETAIL_BSNS_CODE = #BSNS_CODE#</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
				t1.DEPT_CODE = #DEPT_CODE#
			</isNotEqual>
		</isNotEmpty>
		ORDER BY t1.BSNS_SE
		       , t1.BALC_SE
		       , t1.DETAIL_BSNS_CODE
		       , t1.DEPT_CODE
		       , t1.BUDGET_ACNT_CODE
		       , t1.EXPNDTR_UNIT_CODE
	</select>


	<!-- 조기집행계획 조회 -->
	<select id="BDG050101DAO.selectBudgetExcutPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG050101DAO.selectBudgetExcutPlan*/]]>
		SELECT t1.MT
		      ,#YEAR#               AS YEAR
		      ,#BSNS_SE#            AS BSNS_SE
		      ,#BALC_SE#            AS BALC_SE
		      ,#DETAIL_BSNS_CODE#   AS DETAIL_BSNS_CODE
		      ,#DEPT_CODE#          AS DEPT_CODE
		      ,#BUDGET_ACNT_CODE#   AS BUDGET_ACNT_CODE
		      ,#EXPNDTR_UNIT_CODE#  AS EXPNDTR_UNIT_CODE
		      ,t2.ASIGN_MT
		      ,t2.ASIGN_AM
		      ,t2.PROGRS_STTUS
		FROM   (
		        SELECT LPAD(ROWNUM,2,'0')   AS MT
		        FROM   DUAL
		        CONNECT BY LEVEL &lt;= 12
		       ) t1
		       LEFT OUTER JOIN (
		                        SELECT ASIGN_MT
		                              ,ASIGN_AM
		                              ,PROGRS_STTUS
		                        FROM   TBBDG_BUDGET_EXCUT_PLAN
		                        WHERE  YEAR              = #YEAR#
		                        AND    BSNS_SE           = #BSNS_SE#
		                        AND    BALC_SE           = #BALC_SE#
		                        AND    DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		                        AND    DEPT_CODE         = #DEPT_CODE#
		                        AND    BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		                        AND    EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		                       ) t2
		            ON t1.MT = t2.ASIGN_MT
		WHERE  1=1
		ORDER BY t1.MT
	</select>


	<!-- 예산집행계획 수정 -->
	<update id="BDG050101DAO.updateBudgetExcutPlan" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG050101DAO.updateBudgetExcutPlan*/]]>
		MERGE INTO TBBDG_BUDGET_EXCUT_PLAN
		USING DUAL
		ON    (
		           YEAR              = #YEAR#
		       AND BSNS_SE           = #BSNS_SE#
		       AND BALC_SE           = #BALC_SE#
		       AND DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		       AND DEPT_CODE         = #DEPT_CODE#
		       AND BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		       AND EXPNDTR_UNIT_CODE = #BUKIP_CODE#
		      )
		    WHEN MATCHED THEN
		        UPDATE
		        SET    ASIGN_AM_01  = NVL(#ASIGN_AM_01#,0)
		              ,ASIGN_AM_02  = NVL(#ASIGN_AM_02#,0)
		              ,ASIGN_AM_03  = NVL(#ASIGN_AM_03#,0)
		              ,ASIGN_AM_04  = NVL(#ASIGN_AM_04#,0)
		              ,ASIGN_AM_05  = NVL(#ASIGN_AM_05#,0)
		              ,ASIGN_AM_06  = NVL(#ASIGN_AM_06#,0)
		              ,ASIGN_AM_07  = NVL(#ASIGN_AM_07#,0)
		              ,ASIGN_AM_08  = NVL(#ASIGN_AM_08#,0)
		              ,ASIGN_AM_09  = NVL(#ASIGN_AM_09#,0)
		              ,ASIGN_AM_10  = NVL(#ASIGN_AM_10#,0)
		              ,ASIGN_AM_11  = NVL(#ASIGN_AM_11#,0)
		              ,ASIGN_AM_12  = NVL(#ASIGN_AM_12#,0)
		              ,UPDUSR_ID    = #S_USER_ID#
		              ,UPDT_DT      = SYSDATE
		    WHEN NOT MATCHED THEN 
		        INSERT (
		             YEAR
		            ,BSNS_SE
		            ,BALC_SE
		            ,DETAIL_BSNS_CODE
		            ,DEPT_CODE
		            ,BUDGET_ACNT_CODE
		            ,EXPNDTR_UNIT_CODE
		            ,REGISTER_ID
		            ,REGIST_DT
		            ,UPDUSR_ID
		            ,UPDT_DT
		            ,ASIGN_AM_01
		            ,ASIGN_AM_02
		            ,ASIGN_AM_03
		            ,ASIGN_AM_04
		            ,ASIGN_AM_05
		            ,ASIGN_AM_06
		            ,ASIGN_AM_07
		            ,ASIGN_AM_08
		            ,ASIGN_AM_09
		            ,ASIGN_AM_10
		            ,ASIGN_AM_11
		            ,ASIGN_AM_12
		        ) VALUES (
		             #YEAR#
		            ,#BSNS_SE#
		            ,#BALC_SE#
		            ,#DETAIL_BSNS_CODE#
		            ,#DEPT_CODE#
		            ,#BUDGET_ACNT_CODE#
		            ,#BUKIP_CODE#
		            ,#S_USER_ID#
		            ,SYSDATE
		            ,#S_USER_ID#
		            ,SYSDATE
		            ,NVL(#ASIGN_AM_01#,0)
		            ,NVL(#ASIGN_AM_02#,0)
		            ,NVL(#ASIGN_AM_03#,0)
		            ,NVL(#ASIGN_AM_04#,0)
		            ,NVL(#ASIGN_AM_05#,0)
		            ,NVL(#ASIGN_AM_06#,0)
		            ,NVL(#ASIGN_AM_07#,0)
		            ,NVL(#ASIGN_AM_08#,0)
		            ,NVL(#ASIGN_AM_09#,0)
		            ,NVL(#ASIGN_AM_10#,0)
		            ,NVL(#ASIGN_AM_11#,0)
		            ,NVL(#ASIGN_AM_12#,0)
		        )
	</update>


    <!-- 예산집행계획 추가 -->
    <insert id="BDG050101DAO.insertBudgetExcutPlan" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.insertBudgetExcutPlan*/]]>
        INSERT INTO TBBDG_BUDGET_EXCUT_PLAN (
             YEAR
           , BSNS_SE
           , BALC_SE
           , DETAIL_BSNS_CODE
           , DEPT_CODE
           , BUDGET_ACNT_CODE
           , EXPNDTR_UNIT_CODE
           , ASIGN_AM_01
           , ASIGN_AM_02
           , ASIGN_AM_03
           , ASIGN_AM_04
           , ASIGN_AM_05
           , ASIGN_AM_06
           , ASIGN_AM_07
           , ASIGN_AM_08
           , ASIGN_AM_09
           , ASIGN_AM_10
           , ASIGN_AM_11
           , ASIGN_AM_12
           , ASIGN_AM_13
           , ELPD_EXCUT_RATE
           , REGISTER_ID
           , REGIST_DT
           , UPDUSR_ID
           , UPDT_DT
        )
        SELECT R.YEAR
             , R.BSNS_SE
             , R.BALC_SE
             , R.DETAIL_BSNS_CODE
             , R.DEPT_CODE
             , R.BUDGET_ACNT_CODE
             , R.EXPNDTR_UNIT_CODE
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_ELPD_EXCUT_AM
             , R.MNBY_GNRL_AM
             , R.MNBY_GNRL_AM
             , R.MNBY_GNRL_AM
             , R.MNBY_GNRL_AM
             , R.MNBY_GNRL_AM
             , R.PLAN_AM_12
             , 0
             , R.ELPD_EXCUT_RATE
             , #S_USER_ID#
             , SYSDATE
             , #S_USER_ID#
             , SYSDATE
          FROM (
                SELECT T.YEAR
				     , T.BSNS_SE
				     , T.BALC_SE
				     , T.DETAIL_BSNS_CODE
				     , T.DEPT_CODE
				     , T.BUDGET_ACNT_CODE
				     , T.EXPNDTR_UNIT_CODE
				     , T.ELPD_EXCUT_RATE
				     , T.TOT_BUDGET_AM                                                                                                                                      AS TOT_BUDGET_AM
				     , DECODE(ELPD_EXCUT_RATE, 50, FLOOR(T.TOT_BUDGET_AM / 12 / 1000) * 1000
				                                  , FLOOR(T.TOT_BUDGET_AM * ELPD_EXCUT_RATE / 100 / 6 / 1000) * 1000)                                                       AS MNBY_ELPD_EXCUT_AM
				     , DECODE(ELPD_EXCUT_RATE, 50, FLOOR(T.TOT_BUDGET_AM / 12 / 1000) * 1000
				                                  , FLOOR((T.TOT_BUDGET_AM - (FLOOR(T.TOT_BUDGET_AM * ELPD_EXCUT_RATE / 100 / 6 / 1000) * 1000 * 6)) / 6 / 1000) * 1000)    AS MNBY_GNRL_AM
				     , DECODE(ELPD_EXCUT_RATE, 50, (FLOOR(T.TOT_BUDGET_AM / 12 / 1000) * 1000) + T.TOT_BUDGET_AM - (FLOOR(T.TOT_BUDGET_AM / 12 / 1000) * 1000 * 12)
				                                  , (T.TOT_BUDGET_AM - (FLOOR(T.TOT_BUDGET_AM * ELPD_EXCUT_RATE / 100 / 6 / 1000) * 1000 * 6) - (FLOOR((T.TOT_BUDGET_AM - (FLOOR(T.TOT_BUDGET_AM * ELPD_EXCUT_RATE / 100 / 6 / 1000) * 1000 * 6)) / 6 / 1000) * 1000 * 6)) + (FLOOR((T.TOT_BUDGET_AM - (FLOOR(T.TOT_BUDGET_AM * ELPD_EXCUT_RATE / 100 / 6 / 1000) * 1000 * 6)) / 6 / 1000) * 1000)) AS     PLAN_AM_12
				  FROM (
				        SELECT YEAR
						     , BSNS_SE
						     , BALC_SE
						     , DETAIL_BSNS_CODE
						     , DEPT_CODE
						     , BUDGET_ACNT_CODE
						     , EXPNDTR_UNIT_CODE
						     , #ELPD_EXCUT_RATE# AS ELPD_EXCUT_RATE
						     , NVL(ORIBDGT,0)
						          +NVL(RVSPBGT_1_ODR,0)
						          +NVL(RVSPBGT_2_ODR,0)
						          +NVL(RVSPBGT_3_ODR,0)
						          +NVL(RVSPBGT_4_ODR,0)
						          +NVL(RVSPBGT_5_ODR,0)
						          +NVL(RVSPBGT_6_ODR,0)
						          +NVL(RVSPBGT_7_ODR,0)
						          +NVL(CYFD_BUDGET,0)
						          +NVL(TRSF_AM,0)+NVL(MVMN_AM,0)+NVL(BUKIP_MVMN_AM,0)+NVL(DVR_AM,0)+NVL(RSVFND_REQST_AM,0) AS TOT_BUDGET_AM 
				          FROM TBBDG_EXECUT_BUDGET
				         WHERE 1=1
				           AND YEAR    = #YEAR#
				           AND BALC_SE = #BALC_SE#
				           <isNotEmpty property="BSNS_SE"   prepend="AND ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
				           <isNotEmpty property="BSNS_CODE" prepend="AND ">DETAIL_BSNS_CODE = #BSNS_CODE#</isNotEmpty>
				           <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
				       ) T
               ) R
    </insert>


    <!-- 예산집행계획 삭제 -->
    <delete id="BDG050101DAO.deleteBudgetExcutPlan" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.deleteBudgetExcutPlan*/]]>
        DELETE TBBDG_BUDGET_EXCUT_PLAN
         WHERE 1=1
          AND  YEAR    = #YEAR#
          AND  BALC_SE = #BALC_SE#
        <isNotEmpty property="BSNS_SE"   prepend="AND ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE" prepend="AND ">DETAIL_BSNS_CODE = #BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
    </delete>


    <!-- 예산배정계획 확정 -->
    <insert id="BDG050101DAO.insertBudgetAsign" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.insertBudgetAsign*/]]>
        INSERT INTO TBBDG_BUDGET_ASIGN (
		       YEAR
		     , BUDGET_SE
		     , BSNS_SE
		     , BALC_SE
		     , BSNS_CODE
		     , DEPT_CODE
		     , BUDGET_ACNT_CODE
		     , SN
		     , ASIGN_TYPE
		     , ASIGN_RESN
		     , DEMAND_AM
		     , DEMAND_MT
		     , DCSN_AM
		     , DCSN_DE
		     , DCSN_AT
		     , REGISTER_ID
		     , REGIST_DT
		     , UPDUSR_ID
		     , UPDT_DT
		)
		SELECT T.YEAR
		     , '0'    AS BUDGET_SE
		     , T.BSNS_SE
		     , T.BALC_SE
		     , T.DETAIL_BSNS_CODE
		     , T.DEPT_CODE
		     , T.BUDGET_ACNT_CODE
		     , (SELECT NVL(MAX(SN),0) FROM TBBDG_BUDGET_ASIGN WHERE YEAR = #YEAR# ) + ROWNUM    AS SN
		     , LPAD(#MT#, 2, '0')      AS ASIGN_TYPE
		     , #MT# || '월정기배정'    AS ASIGN_RESN
		     , T.DEMAND_AM
		     , LPAD(#MT#, 2, '0')      AS DEMAND_MT
		     , T.DCSN_AM
		     , TO_CHAR(SYSDATE, 'YYYYMMDD')    AS DCSN_DE
		     , T.DCSN_AT
		     , #S_USER_ID#    AS REGISTER_ID
		     , SYSDATE        AS REGIST_DT
		     , #S_USER_ID#    AS UPDUSR_ID
		     , SYSDATE        AS UPDT_DT
		  FROM (
		        SELECT S.YEAR
		             , S.BSNS_SE
		             , S.BALC_SE
		             , S.DETAIL_BSNS_CODE
		             , S.DEPT_CODE
		             , S.BUDGET_ACNT_CODE
		             , '1'                   AS DCSN_AT
		        <isEqual property="MT" compareValue="1" >, SUM(S.ASIGN_AM_01)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="2" >, SUM(S.ASIGN_AM_02)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="3" >, SUM(S.ASIGN_AM_03)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="4" >, SUM(S.ASIGN_AM_04)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="5" >, SUM(S.ASIGN_AM_05)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="6" >, SUM(S.ASIGN_AM_06)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="7" >, SUM(S.ASIGN_AM_07)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="8" >, SUM(S.ASIGN_AM_08)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="9" >, SUM(S.ASIGN_AM_09)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="10">, SUM(S.ASIGN_AM_10)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="11">, SUM(S.ASIGN_AM_11)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="12">, SUM(S.ASIGN_AM_12)    AS DEMAND_AM</isEqual>
		        <isEqual property="MT" compareValue="1" >, SUM(S.ASIGN_AM_01)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="2" >, SUM(S.ASIGN_AM_02)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="3" >, SUM(S.ASIGN_AM_03)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="4" >, SUM(S.ASIGN_AM_04)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="5" >, SUM(S.ASIGN_AM_05)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="6" >, SUM(S.ASIGN_AM_06)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="7" >, SUM(S.ASIGN_AM_07)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="8" >, SUM(S.ASIGN_AM_08)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="9" >, SUM(S.ASIGN_AM_09)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="10">, SUM(S.ASIGN_AM_10)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="11">, SUM(S.ASIGN_AM_11)    AS DCSN_AM</isEqual>
		        <isEqual property="MT" compareValue="12">, SUM(S.ASIGN_AM_12)    AS DCSN_AM</isEqual>
		          FROM (
				        SELECT YEAR 
						     , BSNS_SE
						     , BALC_SE
						     , DETAIL_BSNS_CODE
						     , DEPT_CODE
						     , BUDGET_ACNT_CODE
						     , ASIGN_AM_01
						     , ASIGN_AM_02
						     , ASIGN_AM_03
						     , ASIGN_AM_04
						     , ASIGN_AM_05
						     , ASIGN_AM_06
						     , ASIGN_AM_07
						     , ASIGN_AM_08
						     , ASIGN_AM_09
						     , ASIGN_AM_10
						     , ASIGN_AM_11
						     , ASIGN_AM_12
						  FROM TBBDG_BUDGET_EXCUT_PLAN
					   ) S
				GROUP BY S.YEAR
			           , S.BSNS_SE
			           , S.BALC_SE
			           , S.DETAIL_BSNS_CODE
			           , S.DEPT_CODE
			           , S.BUDGET_ACNT_CODE
		       ) T
		 WHERE 1=1
		<isNotEmpty property="YEAR"      prepend="AND ">T.YEAR      = #YEAR#</isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND ">T.BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND ">T.BALC_SE   = #BALC_SE#</isNotEmpty>
		<isNotEmpty property="BSNS_CODE" prepend="AND ">T.DETAIL_BSNS_CODE = #BSNS_CODE#</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		    <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND ">
		        (T.DEPT_CODE='000000' OR T.DEPT_CODE = #DEPT_CODE#)
		    </isNotEqual>
		</isNotEmpty>
    </insert>
    
    
    <!-- 배정계획 삭제 -->
    <delete id="BDG050101DAO.deleteBudgetAsign" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.deleteBudgetAsign*/]]>
        DELETE
          FROM TBBDG_BUDGET_ASIGN
         WHERE ASIGN_TYPE != '00' /*수시배정요구*/
           AND ASIGN_TYPE != '99' /*수시배정확정으로인한감액*/
           AND ASIGN_TYPE != '88' /*잔액이월금감액*/
        <isNotEmpty property="YEAR"      prepend="AND ">YEAR      = #YEAR#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"   prepend="AND ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"   prepend="AND ">BALC_SE   = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE" prepend="AND ">BSNS_CODE = #BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND ">
                (DEPT_CODE='000000' OR DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </delete>
    
    
    <!-- 집행계획 확정 -->
    <update id="BDG050101DAO.updateDcsnAt" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG050101DAO.updateDcsnAt*/]]>
        UPDATE TBBDG_BUDGET_EXCUT_PLAN
           SET DCSN_AT   = '1'
             , UPDUSR_ID = #S_USER_ID#
             , UPDT_DT   = SYSDATE
         WHERE 1=1
        <isNotEmpty property="YEAR"      prepend="AND ">YEAR      = #YEAR#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"   prepend="AND ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"   prepend="AND ">BALC_SE   = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE" prepend="AND ">BSNS_CODE = #BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND ">
                (DEPT_CODE='000000' OR DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </update>
    
    
    <!-- 다음차수 조회 -->
    <select id="BDG050101DAO.selectNextOdr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        <![CDATA[/*BDG050101DAO.selectNextOdr (다음차수 조회)*/]]>
        SELECT NVL(MAX(ODR), 0) + 1 AS ODR
          FROM TBBDG_BUDGET_EXCUT_PLN_HIST
         WHERE YEAR = #YEAR#
    </select>
    
    <!-- 예산집행계획이력 추가 -->
    <insert id="BDG050101DAO.insertBudgetExcutPlnHist" parameterClass="java.util.HashMap">
        <![CDATA[/*BDG050101DAO.insertBudgetExcutPlnHist (예산집행계획이력 추가)*/]]>
        INSERT INTO TBBDG_BUDGET_EXCUT_PLN_HIST (
               YEAR
             , ODR
             , BSNS_SE
             , BALC_SE
             , DETAIL_BSNS_CODE
             , DEPT_CODE
             , BUDGET_ACNT_CODE
             , EXPNDTR_UNIT_CODE
             , ORIBDGT
             , RVSPBGT_ODR
             , CYFD_BUDGET
             , MVMN_AM
             , TOT_BUDGET_AM
             , ASIGN_AM_01
             , ASIGN_AM_02
             , ASIGN_AM_03
             , ASIGN_AM_04
             , ASIGN_AM_05
             , ASIGN_AM_06
             , ASIGN_AM_07
             , ASIGN_AM_08
             , ASIGN_AM_09
             , ASIGN_AM_10
             , ASIGN_AM_11
             , ASIGN_AM_12
             , DECSN_AM_01
             , DECSN_AM_02
             , DECSN_AM_03
             , DECSN_AM_04
             , DECSN_AM_05
             , DECSN_AM_06
             , DECSN_AM_07
             , DECSN_AM_08
             , DECSN_AM_09
             , DECSN_AM_10
             , DECSN_AM_11
             , DECSN_AM_12
             , PROGRS_STTUS
             , DCSN_AT
             , ELPD_EXCUT_RATE
             , REGISTER_ID
             , REGIST_DT
             , UPDUSR_ID
             , UPDT_DT
        )
        SELECT t1.YEAR
              ,#ODR#
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t1.DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE
		      ,t5.BUKIP_CODE AS EXPNDTR_UNIT_CODE
		      ,NVL(t1.ORIBDGT,0)    AS ORIBDGT
		      ,NVL(t1.RVSPBGT_1_ODR,0)
		           +NVL(t1.RVSPBGT_2_ODR,0)
		           +NVL(t1.RVSPBGT_3_ODR,0)
		           +NVL(t1.RVSPBGT_4_ODR,0)
		           +NVL(t1.RVSPBGT_5_ODR,0)
		           +NVL(t1.RVSPBGT_6_ODR,0)
		           +NVL(t1.RVSPBGT_7_ODR,0)    AS RVSPBGT_ODR
		      ,NVL(t1.CYFD_BUDGET,0)    AS CYFD_BUDGET
		      ,NVL(t1.TRSF_AM,0)+NVL(t1.MVMN_AM,0)+NVL(t1.BUKIP_MVMN_AM,0)+NVL(t1.DVR_AM,0)+NVL(t1.RSVFND_REQST_AM,0)    AS MVMN_AM
		      ,NVL(t1.ORIBDGT,0)
		           +NVL(t1.RVSPBGT_1_ODR,0)
		           +NVL(t1.RVSPBGT_2_ODR,0)
		           +NVL(t1.RVSPBGT_3_ODR,0)
		           +NVL(t1.RVSPBGT_4_ODR,0)
		           +NVL(t1.RVSPBGT_5_ODR,0)
		           +NVL(t1.RVSPBGT_6_ODR,0)
		           +NVL(t1.RVSPBGT_7_ODR,0)
		           +NVL(t1.CYFD_BUDGET,0)
		           +NVL(t1.TRSF_AM,0)+NVL(t1.MVMN_AM,0)+NVL(t1.BUKIP_MVMN_AM,0)+NVL(t1.DVR_AM,0)+NVL(t1.RSVFND_REQST_AM,0)    AS TOT_BUDGET_AM
              ,NVL(t7.ASIGN_AM_01,0)    AS ASIGN_AM_01
              ,NVL(t7.ASIGN_AM_02,0)    AS ASIGN_AM_02
              ,NVL(t7.ASIGN_AM_03,0)    AS ASIGN_AM_03
              ,NVL(t7.ASIGN_AM_04,0)    AS ASIGN_AM_04
              ,NVL(t7.ASIGN_AM_05,0)    AS ASIGN_AM_05
              ,NVL(t7.ASIGN_AM_06,0)    AS ASIGN_AM_06
              ,NVL(t7.ASIGN_AM_07,0)    AS ASIGN_AM_07
              ,NVL(t7.ASIGN_AM_08,0)    AS ASIGN_AM_08
              ,NVL(t7.ASIGN_AM_09,0)    AS ASIGN_AM_09
              ,NVL(t7.ASIGN_AM_10,0)    AS ASIGN_AM_10
              ,NVL(t7.ASIGN_AM_11,0)    AS ASIGN_AM_11
              ,NVL(t7.ASIGN_AM_12,0)    AS ASIGN_AM_12
              ,NVL(t8.DECSN_AM01,0)     AS DECSN_AM_01
              ,NVL(t8.DECSN_AM02,0)     AS DECSN_AM_02
              ,NVL(t8.DECSN_AM03,0)     AS DECSN_AM_03
              ,NVL(t8.DECSN_AM04,0)     AS DECSN_AM_04
              ,NVL(t8.DECSN_AM05,0)     AS DECSN_AM_05
              ,NVL(t8.DECSN_AM06,0)     AS DECSN_AM_06
              ,NVL(t8.DECSN_AM07,0)     AS DECSN_AM_07
              ,NVL(t8.DECSN_AM08,0)     AS DECSN_AM_08
              ,NVL(t8.DECSN_AM09,0)     AS DECSN_AM_09
              ,NVL(t8.DECSN_AM10,0)     AS DECSN_AM_10
              ,NVL(t8.DECSN_AM11,0)     AS DECSN_AM_11
              ,NVL(t8.DECSN_AM12,0)     AS DECSN_AM_12
              ,t7.PROGRS_STTUS
              ,t7.DCSN_AT
              ,t7.ELPD_EXCUT_RATE
              ,#S_USER_ID# AS REGISTER_ID
              ,SYSDATE AS REGIST_DT
              ,#S_USER_ID# AS UPDUSR_ID
              ,SYSDATE AS UPDT_DT
		FROM   TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN VWHRM_DEPT t2
		            ON t1.DEPT_CODE = t2.DEPT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t4
		            ON t1.YEAR    = t4.YEAR
		           AND t1.BSNS_SE = t4.BSNS_SE
		           AND t1.BALC_SE = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t5
					ON t1.YEAR               = t5.YEAR
				   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
				   AND t1.EXPNDTR_UNIT_CODE = t5.BUKIP_CODE
					LEFT OUTER JOIN TBBDG_BUKIP_CODE t6
					ON t1.EXPNDTR_UNIT_CODE = t6.BUKIP_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_EXCUT_PLAN t7
		            ON t1.YEAR              = t7.YEAR
		           AND t1.BSNS_SE           = t7.BSNS_SE
		           AND t1.BALC_SE           = t7.BALC_SE
		           AND t1.DETAIL_BSNS_CODE  = t7.DETAIL_BSNS_CODE
		           AND t1.DEPT_CODE         = t7.DEPT_CODE
		           AND t1.BUDGET_ACNT_CODE  = t7.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t7.EXPNDTR_UNIT_CODE
		           LEFT OUTER JOIN (
									<isEqual property="YEAR_SE" compareValue="1">
									    SELECT A.BUDGET_YEAR
									          ,A.BSNS_SE
									          ,A.BALC_SE
									          ,A.BSNS_CODE
									          ,A.DEPT_CODE
									          ,A.BUDGET_ACNT_CODE
									          ,A.EXPNDTR_UNIT_CODE
									          ,NVL(SUM(A.DECSN_AMOUNT),0)                                                 AS DECSN_AM
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'01',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM01
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'02',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM02
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'03',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM03
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'04',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM04
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'05',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM05
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'06',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM06
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'07',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM07
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'08',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM08
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'09',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM09
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'10',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM10
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'11',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM11
									          ,NVL(SUM(DECODE(SUBSTR(A.CAUSE_ACTION_DE,5,2),'12',A.DECSN_AMOUNT,0)),0)    AS DECSN_AM12
									    FROM   VHACC_EXP_DSN_MASTR A
									    WHERE  1=1
									    AND    SUBSTR(A.CAUSE_ACTION_DE, 1, 4) = #YEAR#
									    GROUP BY A.BUDGET_YEAR
									            ,A.BSNS_SE
									            ,A.BALC_SE
									            ,A.BSNS_CODE
									            ,A.DEPT_CODE
									            ,A.BUDGET_ACNT_CODE
									            ,A.EXPNDTR_UNIT_CODE
									</isEqual>
									<isEqual property="YEAR_SE" compareValue="2">
									    SELECT A.BUDGET_YEAR
									         , A.BSNS_SE
									         , A.BALC_SE
									         , A.BSNS_CODE
									         , A.BUDGET_DEPT_CODE                                                           AS DEPT_CODE
									         , A.BUDGET_ACNT_CODE
									         , A.EXPNDTR_UNIT_CODE
									         , SUM(DECSN_AMOUNT)                                                            AS DECSN_AM
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '01', DECSN_AMOUNT, 0))    AS DECSN_AM01
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '02', DECSN_AMOUNT, 0))    AS DECSN_AM02
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '03', DECSN_AMOUNT, 0))    AS DECSN_AM03
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '04', DECSN_AMOUNT, 0))    AS DECSN_AM04
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '05', DECSN_AMOUNT, 0))    AS DECSN_AM05
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '06', DECSN_AMOUNT, 0))    AS DECSN_AM06
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '07', DECSN_AMOUNT, 0))    AS DECSN_AM07
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '08', DECSN_AMOUNT, 0))    AS DECSN_AM08
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '09', DECSN_AMOUNT, 0))    AS DECSN_AM09
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '10', DECSN_AMOUNT, 0))    AS DECSN_AM10
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '11', DECSN_AMOUNT, 0))    AS DECSN_AM11
									         , SUM(DECODE(SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 5, 2), '12', DECSN_AMOUNT, 0))    AS DECSN_AM12
									      FROM TBACC_EXP_DSN_MASTR A /*지출결의마스터*/
									     WHERE 1=1
									       AND DECSN_YEAR = #YEAR#
									    GROUP BY A.BUDGET_YEAR
									           , A.BSNS_SE
									           , A.BALC_SE
									           , A.BSNS_CODE
									           , A.BUDGET_DEPT_CODE
									           , A.BUDGET_ACNT_CODE
									           , A.EXPNDTR_UNIT_CODE
									</isEqual>
									   ) t8
				    ON t1.YEAR = t8.BUDGET_YEAR
				   AND t1.BSNS_SE = t8.BSNS_SE
				   AND t1.BALC_SE = t8.BALC_SE
				   AND t1.DETAIL_BSNS_CODE  = t8.BSNS_CODE
				   AND t1.DEPT_CODE         = t8.DEPT_CODE
				   AND t1.BUDGET_ACNT_CODE = t8.BUDGET_ACNT_CODE
				   AND t1.EXPNDTR_UNIT_CODE = t8.EXPNDTR_UNIT_CODE
		WHERE  t1.YEAR    = #YEAR#
		AND    t1.BALC_SE = #BALC_SE#
		ORDER BY t1.BSNS_SE
		       , t1.BALC_SE
		       , t1.DETAIL_BSNS_CODE
		       , t1.DEPT_CODE
		       , t1.BUDGET_ACNT_CODE
		       , t1.EXPNDTR_UNIT_CODE
    </insert>
</sqlMap>