<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SUP010204_SQL">	
	
	<!-- 지방공기업 목록 -->
	<select id="SUP010204DAO.cntrwkList" resultClass="java.util.HashMap">
		<![CDATA[ /*SUP010204DAO.cntrwkList*/ ]]>
		SELECT
		     CODE					AS CODE
		    ,CODE_NM				AS CODE_NM
		    ,'CODE'||CODE			AS COL_NM
		    ,CHRCTR_PREPAR_VALUE_0 	AS ETC
		FROM TBCOM_CMMN_CODE
		WHERE GRP_CODE = 'SUP001'
		  AND USE_AT = '1'
		ORDER BY CODE_ORDR
	</select>
	
	<!-- 지방공기업비교 목록 -->
	<select id="SUP010204DAO.cntrwkCmprList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">	    
		<![CDATA[ /*SUP010204DAO.cntrwkCmprList*/ ]]>
		WITH RANK_TABLE AS(
			SELECT STDR_YEAR, CNTRWK_CODE, RANK()OVER (ORDER BY CMPR_SCORE DESC) AS RANK
			FROM( SELECT STDR_YEAR
					    ,CNTRWK_CODE
					    ,IX_CODE
					    ,CMPR_SCORE
			    FROM TBSUP_MNGMT_EVL_CNTRWK_CMPR
			    WHERE STDR_YEAR = #STDR_YEAR#
			    AND IX_CODE     = 'S'
			    UNION ALL
				    SELECT STDR_YEAR
				      ,'00' AS CNTRWK_CODE
				      ,'S' AS IX_CODE
				      ,ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GTSR, '2', GTSR, 0)),2) AS CMPR_SCORE
				    FROM TBSUP_MNGMT_EVL_STDR_MASTR
				    WHERE STDR_YEAR = #STDR_YEAR#
				    GROUP BY STDR_YEAR
			    )
		),
		TMP_TABLE AS (
			SELECT
				 RNUM
				,STDR_YEAR	
				,IX_CODE      
				,IX_NM        
				,CL_STEP      
				,ALLOT        
				,EVL_MTH      
				,ELV_IX_CHARCT
				,GPA          
				,GTSR         
			FROM (	SELECT
				       ROWNUM AS RNUM		    /* 정렬순서 */
				      ,STDR_YEAR			   	/* 기준년도 */
				      ,IX_CODE                 	/* 지표코드 */
				      ,IX_NM                   	/* 지표명 */
				      ,CL_STEP                 	/* 분류단계 */
				      ,ALLOT                   	/* 배점 */
				      ,EVL_MTH                 	/* 평가방법 */
				      ,ELV_IX_CHARCT           	/* 지표성격 */
				      ,GPA                     	/* 평점 */
				      ,GTSR                    	/* 득점 */
					FROM TBSUP_MNGMT_EVL_STDR_MASTR
					WHERE STDR_YEAR = #STDR_YEAR#
					START WITH IX_CODE = '0'
					CONNECT BY PRIOR STDR_YEAR = #STDR_YEAR# AND PRIOR IX_CODE = UPPER_IX_CODE
					ORDER SIBLINGS BY SORT_ORDR
				 )
			 UNION ALL
			  SELECT 996 AS RNUM		    /* 정렬순서 */
			    ,t1.STDR_YEAR AS STDR_YEAR	/* 기준년도 */
			    ,'R' AS IX_CODE			    /* 지표코드 */
			    ,'순위' AS IX_NM			    /* 지표명 */
			    ,NULL AS CL_STEP		    /* 분류단계 */
			    ,NULL AS ALLOT			    /* 배점 */
			    ,NULL AS EVL_MTH		    /* 평가방법 */
			    ,NULL AS ELV_IX_CHARCT	    /* 지표성격 */
			    ,NULL AS GPA			    /* 평점 */
			    ,t2.RANK AS GTSR			/* 화성 */
			  FROM TBSUP_MNGMT_EVL_STDR_MASTR t1, RANK_TABLE t2
			  WHERE t1.STDR_YEAR = #STDR_YEAR#
			  AND   t2.CNTRWK_CODE = '00'
			  GROUP BY t1.STDR_YEAR, t2.RANK
			UNION ALL
			SELECT 
				 997		AS RNUM				/* 정렬순서 */
				,STDR_YEAR	AS STDR_YEAR        /* 기준년도 */
				,'S'		AS IX_CODE         	/* 지표코드 */
				,'합계' 	AS IX_NM			/* 지표명 */
				,NULL 		AS CL_STEP          /* 분류단계 */
				,SUM(DECODE(ELV_IX_CHARCT,'1',ALLOT, '2', ALLOT, 0)) AS ALLOT	/* 배점 */
				,NULL 		AS EVL_MTH          /* 평가방법 */
				,NULL 		AS ELV_IX_CHARCT    /* 지표성격 */
				,ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GPA * ALLOT / 100, '2', GPA * ALLOT / 100, 0)),2) AS GPA	/* 평점 */
				,ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GTSR, '2', GTSR, 0)),2) AS GTSR	/* 득점 */
			FROM TBSUP_MNGMT_EVL_STDR_MASTR
			WHERE STDR_YEAR = #STDR_YEAR#
			GROUP BY STDR_YEAR
			UNION ALL
			SELECT 
				 998		AS RNUM				/* 정렬순서 */
				,STDR_YEAR	AS STDR_YEAR        /* 기준년도 */
				,'A'		AS IX_CODE         	/* 지표코드 */
				,'정량지표' AS IX_NM			/* 지표명 */
				,NULL 		AS CL_STEP          /* 분류단계 */
				,SUM(DECODE(ELV_IX_CHARCT,'2', ALLOT, 0)) AS ALLOT	/* 배점 */
				,NULL 		AS EVL_MTH          /* 평가방법 */
				,NULL 		AS ELV_IX_CHARCT    /* 지표성격 */
				,CASE WHEN NVL(SUM(DECODE(ELV_IX_CHARCT,'2',ALLOT,0)),0) <![CDATA[<>]]> 0 THEN 
				    ROUND(SUM(DECODE(ELV_IX_CHARCT,'2',GPA * ALLOT / 100,0)) * 100 / SUM(DECODE(ELV_IX_CHARCT,'2',ALLOT,0)),2)
				    ELSE NULL END AS GPA
				,ROUND(SUM(DECODE(ELV_IX_CHARCT,'2',GTSR,0)),2) AS GTSR	/* 득점 */
			FROM TBSUP_MNGMT_EVL_STDR_MASTR
			WHERE STDR_YEAR = #STDR_YEAR#
			GROUP BY STDR_YEAR
			UNION ALL
			SELECT 
				 999		AS RNUM				/* 정렬순서 */
				,STDR_YEAR	AS STDR_YEAR        /* 기준년도 */
				,'B'		AS IX_CODE         	/* 지표코드 */
				,'정성지표' AS IX_NM			/* 지표명 */
				,NULL 		AS CL_STEP          /* 분류단계 */
				,SUM(DECODE(ELV_IX_CHARCT,'1', ALLOT, 0)) AS ALLOT	/* 배점 */
				,NULL 		AS EVL_MTH          /* 평가방법 */
				,NULL 		AS ELV_IX_CHARCT    /* 지표성격 */
				,CASE WHEN NVL(SUM(DECODE(ELV_IX_CHARCT,'1',ALLOT,0)),0) <![CDATA[<>]]> 0 THEN 
				    ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GPA * ALLOT / 100,0)) * 100 / SUM(DECODE(ELV_IX_CHARCT,'1',ALLOT,0)),2)
				    ELSE NULL END AS GPA
				,ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GTSR,0)),2) AS GTSR	/* 득점 */
			FROM TBSUP_MNGMT_EVL_STDR_MASTR
			WHERE STDR_YEAR = #STDR_YEAR#
			GROUP BY STDR_YEAR
		)
		SELECT
			 t1.STDR_YEAR	
			,t1.IX_CODE      
			,t1.IX_NM        
			,t1.CL_STEP      
			,t1.ALLOT        
			,t1.EVL_MTH      
			,t1.ELV_IX_CHARCT
			,t1.GPA          
			,t1.GTSR 
		<iterate property="list">
		  	,t2.$list[].COL_NM$
		</iterate>
		FROM TMP_TABLE t1
			 LEFT OUTER JOIN
		     (SELECT
		            STDR_YEAR
		          , IX_CODE
				<iterate property="list">
				  , MAX(DECODE(CNTRWK_CODE, #list[].CODE#, CMPR_SCORE, NULL)) AS $list[].COL_NM$
				</iterate>
		      FROM TBSUP_MNGMT_EVL_CNTRWK_CMPR
		      WHERE STDR_YEAR = #STDR_YEAR#
		      GROUP BY STDR_YEAR, IX_CODE
		      UNION ALL
		      SELECT
		            t4.STDR_YEAR
		          , 'R' AS IX_CODE
				<iterate property="list">
				  , MAX(DECODE(CNTRWK_CODE, #list[].CODE#, t4.RANK, NULL)) AS $list[].COL_NM$
				</iterate>
		       FROM (
		       SELECT
					STDR_YEAR,
					CNTRWK_CODE ,
					IX_CODE,
					CMPR_SCORE,
					RANK()OVER (ORDER BY CMPR_SCORE DESC) AS RANK
				FROM
					(SELECT 
						 STDR_YEAR
						,CNTRWK_CODE
						,IX_CODE
						,CMPR_SCORE
					FROM TBSUP_MNGMT_EVL_CNTRWK_CMPR
					WHERE STDR_YEAR = #STDR_YEAR#
					AND IX_CODE     ='S'
					UNION ALL
					SELECT 
						 STDR_YEAR
						,'00' AS CNTRWK_CODE
						,'S' AS IX_CODE
						,ROUND(SUM(DECODE(ELV_IX_CHARCT,'1',GTSR, '2', GTSR, 0)),2) AS CMPR_SCORE
					FROM TBSUP_MNGMT_EVL_STDR_MASTR
					WHERE STDR_YEAR = #STDR_YEAR#
					GROUP BY STDR_YEAR)
				)t4
			WHERE t4.STDR_YEAR = #STDR_YEAR#
			GROUP BY 'R', t4.STDR_YEAR
			) t2
		ON  t1.STDR_YEAR = t2.STDR_YEAR
		AND t1.IX_CODE   = t2.IX_CODE
		ORDER BY t1.RNUM
    </select>
    
    <!-- 경영평가공사비교 등록 -->
    <insert id="SUP010204DAO.mngmtEvlCntrwkCmprC" parameterClass="java.util.HashMap">
    	<![CDATA[ /*SUP010204DAO.mngmtEvlCntrwkCmprC*/ ]]>
    	INSERT INTO TBSUP_MNGMT_EVL_CNTRWK_CMPR
    	(
			 STDR_YEAR
			,IX_CODE
			,CNTRWK_CODE
			,CMPR_SCORE
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
    	) VALUES (
    		 #MAP.STDR_YEAR#
			,#MAP.IX_CODE#
			,#CNTRWK_CODE#
			,#CMPR_SCORE#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
    	)
    </insert>
    
    <!-- 경영평가공사비교 수정 -->
    <insert id="SUP010204DAO.mngmtEvlCntrwkCmprU" parameterClass="java.util.HashMap">
    	<![CDATA[ /*SUP010204DAO.mngmtEvlCntrwkCmprU*/ ]]>
    	UPDATE TBSUP_MNGMT_EVL_CNTRWK_CMPR
    	SET
			 CMPR_SCORE     = #CMPR_SCORE# 
			,UPDUSR_ID      = #S_USER_ID#  
			,UPDT_DT        = SYSDATE      
    	WHERE STDR_YEAR		= #MAP.STDR_YEAR#  
		  AND IX_CODE       = #MAP.IX_CODE#
		  AND CNTRWK_CODE   = #CNTRWK_CODE#
    </insert>
    
</sqlMap>