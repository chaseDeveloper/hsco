<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060302_SQL">


	<!-- 구분회계 손익계산서 조회 -->
	<select id="ACC060302DAO.select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060302DAO.select*/]]>
		WITH THIS_STACNT_T AS ( /*당기*/
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNTSUM_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		<isNotEmpty property="BSNS_DISTRICT">
		    AND   t2.BSNS_DISTRICT 	= #BSNS_DISTRICT#
		</isNotEmpty>
		<isNotEmpty property="BSNS_HSMP">
		    AND   t2.BSNS_HSMP 		= #BSNS_HSMP#
		</isNotEmpty>
		<isNotEmpty property="SUPLY_TY">
		    AND   t2.SUPLY_TY 		= #SUPLY_TY#
		</isNotEmpty>
		<isNotEmpty property="BSNS_TY">
		    AND   t2.BSNS_TY 		= #BSNS_TY#
		</isNotEmpty>
		
		<!-- 2016.08.25 -->
		<isNotEmpty property="SE_ACCNUT_ACNT_CODE">
		    AND   t2.SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		</isNotEmpty>
						            
			GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
            UNION ALL
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNT_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		<isNotEmpty property="BSNS_DISTRICT">
		    AND   t2.BSNS_DISTRICT 	= #BSNS_DISTRICT#
		</isNotEmpty>
		<isNotEmpty property="BSNS_HSMP">
		    AND   t2.BSNS_HSMP 		= #BSNS_HSMP#
		</isNotEmpty>
		<isNotEmpty property="SUPLY_TY">
		    AND   t2.SUPLY_TY 		= #SUPLY_TY#
		</isNotEmpty>
		<isNotEmpty property="BSNS_TY">
		    AND   t2.BSNS_TY 		= #BSNS_TY#
		</isNotEmpty>
		
		<!-- 2016.08.25 -->
		<isNotEmpty property="SE_ACCNUT_ACNT_CODE">
		    AND   t2.SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		</isNotEmpty>
		
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
        )
        , PRE_STACNT_T AS (     /*전기*/
            SELECT t1.ACCNUT_YEAR 
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNTSUM_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		<isNotEmpty property="BSNS_DISTRICT">
		    AND   t2.BSNS_DISTRICT 	= #BSNS_DISTRICT#
		</isNotEmpty>
		<isNotEmpty property="BSNS_HSMP">
		    AND   t2.BSNS_HSMP 		= #BSNS_HSMP#
		</isNotEmpty>
		<isNotEmpty property="SUPLY_TY">
		    AND   t2.SUPLY_TY 		= #SUPLY_TY#
		</isNotEmpty>
		<isNotEmpty property="BSNS_TY">
		    AND   t2.BSNS_TY 		= #BSNS_TY#
		</isNotEmpty>
		
		<!-- 2016.08.25 -->
		<isNotEmpty property="SE_ACCNUT_ACNT_CODE">
		    AND   t2.SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		</isNotEmpty>
		
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
            UNION ALL
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNT_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		<isNotEmpty property="BSNS_DISTRICT">
		    AND   t2.BSNS_DISTRICT 	= #BSNS_DISTRICT#
		</isNotEmpty>
		<isNotEmpty property="BSNS_HSMP">
		    AND   t2.BSNS_HSMP 		= #BSNS_HSMP#
		</isNotEmpty>
		<isNotEmpty property="SUPLY_TY">
		    AND   t2.SUPLY_TY 		= #SUPLY_TY#
		</isNotEmpty>
		<isNotEmpty property="BSNS_TY">
		    AND   t2.BSNS_TY 		= #BSNS_TY#
		</isNotEmpty>
		
		<!-- 2016.08.25 -->
		<isNotEmpty property="SE_ACCNUT_ACNT_CODE">
		    AND   t2.SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		</isNotEmpty>
		
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
        )
        <![CDATA[
	    SELECT t1.ACCNUT_ACNT_CODE 
		       ,t1.ACCNUT_ACNT_NM 
		       ,t1.THIS_STACNT_AMT                        AS THSTRM_AMOUNT
		       ,t1.THIS_STACNT_SM                         AS THSTRM_SM
		       ,t1.PRE_STACNT_AMT                         AS FRMTRM_AMOUNT
		       ,t1.PRE_STACNT_SM                          AS FRMTRM_SM
		       ,(t1.THIS_STACNT_AMT)- (t1.PRE_STACNT_AMT) AS IRDS_AMOUNT
		       ,(t1.THIS_STACNT_SM) - (t1.PRE_STACNT_SM)  AS IRDS_SM
		FROM   (SELECT t1.ACCNUT_ACNT_CODE
		               ,t1.ACCNUT_ACNT_NM
		               ,CASE WHEN T1.ACNT_LEVEL >= 3 
		               		THEN CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/,'41500000'/*매출총이익*/)
                                      THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/,'42500000'/*영업이익*/)
                                      THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/,'46000000'/*법인세비용차감전순이익*/)
                                      THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/,'47000000'/*당기순이익(손실)*/)
                                      THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      ELSE t1.THIS_STACNT_AMT
                                 END
		                         ELSE 0
		               END AS THIS_STACNT_AMT
		               ,CASE WHEN T1.ACNT_LEVEL < 3
		                    THEN CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/,'41500000'/*매출총이익*/)
                                      THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/,'42500000'/*영업이익*/)
                                      THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/,'46000000'/*법인세비용차감전순이익*/)
                                      THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/,'47000000'/*당기순이익(손실)*/)
                                      THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2),null)
                                      ELSE t1.THIS_STACNT_AMT
                             	 END
		                    ELSE 0
		               END AS THIS_STACNT_SM
		               ,CASE WHEN T1.ACNT_LEVEL >= 3
		                    THEN CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/,'41500000'/*매출총이익*/)
	                                  THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
	                                  WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/,'42500000'/*영업이익*/)
	                                  THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
	                                  WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/,'46000000'/*법인세비용차감전순이익*/)
	                                  THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
	                                  WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/,'47000000'/*당기순이익(손실)*/)
	                                  THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
	                                  ELSE t1.PRE_STACNT_AMT
		                     END
		                    ELSE 0
		               END AS PRE_STACNT_AMT
		               ,CASE WHEN T1.ACNT_LEVEL < 3 
		               		THEN CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/,'41500000'/*매출총이익*/)
                                      THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/,'42500000'/*영업이익*/)
                                      THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/,'46000000'/*법인세비용차감전순이익*/)
                                      THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
                                      WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/,'47000000'/*당기순이익(손실)*/)
                                      THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2),null)
                                      ELSE t1.PRE_STACNT_AMT
                                  END
		                    ELSE 0
		               END AS PRE_STACNT_SM
		       FROM    ( SELECT t1.ACCNUT_ACNT_CODE
		                        ,t1.ACNT_LEVEL
		                        ,MAX(NVL(t1.OUTPT_ACNT_NM, t1.ACCNUT_ACNT_NM)) AS ACCNUT_ACNT_NM
		                        ,CASE WHEN t1.RSYMNEY_ACNT_AT = '1' 
		                        	  THEN NVL(SUM(t2.DR_AMT - t2.CR_AMT),0)
		                              ELSE NVL(SUM(DECODE(t1.DBRT_SE, 'D',t2.DR_AMT - t2.CR_AMT,
		                              								  'C',t2.CR_AMT - t2.DR_AMT 
		                              								  ,t2.DR_AMT - t2.CR_AMT)),0)
		                        END AS THIS_STACNT_AMT
		                        ,CASE WHEN t1.RSYMNEY_ACNT_AT = '1'
	                                  THEN NVL(SUM(t3.DR_AMT - t3.CR_AMT),0)
	                                  ELSE NVL(SUM(DECODE(t1.DBRT_SE, 'D',t3.DR_AMT - t3.CR_AMT,
		                                                     		  'C',t3.CR_AMT - t3.DR_AMT ,
		                                                     		  t3.DR_AMT - t3.CR_AMT)),0)
		                        END AS PRE_STACNT_AMT
		               FROM     TBACC_ACCNUT_ACNT_SBJECT t1
		                        LEFT OUTER JOIN THIS_STACNT_T t2
		                        ON       t1.ACCNUT_YEAR      = t2.ACCNUT_YEAR
		                        AND      t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
		                        LEFT OUTER JOIN TBCOM_ACCNUT_CODE_MAPPING t4
		                        ON       t1.ACCNUT_ACNT_CODE = t4.NEW_ACCNUT_CODE
		                        LEFT OUTER JOIN PRE_STACNT_T t3
		                        ON       t4.OLD_ACCNUT_CODE = t3.ACCNUT_ACNT_CODE
		               WHERE    t1.ACCNUT_YEAR              = SUBSTR(#ACCNUT_YM#,1,4)
		               AND      t1.ACNT_SE                  = '2'		                        /*손익계산서*/
		               AND      t1.OUTPT_AT = '1'						                        /*출력여부*/
		               GROUP BY t1.ACCNUT_YEAR ,
		                        t1.ACCNUT_ACNT_CODE ,
		                        t1.RSYMNEY_ACNT_AT,
		                        t1.ACNT_LEVEL
		                        /*년도에 따라 ORDER BY 변경 아래.. 2015이전*/
		                        /* 2016년 이후*/
		               ORDER BY t1.ACCNUT_ACNT_CODE ASC
		               )
		               t1
		       )
		       t1
		WHERE  (
		              THIS_STACNT_AMT <> 0
		       OR     PRE_STACNT_AMT  <> 0
		       OR     THIS_STACNT_SM  <> 0
		       OR     PRE_STACNT_SM   <> 0
		       )
		AND    t1.ACCNUT_ACNT_CODE <> '40000000'
	]]>
	</select>
	
	<!-- 구분회계 세부내역 조회 -->
	<select id="ACC060302DAO.seAccExcelDown" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060302DAO.seAccExcelDown*/]]>
		SELECT * FROM
		(
		 SELECT
		         t1.ACCNUT_ACNT_CODE,
		
		          MAX(NVL(t3.OUTPT_ACNT_NM, t3.ACCNUT_ACNT_NM)) AS ACCNUT_ACNT_NM,
		          t1.SE_ACCNUT_ACNT_CODE,
		 					t2.SE_ACCNUT_ACNT_NM,
		          NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT ,
		          NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT ,
		          SUM(CASE WHEN T3.DBRT_SE = 'D' THEN   NVL(t1.DEBTOR_AMOUNT,0) - NVL(t1.CRDIT_AMOUNT ,0)
		          			ELSE NVL(t1.CRDIT_AMOUNT ,0) - NVL(t1.DEBTOR_AMOUNT,0) END) AS JAN_AMT
		 FROM     TBACC_ACCNUT_STACNT_SE t1
		          INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		          ON       t1.ACCNUT_YEAR         = t2.ACCNUT_YEAR
		          AND      t1.SE_ACCNUT_ACNT_CODE = t2.SE_ACCNUT_ACNT_CODE
		          INNER JOIN TBACC_ACCNUT_ACNT_SBJECT T3
		          ON       t1.ACCNUT_YEAR         = t3.ACCNUT_YEAR
		          AND        t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		 WHERE    t1.ACCNUT_YEAR                  = SUBSTR(#ACCNUT_YM#,1,4)
		 AND      t1.ACCNUT_MT BETWEEN '00' AND      SUBSTR(#ACCNUT_YM#,5,2)
<![CDATA[		 AND      (t1.DEBTOR_AMOUNT <> 0 OR t1.CRDIT_AMOUNT <>0)  ]]>
		 GROUP BY t1.ACCNUT_YEAR, t1.SE_ACCNUT_ACNT_CODE,t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_NM
		 ORDER BY  ACCNUT_ACNT_CODE,SE_ACCNUT_ACNT_CODE	
	 )
	 WHERE SUBSTR(ACCNUT_ACNT_CODE,1,1) IN ('4')
	</select>
</sqlMap>