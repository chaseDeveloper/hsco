<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM020306_SQL">

	<!-- 대상자 조회 -->
	<select id="HRM020306DAO.selectEcnySportGnrlList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		     t1.EMPMN_YEAR                  /*채용연도*/
			,t1.ODR_SE                      /*차수구분*/
			,t1.APYEXM_NO                   /*응시번호*/
			,t1.NM_KOREAN                   /*성명한글*/
			,t1.BRTHDY                      /*생년월일*/
			,t1.MTRSC_SE                    /*병력사항*/
			,t1.NOW_ZIP                     /*현재우편번호*/
			,t1.NOW_ADRES                   /*현재주소*/
			,t1.SAMENSS_AT                  /*상동여부*/
			,H_DECRYPT(t1.CTTPC_TELNO)     AS CTTPC_TELNO                 /*연락처전화번호*/
			,H_DECRYPT(t1.CTTPC_MOBLPHON)  AS CTTPC_MOBLPHON              /*연락처휴대폰*/
			,t1.CTTPC_EMAIL                 /*연락처이메일*/
			,t1.PHOTO_FILE_ID               /*사진파일ID*/
			,t1.SPORT_DE                    /*지원일자*/
			,t1.REGISTER_ID                 /*등록자ID*/
			,t1.REGIST_DT                   /*등록일시*/
			,t1.UPDUSR_ID                   /*수정자ID*/
			,t1.UPDT_DT                     /*수정일시*/
			,t1.FILE_SN                     /*파일일련번호*/
			,t1.RCRIT_REALM_SN              /*모집분야순번*/
			,t1.EMPYMN_PRTC_SPORT_TRGET_AT  /*취업보호및취업지원대상자여부*/
			,t1.YGMN_AT                     /*청년여부*/
			,t1.EMPYMN_PRTC_SPORT_RATE      /*취업보호및취업지원비율*/
		    ,t2.TOT_SCORE
		    ,t2.EVL_RESULT_SE
		    ,t4.CMPET_SE
		    ,t4.EMPMN_SE
		    ,t4.APYEXM_CLSF_SE
		    ,t4.APYEXM_REALM_SE
		    ,t3.MFCMM_NO
		    ,t1.CHOISE_SBJECT
		    ,t1.RL_APYEXM_NO
		FROM TBHRM_ECNY_SPORT_GNRL t1
			LEFT OUTER JOIN TBHRM_INTRVW_EVL t2
		      ON  t1.EMPMN_YEAR   = t2.EMPMN_YEAR
		     AND t1.ODR_SE        = t2.ODR_SE
		     AND t1.RL_APYEXM_NO  = t2.APYEXM_NO
			LEFT OUTER JOIN TBHRM_SCRPRO_EVL_MFCMM t3
		      ON t1.EMPMN_YEAR = t3.EMPMN_YEAR
		     AND t1.ODR_SE     = t3.ODR_SE
			LEFT OUTER JOIN TBHRM_EMPMN_RCRIT_REALM t4
		      ON t1.EMPMN_YEAR     = t4.EMPMN_YEAR
		     AND t1.ODR_SE          = t4.ODR_SE
		     AND t1.RCRIT_REALM_SN  = t4.SN
			LEFT OUTER JOIN TBHRM_NCS_SCRPRO t4
			  ON t1.EMPMN_YEAR    = t4.EMPMN_YEAR
			 AND t1.ODR_SE        = t4.ODR_SE
			 AND t1.RL_APYEXM_NO  = t4.APYEXM_NO	
		WHERE 1 = 1
		  AND t1.EMPMN_YEAR = #EMPMN_YEAR#
		  AND t1.ODR_SE     = #ODR_SE#
		  AND t3.MFCMM_NO   = #MFCMM_NO#
		  AND t1.PROPER_AT  = '1' /*적격여부*/
		  AND (
		          t4.PSEXAM_AT  = '1' /*인적성합격자*/
		       OR (JSSFC_SE = '001' AND APYEXM_CLSF_SE IN ('201', '202')) /*일반직 2,3급*/
		      )
		<isNotEmpty property="CMPET_SE">
			AND t4.CMPET_SE = #CMPET_SE#
		</isNotEmpty>
		<isNotEmpty property="EMPMN_SE">
			AND t4.EMPMN_SE = #EMPMN_SE#
		</isNotEmpty>
		<isNotEmpty property="APYEXM_CLSF_SE">
			AND t4.APYEXM_CLSF_SE  = #APYEXM_CLSF_SE#
		</isNotEmpty>
		<isNotEmpty property="APYEXM_REALM_SE">
			AND t4.APYEXM_REALM_SE  = #APYEXM_REALM_SE#
		</isNotEmpty>
		<isNotEmpty property="NM_KOREAN"> 
			AND t1.NM_KOREAN LIKE '%' || #NM_KOREAN# || '%'
		</isNotEmpty>
			ORDER BY RL_APYEXM_NO
	</select> 
	
 	<!-- 면접평가항목 목록 조회 -->
	<select id="HRM020306DAO.selectIntrvwEvlIEemList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    SELECT
	    	 NVL(t2.EMPMN_YEAR  , #EMPMN_YEAR#)	AS EMPMN_YEAR
	    	,NVL(t2.ODR_SE      , #ODR_SE#) 	AS ODR_SE
	    	,NVL(t2.APYEXM_NO   , #APYEXM_NO#)	AS APYEXM_NO
	    	,NVL(t2.EVL_MFCMM_NO, #MFCMM_NO#)	AS EVL_MFCMM_NO
			    	,t1.CODE_ETC_1																														   AS EVL_SE
					,t1.CODE																															   AS EVL_IEM_SE
					,t1.CODE_NM																															   AS EVL_NM
					,t1.CODE_ORDR																														   AS EVL_ORDR
			,DECODE(t1.CODE_ETC_1, 1, DECODE(t1.CHRCTR_PREPAR_VALUE_0, t2.EVL_CODE, 1, 0), 2, DECODE(t1.CHRCTR_PREPAR_VALUE_0, 0, 0, t2.EVL_CODE, 1, 0))   AS CODE_0
			,DECODE(t1.CODE_ETC_1, 1, DECODE(t1.CHRCTR_PREPAR_VALUE_1, t2.EVL_CODE, 1, 0), 2, DECODE(t1.CHRCTR_PREPAR_VALUE_1, 0, 0, t2.EVL_CODE, 1, 0))   AS CODE_1
			,DECODE(t1.CODE_ETC_1, 1, DECODE(t1.CHRCTR_PREPAR_VALUE_2, t2.EVL_CODE, 1, 0), 2, DECODE(t1.CHRCTR_PREPAR_VALUE_2, 0, 0, t2.EVL_CODE, 1, 0))   AS CODE_2
			,DECODE(t1.CODE_ETC_1, 1, DECODE(t1.CHRCTR_PREPAR_VALUE_3, t2.EVL_CODE, 1, 0), 2, DECODE(t1.CHRCTR_PREPAR_VALUE_3, 0, 0, t2.EVL_CODE, 1, 0))   AS CODE_3
			,DECODE(t1.CODE_ETC_1, 1, DECODE(t1.CHRCTR_PREPAR_VALUE_4, t2.EVL_CODE, 1, 0), 2, DECODE(t1.CHRCTR_PREPAR_VALUE_4, 0, 0, t2.EVL_CODE, 1, 0))   AS CODE_4
					,NVL(t2.EVL_SCORE, 0)																												   AS EVL_SCORE
			    	,NVL(t2.EVL_CODE, 0)																												   AS EVL_CODE
	    FROM TBCOM_CMMN_CODE t1
	      LEFT OUTER JOIN  TBHRM_INTRVW_SCRPRO t2
	        ON t1.CODE         = t2.EVL_IEM_SE
	       AND t2.EMPMN_YEAR   = #EMPMN_YEAR#
		   AND t2.ODR_SE       = #ODR_SE#
		   AND t2.APYEXM_NO    = #APYEXM_NO#
		   AND t2.EVL_MFCMM_NO = #MFCMM_NO#
		WHERE 1=1
		  AND t1.GRP_CODE = 'HRM074'
	    ORDER BY EVL_ORDR
	</select>
	
	<!-- 기타데이터 -->
	<select id="HRM020306DAO.selectIntrvwEvl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH TB_BASE AS (
		SELECT s2.EMPMN_YEAR
		      ,s2.ODR_SE
		      ,s2.APYEXM_NO
		      ,s2.MFCMM_NO
		      ,SUM(s2.EVL_SCORE) AS EVL_SCORE
		FROM TBCOM_CMMN_CODE s1
		    /*면접평가항목*/
		    LEFT OUTER JOIN (   SELECT t1.EMPMN_YEAR
		                              ,t1.ODR_SE
		                              ,t1.MFCMM_NO
		                              ,t2.APYEXM_NO
		                              ,t2.EVL_IEM_SE
		                              ,NVL(t2.EVL_SCORE, 0) AS EVL_SCORE
		                        FROM TBHRM_SCRPRO_EVL_MFCMM t1
		                        LEFT OUTER JOIN TBHRM_INTRVW_SCRPRO t2
		                        ON  t1.EMPMN_YEAR = t2.EMPMN_YEAR
		                        AND t1.ODR_SE     = t2.ODR_SE
		                        AND t1.MFCMM_NO   = t2.EVL_MFCMM_NO
		                    ) s2    /*평가항목점수*/
		      ON s1.CODE   = s2.EVL_IEM_SE
		WHERE 1               =1
		AND s1.GRP_CODE       = 'HRM074'
		AND s2.EMPMN_YEAR     = #EMPMN_YEAR#
		AND s2.ODR_SE         = #ODR_SE#
		AND s2.APYEXM_NO      = #APYEXM_NO#
		GROUP BY s2.EMPMN_YEAR, s2.ODR_SE, s2.APYEXM_NO, s2.MFCMM_NO
		)
		
		SELECT
		     MAX(t1.EMPMN_YEAR)																												AS EMPMN_YEAR
		    ,MAX(t1.ODR_SE)																													AS ODR_SE	
		    ,MAX(t1.APYEXM_NO)																												AS APYEXM_NO
		    ,SUM(CASE WHEN t1.MFCMM_NO != #MFCMM_NO#        THEN t1.EVL_SCORE ELSE 0 END)													AS EXC_SUM_EVL_SCORE	/*타위원점수합계*/
		    ,TO_CHAR(ROUND(SUM((CASE WHEN t1.MFCMM_NO != #MFCMM_NO# THEN t1.EVL_SCORE ELSE 0 END)/(t2.MFCMM_CNT-1)), 2), 'FM990.00')		AS EXC_AVG_EVL_SCORE	/*타위원점수평균*/
		    ,SUM(CASE WHEN t1.MFCMM_NO = #MFCMM_NO#         THEN t1.EVL_SCORE ELSE 0 END)													AS TOT_EVL_SCORE		/*자신점수합계*/
		    ,TO_CHAR(ROUND(SUM(t1.EVL_SCORE/t2.MFCMM_CNT), 2), 'FM990.00')																	AS AVG_EVL_SCORE		/*평균*/
		FROM TB_BASE t1
		    LEFT OUTER JOIN (   SELECT EMPMN_YEAR
		                              ,ODR_SE
		                              ,COUNT(MFCMM_NO) AS MFCMM_CNT
		                        FROM TBHRM_SCRPRO_EVL_MFCMM
		                        GROUP BY EMPMN_YEAR, ODR_SE ) t2    /*평가위원수*/
		     ON t1.EMPMN_YEAR = t2.EMPMN_YEAR
		    AND t1.ODR_SE     = t2.ODR_SE
	</select>
	
	<!--  면접 평가내역 생성 및 수정-->
 	<update id="HRM020306DAO.intrvwEvlScrproCU" parameterClass="java.util.HashMap">
		MERGE INTO TBHRM_INTRVW_SCRPRO 
		USING DUAL
		   ON (EMPMN_YEAR         = #EMPMN_YEAR#
		       AND  ODR_SE        = #ODR_SE#
		       AND  APYEXM_NO     = #APYEXM_NO#
		       AND  EVL_MFCMM_NO  = #EVL_MFCMM_NO#
		       AND  EVL_IEM_SE    = #EVL_IEM_SE#)
			WHEN MATCHED THEN
			  UPDATE
			  SET 
			      EVL_SCORE  =  #EVL_SCORE#
			     ,EVL_CODE   =  #EVL_CODE#
			     ,EVL_DT     =  SYSDATE
			     ,UPDUSR_ID  =  #S_USER_ID#
			     ,UPDT_DT    =  SYSDATE
			  WHEN NOT MATCHED THEN
			  INSERT
			    (  EMPMN_YEAR
			      ,ODR_SE
			      ,APYEXM_NO
			      ,EVL_MFCMM_NO
			      ,EVL_IEM_SE
			      ,EVL_SCORE
			      ,EVL_CODE
			      ,EVL_DT
			      ,REGISTER_ID
			      ,REGIST_DT
			      ,UPDUSR_ID
			      ,UPDT_DT
			    )
			    VALUES
			    (
			       #EMPMN_YEAR#
			      ,#ODR_SE#
			      ,#APYEXM_NO#
			      ,#EVL_MFCMM_NO#
			      ,#EVL_IEM_SE#
			      ,#EVL_SCORE#
			      ,#EVL_CODE#
			      ,SYSDATE
			      ,#S_USER_ID#
			      ,SYSDATE
			      ,#S_USER_ID#
			      ,SYSDATE
			    )
	</update>
	

	<!--  면접평가 생성 및 수정-->
 	<update id="HRM020306DAO.intrvwEvlCU" parameterClass="java.util.HashMap">
		MERGE INTO TBHRM_INTRVW_EVL 
		USING DUAL
		 ON (EMPMN_YEAR    = #EMPMN_YEAR#
		AND ODR_SE         = #ODR_SE#
		AND APYEXM_NO      = #APYEXM_NO#)
		WHEN MATCHED THEN
		  UPDATE
		  SET TOT_SCORE      = #AVG_EVL_SCORE#
			 ,EVL_RANK       = #EVL_RANK#
			 ,EVL_RESULT_SE  = #EVL_RESULT_SE#
			 ,EVL_MAN_CO     = #EVL_MAN_CO#
		     ,UPDUSR_ID      = #S_USER_ID#
		     ,UPDT_DT        = SYSDATE
		  WHEN NOT MATCHED THEN
		  INSERT (
			 EMPMN_YEAR
			,ODR_SE
			,APYEXM_NO
			,TOT_SCORE
			,EVL_RANK
			,EVL_RESULT_SE
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
			,EVL_MAN_CO
		) 
		VALUES 
		(
			 #EMPMN_YEAR#
			,#ODR_SE#
			,#APYEXM_NO#
			,#AVG_EVL_SCORE#
			,#EVL_RANK#
			,#EVL_RESULT_SE#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
			,#EVL_MAN_CO#
		 )
	</update>

  </sqlMap>