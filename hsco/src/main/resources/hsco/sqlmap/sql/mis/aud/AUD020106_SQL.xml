<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="AUD020106_SQL">	
	<typeAlias alias="egovMap"          type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!--예산모니터링 목록조회(2018년 이상) -->
	<select id="AUD020106DAO.selectBudgetList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.YEAR                   AS YEAR
		     , t1.BSNS_SE                AS BSNS_SE
		     , t1.BALC_SE                AS BALC_SE
		     , t1.DETAIL_BSNS_CODE       AS DETAIL_BSNS_CODE
		     , NVL(t4.BSNS_NM,'기타')      AS BSNS_NM
		     , t1.DEPT_CODE              AS DEPT_CODE
		     , t5.DEPT_NM                AS DEPT_NM
		     , t1.BUDGET_ACNT_CODE       AS BUDGET_ACNT_CODE
		     , (CASE WHEN t2.ACNT_LEVEL < '4' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(t2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4, 2)
		             ELSE SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4)
		        END) ||'.'|| t2.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM
		     , t1.EXPNDTR_UNIT_CODE    AS EXPNDTR_UNIT_CODE
		     , t1.EXPNDTR_UNIT_CODE||'.'||t1.EXPNDTR_UNIT_NM    AS EXPNDTR_UNIT_NM
		     , NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)            AS EXECUT_AM
		     , NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)      AS RVSPBGT_ODR
		     , NVL(ORIBDGT,0)            AS ORIBDGT
		     , NVL(t1.CYFD_BUDGET,0)     AS CYFD_BUDGET
		     , NVL(t6.DECSN_AMOUNT,0)    AS DECSN_AMOUNT
		     , NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)
		           - NVL(t6.DECSN_AMOUNT,0)       AS DECSN_JANAMT
		     , NVL(t1.MVMN_AM,0)
		           + NVL(BUKIP_MVMN_AM,0)
		           + NVL(DVR_AM,0)
		           + NVL(RSVFND_REQST_AM,0)
		           + NVL(t1.TRSF_AM,0)            AS MVMN_AM
		  FROM TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR              = t2.YEAR
		           AND t1.BSNS_SE          = t2.BSNS_SE
		           AND t1.BALC_SE          = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
                                     , BSNS_SE
                                     , BALC_SE
                                     , BSNS_CODE
                                     , DEPT_CODE
                                     , BUDGET_ACNT_CODE
                                     , EXPNDTR_UNIT_CODE
                                     , CYFD_BUDGET_AMT
                                     , ORIBDGT_AMT
                                     , RVSPBGT_AMT
                                     , DVR_AMT
                                     , EXECUT_BUDGET_AM
                                     , CAUSE_ACTION_AMOUNT
                                     , CAUSE_ACTION_DECSN_AMOUNT
                                     , CAUSE_ACTION_JAN_AMOUNT
                                     , EXP_DSN_AMOUNT
                                     , DEBT_AMT
                                     , DECSN_AMOUNT
                                     , ASIGN_AMOUNT
                                     , MONTH_CAUSE_ACTION_AMOUNT
                                     , MONTH_DECSN_AMOUNT
                                     , EXECUT_BUDGET_JAN_AM
                                     , ASIGN_JAN_AMOUNT
                                  FROM VWACC_EXP_DSN_MASTR
		                       ) t6
		             ON t1.YEAR              = t6.BUDGET_YEAR
		            AND t1.BSNS_SE           = t6.BSNS_SE
		            AND t1.BALC_SE           = t6.BALC_SE
		            AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		            AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		            AND t1.DETAIL_BSNS_CODE  = t6.BSNS_CODE
		            AND t1.DEPT_CODE         = t6.DEPT_CODE
		 WHERE t1.BALC_SE = '2'
		]]>
		<isNotEmpty property="YEAR">
		   AND t1.YEAR    = #YEAR#
		</isNotEmpty>
		<isNotEmpty property="BSNS_SE">
		   AND t1.BSNS_SE = #BSNS_SE#
		</isNotEmpty>
		<isNotEmpty property="BALC_SE">
		   AND t1.BALC_SE = #BALC_SE# 
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		   AND t1.DEPT_CODE = #DEPT_CODE# 
		</isNotEmpty>
		<![CDATA[
		
		UNION ALL
		
		SELECT t1.YEAR                            AS YEAR
		     , t1.BSNS_SE                         AS BSNS_SE
		     , t1.BALC_SE                         AS BALC_SE
		     , t1.DETAIL_BSNS_CODE                AS DETAIL_BSNS_CODE
		     , NVL(t4.BSNS_NM,'기타')               AS BSNS_NM
		     , t1.DEPT_CODE                       AS DEPT_CODE
		     , t5.DEPT_NM                         AS DEPT_NM
		     , t1.BUDGET_ACNT_CODE                AS BUDGET_ACNT_CODE
		     , (CASE WHEN t2.ACNT_LEVEL < '4' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(t2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4, 2)
		             ELSE SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4)
		        END) ||'.'|| t2.BUDGET_ACNT_NM    AS BUDGET_ACNT_NM
		     , NULL                               AS EXPNDTR_UNIT_CODE
		     , NULL                               AS EXPNDTR_UNIT_NM
		     , SUM(NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0))           AS EXECUT_AM
		     , SUM(NVL(t1.ORIBDGT,0))             AS ORIBDGT
		     , SUM(NVL(t1.CYFD_BUDGET,0))         AS CYFD_BUDGET
		     , SUM(NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0))     AS RVSPBGT_ODR
		     , SUM(NVL(t6.DECSN_AMOUNT,0))        AS DECSN_AMOUNT
		     , SUM(NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)
		           - NVL(t6.DECSN_AMOUNT,0))      AS DECSN_JANAMT
		     , SUM(NVL(t1.MVMN_AM,0))
		           + SUM(NVL(BUKIP_MVMN_AM,0))
		           + SUM(NVL(DVR_AM,0))
		           + SUM(NVL(RSVFND_REQST_AM,0) + NVL(t1.TRSF_AM,0))    AS MVMN_AM
		  FROM TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR             = t2.YEAR
		           AND t1.BSNS_SE          = t2.BSNS_SE
		           AND t1.BALC_SE          = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		       LEFT OUTER JOIN (SELECT a1.BUDGET_YEAR, a1.BSNS_SE, a1.BALC_SE, a1.BUDGET_ACNT_CODE, a1.EXPNDTR_UNIT_CODE, a1.BSNS_CODE, a1.DEPT_CODE, SUM(a2.DECSN_AMOUNT) AS DECSN_AMOUNT
		                        FROM TBACC_INC_DSN_MASTR a1
		                             INNER JOIN TBACC_INC_DSN_DETAIL a2
		                             ON  a1.DECSN_YEAR = a2.DECSN_YEAR
		                             AND a1.DECSN_NO   = a2.DECSN_NO
		                        GROUP BY a1.BUDGET_YEAR, a1.BSNS_SE, a1.BALC_SE, a1.BUDGET_ACNT_CODE, a1.EXPNDTR_UNIT_CODE, a1.BSNS_CODE, a1.DEPT_CODE
		                       ) t6
		             ON t1.YEAR              = t6.BUDGET_YEAR
		            AND t1.BSNS_SE           = t6.BSNS_SE
		            AND t1.BALC_SE           = t6.BALC_SE
		            AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		            AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		            AND t1.DETAIL_BSNS_CODE  = t6.BSNS_CODE
		            AND t1.DEPT_CODE         = t6.DEPT_CODE
		 WHERE t1.BALC_SE = '1'
		]]>
		<isNotEmpty property="YEAR">
		   AND t1.YEAR    = #YEAR#
		</isNotEmpty>
		<isNotEmpty property="BSNS_SE">
		   AND t1.BSNS_SE = #BSNS_SE#
		</isNotEmpty>
		<isNotEmpty property="BALC_SE">
		   AND t1.BALC_SE = #BALC_SE# 
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		   AND t1.DEPT_CODE = #DEPT_CODE# 
		</isNotEmpty>
		<![CDATA[	
		 GROUP BY t1.YEAR
		        , t1.BSNS_SE
		        , t1.BALC_SE
		        , t1.DETAIL_BSNS_CODE
		        , NVL(t4.BSNS_NM,'기타')
		        , t1.DEPT_CODE
		        , t5.DEPT_NM
		        , t1.BUDGET_ACNT_CODE
		        , t2.ACNT_LEVEL
		        , t2.BUDGET_ACNT_CODE
		        , t2.BUDGET_ACNT_NM
		 ORDER BY 1,2,3,4,6,8,10 /*년도,사업구분,수지구분,사업코드,부서코드,예산계정코드,부기코드*/
		]]>
	</select>
	
	
	<!--예산모니터링 목록조회(2017년 이하) -->
	<select id="AUD020106DAO.selectBudgetListOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.YEAR                   AS YEAR
		     , t1.BSNS_SE                AS BSNS_SE
		     , t1.BALC_SE                AS BALC_SE
		     , t1.DETAIL_BSNS_CODE       AS DETAIL_BSNS_CODE
		     , NVL(t4.BSNS_NM,'기타')      AS BSNS_NM
		     , t1.DEPT_CODE              AS DEPT_CODE
		     , t5.DEPT_NM                AS DEPT_NM
		     , t1.BUDGET_ACNT_CODE       AS BUDGET_ACNT_CODE
		     , (CASE WHEN t2.ACNT_LEVEL < '4' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(t2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4, 2)
		             ELSE SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4)
		        END) ||'.'|| t2.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM
		     , t1.EXPNDTR_UNIT_CODE    AS EXPNDTR_UNIT_CODE
		     , t1.EXPNDTR_UNIT_CODE||'.'||t1.EXPNDTR_UNIT_NM    AS EXPNDTR_UNIT_NM
		     , NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)            AS EXECUT_AM
		     , NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)      AS RVSPBGT_ODR
		     , NVL(ORIBDGT,0)            AS ORIBDGT
		     , NVL(t1.CYFD_BUDGET,0)     AS CYFD_BUDGET
		     , NVL(t6.DECSN_AMOUNT,0)    AS DECSN_AMOUNT
		     , NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)
		           - NVL(t6.DECSN_AMOUNT,0)       AS DECSN_JANAMT
		     , NVL(t1.MVMN_AM,0)
		           + NVL(BUKIP_MVMN_AM,0)
		           + NVL(DVR_AM,0)
		           + NVL(RSVFND_REQST_AM,0)
		           + NVL(t1.TRSF_AM,0)            AS MVMN_AM
		  FROM TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR              = t2.YEAR
		           AND t1.BSNS_SE          = t2.BSNS_SE
		           AND t1.BALC_SE          = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		       LEFT OUTER JOIN (
		                         SELECT BUDGET_YEAR
		                              , BSNS_SE
		                              , BALC_SE
		                              , BUDGET_ACNT_CODE
		                              , EXPNDTR_UNIT_CODE
		                              , BSNS_CODE
		                              , DEPT_CODE
		                              , SUM(DECODE(ANACT_KND, '05', DECSN_AMOUNT*-1, DECSN_AMOUNT))    AS DECSN_AMOUNT
		                           FROM VHACC_EXP_DSN_MASTR
		                         GROUP BY BUDGET_YEAR
		                                , BSNS_SE
		                                , BALC_SE
		                                , BUDGET_ACNT_CODE
		                                , EXPNDTR_UNIT_CODE
		                                , BSNS_CODE
		                                , DEPT_CODE
		                       ) t6
		             ON t1.YEAR              = t6.BUDGET_YEAR
		            AND t1.BSNS_SE           = t6.BSNS_SE
		            AND t1.BALC_SE           = t6.BALC_SE
		            AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		            AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		            AND t1.DETAIL_BSNS_CODE  = t6.BSNS_CODE
		            AND t1.DEPT_CODE         = t6.DEPT_CODE
		 WHERE t1.BALC_SE = '2'
		]]>
		<isNotEmpty property="YEAR">
		   AND t1.YEAR    = #YEAR#
		</isNotEmpty>
		<isNotEmpty property="BSNS_SE">
		   AND t1.BSNS_SE = #BSNS_SE#
		</isNotEmpty>
		<isNotEmpty property="BALC_SE">
		   AND t1.BALC_SE = #BALC_SE# 
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		   AND t1.DEPT_CODE = #DEPT_CODE# 
		</isNotEmpty>
		<![CDATA[
		
		UNION ALL
		
		SELECT t1.YEAR                            AS YEAR
		     , t1.BSNS_SE                         AS BSNS_SE
		     , t1.BALC_SE                         AS BALC_SE
		     , t1.DETAIL_BSNS_CODE                AS DETAIL_BSNS_CODE
		     , NVL(t4.BSNS_NM,'기타')               AS BSNS_NM
		     , t1.DEPT_CODE                       AS DEPT_CODE
		     , t5.DEPT_NM                         AS DEPT_NM
		     , t1.BUDGET_ACNT_CODE                AS BUDGET_ACNT_CODE
		     , (CASE WHEN t2.ACNT_LEVEL < '4' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(t2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4, 2)
		             ELSE SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4)
		        END) ||'.'|| t2.BUDGET_ACNT_NM    AS BUDGET_ACNT_NM
		     , NULL                               AS EXPNDTR_UNIT_CODE
		     , NULL                               AS EXPNDTR_UNIT_NM
		     , SUM(NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0))           AS EXECUT_AM
		     , SUM(NVL(t1.ORIBDGT,0))             AS ORIBDGT
		     , SUM(NVL(t1.CYFD_BUDGET,0))         AS CYFD_BUDGET
		     , SUM(NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0))     AS RVSPBGT_ODR
		     , SUM(NVL(t6.DECSN_AMOUNT,0))        AS DECSN_AMOUNT
		     , SUM(NVL(t1.ORIBDGT,0)
		           + NVL(t1.RVSPBGT_1_ODR,0)
		           + NVL(t1.RVSPBGT_2_ODR,0)
		           + NVL(t1.RVSPBGT_3_ODR,0)
		           + NVL(t1.RVSPBGT_4_ODR,0)
		           + NVL(t1.RVSPBGT_5_ODR,0)
		           + NVL(t1.RVSPBGT_6_ODR,0)
		           + NVL(t1.RVSPBGT_7_ODR,0)
		           + NVL(t1.MVMN_AM,0)
		           + NVL(t1.BUKIP_MVMN_AM,0)
		           + NVL(t1.DVR_AM,0)
		           + NVL(t1.RSVFND_REQST_AM,0)
		           + NVL(t1.CYFD_BUDGET,0)
		           + NVL(t1.TRSF_AM,0)
		           - NVL(t6.DECSN_AMOUNT,0))      AS DECSN_JANAMT
		     , SUM(NVL(t1.MVMN_AM,0))
		           + SUM(NVL(BUKIP_MVMN_AM,0))
		           + SUM(NVL(DVR_AM,0))
		           + SUM(NVL(RSVFND_REQST_AM,0) + NVL(t1.TRSF_AM,0))    AS MVMN_AM
		  FROM TBBDG_EXECUT_BUDGET t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR             = t2.YEAR
		           AND t1.BSNS_SE          = t2.BSNS_SE
		           AND t1.BALC_SE          = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		       LEFT OUTER JOIN (SELECT a1.BUDGET_YEAR, a1.BSNS_SE, a1.BALC_SE, a1.BUDGET_ACNT_CODE, a1.EXPNDTR_UNIT_CODE, a1.BSNS_CODE, a1.DEPT_CODE, SUM(a2.DECSN_AMOUNT) AS DECSN_AMOUNT
		                        FROM TBACC_INC_DSN_MASTR a1
		                             INNER JOIN TBACC_INC_DSN_DETAIL a2
		                             ON  a1.DECSN_YEAR = a2.DECSN_YEAR
		                             AND a1.DECSN_NO   = a2.DECSN_NO
		                        GROUP BY a1.BUDGET_YEAR, a1.BSNS_SE, a1.BALC_SE, a1.BUDGET_ACNT_CODE, a1.EXPNDTR_UNIT_CODE, a1.BSNS_CODE, a1.DEPT_CODE
		                       ) t6
		             ON t1.YEAR              = t6.BUDGET_YEAR
		            AND t1.BSNS_SE           = t6.BSNS_SE
		            AND t1.BALC_SE           = t6.BALC_SE
		            AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		            AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		            AND t1.DETAIL_BSNS_CODE  = t6.BSNS_CODE
		            AND t1.DEPT_CODE         = t6.DEPT_CODE
		 WHERE t1.BALC_SE = '1'
		]]>
		<isNotEmpty property="YEAR">
		   AND t1.YEAR    = #YEAR#
		</isNotEmpty>
		<isNotEmpty property="BSNS_SE">
		   AND t1.BSNS_SE = #BSNS_SE#
		</isNotEmpty>
		<isNotEmpty property="BALC_SE">
		   AND t1.BALC_SE = #BALC_SE# 
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		   AND t1.DEPT_CODE = #DEPT_CODE# 
		</isNotEmpty>
		<![CDATA[	
		 GROUP BY t1.YEAR
		        , t1.BSNS_SE
		        , t1.BALC_SE
		        , t1.DETAIL_BSNS_CODE
		        , NVL(t4.BSNS_NM,'기타')
		        , t1.DEPT_CODE
		        , t5.DEPT_NM
		        , t1.BUDGET_ACNT_CODE
		        , t2.ACNT_LEVEL
		        , t2.BUDGET_ACNT_CODE
		        , t2.BUDGET_ACNT_NM
		 ORDER BY 1,2,3,4,6,8,10 /*년도,사업구분,수지구분,사업코드,부서코드,예산계정코드,부기코드*/
		]]>
	</select>
	
	
</sqlMap>