<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM050302_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 승진후보자 목록 조회 -->
	<select id="HRM050302DAO.selectPrmotCnddt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.EVL_YEAR
		      ,t1.HT_SE
		      ,t1.EMPNO
		      ,t2.EMPNM
		      ,t1.DEPT_CODE
		      ,t3.DEPT_NM
		      ,t1.JSSFC_SE
		      ,t4.CODE_NM       AS JSSFC_NM
		      ,t1.CLSF_SE
		      ,t5.CODE_NM       AS CLSF_NM
		      ,t1.JBLN_SE
		      ,t6.CODE_NM       AS JBLN_NM
		      ,t4.CODE_NM || DECODE(t6.CODE_NM, NULL, '', '(' || t6.CODE_NM || ')') || ' ' || t5.CODE_NM     AS ORD_SEPRAT_NM
		      ,t1.CLSF_GNFD_DE
		      ,t2.ECNY_DE
		      ,t2.BRTHDY
		      ,t1.WORK_EVL_SCORE
		      ,t1.CAREER_EVL_SCORE
		      ,t1.EDC_EVL_SCORE
		      ,t1.PZDCR_QUALF_SCORE
		      ,t1.DMRTR_SCORE
		      ,t1.EVL_GNRLZ_SCORE
		      ,t1.ORD_BGNN
		      ,t1.ORD_MDAT
		      ,COUNT(1) OVER (PARTITION BY t1.EVL_YEAR,t1.HT_SE,t1.JSSFC_SE,t1.CLSF_SE,t1.JBLN_SE)            AS MAX_ORD
		      ,t1.RM
		FROM   TBHRM_PRMOT_CNDDT t1
		       LEFT OUTER JOIN TBHRM_HR_MASTR t2
		            ON t1.EMPNO = t2.EMPNO
		       LEFT OUTER JOIN TBHRM_DEPT t3
		            ON t1.DEPT_CODE = t3.DEPT_CODE
		       LEFT OUTER JOIN TBCOM_CMMN_CODE t4
		            ON t1.JSSFC_SE = t4.CODE
		           AND t4.GRP_CODE = 'HRM001'
		       LEFT OUTER JOIN TBCOM_CMMN_CODE t5
		            ON t1.CLSF_SE = t5.CODE
		           AND t5.GRP_CODE = 'HRM002'
		       LEFT OUTER JOIN TBCOM_CMMN_CODE t6
		            ON t1.JBLN_SE = t6.CODE
		           AND t6.GRP_CODE = 'HRM004'
		WHERE  t1.EVL_YEAR = #EVL_YEAR#
		AND    t1.HT_SE    = #HT_SE#
	]]>
	<isNotEmpty property="JSSFC_SE">
		AND    t1.JSSFC_SE = #JSSFC_SE#
	</isNotEmpty>
	<isNotEmpty property="CLSF_SE">
		AND    t1.CLSF_SE = #CLSF_SE#
	</isNotEmpty>
	<isNotEmpty property="JBLN_SE">
		AND    t1.JBLN_SE = #JBLN_SE#
	</isNotEmpty>
	<isNotEmpty property="EMPNM">
		AND    t2.EMPNM LIKE '%' || #EMPNM# || '%'
	</isNotEmpty>
	<isNotEmpty property="DEPT_NM">
		AND    t3.DEPT_NM LIKE '%' || #DEPT_NM# || '%'
	</isNotEmpty>
	<![CDATA[
		ORDER BY t1.EVL_YEAR, t1.HT_SE, t1.JSSFC_SE, t1.CLSF_SE, t1.JBLN_SE, t1.ORD_BGNN
	]]>
	</select>


	<!-- 승진후보자 수정 -->
	<update id="HRM050302DAO.updatePrmotCnddt" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE TBHRM_PRMOT_CNDDT
		SET    ORD_MDAT          = #ORD_MDAT#
		      ,RM                = #RM#
		      ,UPDUSR_ID         = #S_USER_ID#
		      ,UPDT_DT           = SYSDATE
		WHERE  EVL_YEAR          = #EVL_YEAR#
		AND    HT_SE             = #HT_SE#
		AND    EMPNO             = #EMPNO#
	]]>
	</update>


	<!-- 승진후보자 삭제 -->
	<delete id="HRM050302DAO.deletePrmotCnddt" parameterClass="java.util.HashMap">
	<![CDATA[
		DELETE
		FROM   TBHRM_PRMOT_CNDDT
		WHERE  EVL_YEAR = #EVL_YEAR#
		AND    HT_SE    = #HT_SE#
	]]>
	</delete>


	<!-- 승진후보자 목록 집계 -->
	<insert id="HRM050302DAO.calcPrmotCnddt" parameterClass="java.util.HashMap">
	<![CDATA[
		INSERT INTO TBHRM_PRMOT_CNDDT (
		     EVL_YEAR
		    ,HT_SE
		    ,EMPNO
		    ,DEPT_CODE
		    ,JSSFC_SE
		    ,CLSF_SE
		    ,JBLN_SE
		    ,CLSF_GNFD_DE
		    ,WORK_EVL_SCORE
		    ,CAREER_EVL_SCORE
		    ,EDC_EVL_SCORE
		    ,PZDCR_QUALF_SCORE
		    ,DMRTR_SCORE
		    ,EVL_GNRLZ_SCORE
		    ,ORD_BGNN
		    ,ORD_MDAT
		    ,RM
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		/*TODO : 승진소요연수에 도달한 사원만 승진후보자로 올려줘야 함*/
		SELECT t1.EVL_YEAR
		      ,t1.HT_SE
		      ,t1.EMPNO
		      ,t1.DEPT_CODE
		      ,t1.JSSFC_SE
		      ,t1.CLSF_SE
		      ,t1.JBLN_SE
		      ,t1.CLSF_GNFD_DE
		      ,t1.WORK_EVL_SCORE
		      ,t1.CAREER_EVL_SCORE
		      ,t1.EDC_EVL_SCORE
		      ,t1.PZDCR_QUALF_SCORE
		      ,t1.DMRTR_SCORE
		      ,t1.EVL_GNRLZ_SCORE
		      ,RANK() OVER (PARTITION BY t1.EVL_YEAR, t1.HT_SE, t1.JSSFC_SE, t1.CLSF_SE, t1.JBLN_SE ORDER BY t1.EVL_GNRLZ_SCORE DESC)    AS ORD_BGNN
		      ,RANK() OVER (PARTITION BY t1.EVL_YEAR, t1.HT_SE, t1.JSSFC_SE, t1.CLSF_SE, t1.JBLN_SE ORDER BY t1.EVL_GNRLZ_SCORE DESC)    AS ORD_MDAT
		      ,NULL                                                                                          AS RM
		      ,#S_USER_ID#                                                                                   AS REGISTER_ID
		      ,SYSDATE                                                                                       AS REGIST_DT
		      ,#S_USER_ID#                                                                                   AS UPDUSR_ID
		      ,SYSDATE                                                                                       AS UPDT_DT
		FROM   TBHRM_EVL_GNRLZ_SM t1
		WHERE  t1.EVL_YEAR = #EVL_YEAR#
		AND    t1.HT_SE    = #HT_SE#
	]]>
	</insert>


</sqlMap>