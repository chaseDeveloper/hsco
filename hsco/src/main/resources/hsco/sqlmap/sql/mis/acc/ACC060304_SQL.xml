<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060304_SQL">

	<!-- 구분회계부채현황 조회 -->
	<select id="ACC060304DAO.select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060304DAO.select*/]]>
	<![CDATA[
		WITH STACNTSUM_SE_TM1 AS (
		    SELECT '1' AS SHOW_TYPE
		         , SUBSTR(t1.SE_ACCNUT_ACNT_CODE,1,3) AS CODE
		         , MAX(t2.CODE_NM)                    AS CODE_NM
		         , t1.ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT-t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT-t1.DEBTOR_AMOUNT, 0)),0) AS JAN_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		      INNER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t2
		      ON  SUBSTR(t1.SE_ACCNUT_ACNT_CODE,1,3) = t2.CODE
		      AND t2.SE_ACC_CODE                     = '1' /*지구*/
		      INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		      ON  t1.ACCNUT_YEAR       = t3.ACCNUT_YEAR
		      AND t1.ACCNUT_ACNT_CODE  = t3.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR||t1.ACCNUT_MT = #ACCNUT_YM#
		    GROUP BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,1,3), t1.ACCNUT_ACNT_CODE
		    ORDER BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,1,3), t1.ACCNUT_ACNT_CODE
		)
		, STACNTSUM_SE_TM2 AS (
		    SELECT '2' AS SHOW_TYPE
		         , SUBSTR(t1.SE_ACCNUT_ACNT_CODE,4,5) AS CODE
		         
		         /*, MAX(t2.BSNS_NM)                    AS CODE_NM */
		         ,MAX(t2.SE_ACCNUT_ACNT_NM ) AS CODE_NM
		         
		         , t1.ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT-t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT-t1.DEBTOR_AMOUNT, 0)),0) AS JAN_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		     
		     /* 구분회계계정코드 로 변경 2016.08.03
		      LEFT OUTER JOIN TBPRJ_BSNS_CODE t2
		      ON  SUBSTR(t1.SE_ACCNUT_ACNT_CODE,4,5) = t2.BSNS_CODE 
		     */
		      LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
     			ON t1.SE_ACCNUT_ACNT_CODE = t2.SE_ACCNUT_ACNT_CODE
      
		      INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		      ON  t1.ACCNUT_YEAR       = t3.ACCNUT_YEAR
		      AND t1.ACCNUT_ACNT_CODE  = t3.ACCNUT_ACNT_CODE
		    
		    WHERE t1.ACCNUT_YEAR||t1.ACCNUT_MT = #ACCNUT_YM#
		    GROUP BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,4,5), t1.ACCNUT_ACNT_CODE
		    ORDER BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,4,5), t1.ACCNUT_ACNT_CODE
		)
		, STACNTSUM_SE_TM3 AS (
		    SELECT '3' AS SHOW_TYPE
		         , SUBSTR(t1.SE_ACCNUT_ACNT_CODE,9,2) AS CODE
		         , MAX(t2.CODE_NM)                    AS CODE_NM
		         , t1.ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT-t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT-t1.DEBTOR_AMOUNT, 0)),0) AS JAN_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		      INNER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t2
		      ON  SUBSTR(t1.SE_ACCNUT_ACNT_CODE,9,2) = t2.CODE
		      AND t2.SE_ACC_CODE                     = '3' /*공급유형*/
		      INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		      ON  t1.ACCNUT_YEAR       = t3.ACCNUT_YEAR
		      AND t1.ACCNUT_ACNT_CODE  = t3.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR||t1.ACCNUT_MT = #ACCNUT_YM#
		    GROUP BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,9,2), t1.ACCNUT_ACNT_CODE
		    ORDER BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,9,2), t1.ACCNUT_ACNT_CODE
		)
		, STACNTSUM_SE_TM4 AS (
		    SELECT '4' AS SHOW_TYPE
		         , SUBSTR(t1.SE_ACCNUT_ACNT_CODE,11,2) AS CODE
		         , MAX(t2.CODE_NM)                    AS CODE_NM
		         , t1.ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT-t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT-t1.DEBTOR_AMOUNT, 0)),0) AS JAN_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		      INNER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t2
		      ON  SUBSTR(t1.SE_ACCNUT_ACNT_CODE,11,2) = t2.CODE
		      AND t2.SE_ACC_CODE                      = '4' /*사업유형*/
		      INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		      ON  t1.ACCNUT_YEAR       = t3.ACCNUT_YEAR
		      AND t1.ACCNUT_ACNT_CODE  = t3.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR||t1.ACCNUT_MT = #ACCNUT_YM#
		    GROUP BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,11,2), t1.ACCNUT_ACNT_CODE
		    ORDER BY SUBSTR(t1.SE_ACCNUT_ACNT_CODE,11,2), t1.ACCNUT_ACNT_CODE
		)
		SELECT t1.CODE
		     , t1.CODE_NM
		     , NVL(SUM(CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' THEN t1.JAN_AMT ELSE 0 END),0) AS AMT01 /*총자산 금액*/
		     , NVL(SUM(CASE WHEN t1.ACCNUT_ACNT_CODE = '20000000' THEN t1.JAN_AMT ELSE 0 END),0) AS AMT02 /*총부채 금액*/
		     , NVL(SUM(CASE WHEN t1.ACCNUT_ACNT_CODE IN ( '21020000', '22020000' ) THEN t1.JAN_AMT ELSE 0 END),0) AS AMT03 /*금융부채  (유동금융부채  + 비유동금융부채)*/
		     , NVL(SUM(CASE WHEN t1.ACCNUT_ACNT_CODE IN ( '21040000', '22020000' ) THEN t1.JAN_AMT ELSE 0 END),0) AS AMT04 /*비금융부채(유동비금융부채 + 비유동비금융부채)*/
		FROM (
		    SELECT * FROM STACNTSUM_SE_TM1
		    UNION ALL
		    SELECT * FROM STACNTSUM_SE_TM2
		    UNION ALL
		    SELECT * FROM STACNTSUM_SE_TM3
		    UNION ALL
		    SELECT * FROM STACNTSUM_SE_TM4
		) t1
		WHERE t1.SHOW_TYPE = #SHOW_TYPE# /*1:지구, 2:단지, 3: 공급, 4:사업*/
		GROUP BY CODE, CODE_NM
		ORDER BY CODE, CODE_NM
	]]>
	</select>


</sqlMap>