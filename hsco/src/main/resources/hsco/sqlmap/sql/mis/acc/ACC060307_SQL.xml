<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060307_SQL">

	<!-- 구분회계 손익계산서 조회 -->
	<select id="ACC060307DAO.select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060307DAO.select*/]]>
		WITH THIS_STACNT_T AS ( /*당기*/
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , t2.SE_ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNTSUM_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
			GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
            UNION ALL
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , t2.SE_ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNT_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
        )
        , PRE_STACNT_T AS (     /*전기*/
            SELECT t1.ACCNUT_YEAR 
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , t2.SE_ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNTSUM_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
            UNION ALL
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , t2.SE_ACCNUT_ACNT_CODE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNT_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
        )
        , THIS_STACNT_SUM_T AS ( /*당기*/
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , MAX(t3.RSYMNEY_ACNT_AT) AS RSYMNEY_ACNT_AT
                 , MAX(t3.DBRT_SE) AS DBRT_SE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNTSUM_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		         INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		         ON  t1.ACCNUT_YEAR			= t3.ACCNUT_YEAR
		         AND t1.ACCNUT_ACNT_CODE    = t3.ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
			GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
            UNION ALL
            SELECT t1.ACCNUT_YEAR
                 , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '19900000' /*자산총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '29900000' /*부채총계*/
                        WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
                        ELSE t1.ACCNUT_ACNT_CODE
                   END AS ACCNUT_ACNT_CODE
                 , MAX(t3.RSYMNEY_ACNT_AT)      AS RSYMNEY_ACNT_AT
                 , MAX(t3.DBRT_SE)              AS DBRT_SE
                 , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
                 , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
            FROM TBACC_ACCNUT_STACNT_SE t1
            	 INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		         INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		         ON  t1.ACCNUT_YEAR			= t3.ACCNUT_YEAR
		         AND t1.ACCNUT_ACNT_CODE    = t3.ACCNUT_ACNT_CODE
            WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
            AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
            GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
        )
        SELECT CASE WHEN m2.RSYMNEY_ACNT_AT = '1' 
                    THEN NVL(m2.DR_AMT - m2.CR_AMT,0)
                    ELSE NVL(DECODE(m2.DBRT_SE, 'D', m2.DR_AMT - m2.CR_AMT, 'C', m2.CR_AMT - m2.DR_AMT ,m2.DR_AMT - m2.CR_AMT),0) 
               END  AS THIS_STACNT_SUM
             , m1.*
        FROM (
	        SELECT *
	        FROM (
		    SELECT 
		    	 t1.ACCNUT_ACNT_CODE	
		    	,t1.ACCNUT_ACNT_NM
		    	,t1.SE_ACCNUT_ACNT_CODE
		    	,t1.THIS_STACNT_AMT
		    	,t1.PRE_STACNT_AMT
		    	,t1.THIS_STACNT_AMT - t1.PRE_STACNT_AMT AS IRDS
		    FROM (
		      SELECT t1.ACCNUT_ACNT_CODE
		           , t1.ACCNUT_ACNT_NM
		           , t1.SE_ACCNUT_ACNT_CODE
		           , CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/, '41500000'/*매출총이익*/) 
		                      THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/, '42500000'/*영업이익*/) 
		                      THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/, '46000000'/*법인세비용차감전순이익*/)
		                      THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/, '47000000'/*계속영업이익(손실)*/)
		                      THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4), SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  ELSE t1.THIS_STACNT_AMT
		             END AS THIS_STACNT_AMT
		           , CASE WHEN t1.ACCNUT_ACNT_CODE IN ('6900000'/*구코드*/, '41500000'/*매출총이익*/) 
		                      THEN SFACC_GET_41500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6400000'/*구코드*/, '42500000'/*영업이익*/) 
		                      THEN SFACC_GET_42500000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6600000'/*구코드*/, '46000000'/*법인세비용차감전순이익*/)
		                      THEN SFACC_GET_46000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  WHEN t1.ACCNUT_ACNT_CODE IN ('6800000'/*구코드*/, '47000000'/*계속영업이익(손실)*/)
		                      THEN SFACC_GET_47000000_SE_AMT(SUBSTR(#ACCNUT_YM#,1,4)-1, SUBSTR(#ACCNUT_YM#,5,2), t1.SE_ACCNUT_ACNT_CODE)
		                  ELSE t1.PRE_STACNT_AMT
		             END AS PRE_STACNT_AMT
		           
		      FROM (
			          SELECT t1.ACCNUT_ACNT_CODE
			               , MAX(t2.SE_ACCNUT_ACNT_CODE) AS SE_ACCNUT_ACNT_CODE
			               , MAX(NVL(t1.OUTPT_ACNT_NM, t1.ACCNUT_ACNT_NM)) AS ACCNUT_ACNT_NM
			               , CASE WHEN t1.RSYMNEY_ACNT_AT = '1' 
			                      THEN NVL(SUM(t2.DR_AMT - t2.CR_AMT),0)
			                      ELSE NVL(SUM(DECODE(t1.DBRT_SE, 'D', t2.DR_AMT - t2.CR_AMT, 'C', t2.CR_AMT - t2.DR_AMT ,t2.DR_AMT - t2.CR_AMT)),0) 
			                 END  AS THIS_STACNT_AMT
			               , CASE WHEN t1.RSYMNEY_ACNT_AT = '1' 
			                      THEN NVL(SUM(t3.DR_AMT - t3.CR_AMT),0)
			                      ELSE NVL(SUM(DECODE(t1.DBRT_SE, 'D', t3.DR_AMT - t3.CR_AMT, 'C', t3.CR_AMT - t3.DR_AMT ,t3.DR_AMT - t3.CR_AMT)),0) 
			                 END  AS PRE_STACNT_AMT
			          FROM TBACC_ACCNUT_ACNT_SBJECT t1
			            LEFT OUTER JOIN THIS_STACNT_T t2
			            ON  t1.ACCNUT_YEAR      = t2.ACCNUT_YEAR
			            AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
			            LEFT OUTER JOIN PRE_STACNT_T t3
			            ON  t1.ACCNUT_YEAR      = t3.ACCNUT_YEAR
			            AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
			          WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
			          AND   t1.ACNT_SE  = '2' /*손익계산서*/
			          AND   t1.OUTPT_AT = '1' /*출력여부*/
			          GROUP BY t1.ACCNUT_YEAR
			                 , t1.ACCNUT_ACNT_CODE
			                 , t1.RSYMNEY_ACNT_AT
			           ORDER BY t1.ACCNUT_ACNT_CODE ASC
		      ) t1
		    ) t1
		  )
		  PIVOT (
	            SUM(THIS_STACNT_AMT)
	            FOR SE_ACCNUT_ACNT_CODE IN (
	               <iterate property="seList" conjunction=",">
	                  '$seList[].SE_ACCNUT_ACNT_CODE$'
	               </iterate>
	            )
	     )
	 ) m1
	 LEFT OUTER JOIN THIS_STACNT_SUM_T m2
	 ON  m1.ACCNUT_ACNT_CODE = m2.ACCNUT_ACNT_CODE
	 
	</select>
</sqlMap>