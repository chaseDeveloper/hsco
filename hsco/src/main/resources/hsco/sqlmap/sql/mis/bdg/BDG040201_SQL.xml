<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG040201_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 결산총괄 조회 -->
	<select id="BDG040201DAO.selectStacntTot" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*BDG040201DAO.selectStacntTot*/]]>
		WITH EXECUT_BUDGET_TM AS (
		    SELECT YEAR
		         , BSNS_SE
		         , BALC_SE
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , BUDGET_ACNT_CODE
		         , SUM(NVL(CYFD_BUDGET, 0))
		           + SUM(NVL(ORIBDGT, 0))
		           + SUM(NVL(RVSPBGT_1_ODR, 0))
		           + SUM(NVL(RVSPBGT_2_ODR, 0))
		           + SUM(NVL(RVSPBGT_3_ODR, 0))
		           + SUM(NVL(RVSPBGT_4_ODR, 0))
		           + SUM(NVL(RVSPBGT_5_ODR, 0))
		           + SUM(NVL(RVSPBGT_6_ODR, 0))
		           + SUM(NVL(RVSPBGT_7_ODR, 0))
		           + SUM(NVL(MVMN_AM, 0))
		           + SUM(NVL(BUKIP_MVMN_AM, 0))
		           + SUM(NVL(DVR_AM, 0))
		           + SUM(NVL(TRSF_AM, 0))
		           + SUM(NVL(RSVFND_REQST_AM, 0))    AS EXECUT_BUDGET_AM
		      FROM TBBDG_EXECUT_BUDGET
		     WHERE 1=1
		<isEqual property="BSNS_KND" compareValue="1">
		       AND DETAIL_BSNS_CODE LIKE 'A%'
		</isEqual>
		<isEqual property="BSNS_KND" compareValue="2">
		       AND DETAIL_BSNS_CODE LIKE 'B%'
		</isEqual>
		    GROUP BY YEAR
		           , BSNS_SE
		           , BALC_SE
		           , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		           , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		    HAVING 1=1
		<isNotEmpty property="BSNS_CODE">
		       AND DETAIL_BSNS_CODE = #BSNS_CODE#
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		       AND DEPT_CODE        = #DEPT_CODE#
			</isNotEqual>
		</isNotEmpty>
		), EXP_DSN_MASTR_TM AS (
		<isEqual property="YEAR_SE" compareValue="1">
		    SELECT BUDGET_YEAR AS YEAR
		         , BSNS_SE
		         , BALC_SE
			<isNotEmpty property="BSNS_CODE">
		         , BSNS_CODE
			</isNotEmpty>
			<isNotEmpty property="DEPT_CODE">
				<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
				</isNotEqual>
			</isNotEmpty>
		         , BUDGET_ACNT_CODE
		         , SUM(NVL(DEBT_AMT, 0))    AS DEBT_AMT
		      FROM VHACC_EXP_DSN_MASTR
		     WHERE 1=1
			<isEqual property="BSNS_KND" compareValue="1">
		       AND BSNS_CODE LIKE 'A%'
			</isEqual>
			<isEqual property="BSNS_KND" compareValue="2">
		       AND BSNS_CODE LIKE 'B%'
			</isEqual>
		    GROUP BY BUDGET_YEAR
		           , BSNS_SE
		           , BALC_SE
			<isNotEmpty property="BSNS_CODE">
		           , BSNS_CODE
			</isNotEmpty>
			<isNotEmpty property="DEPT_CODE">
				<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
				</isNotEqual>
			</isNotEmpty>
		           , BUDGET_ACNT_CODE
		</isEqual>
		<isEqual property="YEAR_SE" compareValue="2">
		    SELECT BUDGET_YEAR AS YEAR
		         , BSNS_SE
		         , BALC_SE
			<isNotEmpty property="BSNS_CODE">
		         , BSNS_CODE
			</isNotEmpty>
			<isNotEmpty property="DEPT_CODE">
				<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
				</isNotEqual>
			</isNotEmpty>
		         , BUDGET_ACNT_CODE
		         , SUM(NVL(DEBT_AMT, 0))    AS DEBT_AMT
		      FROM VWACC_EXP_DSN_MASTR
		     WHERE 1=1
			<isEqual property="BSNS_KND" compareValue="1">
		       AND BSNS_CODE LIKE 'A%'
			</isEqual>
			<isEqual property="BSNS_KND" compareValue="2">
		       AND BSNS_CODE LIKE 'B%'
			</isEqual>
		    GROUP BY BUDGET_YEAR
		           , BSNS_SE
		           , BALC_SE
			<isNotEmpty property="BSNS_CODE">
		           , BSNS_CODE
			</isNotEmpty>
			<isNotEmpty property="DEPT_CODE">
				<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
				</isNotEqual>
			</isNotEmpty>
		           , BUDGET_ACNT_CODE
		</isEqual>
		), INC_DSN_TM AS (
		    SELECT t1.BUDGET_YEAR AS YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		<isNotEmpty property="BSNS_CODE">
		         , t1.BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , t1.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , t1.BUDGET_ACNT_CODE
		         , SUM(NVL(t2.DECSN_AMOUNT, 0))    AS DECSN_AMOUNT
		      FROM TBACC_INC_DSN_MASTR t1
		           INNER JOIN TBACC_INC_DSN_DETAIL t2
		                ON t1.DECSN_YEAR = t2.DECSN_YEAR
		               AND t1.DECSN_NO   = t2.DECSN_NO
		     WHERE 1=1
		<isEqual property="BSNS_KND" compareValue="1">
		       AND t1.BSNS_CODE LIKE 'A%'
		</isEqual>
		<isEqual property="BSNS_KND" compareValue="2">
		       AND t1.BSNS_CODE LIKE 'B%'
		</isEqual>
		    GROUP BY t1.BUDGET_YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		<isNotEmpty property="BSNS_CODE">
		           , t1.BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , t1.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           , t1.BUDGET_ACNT_CODE
		), BDG_SEMOK_LIST AS (
		    SELECT T1.YEAR
		         , T1.BSNS_SE
		         , T1.BALC_SE
		         , T4.GWAN_NM
		         , T4.HANG_NM
		         , T4.SEHANG_NM
		         , T4.MOK_NM
		         , T4.SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , T1.DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , T1.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , T1.BUDGET_ACNT_CODE                                                                                 AS BUDGET_ACNT_CODE
		         , NVL(T2.EXECUT_BUDGET_AM, 0)                                                                         AS EXECUT_BUDGET_AM /*예산액(계)*/
		         , NVL(T3.DEBT_AMT, 0)                                                                                 AS DEBT_AMT /*결산액(채무확정액)*/
		         , NVL(T6.DECSN_AMOUNT, 0)                                                                             AS DECSN_AMOUNT /*결산액*/
		      FROM (
		            SELECT YEAR
		                 , BSNS_SE
		                 , BALC_SE
		                 , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		                 , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		                 , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		              FROM (
		                    SELECT YEAR
		                         , BSNS_SE
		                         , BALC_SE
		                         , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		                         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		                         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		                      FROM EXECUT_BUDGET_TM
		                    UNION ALL
		                    SELECT YEAR
		                         , BSNS_SE
		                         , BALC_SE
		                         , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		                         , BSNS_CODE AS DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		                         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		                      FROM EXP_DSN_MASTR_TM
		                    UNION ALL
		                    SELECT YEAR
		                         , BSNS_SE
		                         , BALC_SE
		                         , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		                         , BSNS_CODE AS DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		                         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		                      FROM INC_DSN_TM
		                   )
		            GROUP BY YEAR
		                   , BSNS_SE
		                   , BALC_SE
		                   , BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		                   , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		                   , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           ) T1
		           LEFT OUTER JOIN EXECUT_BUDGET_TM T2
		                ON T1.YEAR              = T2.YEAR
		               AND T1.BSNS_SE           = T2.BSNS_SE
		               AND T1.BALC_SE           = T2.BALC_SE
		               AND T1.BUDGET_ACNT_CODE  = T2.BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		               AND T1.DETAIL_BSNS_CODE  = T2.DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		               AND T1.DEPT_CODE         = T2.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           LEFT OUTER JOIN EXP_DSN_MASTR_TM T3
		                ON T1.YEAR              = T3.YEAR
		               AND T1.BSNS_SE           = T3.BSNS_SE
		               AND T1.BALC_SE           = T3.BALC_SE
		               AND T1.BUDGET_ACNT_CODE  = T3.BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		               AND T1.DETAIL_BSNS_CODE  = T3.BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		               AND T1.DEPT_CODE         = T3.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE T4
		                ON T1.YEAR             = T4.YEAR
		               AND T1.BSNS_SE          = T4.BSNS_SE
		               AND T1.BALC_SE          = T4.BALC_SE
		               AND T1.BUDGET_ACNT_CODE = T4.BUDGET_ACNT_CODE
		           LEFT OUTER JOIN INC_DSN_TM T6
		                ON T1.YEAR             = T6.YEAR
		               AND T1.BSNS_SE          = T6.BSNS_SE
		               AND T1.BALC_SE          = T6.BALC_SE
		               AND T1.BUDGET_ACNT_CODE = T6.BUDGET_ACNT_CODE
		<isNotEmpty property="BSNS_CODE">
		               AND T1.DETAIL_BSNS_CODE = T6.BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		               AND T1.DEPT_CODE        = T6.DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		), BDG_GWAN_LIST AS (
		    SELECT YEAR
		         , BSNS_SE
		         , BALC_SE
		         , GWAN_NM
		         , '' AS HANG_NM
		         , '' AS SEHANG_NM
		         , '' AS MOK_NM
		         , '' AS SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , SUBSTR(BUDGET_ACNT_CODE,1,1) || '0000000'    AS BUDGET_ACNT_CODE
		         , SUM(EXECUT_BUDGET_AM)                        AS EXECUT_BUDGET_AM      /*예산액(계)*/
		         , SUM(DEBT_AMT)                                AS DEBT_AMT     /*결산액(채무확정액)*/
		         , SUM(DECSN_AMOUNT)                            AS DECSN_AMOUNT     /*결산액*/
		      FROM BDG_SEMOK_LIST
		    GROUP BY YEAR
		           , BSNS_SE
		           , BALC_SE
		<isNotEmpty property="BSNS_CODE">
		           , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           , GWAN_NM
		           , SUBSTR(BUDGET_ACNT_CODE,1,1) || '0000000'
		), BDG_HANG_LIST AS (
		    SELECT YEAR
		         , BSNS_SE
		         , BALC_SE
		         , GWAN_NM
		         , HANG_NM
		         , '' AS SEHANG_NM
		         , '' AS MOK_NM
		         , '' AS SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , CASE WHEN BUDGET_ACNT_CODE LIKE '62%' THEN '61'
		                WHEN BUDGET_ACNT_CODE LIKE '64%' THEN '61'
		                WHEN BUDGET_ACNT_CODE LIKE '66%' THEN '61'
		                ELSE SUBSTR(BUDGET_ACNT_CODE,1,2) 
		           END || '000000'          AS BUDGET_ACNT_CODE
		         , SUM(EXECUT_BUDGET_AM)         AS EXECUT_BUDGET_AM      /*본예산*/
		         , SUM(DEBT_AMT)         AS DEBT_AMT      /*결산액(채무확정액)*/
		         , SUM(DECSN_AMOUNT)        AS DECSN_AMOUNT     /*결산액*/
		      FROM BDG_SEMOK_LIST
		    GROUP BY YEAR
		           , BSNS_SE
		           , BALC_SE
		<isNotEmpty property="BSNS_CODE">
		           , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           , GWAN_NM
		           , HANG_NM
		           , CASE WHEN BUDGET_ACNT_CODE LIKE '62%' THEN '61'
		                  WHEN BUDGET_ACNT_CODE LIKE '64%' THEN '61'
		                  WHEN BUDGET_ACNT_CODE LIKE '66%' THEN '61'
		                  ELSE SUBSTR(BUDGET_ACNT_CODE,1,2) 
		             END || '000000'
		), BDG_SEHANG_LIST AS (
		    SELECT YEAR
		         , BSNS_SE
		         , BALC_SE
		         , GWAN_NM
		         , HANG_NM
		         , SEHANG_NM
		         , '' AS MOK_NM
		         , '' AS SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , SUBSTR(BUDGET_ACNT_CODE,1,3) || '00000'    AS BUDGET_ACNT_CODE
		         , SUM(EXECUT_BUDGET_AM)                           AS EXECUT_BUDGET_AM      /*본예산*/
		         , SUM(DEBT_AMT)                           AS DEBT_AMT      /*결산액(채무확정액)*/
		         , SUM(DECSN_AMOUNT)                          AS DECSN_AMOUNT     /*결산액*/
		      FROM BDG_SEMOK_LIST
		    GROUP BY YEAR
		           , BSNS_SE
		           , BALC_SE
		<isNotEmpty property="BSNS_CODE">
		           , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           , GWAN_NM
		           , HANG_NM
		           , SEHANG_NM
		           , SUBSTR(BUDGET_ACNT_CODE,1,3) || '00000'
		), BDG_MOK_LIST AS (
		    SELECT YEAR
		         , BSNS_SE
		         , BALC_SE
		         , GWAN_NM
		         , HANG_NM
		         , SEHANG_NM
		         , MOK_NM
		         , '' AS SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , SUBSTR(BUDGET_ACNT_CODE,1,6) || '00'    AS BUDGET_ACNT_CODE
		         , SUM(EXECUT_BUDGET_AM)                        AS EXECUT_BUDGET_AM      /*본예산*/
		         , SUM(DEBT_AMT)                        AS DEBT_AMT      /*결산액(채무확정액)*/
		         , SUM(DECSN_AMOUNT)                       AS DECSN_AMOUNT     /*결산액*/
		      FROM BDG_SEMOK_LIST
		    GROUP BY YEAR
		           , BSNS_SE
		           , BALC_SE
		<isNotEmpty property="BSNS_CODE">
		           , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		           , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		           , GWAN_NM
		           , HANG_NM
		           , SEHANG_NM
		           , MOK_NM
		           , SUBSTR(BUDGET_ACNT_CODE,1,6) || '00'
		), BDG_STACNT_LIST AS (
		    SELECT LVL
		         , YEAR
		         , BSNS_SE
		         , BALC_SE
		         , GWAN_NM
		         , HANG_NM
		         , SEHANG_NM
		         , MOK_NM
		         , SEMOK_NM
		<isNotEmpty property="BSNS_CODE">
		         , DETAIL_BSNS_CODE
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		         , DEPT_CODE
			</isNotEqual>
		</isNotEmpty>
		         , BUDGET_ACNT_CODE
		         , DECODE(LVL, '5', SUBSTR(BUDGET_ACNT_CODE, 1, 3) || '-' || SUBSTR(BUDGET_ACNT_CODE, 4) || '.' || SEMOK_NM
		                     , '4', SUBSTR(BUDGET_ACNT_CODE, 1, 3) || '-' || SUBSTR(BUDGET_ACNT_CODE, 4) || '.' || MOK_NM
		                     , '3', SUBSTR(BUDGET_ACNT_CODE, 1, 3) || '.' || SEHANG_NM
		                     , '2', SUBSTR(BUDGET_ACNT_CODE, 1, 3) || '.' || HANG_NM
		                     , '1', SUBSTR(BUDGET_ACNT_CODE, 1, 3) || '.' || GWAN_NM
		                 )    AS BUDGET_ACNT_NM
		         , EXECUT_BUDGET_AM /*실행예산*/
		         , DEBT_AMT         /*결산액(채무확정액)*/
		         , DECSN_AMOUNT     /*결산액*/
		      FROM (
		            SELECT '1' AS LVL , t1.* FROM BDG_GWAN_LIST t1
		            UNION ALL
		            SELECT '2' AS LVL , t2.* FROM BDG_HANG_LIST t2
		            UNION ALL
		            SELECT '3' AS LVL , t3.* FROM BDG_SEHANG_LIST t3
		            UNION ALL
		            SELECT '4' AS LVL , t4.* FROM BDG_MOK_LIST t4
		            UNION ALL
		            SELECT '5' AS LVL , t5.* FROM BDG_SEMOK_LIST t5
		           )
		     WHERE 1=1
		), BDG_STACNT AS (
		    SELECT T1.LVL
		         , T1.YEAR
		         , T1.BSNS_SE
		         , T1.BALC_SE
		         , RANK() OVER(ORDER BY DECODE(T1.BALC_SE, '1', T1.BUDGET_ACNT_CODE, NULL)) AS RANK_1
		         , DECODE(T1.BALC_SE, '1', T1.BUDGET_ACNT_CODE, NULL)                       AS BUDGET_ACNT_CODE_1
		         , DECODE(T1.BALC_SE, '1', MAX(T2.BUDGET_ACNT_NM), NULL)                    AS BUDGET_ACNT_NM_1
		         , DECODE(T1.BALC_SE, '1', SUM(NVL(T1.EXECUT_BUDGET_AM, 0)), NULL)          AS EXECUT_BUDGET_AM_1 /*수입예산액*/
		         , DECODE(T1.BALC_SE, '1', SUM(NVL(T1.DECSN_AMOUNT, 0)), NULL)              AS DECSN_AMOUNT_1     /*수입결산액*/
		         
		         , RANK() OVER(ORDER BY DECODE(T1.BALC_SE, '2', T1.BUDGET_ACNT_CODE, NULL)) AS RANK_2
		         , DECODE(T1.BALC_SE, '2', T1.BUDGET_ACNT_CODE, NULL)                       AS BUDGET_ACNT_CODE_2
		         , DECODE(T1.BALC_SE, '2', MAX(T2.BUDGET_ACNT_NM), NULL)                    AS BUDGET_ACNT_NM_2
		         , DECODE(T1.BALC_SE, '2', SUM(NVL(T1.EXECUT_BUDGET_AM, 0)), NULL)          AS EXECUT_BUDGET_AM_2 /*지출예산액*/
		         , DECODE(T1.BALC_SE, '2', SUM(NVL(T1.DEBT_AMT, 0)), NULL)                  AS DEBT_AMT_2         /*지출결산액*/
		      FROM BDG_STACNT_LIST T1
		           LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE T2
		                ON T1.YEAR             = T2.YEAR
		               AND T1.BSNS_SE          = T2.BSNS_SE
		               AND T1.BALC_SE          = T2.BALC_SE
		               AND T1.BUDGET_ACNT_CODE = T2.BUDGET_ACNT_CODE
		     WHERE T1.YEAR    = #YEAR#
			<isNotEmpty property="BSNS_SE">		     
		       AND T1.BSNS_SE = #BSNS_SE#
			</isNotEmpty>
		       AND T1.LVL IN ('3', '4', '5')
		    GROUP BY T1.LVL
		           , T1.YEAR
		           , T1.BSNS_SE
		           , T1.BALC_SE
		           , T1.BUDGET_ACNT_CODE
		)
		SELECT T1.RANK_NUM
		     , T2.YEAR
		     , T2.BSNS_SE
		     , T2.BALC_SE
		     , T2.RANK_1
		     , T2.BUDGET_ACNT_CODE_1
		     , T2.BUDGET_ACNT_NM_1
		     , DECODE(T2.LVL, '5', '        ' || SUBSTR(T2.BUDGET_ACNT_CODE_1, 1, 3) || '-' || SUBSTR(T2.BUDGET_ACNT_CODE_1, 4) || '.' || T2.BUDGET_ACNT_NM_1
		                    , '4', '    ' || SUBSTR(T2.BUDGET_ACNT_CODE_1, 1, 3) || '-' || SUBSTR(T2.BUDGET_ACNT_CODE_1, 4) || '.' || T2.BUDGET_ACNT_NM_1
		                    , '3', '' || SUBSTR(T2.BUDGET_ACNT_CODE_1, 1, 3) || '.' || T2.BUDGET_ACNT_NM_1
		             )    AS BUDGET_ACNT_NM_1_1
		     , T2.EXECUT_BUDGET_AM_1 /*수입예산액*/
		     , T2.DECSN_AMOUNT_1     /*수입결산액*/
		     , T2.EXECUT_BUDGET_AM_1 - T2.DECSN_AMOUNT_1    AS IRDS_AMOUNT_1 /*수입예산증감액*/
		     , T3.RANK_2
		     , T3.BUDGET_ACNT_CODE_2
		     , T3.BUDGET_ACNT_NM_2
		     , DECODE(T3.LVL, '5', '        ' || SUBSTR(T3.BUDGET_ACNT_CODE_2, 1, 3) || '-' || SUBSTR(T3.BUDGET_ACNT_CODE_2, 4) || '.' || T3.BUDGET_ACNT_NM_2
		                    , '4', '    ' || SUBSTR(T3.BUDGET_ACNT_CODE_2, 1, 3) || '-' || SUBSTR(T3.BUDGET_ACNT_CODE_2, 4) || '.' || T3.BUDGET_ACNT_NM_2
		                    , '3', '' || SUBSTR(T3.BUDGET_ACNT_CODE_2, 1, 3) || '.' || T3.BUDGET_ACNT_NM_2
		             )    AS BUDGET_ACNT_NM_2_1
		     , T3.EXECUT_BUDGET_AM_2 /*지출예산액*/
		     , T3.DEBT_AMT_2         /*지출결산액*/
		     , T3.EXECUT_BUDGET_AM_2 - T3.DEBT_AMT_2        AS IRDS_AMOUNT_2 /*지출예산증감액*/
		     , T2.LVL AS SUM_LVL_T2		/*수입예산 LVL*/
		     , T3.LVL AS SUM_LVL_T3		/*지출예산 LVL*/
		  FROM (
		        SELECT LEVEL AS RANK_NUM
		          FROM (
		                SELECT CASE WHEN MAX(RANK_1) <![CDATA[>=]]> MAX(RANK_2) THEN MAX(RANK_1)
		                            WHEN MAX(RANK_2) <![CDATA[> ]]> MAX(RANK_1) THEN MAX(RANK_2)
		                            ELSE 0
		                       END    AS MAX_RANK
		                  FROM BDG_STACNT
		               )
		        CONNECT BY LEVEL <![CDATA[<]]> MAX_RANK
		       ) T1
		       LEFT OUTER JOIN BDG_STACNT T2
		            ON T1.RANK_NUM = T2.RANK_1
		           AND T2.BUDGET_ACNT_CODE_1 IS NOT NULL
		       LEFT OUTER JOIN BDG_STACNT T3
		            ON T1.RANK_NUM = T3.RANK_2
		           AND T3.BUDGET_ACNT_CODE_2 IS NOT NULL
		 WHERE (
		           T2.RANK_1 IS NOT NULL
		        OR T3.RANK_2 IS NOT NULL
		       )
		ORDER BY RANK_NUM
	</select>


</sqlMap>