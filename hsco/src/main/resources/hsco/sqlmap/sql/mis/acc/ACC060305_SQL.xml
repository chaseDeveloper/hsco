<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060305_SQL">

	<!-- 구분회계 재무상태표 조회 -->
	<select id="ACC060305DAO.select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060305DAO.select*/]]>
		WITH THIS_STACNT_T AS ( /*당기*/
		    SELECT t1.ACCNUT_YEAR
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , t2.SE_ACCNUT_ACNT_CODE
		         , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
		         , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
		    UNION ALL
		    SELECT t1.ACCNUT_YEAR
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , t2.SE_ACCNUT_ACNT_CODE
		         , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
		         , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
		    FROM TBACC_ACCNUT_STACNT_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
		)
		, PRE_STACNT_T AS (     /*전기*/
		    SELECT t1.ACCNUT_YEAR 
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , t2.SE_ACCNUT_ACNT_CODE
		         , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
		         , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
		    UNION ALL
		    SELECT t1.ACCNUT_YEAR
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , t2.SE_ACCNUT_ACNT_CODE
		         , NVL(SUM(t1.DEBTOR_AMOUNT),0) AS DR_AMT
		         , NVL(SUM(t1.CRDIT_AMOUNT ),0) AS CR_AMT
		    FROM TBACC_ACCNUT_STACNT_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#, 0, 4)-1
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE, t2.SE_ACCNUT_ACNT_CODE
		)
        , THIS_STACNT_SUM AS ( /*당기 합계*/
		    SELECT t1.ACCNUT_YEAR
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT - t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT - t1.DEBTOR_AMOUNT ,t1.DEBTOR_AMOUNT - t1.CRDIT_AMOUNT)),0) AS THIS_STACNT_SUM
		    FROM TBACC_ACCNUT_STACNTSUM_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
				 INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
				 ON t1.ACCNUT_YEAR          = t3.ACCNUT_YEAR
				 AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
		    UNION ALL
		    SELECT t1.ACCNUT_YEAR
		         , CASE WHEN t1.ACCNUT_ACNT_CODE = '10000000' /*자산*/ THEN '12090990' /*자산총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '20000000' /*부채*/ THEN '22070990' /*부채총계*/
		                WHEN t1.ACCNUT_ACNT_CODE = '30000000' /*자본*/ THEN '32070990' /*자본총계*/
		                ELSE t1.ACCNUT_ACNT_CODE
		           END AS ACCNUT_ACNT_CODE
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t1.DEBTOR_AMOUNT - t1.CRDIT_AMOUNT, 'C', t1.CRDIT_AMOUNT - t1.DEBTOR_AMOUNT ,t1.DEBTOR_AMOUNT - t1.CRDIT_AMOUNT)),0) AS THIS_STACNT_SUM
		    FROM TBACC_ACCNUT_STACNT_SE t1
		         INNER JOIN TBACC_SE_ACCNUT_ACNT_CODE t2
		         ON  t1.ACCNUT_YEAR			= t2.ACCNUT_YEAR
		         AND t1.SE_ACCNUT_ACNT_CODE	= t2.SE_ACCNUT_ACNT_CODE
				 INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
				 ON t1.ACCNUT_YEAR          = t3.ACCNUT_YEAR
				 AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		    AND   t1.ACCNUT_MT   BETWEEN '00'/*이월*/ AND SUBSTR(#ACCNUT_YM#,5,2) /*결산월*/
		    GROUP BY t1.ACCNUT_YEAR, t1.ACCNUT_ACNT_CODE
		)
		SELECT tm2.THIS_STACNT_SUM
		     , tm1.*    
		FROM (
			SELECT *
			FROM (
			SELECT t1.ACCNUT_ACNT_CODE
			     , MAX(NVL(t1.OUTPT_ACNT_NM, t1.ACCNUT_ACNT_NM)) AS ACCNUT_ACNT_NM
			     , t2.SE_ACCNUT_ACNT_CODE
			     , NVL(SUM(DECODE(t1.DBRT_SE, 'D', t2.DR_AMT - t2.CR_AMT, 'C', t2.CR_AMT - t2.DR_AMT ,t2.DR_AMT - t2.CR_AMT)),0)   AS THIS_STACNT_AMT
	     		 , NVL(SUM(DECODE(t1.DBRT_SE, 'D', t3.DR_AMT - t3.CR_AMT, 'C', t3.CR_AMT - t3.DR_AMT ,t3.DR_AMT - t3.CR_AMT)),0)   AS PRE_STACNT_AMT
			FROM TBACC_ACCNUT_ACNT_SBJECT t1
			  LEFT OUTER JOIN THIS_STACNT_T t2
			  ON  t1.ACCNUT_YEAR      = t2.ACCNUT_YEAR
			  AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
			  LEFT OUTER JOIN PRE_STACNT_T t3
			  ON  t1.ACCNUT_YEAR      = t3.ACCNUT_YEAR
			  AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
			WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
			AND   t1.ACCNUT_ACNT_CODE NOT IN ('32080999')
			AND   t1.ACNT_SE  = '1' /*재무상태표*/
			AND   t1.OUTPT_AT = '1' /*출력여부*/
			GROUP BY t1.ACCNUT_YEAR
			       , t1.ACCNUT_ACNT_CODE
			       , t1.RSYMNEY_ACNT_AT
			       , t2.SE_ACCNUT_ACNT_CODE
			UNION ALL
			SELECT '32080999' AS ACCNUT_ACNT_CODE
	     		 , '[자본과부채총계]' AS ACCNUT_ACNT_NM
	     		 , t2.SE_ACCNUT_ACNT_CODE
			     , NVL(SUM(DECODE(t1.DBRT_SE, 'D', t2.DR_AMT - t2.CR_AMT, 'C', t2.CR_AMT - t2.DR_AMT ,t2.DR_AMT - t2.CR_AMT)),0)   AS THIS_STACNT_AMT
	     		 , NVL(SUM(DECODE(t1.DBRT_SE, 'D', t3.DR_AMT - t3.CR_AMT, 'C', t3.CR_AMT - t3.DR_AMT ,t3.DR_AMT - t3.CR_AMT)),0)   AS PRE_STACNT_AMT
			FROM TBACC_ACCNUT_ACNT_SBJECT t1
			  	 LEFT OUTER JOIN THIS_STACNT_T t2
			  	 ON  t1.ACCNUT_YEAR      = t2.ACCNUT_YEAR
			  	 AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
			  	 LEFT OUTER JOIN PRE_STACNT_T t3
			  	 ON  t2.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
			WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
			AND   t1.ACNT_SE  = '1' /*재무상태표*/
			AND   t1.OUTPT_AT = '1' /*출력여부*/
			AND   t1.ACCNUT_ACNT_CODE IN ('22070990','32070990')
			GROUP BY t1.ACCNUT_YEAR
			       , t1.RSYMNEY_ACNT_AT
			       , t2.SE_ACCNUT_ACNT_CODE
			)
		    PIVOT
			(
				SUM(THIS_STACNT_AMT)
				
				FOR SE_ACCNUT_ACNT_CODE IN (					
					<iterate property="seList" conjunction=",">
						'$seList[].SE_ACCNUT_ACNT_CODE$'
					</iterate>					 
				)
		
				
				<!--  $ 제거 2016.08.12 쿼리오류 발생
				FOR SE_ACCNUT_ACNT_CODE IN (					
					<iterate property="seList" conjunction=",">
						#seList[].SE_ACCNUT_ACNT_CODE#
					</iterate>					 
				)
				-->	
				<!--  $ 제거 2016.08.12 쿼리오류 발생				
				FOR SE_ACCNUT_ACNT_CODE
					<iterate property="SE_ACCNUT_ACNT_CODE_LIST" open=" IN (" close=") " conjunction=",">
						#SE_ACCNUT_ACNT_CODE_LIST[]#
					</iterate>
				-->				
			)
			ORDER BY ACCNUT_ACNT_CODE NULLS FIRST
		) tm1
		LEFT OUTER JOIN THIS_STACNT_SUM tm2
		ON  tm1.ACCNUT_ACNT_CODE = tm2.ACCNUT_ACNT_CODE
	</select>


	<!-- 구분회계 재무상태표 조회 -->
	<select id="ACC060305DAO.selectSe" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060305DAO.selectSe*/]]>
		SELECT  SE_ACCNUT_ACNT_CODE 
			  , SE_ACCNUT_ACNT_NM
		FROM  TBACC_SE_ACCNUT_ACNT_CODE
		WHERE USE_AT      = '1'
		  AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		ORDER BY SE_ACCNUT_ACNT_CODE
	</select>


	<!-- 구분회계 재무상태표 조회 -->
	<select id="ACC060305DAO.seAcnt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*ACC060305DAO.seAcnt*/]]>
		WITH seAcnt AS (
			  SELECT 
			       SE_ACCNUT_ACNT_CODE 
			     , SE_ACCNUT_ACNT_NM 
			  FROM TBACC_SE_ACCNUT_ACNT_CODE
			  WHERE USE_AT      = '1'
			    AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
			  ORDER BY SE_ACCNUT_ACNT_CODE
		) 
		 SELECT TRIM(REGEXP_SUBSTR(SE_ACCNUT_ACNT_NM, '[^-]+', 1, LEVEL))   AS CODE_1
		       ,TRIM(REGEXP_SUBSTR(SE_ACCNUT_ACNT_NM, '[^-]+', 1, LEVEL+1)) AS CODE_2
		       ,TRIM(REGEXP_SUBSTR(SE_ACCNUT_ACNT_NM, '[^-]+', 1, LEVEL+2)) AS CODE_3
		       ,TRIM(REGEXP_SUBSTR(SE_ACCNUT_ACNT_NM, '[^-]+', 1, LEVEL+3)) AS CODE_4
		       ,SE_ACCNUT_ACNT_CODE                                         AS CODE_5
		  FROM seAcnt
		  CONNECT BY INSTR(SE_ACCNUT_ACNT_CODE, '-', 1, LEVEL-1) <![CDATA[>]]> 0
	</select>
</sqlMap>