<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG050106_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 입력가능여부 조회 -->
	<select id="BDG050106DAO.selectOdr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*BDG050106DAO.selectOdr (차수 조회)*/]]>
		SELECT YEAR
		     , ODR
		     , TO_CHAR(REGIST_DT, 'YYYY-MM-DD')                          AS REGIST_DT
		     , ODR || '차(' || TO_CHAR(REGIST_DT, 'YYYY-MM-DD') || ')'    AS ODR_NM
		  FROM TBBDG_BUDGET_EXCUT_PLN_HIST
		 WHERE YEAR = #YEAR#
		GROUP BY YEAR
		       , ODR
		       , REGIST_DT
	</select>


	<!-- 예산집행계획 조회 -->
	<select id="BDG050106DAO.selectBudgetExcutPlnHist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*BDG050106DAO.selectBudgetExcutPlnHist (예산집행계획이력 조회)*/]]>
		SELECT T1.YEAR
		     , T1.ODR
		     , T1.BSNS_SE
		     , T1.BALC_SE
		     , T1.DETAIL_BSNS_CODE
		     , NVL(T3.BSNS_NM, '기타')                      AS DETAIL_BSNS_NM
		     , T1.DETAIL_BSNS_CODE || '.' || T3.BSNS_NM    AS DETAIL_BSNS_NM2
		     , T1.DEPT_CODE
		     , T2.DEPT_NM
		     , T1.DEPT_CODE || '.' || T2.DEPT_NM           AS DEPT_NM2
		     , T1.BUDGET_ACNT_CODE
		     , T4.BUDGET_ACNT_NM
		     , (CASE WHEN T4.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(T4.BUDGET_ACNT_CODE, 1, 3)
		             WHEN SUBSTR(T4.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(T4.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(T4.BUDGET_ACNT_CODE, 4, 3)
		             ELSE SUBSTR(T4.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(T4.BUDGET_ACNT_CODE, 4)    END) ||'.'|| T4.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM2
		     , T1.EXPNDTR_UNIT_CODE AS BUKIP_CODE
		     , T6.BUKIP_NM
		     , T5.BUKIP_CODE || '.' || T6.BUKIP_NM    AS BUKIP_NM2
		     , T1.ORIBDGT
		     , T1.RVSPBGT_ODR
		     , T1.CYFD_BUDGET
		     , T1.MVMN_AM
		     , T1.TOT_BUDGET_AM
		     , T1.ASIGN_AM_01 + T1.ASIGN_AM_02 + T1.ASIGN_AM_03 + T1.ASIGN_AM_04 + T1.ASIGN_AM_05 + T1.ASIGN_AM_06 + T1.ASIGN_AM_07 + T1.ASIGN_AM_08 + T1.ASIGN_AM_09 + T1.ASIGN_AM_10 + T1.ASIGN_AM_11 + T1.ASIGN_AM_12 AS ASIGN_AM
		     , T1.ASIGN_AM_01
		     , T1.ASIGN_AM_02
		     , T1.ASIGN_AM_03
		     , T1.ASIGN_AM_04
		     , T1.ASIGN_AM_05
		     , T1.ASIGN_AM_06
		     , T1.ASIGN_AM_07
		     , T1.ASIGN_AM_08
		     , T1.ASIGN_AM_09
		     , T1.ASIGN_AM_10
		     , T1.ASIGN_AM_11
		     , T1.ASIGN_AM_12
		     , T1.DECSN_AM_01
		     , T1.DECSN_AM_02
		     , T1.DECSN_AM_03
		     , T1.DECSN_AM_04
		     , T1.DECSN_AM_05
		     , T1.DECSN_AM_06
		     , T1.DECSN_AM_07
		     , T1.DECSN_AM_08
		     , T1.DECSN_AM_09
		     , T1.DECSN_AM_10
		     , T1.DECSN_AM_11
		     , T1.DECSN_AM_12
		     , T1.DECSN_AM_01 + T1.DECSN_AM_02 + T1.DECSN_AM_03 + T1.DECSN_AM_04 + T1.DECSN_AM_05 + T1.DECSN_AM_06 + T1.DECSN_AM_07 + T1.DECSN_AM_08 + T1.DECSN_AM_09 + T1.DECSN_AM_10 + T1.DECSN_AM_11 + T1.DECSN_AM_12 AS DECSN_AM
		     , T1.PROGRS_STTUS
		     , T1.DCSN_AT
		     , T1.ELPD_EXCUT_RATE
		  FROM TBBDG_BUDGET_EXCUT_PLN_HIST T1
		       LEFT OUTER JOIN VWHRM_DEPT T2
		            ON T1.DEPT_CODE = T2.DEPT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE T3
		            ON T1.DETAIL_BSNS_CODE = T3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE T4
		            ON T1.YEAR             = T4.YEAR
		           AND T1.BSNS_SE          = T4.BSNS_SE
		           AND T1.BALC_SE          = T4.BALC_SE
		           AND T1.BUDGET_ACNT_CODE = T4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING T5
		            ON T1.YEAR              = T5.YEAR
		           AND T1.BUDGET_ACNT_CODE  = T5.BUDGET_ACNT_CODE
		           AND T1.EXPNDTR_UNIT_CODE = T5.BUKIP_CODE
		       LEFT OUTER JOIN TBBDG_BUKIP_CODE T6
		       ON T1.EXPNDTR_UNIT_CODE = T6.BUKIP_CODE
		 WHERE T1.YEAR             = #YEAR#
		   AND T1.ODR              = #ODR#
		   AND T1.BALC_SE          = #BALC_SE#
		<isNotEmpty property="BSNS_SE">
		   AND T1.BSNS_SE          = #BSNS_SE#
		</isNotEmpty>
		<isNotEmpty property="BSNS_CODE">
		   AND T1.DETAIL_BSNS_CODE = #BSNS_CODE#
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000">
		   AND (T1.DEPT_CODE = '000000' OR T1.DEPT_CODE = #DEPT_CODE#)
			</isNotEqual>
		</isNotEmpty>
	</select>
</sqlMap>