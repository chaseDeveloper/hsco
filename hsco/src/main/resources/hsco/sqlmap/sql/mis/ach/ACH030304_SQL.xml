<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030304_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 평가대상 비계량지표 목록[전체] 조회 -->
	<select id="ACH030304DAO.selectListMst" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.EVL_YEAR 								AS EVL_YEAR
	          , A.ODR_SE 								AS ODR_SE
	          ,'[ ' || A.IX_CODE || ' ] ' || A.IX_NM 	AS IX_CDNM	
	          ,A.IX_CODE 								AS IX_CODE
	          ,A.MESURE_CYCLE							AS MESURE_CYCLE
		  FROM TBACH_KPI A
		 WHERE 1=1
		   AND A.USE_AT = '1'
		   AND A.IX_CHARCT = '001'
		   AND A.IX_SE = '004'
		   AND A.EVL_YEAR = #EVL_YEAR#
 		   AND A.ODR_SE = #ODR_SE#
		 <isNotEmpty property="ORGNZT_CODE">
		   AND EXISTS (SELECT 1
		                 FROM TBACH_WGHTVAL B
		                WHERE 1=1
		                 AND A.EVL_YEAR = B.EVL_YEAR
		                 AND A.ODR_SE = B.ODR_SE
		                 AND A.IX_CODE = B.IX_CODE
		                 AND B.ORGNZT_CODE = #ORGNZT_CODE#
		              )
		 </isNotEmpty>
		 ORDER BY A.IX_CODE
    </select>
    
    <!-- 지표별 평가내역 집계 정보  조회 -->
	<select id="ACH030304DAO.selectListDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH V_QLEVAL_EVL AS (
                              SELECT A.EVL_YEAR     AS EVL_YEAR
                                   , A.ODR_SE       AS ODR_SE
                                   , A.IX_CODE      AS IX_CODE
                                   , A.ORGNZT_CODE  AS ORGNZT_CODE
                                   , A.SEQ          AS SEQ
                                   , A.A_EVL_SCORE  AS A_EVL_SCORE
                                   , B.CNT          AS CNT
                              FROM (SELECT AA.EVL_YEAR                    AS EVL_YEAR
                                         , AA.ODR_SE                      AS ODR_SE
                                         , AA.IX_CODE                     AS IX_CODE
                                         , AA.ORGNZT_CODE                 AS ORGNZT_CODE
                                         , AA.SEQ                         AS SEQ
                                         , ROUND(AVG(NVL(EVL_SCORE,0)),2) AS A_EVL_SCORE
                                    FROM TBACH_QLEVAL_EVL AA
                                    WHERE 1=1
                                    AND AA.EVL_SCORE > 0
                                    GROUP BY AA.EVL_YEAR, AA.ODR_SE, AA.IX_CODE, AA.ORGNZT_CODE, AA.SEQ
                                   )A
                                 , (
                                    SELECT AA.EVL_YEAR              AS EVL_YEAR
                                         , AA.ODR_SE                AS ODR_SE
                                         , AA.IX_CODE               AS IX_CODE
                                         , AA.ORGNZT_CODE           AS ORGNZT_CODE
                                         , AA.SEQ                   AS SEQ
                                         , COUNT(*)                 AS CNT
                                    FROM TBACH_QLEVAL_EVL AA
                                    GROUP BY AA.EVL_YEAR, AA.ODR_SE, AA.IX_CODE, AA.ORGNZT_CODE, AA.SEQ
                                   )B
                              WHERE 1=1
                                 AND A.EVL_YEAR = B.EVL_YEAR
                                 AND A.ODR_SE   = B.ODR_SE
                                 AND A.IX_CODE  = B.IX_CODE
                                 AND A.ORGNZT_CODE = B.ORGNZT_CODE
                                 AND A.SEQ      = B.SEQ
                                 AND A.EVL_YEAR = #EVL_YEAR#
                                 AND A.ODR_SE   = #ODR_SE#
                              <isNotEmpty property="ORGNZT_CODE">
                                 AND A.ORGNZT_CODE = #ORGNZT_CODE#
                              </isNotEmpty>
                                 AND A.IX_CODE  = #IX_CODE#
                                 AND A.SEQ      = #SEQ#
				)
                SELECT  E.EVL_YEAR 				AS EVL_YEAR
                      , E.ODR_SE 				AS ODR_SE
                      , E.IX_CODE 				AS IX_CODE
                      , E.ORGNZT_CODE 			AS ORGNZT_CODE
                      , B.ORGNZT_NM             AS ORGNZT_NM
                      , B.EVL_GROUP_SE          AS EVL_GROUP_SE
                      , A.EVL_WGHTVAL			AS EVL_WGHTVAL
                      ,(CASE WHEN C.CNT = D.CNT
                             THEN C.A_EVL_SCORE
                             ELSE NULL
                             END
                       )                        AS EVL_SCORE
                      ,(CASE WHEN C.CNT = D.CNT
                               THEN ROUND(NVL(C.A_EVL_SCORE, 0) * NVL(A.EVL_WGHTVAL, 0) / 100, 2)
                               ELSE NULL
                               END
                       )                        AS RSLT_SCORE_C
                      , A.ATCH_FID              AS ATCH_FID
                      , A.SEQ                   AS SEQ
                FROM TBACH_WGHTVAL E
                     LEFT OUTER JOIN TBACH_QLEVAL_RESULT A
                                  ON E.EVL_YEAR = A.EVL_YEAR
                                 AND E.ODR_SE   = A.ODR_SE
                                 AND E.IX_CODE  = A.IX_CODE
                                 AND E.ORGNZT_CODE = A.ORGNZT_CODE
                                 AND (
                                      A.SEQ = #SEQ#
                                      OR
                                      (A.SEQ = '0' AND NOT EXISTS (SELECT 1
                                                                     FROM TBACH_QLEVAL_RESULT
                                                                    WHERE EVL_YEAR    = a.EVL_YEAR
                                                                      AND ODR_SE      = a.ODR_SE
                                                                      AND IX_CODE     = a.IX_CODE
                                                                      AND ORGNZT_CODE = A.ORGNZT_CODE
                                                                      AND SEQ = #SEQ#
                                                                  )
                                      )
                                     )                                 
                     LEFT OUTER JOIN V_QLEVAL_EVL C
                                  ON A.EVL_YEAR    = C.EVL_YEAR
                                 AND A.ODR_SE      = C.ODR_SE
                                 AND A.IX_CODE     = C.IX_CODE
                                 AND A.ORGNZT_CODE = C.ORGNZT_CODE
                     LEFT OUTER JOIN (SELECT  EVL_YEAR
				                           , ODR_SE
				                           , IX_CODE
				                           , COUNT(*) AS CNT
				                       FROM  TBACH_QLE_EVL_MAN_CNNC
				                      GROUP BY EVL_YEAR, ODR_SE, IX_CODE
				                     )D
                                  ON A.EVL_YEAR = D.EVL_YEAR
                                 AND A.ODR_SE = D.ODR_SE
                                 AND A.IX_CODE = D.IX_CODE				                     
                    , TBACH_EVL_TRGET_ORGNZT B
                WHERE 1=1
                  AND E.EVL_YEAR = B.EVL_YEAR
                  AND E.ODR_SE = B.ODR_SE
                  AND E.ORGNZT_CODE = B.ORGNZT_CODE
               <isNotEmpty property="ORGNZT_CODE">			  
                  AND A.ORGNZT_CODE = #ORGNZT_CODE#
               </isNotEmpty>
                  AND E.EVL_YEAR = #EVL_YEAR#
                  AND E.ODR_SE = #ODR_SE#
                  AND E.IX_CODE = #IX_CODE#                  
                ORDER BY A.ORGNZT_CODE
    </select>    
    
    <!-- 지표/조직/평가자별 평가내역 상세 정보  조회 -->
	<select id="ACH030304DAO.selectListDtlSub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT  C.EVL_MAN_NO                           AS EVL_MAN_NO
			      ,(SELECT QM.EVL_RSPOFC_SE 
			          FROM TBACH_QLE_EVL_MAN QM
			         WHERE QM.EVL_YEAR = C.EVL_YEAR
			           AND QM.ODR_SE   = C.ODR_SE
			           AND QM.EVL_MAN_NO = C.EVL_MAN_NO )  AS EVL_RSPOFC_SE              
			      , D.EVL_GRAD 				               AS EVL_GRAD
			      , D.EVL_GRAD2 				           AS EVL_GRAD2
			      , D.EVL_GRAD3 				           AS EVL_GRAD3
			      , D.EVL_SCORE 				           AS EVL_SCORE 
			      , DECODE(D.EVL_SCORE, NULL, NULL, D.EVL_SCORE * NVL(E.EVL_WGHTVAL, 0) / 100)   AS RSLT_SCORE_C   
				  , D.EVL_PRVONSH				                                                 AS EVL_RESN
			  FROM  TBACH_QLE_EVL_MAN_CNNC C
			        LEFT OUTER JOIN (SELECT *
			                           FROM   TBACH_QLEVAL_EVL
			                           WHERE  1=1
			                             AND  EVL_YEAR    = #EVL_YEAR#
			                             AND  ODR_SE      = #ODR_SE#
			                             AND  IX_CODE     = #IX_CODE#
			                             AND  ORGNZT_CODE = #ORGNZT_CODE#
			                             AND  SEQ         = #SEQ#
			                          )D
			                       ON C.EVL_YEAR = D.EVL_YEAR
			                      AND C.ODR_SE   = D.ODR_SE
			                      AND C.IX_CODE  = D.IX_CODE
			                      AND C.EVL_MAN_NO = D.EVL_MAN_NO
			        , TBACH_QLEVAL_RESULT E
			 WHERE  1=1
			   AND  C.EVL_YEAR = #EVL_YEAR#
			   AND  C.ODR_SE   = #ODR_SE#
			   AND  C.IX_CODE  = #IX_CODE#
			   AND  C.EVL_YEAR = E.EVL_YEAR
			   AND  C.ODR_SE   = E.ODR_SE
			   AND  C.IX_CODE  = E.IX_CODE
			   AND  E.ORGNZT_CODE = #ORGNZT_CODE#
			   AND  E.SEQ = '0'
			 ORDER BY C.EVL_MAN_NO
    </select>
	
	<!-- 지표/조직별 평가결과 집계 조회(최종성과 반영목적) -->
	<select id="ACH030304DAO.selectSumScoreList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH V_QLEVAL_EVL AS (
							SELECT AA.EVL_YEAR AS EVL_YEAR
							      ,AA.ODR_SE AS ODR_SE
							      ,AA.IX_CODE AS IX_CODE
							      ,AA.ORGNZT_CODE AS ORGNZT_CODE
							      ,AA.SEQ AS SEQ
							      ,ROUND(AVG(NVL(EVL_SCORE,0)),2) AS A_EVL_SCORE
							  FROM TBACH_QLEVAL_EVL AA 
							 WHERE 1=1 
							 GROUP BY AA.EVL_YEAR
							      ,AA.ODR_SE
							      ,AA.IX_CODE
							      ,AA.ORGNZT_CODE
							      ,AA.SEQ 
							HAVING 1=1 
						       AND AA.EVL_YEAR = #EVL_YEAR#
						       AND AA.ODR_SE = #ODR_SE#
						       AND AA.SEQ = #SEQ#
						       AND AA.IX_CODE = #IX_CODE#
						       AND AA.ORGNZT_CODE = #ORGNZT_CODE#
		)
		SELECT C.EVL_YEAR 				AS EVL_YEAR
		     ,C.ODR_SE 					AS ODR_SE
		     ,C.IX_CODE 				AS IX_CODE
		     ,A.SEQ   					AS SEQ
		     ,C.ORGNZT_CODE 			AS ORGNZT_CODE
		     ,A.EVL_WGHTVAL				AS EVL_WGHTVAL
		     ,C.A_EVL_SCORE 			AS EVL_SCORE
		     ,ROUND(NVL(C.A_EVL_SCORE, 0) * NVL(A.EVL_WGHTVAL, 0) / 100, 2)   AS RSLT_SCORE_C	<!-- 목표치는 100으로 고정됨. -->
		FROM TBACH_QLEVAL_RESULT A
		    ,V_QLEVAL_EVL C
		WHERE 1=1
		  AND A.EVL_YEAR = C.EVL_YEAR
		  AND A.ODR_SE = C.ODR_SE
		  AND A.IX_CODE = C.IX_CODE
		  AND A.SEQ = C.SEQ
		  AND A.ORGNZT_CODE = C.ORGNZT_CODE
    </select>
    
    <!-- 측정월별 평가결과 반영 -->
    <update id="ACH030304DAO.updateSumScore" parameterClass="java.util.HashMap" > 
		UPDATE TBACH_QLEVAL_RESULT 
		    SET 
				EVL_SCORE 		= #EVL_SCORE#
		      , RESULT_SCORE 	= #RSLT_SCORE_C#
		      , UPDUSR_ID 		= #S_USER_ID#
		      , UPDT_DT 		= SYSDATE
		  WHERE 1=1
		    AND EVL_YEAR 	= #EVL_YEAR#
		    AND ODR_SE 	    = #ODR_SE#
		    AND IX_CODE 	= #IX_CODE#
		    AND ORGNZT_CODE = #ORGNZT_CODE#
		    AND SEQ         = #SEQ#
   </update>
   
   
	<!-- 최종 평가결과 반영 -->
	<update id="ACH030304DAO.updateFinalScore" parameterClass="java.util.HashMap" >  
	   UPDATE TBACH_QLEVAL_RESULT 
	      SET EVL_SCORE 	= #EVL_SCORE#
	         ,RESULT_SCORE 	= #RSLT_SCORE_C#
	         ,UPDUSR_ID 	= #S_USER_ID#
	         ,UPDT_DT 		= SYSDATE 
	  WHERE 1=1 
        AND EVL_YEAR = #EVL_YEAR#
        AND ODR_SE = #ODR_SE#
        AND IX_CODE = #IX_CODE#
        AND ORGNZT_CODE = #ORGNZT_CODE#
        AND SEQ = 0
	</update>
</sqlMap>