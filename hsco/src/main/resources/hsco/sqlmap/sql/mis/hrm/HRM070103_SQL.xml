<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM070103_SQL">

	<!-- 연차관리 목록 조회 -->
	<select id="HRM070103DAO.selectYrycManageList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			WITH YRYC_STTUS_T AS (
			    SELECT B.EMPNO
			          ,B.YEAR
			          ,B.RM
			          ,NVL(A.SZ1,0) + NVL(A.SZ4,0)  + NVL(A.SZ5,0)                                                         AS USE_101
			          ,NVL(A.SZ2,0) + NVL(A.SZ12,0) + NVL(A.SZ13,0)                                                        AS USE_303
			          ,NVL(A.SZ3,0)                                                                                        AS USE_202
			          ,NVL(A.SZ6,0)                                                                                        AS CANCL_101
			          ,NVL(A.SZ8,0)                                                                                        AS CANCL_303
			          ,NVL(A.SZ7,0)                                                                                        AS CANCL_202
			          ,NVL(B.YRYC_DAYCNT,0)                                                                                AS YRYC_DAYCNT
			          ,NVL(B.PRMTN_DAYCNT,0)                                                                               AS PRMTN_DAYCNT
			          ,(NVL(A.SZ1,0)+NVL(A.SZ2,0)+NVL(A.SZ4,0)+NVL(A.SZ5,0)+NVL(A.SZ6,0)+NVL(A.SZ8,0)+NVL(A.SZ12,0)+NVL(A.SZ13,0)) + NVL(C.HOUR_TO_DAY,0)                            AS TOT_USE
			          ,NVL(B.YRYC_DAYCNT,0) - (NVL(A.SZ1,0)+NVL(A.SZ2,0)+NVL(A.SZ4,0)+NVL(A.SZ5,0)+NVL(A.SZ6,0)+NVL(A.SZ8,0)+NVL(A.SZ12,0)+NVL(A.SZ13,0)) - NVL(C.HOUR_TO_DAY,0)     AS TOT_REMNDR
			          ,C.SM_402
			          ,C.SM_404
			    FROM   TBHRM_YRYC_MANAGE B
			           LEFT OUTER JOIN (
			                            SELECT A.EMPNO                                      AS EMPNO
			                                  ,SUBSTR(A.BGNDE,0,4)                          AS YEAR
			                                  ,SUM(DECODE(A.ASORT_CODE,'101',A.DAYCNT,0))   AS SZ1    /*연차*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'303',A.DAYCNT,0))   AS SZ2    /*하계휴가*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'202',A.DAYCNT,0))   AS SZ3    /*병가(사)*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'102',A.DAYCNT,0))   AS SZ4    /*오전연차*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'103',A.DAYCNT,0))   AS SZ5    /*오후연차*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'104',A.DAYCNT,0))   AS SZ6    /*연차취소*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'204',A.DAYCNT,0))   AS SZ7    /*병가(사)취소*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'306',A.DAYCNT,0))   AS SZ8    /*하계휴가취소*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'304',A.DAYCNT,0))   AS SZ12   /*오전하계휴가*/
			                                  ,SUM(DECODE(A.ASORT_CODE,'305',A.DAYCNT,0))   AS SZ13   /*오후하계휴가*/
			                            FROM   TBHRM_WRKCP A
			                                   INNER JOIN INTRAWARE.VIEW_MIS_SANCTN_KND@DL_INTRACITY B
			                                        ON A.SANCTN_NO = B.SANCTN_NO
			                                       AND B.SANCTN_KND = '5'
			                            GROUP BY A.EMPNO
			                                    ,SUBSTR(A.BGNDE,0,4)
			                           ) A
			                ON A.EMPNO = B.EMPNO
			               AND A.YEAR  = B.YEAR
			           LEFT OUTER JOIN (
			                            SELECT EMPNO
			                                  ,YEAR
			                                  ,SM_402_HOUR
			                                  ,SM_402_MINUTE
			                                  ,CASE WHEN NVL(SM_402_HOUR,0) = 0 AND NVL(SM_402_MINUTE,0) = 0 THEN NULL
			                                        ELSE SM_402_HOUR || ':' || LPAD(SM_402_MINUTE,2,0)
			                                   END              AS SM_402
			                                  ,SM_404_HOUR
			                                  ,SM_404_MINUTE
			                                  ,CASE WHEN NVL(SM_404_HOUR,0) = 0 AND NVL(SM_404_MINUTE,0) = 0 THEN NULL
			                                        ELSE SM_404_HOUR || ':' || LPAD(SM_404_MINUTE,2,0)
			                                   END              AS SM_404
			                                  ,TRUNC((SM_402_HOUR_TM + SM_404_HOUR_TM) * 0.125)       AS HOUR_TO_DAY
			                            FROM   (
			                                    SELECT EMPNO
			                                          ,YEAR
			                                          ,SUM(TM_402_HOUR) + TRUNC(SUM(TM_402_MINUTE) / 60)        AS SM_402_HOUR
			                                          ,SUM(TM_402_HOUR) + TRUNC(SUM(TM_402_MINUTE) / 60,1)      AS SM_402_HOUR_TM
			                                          ,MOD(SUM(TM_402_MINUTE), 60)                              AS SM_402_MINUTE
			                                          ,SUM(TM_404_HOUR) + TRUNC(SUM(TM_404_MINUTE) / 60)        AS SM_404_HOUR
			                                          ,SUM(TM_404_HOUR) + TRUNC(SUM(TM_404_MINUTE) / 60,1)      AS SM_404_HOUR_TM
			                                          ,MOD(SUM(TM_404_MINUTE), 60)                              AS SM_404_MINUTE
			                                    FROM   (
			                                            SELECT A.EMPNO
			                                                  ,SUBSTR(A.BGNDE,1,4)                   AS YEAR
			                                                  ,TO_NUMBER(SUBSTR(A.TIME,1,2)) * DECODE(A.ASORT_CODE, '403', -1, 1) AS TM_402_HOUR
			                                                  ,TO_NUMBER(SUBSTR(A.TIME,3,4)) * DECODE(A.ASORT_CODE, '403', -1, 1) AS TM_402_MINUTE
			                                                  ,NULL     AS TM_404_HOUR
			                                                  ,NULL     AS TM_404_MINUTE
			                                            FROM   TBHRM_WRKCP A
			                                                   LEFT OUTER JOIN INTRAWARE.VIEW_MIS_SANCTN_KND@DL_INTRACITY B
			                                                        ON A.SANCTN_NO = B.SANCTN_NO
			                                            WHERE  A.ASORT_CODE IN ('402', '403')
			                                            AND    (A.SANCTN_NO = '0' OR B.SANCTN_KND = '5')
			                                            UNION ALL
			                                            SELECT A.EMPNO
			                                                  ,SUBSTR(A.BGNDE,1,4)                   AS YEAR
			                                                  ,NULL     AS TM_402_HOUR
			                                                  ,NULL     AS TM_402_MINUTE
			                                                  ,TO_NUMBER(SUBSTR(A.TIME,1,2)) * DECODE(A.ASORT_CODE, '406', -1, 1) AS TM_404_HOUR
			                                                  ,TO_NUMBER(SUBSTR(A.TIME,3,4)) * DECODE(A.ASORT_CODE, '406', -1, 1) AS TM_404_MINUTE
			                                            FROM   TBHRM_WRKCP A
			                                                   LEFT OUTER JOIN INTRAWARE.VIEW_MIS_SANCTN_KND@DL_INTRACITY B
			                                                        ON A.SANCTN_NO = B.SANCTN_NO
			                                            WHERE  A.ASORT_CODE IN ('404', '406')
			                                            AND    (A.SANCTN_NO = '0' OR B.SANCTN_KND = '5')
			                                           )
			                                    GROUP BY EMPNO, YEAR
			                                   )
			                           ) C
			                ON B.EMPNO = C.EMPNO
			               AND B.YEAR = C.YEAR
			    WHERE  B.YEAR  = #YEAR#
			)
			SELECT t1.YEAR
			      ,v1.DEPT_NM                                         /*부서명*/
			      ,t3.CODE_NM                    AS JSSFC_NM
			      ,t4.CODE_NM                    AS HR_CLSF_NM        /*직급*/
			      ,t1.EMPNO                                           /*사원번호*/
			      ,t2.EMPNM                                           /*사원명*/
			      ,t2.ECNY_DE                                         /*입사일자*/
			      ,t1.RM                                              /*비고*/
			      ,t1.YRYC_DAYCNT                                     /*연차일수*/
			      ,NVL(t1.TOT_REMNDR, 0)         AS TOT_REMNDR        /*잔여일수*/
			      ,NVL(t1.TOT_USE, 0)            AS TOT_USE           /*사용일수*/
			      ,NVL(t1.PRMTN_DAYCNT, 0)       AS PRMTN_DAYCNT      /*촉진일수*/
			      ,NVL(t1.CANCL_101, 0)          AS CANCL_101
			      ,NVL(t1.USE_303, 0)            AS USE_303
			      ,NVL(t1.CANCL_303, 0)          AS CANCL_303
			      ,NVL(t1.USE_202, 0)            AS USE_202
			      ,NVL(t1.CANCL_202, 0)          AS CANCL_202
			      ,NVL(t1.USE_101, 0)            AS USE_101
			      ,t1.SM_402                     AS SM_402
			      ,t1.SM_404                     AS SM_404
			FROM   TBHRM_HR_MASTR t2 
			       LEFT OUTER JOIN YRYC_STTUS_T t1
			            ON  t1.EMPNO = t2.EMPNO
			       LEFT OUTER JOIN VWHRM_DEPT v1
			            ON  t2.DEPT_CODE = v1.DEPT_CODE
			       LEFT OUTER JOIN TBCOM_CMMN_CODE t3
			            ON  t2.JSSFC_SE = t3.CODE
			           AND t3.GRP_CODE   = 'HRM001'    /*직종*/
			       LEFT OUTER JOIN TBCOM_CMMN_CODE t4
			            ON  t2.HR_CLSF_SE = t4.CODE
			           AND t4.GRP_CODE   = 'HRM002'    /*직급*/
			WHERE  t1.YEAR = #YEAR#
			AND    t2.JSSFC_SE IN ('02','03','04','05','06','09')
		]]>
		<isNotEqual property="RETIRE_AT" compareValue="1">
			AND    t2.STTUS_SE NOT IN ('009')
		</isNotEqual>
		<isNotEmpty property="EMPNM">
			AND    t2.EMPNM LIKE '%' || #EMPNM# || '%'
		</isNotEmpty>
		<![CDATA[
			ORDER BY t2.DEPT_CODE, t2.JSSFC_SE, t2.HR_CLSF_SE, t2.EMPNM, t2.ECNY_DE
		]]>
	</select>


	<!-- 연차관리 목록 등록 -->
	<insert id="HRM070103DAO.yrycManageListC" parameterClass="java.util.HashMap">
		INSERT INTO TBHRM_YRYC_MANAGE (
		     YEAR
		    ,EMPNO
		    ,RM
		    ,YRYC_DAYCNT
		    ,PRMTN_DAYCNT
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		VALUES (
			 #YEAR#
			,#EMPNO#
			,#RM#
			,#YRYC_DAYCNT#
			,#PRMTN_DAYCNT#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>


	<!-- 연차관리 목록 수정 -->
	<update id="HRM070103DAO.yrycManageListU" parameterClass="java.util.HashMap">
		UPDATE TBHRM_YRYC_MANAGE
		SET    RM           = #RM#
		      ,YRYC_DAYCNT  = #YRYC_DAYCNT#
		      ,PRMTN_DAYCNT = #PRMTN_DAYCNT#
		      ,UPDUSR_ID    = #S_USER_ID#
		      ,UPDT_DT      = SYSDATE
		WHERE  YEAR         = #YEAR#
		AND    EMPNO        = #EMPNO#
	</update>


	<!-- 연차관리 프로시져 호출 -->
	<procedure id="HRM070103DAO.yrycManageProcess" parameterClass="java.util.HashMap">
		{ CALL SPHRM_YRYC_PROC(#YEAR#, #S_USER_ID#) }
	</procedure>
</sqlMap>
