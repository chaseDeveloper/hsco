<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030301_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 비계량지표 목록조회 -->
	<select id="ACH030301DAO.selectListMst" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   SELECT 
			   A.EVL_YEAR 								AS EVL_YEAR
			  , A.ODR_SE 								AS ODR_SE
			  , '[ ' || A.IX_CODE || ' ] ' || B.IX_NM 	AS IX_CDNM	
			  , A.IX_CODE 								AS IX_CODE
    	 	  , MAX(B.APPLC_SCOPE_SE)					AS APPLC_SCOPE_SE
    	 	  , MAX(B.MESURE_CYCLE)	            		AS MESURE_CYCLE
		 FROM TBACH_QLEVAL_RESULT A, TBACH_KPI B
		WHERE 1=1
		  AND A.EVL_YEAR = B.EVL_YEAR
		  AND A.ODR_SE = B.ODR_SE
		  AND A.IX_CODE = B.IX_CODE
		  AND A.SEQ = 0
		  AND B.USE_AT = '1'
		  AND B.IX_CHARCT = '001'
		  AND B.IX_SE = '004'
		  AND A.EVL_YEAR = #EVL_YEAR#
		  AND A.ODR_SE = #ODR_SE#
		  <isNotEmpty property="ORGNZT_CODE">			  
		  AND A.ORGNZT_CODE = #ORGNZT_CODE#
		  </isNotEmpty>    			  
		  <isNotEmpty property="APPLC_SCOPE_SE">			  
		  AND B.APPLC_SCOPE_SE = #APPLC_SCOPE_SE#
		  </isNotEmpty>
        GROUP BY A.EVL_YEAR, A.ODR_SE, A.IX_CODE, B.IX_NM
        ORDER BY A.IX_CODE  		     		  
    </select>
    
    <!-- 지표/조직별 실적첨부 정보  조회 -->
	<select id="ACH030301DAO.selectListDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  SELECT  A.EVL_YEAR 												AS EVL_YEAR
		        , A.ODR_SE 												    AS ODR_SE
		        , A.VIEWPOINT_SE                                            AS VIEWPOINT_SE
		        , A.IX_CODE_S                                               AS IX_CODE_S
		        , A.IX_CODE 												AS IX_CODE
		        , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'001') 	AS V_IX_CODE
		        , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'002') 	AS S_IX_CODE
		        , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'003') 	AS C_IX_CODE
		        , A.ORGNZT_CODE 											AS ORGNZT_CODE
		        , A.ATCH_FID 												AS ATCH_FID
		        , A.ATCH_RM 												AS ATCH_RM        
		        , A.CNFIRM_AT												AS CNFIRM_AT
				, A.CNFIRM_DE												AS CNFIRM_DE
                , (SELECT (CASE WHEN DA.CNT = 1 
                                THEN DD.ORGINL_FILE_NM
                                WHEN DA.CNT > 1 
                                THEN DD.ORGINL_FILE_NM || ' 외 '|| (DA.CNT - 1) || '건'
                                ELSE NULL
                           END
                          )
                   FROM TBCOM_CMMN_ATCHMNFL DD,
                        (SELECT CA.FILE_SN
                               ,MIN(CA.FILE_ORDR) AS FILE_ORDR
                               ,COUNT(*) AS CNT
                         FROM TBCOM_CMMN_ATCHMNFL CA
                         GROUP BY CA.FILE_SN
                         ) DA
                   WHERE 1=1
                     AND DD.FILE_SN   = A.ATCH_FID
                     AND  DD.FILE_SN = DA.FILE_SN
                     AND DD.FILE_ORDR = DA.FILE_ORDR
                  )                                                         AS ORGINL_FILE_NM
				, DECODE(A.SEQ, 0, #SEQ#, A.SEQ)                            AS SEQ
				, A.EVL_WGHTVAL                                             AS EVL_WGHTVAL
		   FROM TBACH_QLEVAL_RESULT A
		       ,TBACH_KPI B
		  WHERE 1=1
		    AND A.EVL_YEAR = B.EVL_YEAR
		    AND A.ODR_SE = B.ODR_SE
		    AND A.IX_CODE = B.IX_CODE
		    AND B.USE_AT = '1'
		    AND B.IX_CHARCT = '001'
		    AND B.IX_SE = '004'
		    AND A.EVL_YEAR = #EVL_YEAR#
		    AND A.ODR_SE = #ODR_SE#
		  <isNotEmpty property="ORGNZT_CODE">			    
		    AND A.ORGNZT_CODE = #ORGNZT_CODE#
		  </isNotEmpty>
		    AND A.IX_CODE = #IX_CODE#
		    AND (
                 A.SEQ = #SEQ#
                 OR
                 (A.SEQ = '0' AND NOT EXISTS (SELECT 1
                                              FROM TBACH_QLEVAL_RESULT
                                              WHERE EVL_YEAR    = a.EVL_YEAR
                                              AND ODR_SE      = a.ODR_SE
                                              AND IX_CODE     = a.IX_CODE
                                              AND ORGNZT_CODE = A.ORGNZT_CODE
                                              AND SEQ = #SEQ#
                                             )
                 )
                )
		  ORDER BY A.ORGNZT_CODE 
    </select>
    
     <!-- 비계량평가자 등록 -->
    <insert id="ACH030301DAO.dtlC" parameterClass="java.util.HashMap" >
		<!--INSERT INTO TBACH_QLE_EVL_MAN_CNNC (
					  EVL_YEAR
					, ODR_SE
					, EVL_MAN_EMPNO
					, IX_CODE
					, REGISTER_ID
					, REGIST_DT
					, UPDUSR_ID
					, UPDT_DT
				   )
			  VALUES
				   (
					  #EVL_YEAR#
					, #ODR_SE#
					, #M_EVL_MAN_EMPNO#
					, #IX_CODE#
				    , #S_USER_ID#
				    , SYSDATE
				    , #S_USER_ID#
				    , SYSDATE
					)
					-->
    </insert>
    
    <!-- 지표/조직별 실적첨부 정보  수정 -->
    <update id="ACH030301DAO.dtlU" parameterClass="java.util.HashMap" >
           MERGE INTO TBACH_QLEVAL_RESULT
				  USING DUAL
				  ON (EVL_YEAR = #EVL_YEAR# 
				      AND ODR_SE = #ODR_SE#
		              AND VIEWPOINT_SE = #V_IX_CODE#
		              AND IX_CODE_S = #S_IX_CODE#
		              AND IX_CODE = #IX_CODE#   
		              AND ORGNZT_CODE = #ORGNZT_CODE#
		              AND SEQ = #SEQ#
		             )
				  WHEN MATCHED THEN
				  UPDATE SET 
				  			 ATCH_FID 	= #ATCH_FID#
				  			,ATCH_RM 	= #ATCH_RM#
				            ,UPDUSR_ID   =    #S_USER_ID#
				            ,UPDT_DT     =    SYSDATE
				            
				  WHEN NOT MATCHED THEN 
				  INSERT(
						  EVL_YEAR    
						, ODR_SE      
						, VIEWPOINT_SE
						, IX_CODE_S   
						, IX_CODE
						, ORGNZT_CODE 
						, SEQ
						, EVL_WGHTVAL
						, ATCH_FID			
						, REGISTER_ID
						, REGIST_DT
						, UPDUSR_ID
						, UPDT_DT
				            
				  )VALUES(
	                      #EVL_YEAR#    
	                    , #ODR_SE#      
	                    , #VIEWPOINT_SE#
	                    , #IX_CODE_S#   
	                    , #IX_CODE#     
	                    , #ORGNZT_CODE# 
	                    , #SEQ#         
	                    , #EVL_WGHTVAL#
	                    , #ATCH_FID#
					    , #S_USER_ID#
					    , SYSDATE
					    , #S_USER_ID#
					    , SYSDATE
				  )
    </update>       
    
    <!-- 비계량평가자  삭제 -->
    <delete id="ACH030301DAO.dtlD" parameterClass="java.util.HashMap" >
		<!--DELETE TBACH_QLE_EVL_MAN_CNNC		   
		 WHERE 1 = 1
		   AND EVL_YEAR = #EVL_YEAR#
		   AND ODR_SE = #ODR_SE#
		   AND EVL_MAN_EMPNO = #EVL_MAN_EMPNO#
		   AND IX_CODE = #IX_CODE#
		    -->
    </delete> 
    
	<!-- 첨부파일 일련번호 반영 -->
	<update id="ACH030301DAO.updateNewFileSn" parameterClass="java.util.HashMap">
		UPDATE TBACH_QLEVAL_RESULT
		   SET ATCH_FID    = #FILE_SN#
		 WHERE EVL_YEAR || ODR_SE || IX_CODE || ORGNZT_CODE || TO_CHAR(SEQ) = #SN#
	</update>
	
     <!-- 첨부파일 업로드 전 기본데이터 생성 -->
    <insert id="ACH030301DAO.saveTempC" parameterClass="java.util.HashMap" >
		INSERT INTO TBACH_QLEVAL_RESULT (
					  EVL_YEAR    
					, ODR_SE      
					, VIEWPOINT_SE
					, IX_CODE_S   
					, IX_CODE
					, ORGNZT_CODE 
					, SEQ
					, EVL_WGHTVAL				
					, REGISTER_ID
					, REGIST_DT
					, UPDUSR_ID
					, UPDT_DT
				   )
			  VALUES
				   (
                      #EVL_YEAR#    
                    , #ODR_SE#      
                    , #VIEWPOINT_SE#
                    , #IX_CODE_S#   
                    , #IX_CODE#     
                    , #ORGNZT_CODE# 
                    , #SEQ#         
                    , #EVL_WGHTVAL# 
				    , #S_USER_ID#
				    , SYSDATE
				    , #S_USER_ID#
				    , SYSDATE
					)

    </insert>       

</sqlMap>