<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG020101_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 변경예산 조회 -->
	<select id="BDG020101DAO.selectMvmnBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.selectMvmnBudget*/]]>
        SELECT t1.YEAR
              ,t1.SE
              ,t1.SN
              ,t1.DSCN_AT
              ,t1.MVMN_DE
              ,t1.MVMN_AM
              ,t1.MVMN_PRVONSH
              ,t1.MVMN_BUDGET_DEPT
              ,l1.DEPT_NM                   AS MVMN_BUDGET_DEPT_NM
              ,t1.MVMN_BSNS_SE
              ,'2'                          AS MVMN_BALC_SE
              ,t1.MVMN_DETAIL_BSNS_CODE
              ,l2.BSNS_NM                   AS MVMN_DETAIL_BSNS_NM
              ,t1.MVMN_ACNT_CODE
              ,l3.BUDGET_ACNT_NM            AS MVMN_ACNT_NM
              ,t1.MVMN_EXPNDTR_UNIT_CODE
              ,l5.EXPNDTR_UNIT_NM           AS MVMN_EXPNDTR_UNIT_NM
              ,t1.MVMN_BUDGET_CRNTAM
              ,t1.MVMN_EXCUT_AM
              ,t1.MVMN_BUDGET_BLCE
              ,t1.MVMN_DEMAND_AMOUNT
              ,t1.PROVD_BUDGET_DEPT
              ,r1.DEPT_NM                   AS PROVD_BUDGET_DEPT_NM
              ,t1.PROVD_BSNS_SE
              ,t1.PROVD_BALC_SE
              ,t1.PROVD_DETAIL_BSNS_CODE
              ,r2.BSNS_NM                   AS PROVD_DETAIL_BSNS_NM
              ,t1.PROVD_ACNT_CODE
              ,r3.BUDGET_ACNT_NM            AS PROVD_ACNT_NM
              ,t1.PROVD_EXPNDTR_UNIT_CODE
              ,r5.EXPNDTR_UNIT_NM           AS PROVD_EXPNDTR_UNIT_NM
              ,t1.PROVD_BUDGET_CRNTAM
              ,t1.PROVD_EXCUT_AM
              ,t1.PROVD_BUDGET_BLCE
              ,t1.PROVD_DEMAND_AMOUNT
              ,t1.SANCTN_NO
              ,SFCOM_GET_DRFTSTS(t1.SANCTN_NO, t1.REGIST_DT)                        AS DRFT_STS            /* 기안상태        */
              ,'theme://images/sanctn/' || 'D' || SFCOM_GET_DRFTSTS(t1.SANCTN_NO, t1.REGIST_DT) || '.png'    AS DRFT_STS_IMG        /* 기안상태Img    */
              ,SFCOM_GET_APPRSTS(t1.SANCTN_NO, t1.REGIST_DT)                        AS SANCTN_STS        /* 결재상태        */
              ,'theme://images/sanctn/' || 'A' || SFCOM_GET_APPRSTS(t1.SANCTN_NO, t1.REGIST_DT) || '.png'    AS SANCTN_STS_IMG    /* 결재상태Img    */
              ,TO_CHAR(T1.REGIST_DT,'YYYYMMDD') AS REGIST_DT
        FROM   TBBDG_MVMN_BUDGET t1
               LEFT OUTER JOIN VWHRM_DEPT l1
                    ON t1.MVMN_BUDGET_DEPT = l1.DEPT_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE l2
                    ON t1.MVMN_DETAIL_BSNS_CODE = l2.BSNS_CODE
               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE l3
                    ON t1.YEAR = l3.YEAR
                   AND t1.MVMN_BSNS_SE = l3.BSNS_SE
                   AND l3.BALC_SE = '2'
                   AND t1.MVMN_ACNT_CODE = l3.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBBDG_EXECUT_BUDGET l5
                    ON t1.YEAR = l5.YEAR
                   AND t1.MVMN_BSNS_SE = l5.BSNS_SE
                   AND l5.BALC_SE = '2'
                   AND t1.MVMN_DETAIL_BSNS_CODE = l5.DETAIL_BSNS_CODE
                   AND t1.MVMN_BUDGET_DEPT = l5.DEPT_CODE
                   AND t1.MVMN_ACNT_CODE = l5.BUDGET_ACNT_CODE
                   AND t1.MVMN_EXPNDTR_UNIT_CODE = l5.EXPNDTR_UNIT_CODE
               LEFT OUTER JOIN VWHRM_DEPT r1
                    ON t1.PROVD_BUDGET_DEPT = r1.DEPT_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE r2
                    ON t1.PROVD_DETAIL_BSNS_CODE = r2.BSNS_CODE
               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE r3
                    ON t1.YEAR = r3.YEAR
                   AND t1.PROVD_BSNS_SE = r3.BSNS_SE
                   AND r3.BALC_SE = '2'
                   AND t1.PROVD_ACNT_CODE = r3.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBBDG_EXECUT_BUDGET r5
                    ON t1.YEAR = r5.YEAR
                   AND t1.PROVD_BSNS_SE = r5.BSNS_SE
                   AND r5.BALC_SE = '2'
                   AND t1.PROVD_DETAIL_BSNS_CODE = r5.DETAIL_BSNS_CODE
                   AND t1.PROVD_BUDGET_DEPT = r5.DEPT_CODE
                   AND t1.PROVD_ACNT_CODE = r5.BUDGET_ACNT_CODE
                   AND t1.PROVD_EXPNDTR_UNIT_CODE = r5.EXPNDTR_UNIT_CODE
               LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR t2
                    ON t1.SANCTN_NO = t2.SANCTN_NO
        WHERE  1=1
		<isNotEmpty property="SE"        prepend="AND    ">t1.SE = #SE#</isNotEmpty>
		<isNotEmpty property="YEAR"      prepend="AND    ">t1.YEAR = #YEAR#</isNotEmpty>
		<isNotEmpty property="SN"        prepend="AND    ">t1.SN = #SN#</isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">t1.MVMN_BSNS_SE = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">(t1.MVMN_BUDGET_DEPT = #DEPT_CODE# OR t1.PROVD_BUDGET_DEPT = #DEPT_CODE#)</isNotEqual></isNotEmpty>
		ORDER BY t1.YEAR   DESC
		        ,t1.SE     ASC
		        ,t1.SN DESC
	</select>


	<!-- 변경예산상세 조회 -->
	<select id="BDG020101DAO.selectMvmnDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.selectMvmnDetail*/]]>
		SELECT t1.YEAR                                              AS YEAR
		      ,t1.SE                                                AS SE
		      ,t1.SN                                                AS SN
		      ,t1.MVMN_AT                                           AS MVMN_AT
		      ,t1.DSCN_AT                                           AS DSCN_AT
		      ,t1.BUDGET_DEPT                                       AS BUDGET_DEPT
		      ,t2.DEPT_NM                                           AS BUDGET_DEPT_NM
		      ,t1.BUDGET_DEPT || '.' || t2.DEPT_NM                  AS DEPT_CODE_NM
		      ,t1.BSNS_SE                                           AS BSNS_SE
		      ,t1.DETAIL_BSNS_CODE                                  AS DETAIL_BSNS_CODE
		      ,t3.BSNS_NM                                           AS DETAIL_BSNS_NM
		      ,t1.DETAIL_BSNS_CODE || '.' || t3.BSNS_NM             AS DETAIL_BSNS_CODE_NM
		      ,t1.ACNT_CODE                                         AS ACNT_CODE
		      ,t4.BUDGET_ACNT_NM                                    AS ACNT_NM
		      ,SUBSTR(t1.ACNT_CODE,1,3) ||'-'|| SUBSTR(t1.ACNT_CODE,4) ||'.'|| t4.BUDGET_ACNT_NM            AS ACNT_CODE_NM
		      ,t1.EXPNDTR_UNIT_CODE                                 AS EXPNDTR_UNIT_CODE
		      ,t6.BUKIP_NM                                          AS EXPNDTR_UNIT_NM
		      ,t1.EXPNDTR_UNIT_CODE ||'.'|| t6.BUKIP_NM             AS EXPNDTR_UNIT_CODE_NM
		      ,t1.BUDGET_CRNTAM                                     AS BUDGET_CRNTAM
		      ,t1.EXCUT_AM                                          AS EXCUT_AM
		      ,t1.BUDGET_BLCE                                       AS BUDGET_BLCE
		      ,t1.DEMAND_AMOUNT                                     AS DEMAND_AMOUNT
		FROM   (
		        SELECT YEAR                       AS YEAR
		              ,SE                         AS SE
		              ,SN                         AS SN
		              ,'0'                        AS MVMN_AT
		              ,DSCN_AT                    AS DSCN_AT
		              ,PROVD_BUDGET_DEPT          AS BUDGET_DEPT
		              ,PROVD_BSNS_SE              AS BSNS_SE
		              ,PROVD_DETAIL_BSNS_CODE     AS DETAIL_BSNS_CODE
		              ,PROVD_ACNT_CODE            AS ACNT_CODE
		              ,PROVD_EXPNDTR_UNIT_CODE    AS EXPNDTR_UNIT_CODE
		              ,PROVD_BUDGET_CRNTAM        AS BUDGET_CRNTAM
		              ,PROVD_EXCUT_AM             AS EXCUT_AM
		              ,PROVD_BUDGET_BLCE          AS BUDGET_BLCE
		              ,PROVD_DEMAND_AMOUNT        AS DEMAND_AMOUNT
		        FROM   TBBDG_MVMN_BUDGET
		        UNION ALL
		        SELECT YEAR                       AS YEAR
		              ,SE                         AS SE
		              ,SN                         AS SN
		              ,'1'                        AS MVMN_AT
		              ,DSCN_AT                    AS DSCN_AT
		              ,MVMN_BUDGET_DEPT           AS BUDGET_DEPT
		              ,MVMN_BSNS_SE               AS BSNS_SE
		              ,MVMN_DETAIL_BSNS_CODE      AS DETAIL_BSNS_CODE
		              ,MVMN_ACNT_CODE             AS ACNT_CODE
		              ,MVMN_EXPNDTR_UNIT_CODE     AS EXPNDTR_UNIT_CODE
		              ,MVMN_BUDGET_CRNTAM         AS BUDGET_CRNTAM
		              ,MVMN_EXCUT_AM              AS EXCUT_AM
		              ,MVMN_BUDGET_BLCE           AS BUDGET_BLCE
		              ,MVMN_DEMAND_AMOUNT         AS DEMAND_AMOUNT
		        FROM   TBBDG_MVMN_BUDGET
		       ) t1
		       LEFT OUTER JOIN VWHRM_DEPT t2
		            ON t1.BUDGET_DEPT = t2.DEPT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t4
		            ON t1.YEAR = t4.YEAR
		           AND t1.BSNS_SE = t4.BSNS_SE
		           AND t4.BALC_SE = '2'
		           AND t1.ACNT_CODE = t4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t5
		            ON t1.YEAR              = t5.YEAR
		           AND t1.ACNT_CODE         = t5.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t5.BUKIP_CODE
		       LEFT OUTER JOIN TBBDG_BUKIP_CODE t6
		            ON t1.EXPNDTR_UNIT_CODE = t6.BUKIP_CODE
		WHERE  t1.YEAR  = #YEAR#
		AND    t1.SE    = #SE#
		AND    t1.SN    = #SN#
		ORDER BY t1.YEAR, t1.SE, t1.SN, t1.MVMN_AT
	</select>


	<!-- 변경예산 추가 -->
	<insert id="BDG020101DAO.insertMvmnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.insertMvmnBudget*/]]>
		INSERT INTO TBBDG_MVMN_BUDGET (
		     YEAR
		    ,SE
		    ,SN
		    ,DSCN_AT
		    ,MVMN_DE
		    ,MVMN_AM
		    ,MVMN_PRVONSH
		    ,MVMN_BUDGET_DEPT
		    ,MVMN_BSNS_SE
		    ,MVMN_BALC_SE
		    ,MVMN_DETAIL_BSNS_CODE
		    ,MVMN_ACNT_CODE
		    ,MVMN_EXPNDTR_UNIT_CODE
		    ,MVMN_BUDGET_CRNTAM
		    ,MVMN_EXCUT_AM
		    ,MVMN_BUDGET_BLCE
		    ,MVMN_DEMAND_AMOUNT
		    ,PROVD_BUDGET_DEPT
		    ,PROVD_BSNS_SE
		    ,PROVD_BALC_SE
		    ,PROVD_DETAIL_BSNS_CODE
		    ,PROVD_ACNT_CODE
		    ,PROVD_EXPNDTR_UNIT_CODE
		    ,PROVD_BUDGET_CRNTAM
		    ,PROVD_EXCUT_AM
		    ,PROVD_BUDGET_BLCE
		    ,PROVD_DEMAND_AMOUNT
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		VALUES (
		     #YEAR#
		    ,#SE#
		    ,(SELECT NVL(MAX(SN),0)+1 FROM TBBDG_MVMN_BUDGET WHERE YEAR = #YEAR# AND SE = #SE#)
		    ,NVL(#DSCN_AT#,0)
		    ,#MVMN_DE#
		    ,#MVMN_AM#
		    ,#MVMN_PRVONSH#
		    ,#MVMN_BUDGET_DEPT#
		    ,#MVMN_BSNS_SE#
		    ,#MVMN_BALC_SE#
		    ,#MVMN_DETAIL_BSNS_CODE#
		    ,#MVMN_ACNT_CODE#
		    ,#MVMN_EXPNDTR_UNIT_CODE#
		    ,#MVMN_BUDGET_CRNTAM#
		    ,#MVMN_EXCUT_AM#
		    ,#MVMN_BUDGET_BLCE#
		    ,#MVMN_DEMAND_AMOUNT#
		    ,#PROVD_BUDGET_DEPT#
		    ,#PROVD_BSNS_SE#
		    ,#PROVD_BALC_SE#
		    ,#PROVD_DETAIL_BSNS_CODE#
		    ,#PROVD_ACNT_CODE#
		    ,#PROVD_EXPNDTR_UNIT_CODE#
		    ,#PROVD_BUDGET_CRNTAM#
		    ,#PROVD_EXCUT_AM#
		    ,#PROVD_BUDGET_BLCE#
		    ,#PROVD_DEMAND_AMOUNT#
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#S_USER_ID#
		    ,SYSDATE
		)
	</insert>


	<!-- 변경예산 수정 -->
	<update id="BDG020101DAO.updateMvmnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.updateMvmnBudget*/]]>
		UPDATE TBBDG_MVMN_BUDGET
		SET    DSCN_AT                  = NVL(#DSCN_AT#,0)
		      ,MVMN_DE                  = #MVMN_DE#
		      ,MVMN_AM                  = #MVMN_AM#
		      ,MVMN_PRVONSH             = #MVMN_PRVONSH#
		      ,MVMN_BUDGET_DEPT         = #MVMN_BUDGET_DEPT#
		      ,MVMN_BSNS_SE             = #MVMN_BSNS_SE#
		      ,MVMN_DETAIL_BSNS_CODE    = #MVMN_DETAIL_BSNS_CODE#
		      ,MVMN_ACNT_CODE           = #MVMN_ACNT_CODE#
		      ,MVMN_EXPNDTR_UNIT_CODE   = #MVMN_EXPNDTR_UNIT_CODE#
		      ,MVMN_BUDGET_CRNTAM       = #MVMN_BUDGET_CRNTAM#
		      ,MVMN_EXCUT_AM            = #MVMN_EXCUT_AM#
		      ,MVMN_BUDGET_BLCE         = #MVMN_BUDGET_BLCE#
		      ,MVMN_DEMAND_AMOUNT       = #MVMN_DEMAND_AMOUNT#
		      ,PROVD_BUDGET_DEPT        = #PROVD_BUDGET_DEPT#
		      ,PROVD_BSNS_SE            = #PROVD_BSNS_SE#
		      ,PROVD_BALC_SE            = #PROVD_BALC_SE#
		      ,PROVD_DETAIL_BSNS_CODE   = #PROVD_DETAIL_BSNS_CODE#
		      ,PROVD_ACNT_CODE          = #PROVD_ACNT_CODE#
		      ,PROVD_EXPNDTR_UNIT_CODE  = #PROVD_EXPNDTR_UNIT_CODE#
		      ,PROVD_BUDGET_CRNTAM      = #PROVD_BUDGET_CRNTAM#
		      ,PROVD_EXCUT_AM           = #PROVD_EXCUT_AM#
		      ,PROVD_BUDGET_BLCE        = #PROVD_BUDGET_BLCE#
		      ,PROVD_DEMAND_AMOUNT      = #PROVD_DEMAND_AMOUNT#
		      ,UPDUSR_ID                = #S_USER_ID#
		      ,UPDT_DT                  = SYSDATE
		WHERE  YEAR                     = #YEAR#
		AND    SE                       = #SE#
		AND    SN                       = #SN#
	</update>


	<!-- 변경예산 삭제 -->
	<delete id="BDG020101DAO.deleteMvmnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.deleteMvmnBudget*/]]>
		DELETE
		FROM   TBBDG_MVMN_BUDGET
		WHERE  YEAR                     = #YEAR#
		AND    SE                       = #SE#
		AND    SN                       = #SN#
	</delete>


	<!-- 확정여부 갱신 -->
	<update id="BDG020101DAO.updateDscnAt" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.updateDscnAt*/]]>
		UPDATE TBBDG_MVMN_BUDGET
		SET    DSCN_AT  = NVL(#DSCN_AT#,0)
		WHERE  YEAR     = #YEAR#
		AND    SE       = #SE#
		AND    SN       = #SN#
	</update>


	<!-- 변경요청에 대한 실행예산 반영(변경계정) -->
	<update id="BDG020101DAO.updateMvmnExecut" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.updateMvmnExecut*/]]>
	MERGE INTO TBBDG_EXECUT_BUDGET t1
			  USING ( SELECT YEAR,
		                     BSNS_SE,
		                     BALC_SE,
		                     DETAIL_BSNS_CODE,
		                     DEPT_CODE,
		                     BUDGET_ACNT_CODE,
		                     EXPNDTR_UNIT_CODE,
		                     SE_ACCNUT_ACNT_CODE ,
		                     EXPNDTR_UNIT_NM ,
		                     SUM(TRSF_AM)         AS TRSF_AM ,
		                     SUM(DVR_AM)          AS DVR_AM ,
		                     SUM(MVMN_AM)         AS MVMN_AM ,
		                     SUM(BUKIP_MVMN_AM)   AS BUKIP_MVMN_AM ,
		                     SUM(RSVFND_REQST_AM) AS RSVFND_REQST_AM
		                FROM ( SELECT A.YEAR                   AS YEAR ,
		                              A.MVMN_BSNS_SE           AS BSNS_SE ,
		                              A.MVMN_BALC_SE           AS BALC_SE ,
		                              A.MVMN_DETAIL_BSNS_CODE  AS DETAIL_BSNS_CODE ,
		                              A.MVMN_BUDGET_DEPT       AS DEPT_CODE ,
		                              A.MVMN_ACNT_CODE         AS BUDGET_ACNT_CODE ,
		                              A.MVMN_EXPNDTR_UNIT_CODE AS EXPNDTR_UNIT_CODE ,
		                              A.MVMN_DETAIL_BSNS_CODE  AS SE_ACCNUT_ACNT_CODE ,
		                              C.BUKIP_NM               AS EXPNDTR_UNIT_NM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '1',NVL(A.MVMN_AM,0),0),0)) AS TRSF_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '2',NVL(A.MVMN_AM,0),0),0)) + SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '3',NVL(A.MVMN_AM,0),0),0)) AS DVR_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '4',NVL(A.MVMN_AM,0),0),0)) AS MVMN_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '5',NVL(A.MVMN_AM,0),0),0)) AS BUKIP_MVMN_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(SE, '0',NVL(A.MVMN_AM,0),0),0)) AS RSVFND_REQST_AM
		                         FROM TBBDG_MVMN_BUDGET A
		                         LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING B
		                              ON A.YEAR = B.YEAR
		                             AND A.MVMN_ACNT_CODE = B.BUDGET_ACNT_CODE
		                             AND A.MVMN_EXPNDTR_UNIT_CODE = B.BUKIP_CODE
		                         LEFT OUTER JOIN TBBDG_BUKIP_CODE C
		                              ON B.BUKIP_CODE = C.BUKIP_CODE
		                        WHERE A.YEAR    =  #YEAR#
		                        GROUP BY A.YEAR ,
		                                 A.MVMN_BSNS_SE ,
		                                 A.MVMN_BALC_SE ,
		                                 A.MVMN_DETAIL_BSNS_CODE ,
		                                 A.MVMN_BUDGET_DEPT ,
		                                 A.MVMN_ACNT_CODE ,
		                                 A.MVMN_EXPNDTR_UNIT_CODE ,
		                                 C.BUKIP_NM
		                         
		                        UNION ALL
		                         
		                       SELECT A.YEAR                    AS YEAR ,
		                              A.PROVD_BSNS_SE           AS BSNS_SE ,
		                              A.PROVD_BALC_SE           AS BALC_SE ,
		                              A.PROVD_DETAIL_BSNS_CODE  AS DETAIL_BSNS_CODE ,
		                              A.PROVD_BUDGET_DEPT       AS DEPT_CODE ,
		                              A.PROVD_ACNT_CODE         AS BUDGET_ACNT_CODE ,
		                              A.PROVD_EXPNDTR_UNIT_CODE AS EXPNDTR_UNIT_CODE ,
		                              A.PROVD_DETAIL_BSNS_CODE  AS SE_ACCNUT_ACNT_CODE ,
		                              C.BUKIP_NM                AS EXPNDTR_UNIT_NM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '1',NVL(A.MVMN_AM,0)*(-1),0),0)) AS TRSF_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '2',NVL(A.MVMN_AM,0)*(-1),0),0)) + SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '3',NVL(A.MVMN_AM,0)*(-1),0),0)) AS DVR_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '4',NVL(A.MVMN_AM,0)*(-1),0),0)) AS MVMN_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '5',NVL(A.MVMN_AM,0)*(-1),0),0)) AS BUKIP_MVMN_AM ,
		                              SUM(DECODE(A.DSCN_AT,'1',DECODE(A.SE, '0',NVL(A.MVMN_AM,0)*(-1),0),0)) AS RSVFND_REQST_AM
		                         FROM TBBDG_MVMN_BUDGET A
		                              LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING B
		                                   ON A.YEAR = B.YEAR
		                                  AND A.PROVD_ACNT_CODE = B.BUDGET_ACNT_CODE
		                                  AND A.PROVD_EXPNDTR_UNIT_CODE = B.BUKIP_CODE
		                              LEFT OUTER JOIN TBBDG_BUKIP_CODE C
		                                   ON B.BUKIP_CODE = C.BUKIP_CODE
		                        WHERE A.YEAR    =  #YEAR#
		                        GROUP BY A.YEAR ,
		                                 A.PROVD_BSNS_SE ,
		                                 A.PROVD_BALC_SE ,
		                                 A.PROVD_DETAIL_BSNS_CODE ,
		                                 A.PROVD_BUDGET_DEPT ,
		                                 A.PROVD_ACNT_CODE ,
		                                 A.PROVD_EXPNDTR_UNIT_CODE ,
		                                 C.BUKIP_NM
		                     )
		              GROUP BY YEAR,
		                       BSNS_SE,
		                       BALC_SE,
		                       DETAIL_BSNS_CODE,
		                       DEPT_CODE,
		                       BUDGET_ACNT_CODE,
		                       EXPNDTR_UNIT_CODE,
		                       SE_ACCNUT_ACNT_CODE ,
		                       EXPNDTR_UNIT_NM 
		            ) B
				ON (
	                                  B.YEAR              = t1.YEAR
	                 AND              B.BSNS_SE           = t1.BSNS_SE
	                 AND              B.BALC_SE           = t1.BALC_SE
	                 AND              B.DETAIL_BSNS_CODE  = t1.DETAIL_BSNS_CODE
	                 AND              B.DEPT_CODE         = t1.DEPT_CODE
	                 AND              B.BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
	                 AND              B.EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
	                 )
		WHEN MATCHED THEN
			 UPDATE SET
					t1.TRSF_AM = B.TRSF_AM,
					t1.DVR_AM = B.DVR_AM,
					t1.MVMN_AM = B.MVMN_AM,
					t1.BUKIP_MVMN_AM = B.BUKIP_MVMN_AM,
					t1.RSVFND_REQST_AM = B.RSVFND_REQST_AM,
					t1.UPDUSR_ID = #S_USER_ID# ,
					t1.UPDT_DT = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT
			       (
		            t1.YEAR,
		            t1.BSNS_SE,
		            t1.BALC_SE,
		            t1.DETAIL_BSNS_CODE,
		            t1.DEPT_CODE,
		            t1.BUDGET_ACNT_CODE,
		            t1.EXPNDTR_UNIT_CODE,
		            t1.SE_ACCNUT_ACNT_CODE,
		            t1.EXPNDTR_UNIT_NM,
		            t1.TRSF_AM,
		            t1.DVR_AM,
		            t1.MVMN_AM,
		            t1.BUKIP_MVMN_AM,
		            t1.RSVFND_REQST_AM,
		            t1.REGISTER_ID,
		            t1.REGIST_DT,
		            t1.UPDUSR_ID,
		            t1.UPDT_DT
		           )
		    VALUES (
		            B.YEAR,
		            B.BSNS_SE,
		            B.BALC_SE,
		            B.DETAIL_BSNS_CODE,
		            B.DEPT_CODE,
		            B.BUDGET_ACNT_CODE,
		            B.EXPNDTR_UNIT_CODE,
		            B.SE_ACCNUT_ACNT_CODE,
		            B.EXPNDTR_UNIT_NM,
		            B.TRSF_AM,
		            B.DVR_AM,
		            B.MVMN_AM,
		            B.BUKIP_MVMN_AM,
		            B.RSVFND_REQST_AM,
		            #S_USER_ID#,
		            SYSDATE,
		            #S_USER_ID#,
		            SYSDATE
		           ) 
	
	
	
	
<!-- 		UPDATE TBBDG_EXECUT_BUDGET t1
		SET    (MVMN_AM,DVR_AM,RSVFND_REQST_AM)
		       =
		       (
		        SELECT SUM(MVMN_AM)             AS MVMN_AM
		              ,SUM(DVR_AM)              AS DVR_AM
		              ,SUM(RSVFND_REQST_AM)     AS RSVFND_REQST_AM
		        FROM   (
		                /*변경*/
		                SELECT YEAR                                         AS YEAR
		                      ,MVMN_BSNS_SE                                 AS BSNS_SE
		                      ,MVMN_BALC_SE                                 AS BALC_SE
		                      ,MVMN_DETAIL_BSNS_CODE                        AS DETAIL_BSNS_CODE
		                      ,MVMN_BUDGET_DEPT                             AS DEPT_CODE
		                      ,MVMN_ACNT_CODE                               AS BUDGET_ACNT_CODE
		                      ,MVMN_EXPNDTR_UNIT_CODE                       AS EXPNDTR_UNIT_CODE
		                      ,SUM(DECODE(SE, '1', NVL(MVMN_AM,0), 0))      AS MVMN_AM
		                      ,SUM(DECODE(SE, '2', NVL(MVMN_AM,0), 0))      AS DVR_AM
		                      ,SUM(DECODE(SE, '3', NVL(MVMN_AM,0), 0))      AS RSVFND_REQST_AM
		                FROM   TBBDG_MVMN_BUDGET
		                WHERE  DSCN_AT = '1'
		                GROUP BY YEAR
		                        ,MVMN_BSNS_SE
		                        ,MVMN_BALC_SE
		                        ,MVMN_DETAIL_BSNS_CODE
		                        ,MVMN_BUDGET_DEPT
		                        ,MVMN_ACNT_CODE
		                        ,MVMN_EXPNDTR_UNIT_CODE
		                UNION ALL
		                SELECT YEAR                                         AS YEAR
		                      ,PROVD_BSNS_SE                                AS BSNS_SE
		                      ,PROVD_BALC_SE                                AS BALC_SE
		                      ,PROVD_DETAIL_BSNS_CODE                       AS DETAIL_BSNS_CODE
		                      ,PROVD_BUDGET_DEPT                            AS DEPT_CODE
		                      ,PROVD_ACNT_CODE                              AS BUDGET_ACNT_CODE
		                      ,PROVD_EXPNDTR_UNIT_CODE                      AS EXPNDTR_UNIT_CODE
		                      ,SUM(DECODE(SE, '1', NVL(MVMN_AM,0)*(-1), 0)) AS MVMN_AM
		                      ,SUM(DECODE(SE, '2', NVL(MVMN_AM,0)*(-1), 0)) AS DVR_AM
		                      ,SUM(DECODE(SE, '3', NVL(MVMN_AM,0)*(-1), 0)) AS RSVFND_REQST_AM
		                FROM   TBBDG_MVMN_BUDGET
		                WHERE  DSCN_AT = '1'
		                GROUP BY YEAR
		                        ,PROVD_BSNS_SE
		                        ,PROVD_BALC_SE
		                        ,PROVD_DETAIL_BSNS_CODE
		                        ,PROVD_BUDGET_DEPT
		                        ,PROVD_ACNT_CODE
		                        ,PROVD_EXPNDTR_UNIT_CODE
		                UNION ALL
		                /*편성조정*/
		                SELECT YEAR                                         AS YEAR
		                      ,BSNS_SE                                      AS BSNS_SE
		                      ,BALC_SE                                      AS BALC_SE
		                      ,DETAIL_BSNS_CODE                             AS DETAIL_BSNS_CODE
		                      ,DEPT_CODE                                    AS DEPT_CODE
		                      ,BUDGET_ACNT_CODE                             AS BUDGET_ACNT_CODE
		                      ,EXPNDTR_UNIT_CODE                            AS EXPNDTR_UNIT_CODE
		                      ,SUM(NVL(MDAT_BUDGET_AM,0))                   AS MVMN_AM
		                      ,0      AS DVR_AM
		                      ,0      AS RSVFND_REQST_AM
		                FROM   TBBDG_BUDGET_FRMTN_MDAT
		                WHERE  DCSN_AT = '1'
		                GROUP BY YEAR
		                        ,BSNS_SE
		                        ,BALC_SE
		                        ,DETAIL_BSNS_CODE
		                        ,DEPT_CODE
		                        ,BUDGET_ACNT_CODE
		                        ,EXPNDTR_UNIT_CODE
		                UNION ALL
		                SELECT YEAR                                         AS YEAR
		                      ,BSNS_SE                                      AS BSNS_SE
		                      ,BALC_SE                                      AS BALC_SE
		                      ,DETAIL_BSNS_CODE                             AS DETAIL_BSNS_CODE
		                      ,BEFORE_DEPT_CODE                             AS DEPT_CODE
		                      ,BEFORE_ACNT_CODE                             AS BUDGET_ACNT_CODE
		                      ,BEFORE_UNIT_CODE                             AS EXPNDTR_UNIT_CODE
		                      ,SUM(NVL(MDAT_BUDGET_AM,0))*(-1)              AS MVMN_AM
		                      ,0                                            AS DVR_AM
		                      ,0                                            AS RSVFND_REQST_AM
		                FROM   TBBDG_BUDGET_FRMTN_MDAT
		                WHERE  DCSN_AT = '1'
		                GROUP BY YEAR
		                        ,BSNS_SE
		                        ,BALC_SE
		                        ,DETAIL_BSNS_CODE
		                        ,BEFORE_DEPT_CODE
		                        ,BEFORE_ACNT_CODE
		                        ,BEFORE_UNIT_CODE
		               )
		        WHERE  YEAR              = t1.YEAR
		        AND    BSNS_SE           = t1.BSNS_SE
		        AND    BALC_SE           = t1.BALC_SE
		        AND    DETAIL_BSNS_CODE  = t1.DETAIL_BSNS_CODE
		        AND    DEPT_CODE         = t1.DEPT_CODE
		        AND    BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
		        AND    EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
		       )
		WHERE  YEAR = #YEAR# -->
	</update>

	<!-- 전자결재 KEY 갱신 -->
	<update id="BDG020101DAO.updateSanctnNo" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.updateSanctnNo*/]]>
		UPDATE TBBDG_MVMN_BUDGET
		SET    SANCTN_NO = (SELECT SANCTN_NO FROM TBCOM_ELCTRN_SANCTN_MASTR WHERE INTRLCK_IDNTFR = #KEY#)
		WHERE  YEAR      = #YEAR#
		AND    SE        = #SE#
		AND    SN        = #SN#
	</update>

		<!-- 예산계정과목코드 목록조회 -->
	<select id="BDG020101DAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG020101DAO.selectAcntCode*/]]>
		WITH
		<isNotEqual property="ACNT_TYPE" compareValue="MVMN">
		     EXECUT_BUDGET AS (
		        SELECT t1.YEAR
		              ,t1.BSNS_SE
		              ,t1.BALC_SE
		              ,t2.UPPER_ACNT_CODE
		              ,t1.BUDGET_ACNT_CODE
		              ,t2.BUDGET_ACNT_NM
		              ,DECODE(t2.ACNT_LEVEL, '7', '4', t2.ACNT_LEVEL)               AS ACNT_LEVEL
		              ,t2.CHIT_PROCESS_AT
		        FROM   (
		                SELECT YEAR
		                      ,BSNS_SE
		                      ,BALC_SE
		                      ,BUDGET_ACNT_CODE
		                FROM   TBBDG_EXECUT_BUDGET
		                WHERE  1=1
		                <isNotEmpty property="YEAR"      prepend="AND    ">YEAR     = #YEAR#</isNotEmpty>
		                <isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE  = #BSNS_SE#</isNotEmpty>
		                <isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE  = #BALC_SE#</isNotEmpty>
		                <isNotEmpty property="ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE LIKE #ACNT_CODE#</isNotEmpty>
		                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                GROUP BY YEAR
		                        ,BSNS_SE
		                        ,BALC_SE
		                        ,BUDGET_ACNT_CODE
		               ) t1
		               INNER JOIN TBBDG_BUDGET_ACNT_CODE t2
		                    ON t1.YEAR = t2.YEAR
		                   AND t1.BSNS_SE = t2.BSNS_SE
		                   AND t1.BALC_SE = t2.BALC_SE
		                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		        WHERE  1=1
		        <isNotEmpty property="PLAN_REGIST_AT" prepend="AND    ">NVL(t2.PLAN_REGIST_AT,0) = #PLAN_REGIST_AT#</isNotEmpty>
		        ORDER BY T1.YEAR
		                ,T1.BSNS_SE
		                ,T1.BALC_SE
		                ,T1.BUDGET_ACNT_CODE
		),
		</isNotEqual>
		LV5_BUDGET AS (
		    SELECT lv5.YEAR, lv5.BSNS_SE, lv5.BALC_SE, lv5.BUDGET_ACNT_CODE, lv5.BUDGET_ACNT_NM, lv5.ACNT_LEVEL, lv5.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv5
		    WHERE  lv5.ACNT_LEVEL = '5'
		<isNotEqual property="ACNT_TYPE" compareValue="MVMN">
		    AND    EXISTS(
		        SELECT *
		        FROM   EXECUT_BUDGET
		        WHERE  YEAR             = lv5.YEAR
		        AND    BSNS_SE          = lv5.BSNS_SE
		        AND    BALC_SE          = lv5.BALC_SE
		        AND    BUDGET_ACNT_CODE = lv5.BUDGET_ACNT_CODE
		    )
		</isNotEqual>
		<isEqual property="ACNT_TYPE" compareValue="MVMN">
		    AND    lv5.YEAR      = #YEAR#
		    AND    lv5.BSNS_SE   = #BSNS_SE#
		    AND    lv5.BALC_SE   = #BALC_SE#
		</isEqual>
		), LV4_BUDGET AS (
		    SELECT lv4.YEAR, lv4.BSNS_SE, lv4.BALC_SE, lv4.BUDGET_ACNT_CODE, lv4.BUDGET_ACNT_NM, lv4.ACNT_LEVEL, lv4.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv4
		    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		    AND    (
		            lv4.BUDGET_ACNT_CODE IN (
		                                     SELECT lv5.UPPER_ACNT_CODE
		                                     FROM   LV5_BUDGET lv5
		                                     WHERE  lv5.ACNT_LEVEL = '5'
		                                     AND    lv5.YEAR       = lv4.YEAR
		                                     AND    lv5.BSNS_SE    = lv4.BSNS_SE
		                                     AND    lv5.BALC_SE    = lv4.BALC_SE
		                                    )
		<isNotEqual property="ACNT_TYPE" compareValue="MVMN">
		            OR
		            EXISTS (
		                    SELECT *
		                    FROM   EXECUT_BUDGET
		                    WHERE  YEAR             = lv4.YEAR
		                    AND    BSNS_SE          = lv4.BSNS_SE
		                    AND    BALC_SE          = lv4.BALC_SE
		                    AND    BUDGET_ACNT_CODE = lv4.BUDGET_ACNT_CODE
		                   )
		</isNotEqual>
		           )
		), LV3_BUDGET AS (
		    SELECT lv3.YEAR, lv3.BSNS_SE, lv3.BALC_SE, lv3.BUDGET_ACNT_CODE, lv3.BUDGET_ACNT_NM, lv3.ACNT_LEVEL, lv3.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv3
		    WHERE  lv3.ACNT_LEVEL = '3'
		    AND    lv3.BUDGET_ACNT_CODE IN (
		                                    SELECT lv4.UPPER_ACNT_CODE
		                                    FROM   LV4_BUDGET lv4
		                                    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		                                    AND    lv4.YEAR       = lv3.YEAR
		                                    AND    lv4.BSNS_SE    = lv3.BSNS_SE
		                                    AND    lv4.BALC_SE    = lv3.BALC_SE
		                                   )
		), LV2_BUDGET AS (
		    SELECT lv2.YEAR, lv2.BSNS_SE, lv2.BALC_SE, lv2.BUDGET_ACNT_CODE, lv2.BUDGET_ACNT_NM, lv2.ACNT_LEVEL, lv2.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv2
		    WHERE  lv2.ACNT_LEVEL = '2'
		    AND    lv2.BUDGET_ACNT_CODE IN (
		                                    SELECT lv3.UPPER_ACNT_CODE
		                                    FROM   LV3_BUDGET lv3
		                                    WHERE  lv3.ACNT_LEVEL = '3'
		                                    AND    lv3.YEAR       = lv2.YEAR
		                                    AND    lv3.BSNS_SE    = lv2.BSNS_SE
		                                    AND    lv3.BALC_SE    = lv2.BALC_SE
		                                   )
		), LV1_BUDGET AS (
		    SELECT lv1.YEAR, lv1.BSNS_SE, lv1.BALC_SE, lv1.BUDGET_ACNT_CODE, lv1.BUDGET_ACNT_NM, lv1.ACNT_LEVEL, lv1.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv1
		    WHERE  lv1.ACNT_LEVEL = '1'
		    AND    lv1.BUDGET_ACNT_CODE IN (
		                                    SELECT lv2.UPPER_ACNT_CODE
		                                    FROM   LV2_BUDGET lv2
		                                    WHERE  lv2.ACNT_LEVEL = '2'
		                                    AND    lv2.YEAR       = lv1.YEAR
		                                    AND    lv2.BSNS_SE    = lv1.BSNS_SE
		                                    AND    lv2.BALC_SE    = lv1.BALC_SE
		                                   )
		), VWBDG_BUDGET_ACNT_CODE AS (
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV1_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV2_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV3_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV4_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV5_BUDGET
		), BUDGET_ACNT_INFO AS (
		    SELECT ROWNUM AS RNUM
		          ,t1.YEAR
		          ,t1.BSNS_SE
		          ,t1.BALC_SE
		          ,t1.BUDGET_ACNT_CODE
		          ,t1.BUDGET_ACNT_NM
		          ,(CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                 WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
		                 ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| t1.BUDGET_ACNT_NM              AS BUDGET_ACNT_NM2
		          ,SYS_CONNECT_BY_PATH((CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
		                                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)                                                END) ||'.'|| t1.BUDGET_ACNT_NM,'|')||'|'    AS ACNT_NM_PATH
		          ,SYS_CONNECT_BY_PATH(t1.BUDGET_ACNT_NM,'|')||'|'                                                                                  AS ACNT_NM_PATH2
		          ,DECODE(t1.ACNT_LEVEL,'7','4',t1.ACNT_LEVEL)                                                                                      AS ACNT_LEVEL
		          ,t1.UPPER_ACNT_CODE
		    FROM   VWBDG_BUDGET_ACNT_CODE t1
		    START WITH t1.UPPER_ACNT_CODE IS NULL
		    CONNECT BY PRIOR t1.BUDGET_ACNT_CODE = t1.UPPER_ACNT_CODE
		    ORDER SIBLINGS BY t1.YEAR
		                     ,t1.BSNS_SE
		                     ,t1.BALC_SE
		                     ,t1.BUDGET_ACNT_CODE
		), BUDGET_ACNT_TREE AS (
		    SELECT s1.YEAR                              AS YEAR
		          ,s1.BSNS_SE                           AS BSNS_SE
		          ,s1.BALC_SE                           AS BALC_SE
		          ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
		          ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
		          ,s1.BUDGET_ACNT_NM2                   AS BUDGET_ACNT_NM2
		          ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
		          ,s1.UPPER_ACNT_CODE                   AS UPPER_ACNT_CODE
		          ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
		          ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
		          ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
		          ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
		          ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
		          ,        SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)-1)
		           ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)-1)
		           ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)-1)
		           ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)-1)
		           ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)-1)           AS BUDGET_ACNT_TREE_NM
		    FROM   BUDGET_ACNT_INFO s1
		    ORDER BY s1.RNUM
		)
		SELECT YEAR
		     , BSNS_SE
		     , BALC_SE
		     , BUDGET_ACNT_CODE
		     , BUDGET_ACNT_NM
		     , BUDGET_ACNT_NM2
		     , ACNT_LEVEL
		     , UPPER_ACNT_CODE
		     , GWAN
		     , HANG
		     , SEHANG
		     , MOK
		     , SEMOK
		     , BUDGET_ACNT_TREE_NM
		  FROM BUDGET_ACNT_TREE
		 WHERE 1=1
		<isEqual property="SE" compareValue="1">
		/*이용(항) - 관은 같고 항은 다름*/
		   AND (GWAN   = #GWAN#   OR GWAN IS NULL)
		   AND (HANG <![CDATA[<>]]> #HANG# OR HANG IS NULL)
		</isEqual>
		<isEqual property="SE" compareValue="2">
		/*전용(세항) - 관, 항은 같고 세항 다름*/
		   AND (GWAN   = #GWAN#   OR GWAN IS NULL)
		   AND (HANG   = #HANG#   OR HANG IS NULL)
		   AND (SEHANG <![CDATA[<>]]> #SEHANG# OR SEHANG IS NULL)
		</isEqual>
		<isEqual property="SE" compareValue="3">
		/*전용(목) - 관, 항, 세항 같고 목 다름*/
		   AND (GWAN   = #GWAN#   OR GWAN IS NULL)
		   AND (HANG   = #HANG#   OR HANG IS NULL)
		   AND (SEHANG = #SEHANG# OR SEHANG IS NULL)
		   AND (MOK <![CDATA[<>]]> #MOK# OR MOK IS NULL)
		</isEqual>
		<isEqual property="SE" compareValue="4">
		/*조정(세목) - 관, 항, 세항, 목 같고 세목 다름*/
		   AND (GWAN   = #GWAN#   OR GWAN IS NULL)
		   AND (HANG   = #HANG#   OR HANG IS NULL)
		   AND (SEHANG = #SEHANG# OR SEHANG IS NULL)
		   AND (MOK    = #MOK#    OR MOK IS NULL)
		   AND (SEMOK <![CDATA[<>]]> #SEMOK# OR SEMOK IS NULL)
		</isEqual>
		<isEqual property="SE" compareValue="5">
		/*이동(부기) - 관, 항, 세항, 목, 세목 같음*/
		   AND (GWAN   = #GWAN#   OR GWAN IS NULL)
		   AND (HANG   = #HANG#   OR HANG IS NULL)
		   AND (SEHANG = #SEHANG# OR SEHANG IS NULL)
		   AND (MOK    = #MOK#    OR MOK IS NULL)
		   AND (SEMOK  = #SEMOK#  OR SEMOK IS NULL)
		</isEqual>
	</select>


	<!-- 세목/지출단위코드 목록조회 -->
	<select id="BDG020101DAO.selectExpndtrUnitCodeOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	<![CDATA[/*BDG020101DAO.selectExpndtrUnitCodeOld*/]]>
        SELECT t1.YEAR
              ,t1.BSNS_SE
              ,t1.BALC_SE
              ,t1.DETAIL_BSNS_CODE
              ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
              ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
              ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
              ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
              ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE
              ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE2
              ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
              ,t1.EXPNDTR_UNIT_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                         AS EXPNDTR_UNIT_NM2
              ,t1.DEPT_CODE                                                                                                                                             
              ,t7.DEPT_NM                                                                                                                                               
              ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
              ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
              ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t1.BSNS_SE,t1.BALC_SE,t1.BUDGET_ACNT_CODE,t1.EXPNDTR_UNIT_CODE)                                                            AS EXPNDTR_UNIT_TREE_NM
              ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
              ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
              ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
              ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
              ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
              ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
              ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
              ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
              ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
              ,NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC2
              ,NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC2
              ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
              ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
              ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
              ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
              ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
              ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
              ,(
                SELECT (CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END)
                FROM   TBBDG_BUDGET_FRMTN_PD r1
                       LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT r2
                            ON r1.YEAR = r2.YEAR
                           AND r1.SN = r2.SN
                WHERE  r1.USE_AT = '1'
                AND    r1.REQST_SE = '4'
                AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN r1.BGNDE AND r1.ENDDE
                AND    r1.YEAR = t1.YEAR
                AND    (r2.DEPT_CODE = '000000' OR r2.DEPT_CODE = t1.DEPT_CODE)
               )                                                                                                                                                        AS USE_AT
        FROM   (
                SELECT YEAR
                      ,BSNS_SE
                      ,BALC_SE
                      ,DETAIL_BSNS_CODE
                      ,DEPT_CODE
                      ,BUDGET_ACNT_CODE
                      ,EXPNDTR_UNIT_CODE
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(TRSF_AM,0)
                           + NVL(MVMN_AM,0)
                           + NVL(BUKIP_MVMN_AM,0)
                           + NVL(DVR_AM,0)
                           + NVL(RSVFND_REQST_AM,0) )    AS ORI_BUDGET_AM
                      ,SUM(NVL(CYFD_BUDGET,0))           AS CYFD_BUDGET_AM
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(CYFD_BUDGET,0)
                           + NVL(TRSF_AM,0)
                           + NVL(MVMN_AM,0)
                           + NVL(BUKIP_MVMN_AM,0)
                           + NVL(DVR_AM,0)
                           + NVL(RSVFND_REQST_AM,0) )    AS BUDGET_AM
                      ,MAX(EXPNDTR_POSBL_AT)             AS EXPNDTR_POSBL_AT 
                FROM   TBBDG_EXECUT_BUDGET
                WHERE  1=1
                <isNotEmpty property="YEAR"                prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
                <isNotEmpty property="BSNS_SE"             prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
                <isNotEmpty property="BALC_SE"             prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
                <isNotEmpty property="DETAIL_BSNS_CODE"    prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
                <isNotEmpty property="BUDGET_ACNT_CODE"    prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
                <isEqual    property="SE" compareValue="5" prepend="AND    ">EXPNDTR_UNIT_CODE <![CDATA[<>]]> #BUKIP_CODE#</isEqual>
                GROUP BY YEAR
                        ,BSNS_SE
                        ,BALC_SE
                        ,DETAIL_BSNS_CODE
                        ,DEPT_CODE
                        ,BUDGET_ACNT_CODE
                        ,EXPNDTR_UNIT_CODE
               ) t1
               LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
                    ON t1.YEAR             = t2.YEAR
                   AND t1.BSNS_SE          = t2.BSNS_SE
                   AND t1.BALC_SE          = t2.BALC_SE
                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t3
                    ON t1.YEAR              = t3.YEAR
                   AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
                   AND t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
                    ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BUDGET_ACNT_CODE
                                      ,EXPNDTR_UNIT_CODE
                                      ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT
                                      ,NVL(SUM(DEBT_AMT           ),0)  AS DEBT_AMT
                                      ,NVL(SUM(DECSN_AMOUNT       ),0)  AS DECSN_AMOUNT
                                FROM   VHACC_EXP_DSN_MASTR
                                WHERE  1=1
                                <isNotEmpty property="MONTH" prepend="AND">
                                    SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
                                </isNotEmpty>
                                <isEmpty property="MONTH" prepend="AND">
                                    CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
                                </isEmpty>
                                GROUP BY BUDGET_YEAR
                                        ,BSNS_SE
                                        ,BALC_SE
                                        ,BUDGET_ACNT_CODE
                                        ,EXPNDTR_UNIT_CODE
                               ) t5
                    ON t1.YEAR              = t5.BUDGET_YEAR
                   AND t1.BSNS_SE           = t5.BSNS_SE
                   AND t1.BALC_SE           = t5.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
                   AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BUDGET_ACNT_CODE
                                      ,EXPNDTR_UNIT_CODE
                                      ,NVL(SUM(ORI_DECSN_AMOUNT  ),0)  AS ORI_DECSN_AMOUNT
                                      ,NVL(SUM(CYFD_DECSN_AMOUNT ),0)  AS CYFD_DECSN_AMOUNT
                                      ,NVL(SUM(DECSN_AMOUNT      ),0)  AS DECSN_AMOUNT
                                FROM   (
                                        SELECT DECSN_NO
                                              ,CPTAL_EXPNDTR_ACNTBK_DE
                                              ,ANACT_KND
                                              ,CYFD_SE
                                              ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
                                                    WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
                                                    ELSE BUDGET_YEAR
                                               END                                       AS BUDGET_YEAR
                                              ,BSNS_SE
                                              ,BALC_SE
                                              ,BUDGET_ACNT_CODE
                                              ,EXPNDTR_UNIT_CODE
                                              ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
                                              ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
                                              ,DECSN_AMOUNT               AS DECSN_AMOUNT
                                        FROM   TBACC_EXP_DSN_MASTR
                                        WHERE  1=1
                                       )
                                WHERE  1=1
                                GROUP BY BUDGET_YEAR
                                        ,BSNS_SE
                                        ,BALC_SE
                                        ,BUDGET_ACNT_CODE
                                        ,EXPNDTR_UNIT_CODE
                               ) t6
                    ON t1.YEAR              = t6.BUDGET_YEAR
                   AND t1.BSNS_SE           = t6.BSNS_SE
                   AND t1.BALC_SE           = t6.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
                   AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
               LEFT OUTER JOIN VWHRM_DEPT t7
                    ON t1.DEPT_CODE = t7.DEPT_CODE
               LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
                    ON T3.BUKIP_CODE = t8.BUKIP_CODE
        WHERE  1=1
        ORDER BY t1.YEAR
                ,t1.BSNS_SE
                ,t1.BALC_SE
                ,t1.BUDGET_ACNT_CODE
                ,t1.DETAIL_BSNS_CODE
                ,t1.DEPT_CODE
                ,t1.EXPNDTR_UNIT_CODE
	</select>


	<!-- 세목/지출단위코드 목록조회2 -->
	<select id="BDG020101DAO.selectExpndtrUnitCodeOld2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	<![CDATA[/*BDG020101DAO.selectExpndtrUnitCodeOld2*/]]>
		SELECT t1.YEAR
		      ,t2.BSNS_SE
		      ,t2.BALC_SE
		      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
		      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
		      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
		      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
		      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
		      ,t1.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
		      ,NVL(t3.DETAIL_BSNS_CODE, #DETAIL_BSNS_CODE#)                                                                                                             AS DETAIL_BSNS_CODE
		      ,NVL(t9.BSNS_NM, #BSNS_NM#)                                                                                                                               AS DETAIL_BSNS_NM
		      ,NVL(t3.DETAIL_BSNS_CODE, #DETAIL_BSNS_CODE#) || '.' || NVL(t9.BSNS_NM, #BSNS_NM#)                                                                        AS DETAIL_BSNS_NM2
		      ,NVL(t3.DEPT_CODE, #DEPT_CODE#)                                                                                                                           AS DEPT_CODE
		      ,NVL(t10.DEPT_NM, #DEPT_NM#)                                                                                                                              AS DEPT_NM
		      ,NVL(t3.DEPT_CODE, #DEPT_CODE#) || '.' || NVL(t10.DEPT_NM, #DEPT_NM#)                                                                                     AS DEPT_NM2
		      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
		      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t1.BUKIP_CODE)                                                                   AS EXPNDTR_UNIT_TREE_NM
		      ,NVL(t3.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
		      ,NVL(t3.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
		      ,NVL(t3.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
		      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
		      ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
		      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
		      ,SUM(NVL(t3.BUDGET_AM,0))                          OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
		      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
		      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
		      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
		      ,SUM(NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
		      ,NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
		      ,SUM(NVL(t3.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)) OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC2
		      ,NVL(t3.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC2
		      ,NVL(t3.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
		      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
		      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
		      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
		      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
		      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
		      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
		FROM
		       (
		          SELECT YEAR
		             , BUDGET_ACNT_CODE
		             , BUKIP_CODE
		          FROM TBBDG_BUDGET_BUKIP_MAPPING
		         WHERE YEAR             = #YEAR#
		           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		       ) t1
		       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR             = t2.YEAR
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,DETAIL_BSNS_CODE
		                              ,DEPT_CODE
		                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
		                                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
		                              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
		                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
		                                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
		                              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
		                        FROM   TBBDG_EXECUT_BUDGET
		                        WHERE  1=1
		                        AND    YEAR             = #YEAR#
		                        AND    BSNS_SE          = #BSNS_SE#
		                        AND    BALC_SE          = #BALC_SE#
		                        AND    BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		                        AND    DEPT_CODE        = #DEPT_CODE#
		                        AND    DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#
		                        <isEqual property="SE" compareValue="5">
		                        AND    EXPNDTR_UNIT_CODE <![CDATA[<>]]> #BUKIP_CODE#
		                        </isEqual>
		                        GROUP BY YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                                ,DETAIL_BSNS_CODE
		                                ,DEPT_CODE
		                       ) t3
		            ON t1.YEAR             = t3.YEAR
		           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		           AND t1.BUKIP_CODE       = t3.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,BSNS_CODE
		                              ,DEPT_CODE
		                              ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT
		                              ,NVL(SUM(DEBT_AMT           ),0)  AS DEBT_AMT
		                              ,NVL(SUM(DECSN_AMOUNT       ),0)  AS DECSN_AMOUNT
		                        FROM   VHACC_EXP_DSN_MASTR
		                        WHERE  1=1
		                        AND    DEPT_CODE = #DEPT_CODE#
		                        AND    BSNS_CODE = #DETAIL_BSNS_CODE#
		                        <isNotEmpty property="MONTH" prepend="AND">
		                        	SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
		                        </isNotEmpty>
		                        <isEmpty property="MONTH" prepend="AND">
		                        	CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
		                        </isEmpty>
		                        GROUP BY BUDGET_YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                                ,BSNS_CODE
		                                ,DEPT_CODE
		                       ) t5
		            ON t3.YEAR              = t5.BUDGET_YEAR
		           AND t3.BSNS_SE           = t5.BSNS_SE
		           AND t3.BALC_SE           = t5.BALC_SE
		           AND t3.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
		           AND t3.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
		           AND t3.DETAIL_BSNS_CODE  = t5.BSNS_CODE
		           AND t3.DEPT_CODE         = t5.DEPT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,BSNS_CODE
		                              ,DEPT_CODE
		                              ,NVL(SUM(ORI_DECSN_AMOUNT  ),0)  AS ORI_DECSN_AMOUNT
		                              ,NVL(SUM(CYFD_DECSN_AMOUNT ),0)  AS CYFD_DECSN_AMOUNT
		                              ,NVL(SUM(DECSN_AMOUNT      ),0)  AS DECSN_AMOUNT
		                        FROM   (
		                                SELECT DECSN_NO
		                                      ,CPTAL_EXPNDTR_ACNTBK_DE
		                                      ,ANACT_KND
		                                      ,CYFD_SE
		                                      ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
		                                            WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
		                                            ELSE BUDGET_YEAR
		                                       END                                       AS BUDGET_YEAR
		                                      ,BSNS_SE
		                                      ,BALC_SE
		                                      ,BUDGET_ACNT_CODE
		                                      ,EXPNDTR_UNIT_CODE
		                                      ,BSNS_CODE
		                                      ,DEPT_CODE
		                                      ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
		                                      ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
		                                      ,DECSN_AMOUNT               AS DECSN_AMOUNT
		                                FROM   TBACC_EXP_DSN_MASTR
		                                WHERE  1=1
		                                AND    DEPT_CODE = #DEPT_CODE#
		                                AND    BSNS_CODE = #DETAIL_BSNS_CODE#
		                               )
		                        WHERE  1=1
		                        GROUP BY BUDGET_YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                                ,BSNS_CODE
		                                ,DEPT_CODE
		                       ) t6
		            ON t3.YEAR              = t6.BUDGET_YEAR
		           AND t3.BSNS_SE           = t6.BSNS_SE
		           AND t3.BALC_SE           = t6.BALC_SE
		           AND t3.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		           AND t3.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		           AND t3.DETAIL_BSNS_CODE  = t6.BSNS_CODE
		           AND t3.DEPT_CODE         = t6.DEPT_CODE
		       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
		            ON t1.BUKIP_CODE = t8.BUKIP_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t9
		            ON t3.DETAIL_BSNS_CODE = t9.BSNS_CODE
		       LEFT OUTER JOIN TBHRM_DEPT t10
		            ON t3.DEPT_CODE = t10.DEPT_CODE
		WHERE  1=1
		ORDER BY t1.YEAR
		        ,t2.BSNS_SE
		        ,t2.BALC_SE
		        ,t2.BUDGET_ACNT_CODE
		        ,t3.DETAIL_BSNS_CODE
		        ,t1.BUKIP_CODE
	</select>

	<!-- 세목/지출단위코드 목록조회 -->
	<select id="BDG020101DAO.selectExpndtrUnitCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	<![CDATA[/*BDG020101DAO.selectExpndtrUnitCode*/]]>
        SELECT t1.YEAR
              ,t1.BSNS_SE
              ,t1.BALC_SE
              ,t1.DETAIL_BSNS_CODE
              ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
              ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
              ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
              ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
              ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE
              ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE2
              ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
              ,t1.EXPNDTR_UNIT_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                         AS EXPNDTR_UNIT_NM2
              ,t1.DEPT_CODE                                                                                                                                             
              ,t7.DEPT_NM                                                                                                                                               
              ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
              ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
              ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t1.BSNS_SE,t1.BALC_SE,t1.BUDGET_ACNT_CODE,t1.EXPNDTR_UNIT_CODE)                                                            AS EXPNDTR_UNIT_TREE_NM
              ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
              ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
              ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
              ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
              ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
              ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
              ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
              ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
              ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
              ,NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
              ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
              ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
              ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
              ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
              ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
              ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
              ,(
                SELECT (CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END)
                FROM   TBBDG_BUDGET_FRMTN_PD r1
                       LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT r2
                            ON r1.YEAR = r2.YEAR
                           AND r1.SN = r2.SN
                WHERE  r1.USE_AT = '1'
                AND    r1.REQST_SE = '4'
                AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN r1.BGNDE AND r1.ENDDE
                AND    r1.YEAR = t1.YEAR
                AND    (r2.DEPT_CODE = '000000' OR r2.DEPT_CODE = t1.DEPT_CODE)
               )                                                                                                                                                        AS USE_AT
        FROM   (
                SELECT YEAR
                      ,BSNS_SE
                      ,BALC_SE
                      ,DETAIL_BSNS_CODE
                      ,DEPT_CODE
                      ,BUDGET_ACNT_CODE
                      ,EXPNDTR_UNIT_CODE
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(TRSF_AM,0)
                           + NVL(MVMN_AM,0)
                           + NVL(BUKIP_MVMN_AM,0)
                           + NVL(DVR_AM,0)
                           + NVL(RSVFND_REQST_AM,0) )    AS ORI_BUDGET_AM
                      ,SUM(NVL(CYFD_BUDGET,0))           AS CYFD_BUDGET_AM
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(CYFD_BUDGET,0)
                           + NVL(TRSF_AM,0)
                           + NVL(MVMN_AM,0)
                           + NVL(BUKIP_MVMN_AM,0)
                           + NVL(DVR_AM,0)
                           + NVL(RSVFND_REQST_AM,0) )    AS BUDGET_AM
                      ,MAX(EXPNDTR_POSBL_AT)             AS EXPNDTR_POSBL_AT 
                FROM   TBBDG_EXECUT_BUDGET
                WHERE  1=1
                <isNotEmpty property="YEAR"                prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
                <isNotEmpty property="BSNS_SE"             prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
                <isNotEmpty property="BALC_SE"             prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
                <isNotEmpty property="DETAIL_BSNS_CODE"    prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
                <isNotEmpty property="BUDGET_ACNT_CODE"    prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
                <isEqual    property="SE" compareValue="5" prepend="AND    ">EXPNDTR_UNIT_CODE <![CDATA[<>]]> #BUKIP_CODE#</isEqual>
                GROUP BY YEAR
                        ,BSNS_SE
                        ,BALC_SE
                        ,DETAIL_BSNS_CODE
                        ,DEPT_CODE
                        ,BUDGET_ACNT_CODE
                        ,EXPNDTR_UNIT_CODE
               ) t1
               LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
                    ON t1.YEAR             = t2.YEAR
                   AND t1.BSNS_SE          = t2.BSNS_SE
                   AND t1.BALC_SE          = t2.BALC_SE
                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t3
                    ON t1.YEAR              = t3.YEAR
                   AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
                   AND t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
                    ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BSNS_CODE
                                      ,DEPT_CODE
                                      ,BUDGET_ACNT_CODE
                                      ,EXPNDTR_UNIT_CODE
                                      ,CYFD_BUDGET_AMT
                                      ,ORIBDGT_AMT
                                      ,RVSPBGT_AMT
                                      ,DVR_AMT
                                      ,EXECUT_BUDGET_AM
                                      ,CAUSE_ACTION_AMOUNT
                                      ,CAUSE_ACTION_DECSN_AMOUNT
                                      ,CAUSE_ACTION_JAN_AMOUNT
                                      ,EXP_DSN_AMOUNT
                                      ,DEBT_AMT
                                      ,DECSN_AMOUNT
                                      ,ASIGN_AMOUNT
                                      ,MONTH_CAUSE_ACTION_AMOUNT
                                      ,MONTH_DECSN_AMOUNT
                                      ,EXECUT_BUDGET_JAN_AM
                                      ,ASIGN_JAN_AMOUNT
                                FROM   VWACC_EXP_DSN_MASTR
                               ) t5
                    ON t1.YEAR              = t5.BUDGET_YEAR
                   AND t1.BSNS_SE           = t5.BSNS_SE
                   AND t1.BALC_SE           = t5.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
                   AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
                   AND t1.DETAIL_BSNS_CODE  = t5.BSNS_CODE
                   AND t1.DEPT_CODE         = t5.DEPT_CODE
               LEFT OUTER JOIN TBHRM_DEPT t7
                    ON t1.DEPT_CODE = t7.DEPT_CODE
               LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
                    ON T3.BUKIP_CODE = t8.BUKIP_CODE
        WHERE  1=1
        ORDER BY t1.YEAR
                ,t1.BSNS_SE
                ,t1.BALC_SE
                ,t1.BUDGET_ACNT_CODE
                ,t1.DETAIL_BSNS_CODE
                ,t1.DEPT_CODE
                ,t1.EXPNDTR_UNIT_CODE
	</select>


	<!-- 세목/지출단위코드 목록조회2 -->
	<select id="BDG020101DAO.selectExpndtrUnitCode2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	<![CDATA[/*BDG020101DAO.selectExpndtrUnitCode2*/]]>
		SELECT t1.YEAR
		      ,t2.BSNS_SE
		      ,t2.BALC_SE
		      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
		      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
		      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
		      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
		      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
		      ,t1.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
		      ,NVL(t3.DETAIL_BSNS_CODE, #DETAIL_BSNS_CODE#)                                                                                                             AS DETAIL_BSNS_CODE
		      ,NVL(t9.BSNS_NM, #BSNS_NM#)                                                                                                                               AS DETAIL_BSNS_NM
		      ,NVL(t3.DETAIL_BSNS_CODE, #DETAIL_BSNS_CODE#) || '.' || NVL(t9.BSNS_NM, #BSNS_NM#)                                                                        AS DETAIL_BSNS_NM2
		      ,NVL(t3.DEPT_CODE, #DEPT_CODE#)                                                                                                                           AS DEPT_CODE
		      ,NVL(t10.DEPT_NM, #DEPT_NM#)                                                                                                                              AS DEPT_NM
		      ,NVL(t3.DEPT_CODE, #DEPT_CODE#) || '.' || NVL(t10.DEPT_NM, #DEPT_NM#)                                                                                     AS DEPT_NM2
		      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
		      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t1.BUKIP_CODE)                                                                   AS EXPNDTR_UNIT_TREE_NM
		      ,NVL(t3.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
		      ,NVL(t3.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
		      ,NVL(t3.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
		      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
		      ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
		      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
		      ,SUM(NVL(t3.BUDGET_AM,0))                          OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
		      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
		      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
		      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
		      ,SUM(NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
		      ,NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
		      ,NVL(t3.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
		      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
		      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
		      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
		      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
		      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
		      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
		FROM
		       (
		          SELECT YEAR
		             , BUDGET_ACNT_CODE
		             , BUKIP_CODE
		          FROM TBBDG_BUDGET_BUKIP_MAPPING
		         WHERE YEAR             = #YEAR#
		           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		       ) t1
		       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR             = t2.YEAR
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,DETAIL_BSNS_CODE
		                              ,DEPT_CODE
		                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
		                                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
		                              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
		                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
		                                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
		                              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
		                        FROM   TBBDG_EXECUT_BUDGET
		                        WHERE  1=1
		                        AND    YEAR             = #YEAR#
		                        AND    BSNS_SE          = #BSNS_SE#
		                        AND    BALC_SE          = #BALC_SE#
		                        AND    BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		                        AND    DEPT_CODE        = #DEPT_CODE#
		                        AND    DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#
		                        <isEqual property="SE" compareValue="5">
		                        AND    EXPNDTR_UNIT_CODE <![CDATA[<>]]> #BUKIP_CODE#
		                        </isEqual>
		                        GROUP BY YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                                ,DETAIL_BSNS_CODE
		                                ,DEPT_CODE
		                       ) t3
		            ON t1.YEAR             = t3.YEAR
		           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		           AND t1.BUKIP_CODE       = t3.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BSNS_CODE
                                      ,DEPT_CODE
                                      ,BUDGET_ACNT_CODE
                                      ,EXPNDTR_UNIT_CODE
                                      ,CYFD_BUDGET_AMT
                                      ,ORIBDGT_AMT
                                      ,RVSPBGT_AMT
                                      ,DVR_AMT
                                      ,EXECUT_BUDGET_AM
                                      ,CAUSE_ACTION_AMOUNT
                                      ,CAUSE_ACTION_DECSN_AMOUNT
                                      ,CAUSE_ACTION_JAN_AMOUNT
                                      ,EXP_DSN_AMOUNT
                                      ,DEBT_AMT
                                      ,DECSN_AMOUNT
                                      ,ASIGN_AMOUNT
                                      ,MONTH_CAUSE_ACTION_AMOUNT
                                      ,MONTH_DECSN_AMOUNT
                                      ,EXECUT_BUDGET_JAN_AM
                                      ,ASIGN_JAN_AMOUNT
                                FROM   VWACC_EXP_DSN_MASTR
                               ) t5
                    ON t3.YEAR              = t5.BUDGET_YEAR
                   AND t3.BSNS_SE           = t5.BSNS_SE
                   AND t3.BALC_SE           = t5.BALC_SE
                   AND t3.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
                   AND t3.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
                   AND t3.DETAIL_BSNS_CODE  = t5.BSNS_CODE
                   AND t3.DEPT_CODE         = t5.DEPT_CODE
		       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
		            ON t1.BUKIP_CODE = t8.BUKIP_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t9
		            ON t3.DETAIL_BSNS_CODE = t9.BSNS_CODE
		       LEFT OUTER JOIN TBHRM_DEPT t10
		            ON t3.DEPT_CODE = t10.DEPT_CODE
		WHERE  1=1
		ORDER BY t1.YEAR
		        ,t2.BSNS_SE
		        ,t2.BALC_SE
		        ,t2.BUDGET_ACNT_CODE
		        ,t3.DETAIL_BSNS_CODE
		        ,t1.BUKIP_CODE
	</select>


</sqlMap>