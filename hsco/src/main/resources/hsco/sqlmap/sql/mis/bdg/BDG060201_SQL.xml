<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG060201_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<parameterMap id="anytmAsignDemandParam" class="java.util.HashMap">
        <parameter property="IN_ROW_TYPE"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_YEAR"             jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_BUDGET_SE"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_BSNS_SE"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_BALC_SE"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_BSNS_CODE"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_DEPT_CODE"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_BUDGET_ACNT_CODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_SN"               jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_ASIGN_RESN"       jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_DEMAND_MT"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_DEMAND_AM"        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="IN_REGISTER_ID"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
        <parameter property="OUT_RESULT_MSG"      jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
    </parameterMap>
	
	<!-- 수시배정요구등록 -->
    <procedure id="BDG060201DAO.callSpbdgAnytmAsignDemand" parameterMap="anytmAsignDemandParam">
        { call SPBDG_ANYTM_ASIGN_DEMAND(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
    </procedure>
	
	
	<!-- 수시배정요구 조회 -->
	<select id="BDG060201DAO.selectAnytmAsignDemand" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG060201DAO.selectAnytmAsignDemand*/]]>
		SELECT TB1.YEAR
		     , TB1.BUDGET_SE
		     , TB1.BSNS_SE
		     , TB1.BALC_SE
		     , TB1.BSNS_CODE
		     , TB1.BSNS_NM
		     , TB1.DEPT_CODE
		     , TB1.DEPT_NM
		     , TB1.BUDGET_ACNT_CODE
		     , TB1.BUDGET_ACNT_NM
		     , TB1.SN
		     , TB1.ASIGN_TYPE
		     , TB1.ASIGN_RESN
		     , TB1.DEMAND_AM
		     , TB1.DEMAND_MT
		     , ''                                                       AS IN_ROW_TYPE
		     , TB1.YEAR                                                 AS IN_YEAR
		     , TB1.BUDGET_SE                                            AS IN_BUDGET_SE
		     , TB1.BSNS_SE                                              AS IN_BSNS_SE
		     , TB1.BALC_SE                                              AS IN_BALC_SE
		     , TB1.BSNS_CODE                                            AS IN_BSNS_CODE
		     , TB1.DEPT_CODE                                            AS IN_DEPT_CODE
		     , TB1.BUDGET_ACNT_CODE                                     AS IN_BUDGET_ACNT_CODE
		     , TB1.SN                                                   AS IN_SN
		     , TB1.ASIGN_RESN                                           AS IN_ASIGN_RESN
		     , TB1.DEMAND_AM                                            AS IN_DEMAND_AM
		     , TB1.DEMAND_MT                                            AS IN_DEMAND_MT
		     , NULL                                                     AS IN_REGISTER_ID
		     , NULL                                                     AS OUT_RESULT_MSG
		     , TB1.DCSN_AM
		     , TB1.DCSN_DE
		     , TB1.DCSN_AT
		     , TO_CHAR(TB1.REGIST_DT, 'YYYYMMDD')                       AS REGIST_DT
		     , NVL(TB2.LEGACY_ASIGN_AM, 0)                              AS LEGACY_ASIGN_AM
		     , NVL(TB3.BUDGET_AM, 0)                                    AS BUDGET_AM
		     , NVL(TB3.BUDGET_AM, 0) - NVL(TB2.LEGACY_ASIGN_AM, 0)      AS BUDGET_ASIGN_BLCE
		     , NVL(TB4.DECSN_AMOUNT,0)                                  AS DECSN_AMOUNT
		     , NVL(TB2.LEGACY_ASIGN_AM, 0) - NVL(TB4.DECSN_AMOUNT,0)    AS ASIGN_EXCUT_BLCE
		  FROM (
		        SELECT T1.YEAR
		             , T1.BUDGET_SE
		             , T1.BSNS_SE
		             , T1.BALC_SE
		             , T1.BSNS_CODE
		             , T6.BSNS_NM
		             , T1.DEPT_CODE
		             , T5.DEPT_NM
		             , T1.BUDGET_ACNT_CODE
		             , T2.BUDGET_ACNT_NM
		             , T1.SN
		             , T1.ASIGN_TYPE
		             , T1.ASIGN_RESN
		             , T1.DEMAND_AM
		             , T1.DEMAND_MT
		             , T1.DCSN_AM
		             , T1.DCSN_DE
		             , T1.DCSN_AT
		             , T1.REGISTER_ID
		             , T1.REGIST_DT
		             , T1.UPDUSR_ID
		             , T1.UPDT_DT
		          FROM TBBDG_BUDGET_ASIGN T1
		               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE T2
		                    ON T1.YEAR             = T2.YEAR
		                   AND T1.BSNS_SE          = T2.BSNS_SE
		                   AND T1.BALC_SE          = T2.BALC_SE
		                   AND T1.BUDGET_ACNT_CODE = T2.BUDGET_ACNT_CODE
		               LEFT OUTER JOIN VWHRM_DEPT T5
		                    ON T1.DEPT_CODE = T5.DEPT_CODE
		               LEFT OUTER JOIN TBPRJ_BSNS_CODE T6
		                    ON T1.BSNS_CODE = T6.BSNS_CODE
		       ) TB1
		       LEFT OUTER JOIN (
		                        SELECT T.YEAR
		                             , T.BSNS_SE
		                             , T.BALC_SE
		                             , T.BSNS_CODE
		                             , T.DEPT_CODE
		                             , T.BUDGET_ACNT_CODE
		                             , NVL(SUM(T.DCSN_AM), 0) AS LEGACY_ASIGN_AM
		                          FROM ( 
				                        SELECT YEAR
				                             , BSNS_SE
				                             , BALC_SE
				                             , BSNS_CODE
				                             , DEPT_CODE
				                             , BUDGET_ACNT_CODE
				                             , DCSN_AM
				                          FROM TBBDG_BUDGET_ASIGN
				                         WHERE DCSN_DE IS NOT NULL
				                           AND ASIGN_TYPE != '88'
		                               ) T
		                        GROUP BY T.YEAR
		                               , T.BSNS_SE
		                               , T.BALC_SE
		                               , T.BSNS_CODE
		                               , T.DEPT_CODE
		                               , T.BUDGET_ACNT_CODE
		                       ) TB2
		            ON TB1.YEAR             = TB2.YEAR
		           AND TB1.BSNS_SE          = TB2.BSNS_SE
		           AND TB1.BALC_SE          = TB2.BALC_SE
		           AND TB1.BSNS_CODE        = TB2.BSNS_CODE
		           AND TB1.DEPT_CODE        = TB2.DEPT_CODE
		           AND TB1.BUDGET_ACNT_CODE = TB2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                             , BSNS_SE
		                             , BALC_SE
		                             , DETAIL_BSNS_CODE
		                             , DEPT_CODE
		                             , BUDGET_ACNT_CODE
		                             , SUM(NVL(ORIBDGT,0)
		                                   + NVL(RVSPBGT_1_ODR,0)
		                                   + NVL(RVSPBGT_2_ODR,0)
		                                   + NVL(RVSPBGT_3_ODR,0)
		                                   + NVL(RVSPBGT_4_ODR,0)
		                                   + NVL(RVSPBGT_5_ODR,0)
		                                   + NVL(RVSPBGT_6_ODR,0)
		                                   + NVL(RVSPBGT_7_ODR,0)
		                                   + NVL(CYFD_BUDGET,0) + NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0))    AS BUDGET_AM
		                          FROM TBBDG_EXECUT_BUDGET
		                        GROUP BY YEAR
		                               , BSNS_SE
		                               , BALC_SE
		                               , DETAIL_BSNS_CODE
		                               , DEPT_CODE
		                               , BUDGET_ACNT_CODE
		                       ) TB3
		            ON TB1.YEAR = TB3.YEAR
		           AND TB1.BSNS_SE = TB3.BSNS_SE
		           AND TB1.BALC_SE = TB3.BALC_SE
		           AND TB1.BSNS_CODE = TB3.DETAIL_BSNS_CODE
		           AND TB1.DEPT_CODE = TB3.DEPT_CODE
		           AND TB1.BUDGET_ACNT_CODE = TB3.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BSNS_CODE
		                              ,DEPT_CODE
		                              ,BUDGET_ACNT_CODE
		                              ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)    AS CAUSE_ACTION_AMOUNT
		                              ,NVL(SUM(DEBT_AMT),0)               AS DEBT_AMT
		                              ,NVL(SUM(DECSN_AMOUNT),0)           AS DECSN_AMOUNT
		<isEqual property="YEAR_SE" compareValue="1">
		                        FROM   VHACC_EXP_DSN_MASTR
		</isEqual>
		<isEqual property="YEAR_SE" compareValue="2">
		                        FROM   VWACC_EXP_DSN_MASTR
		</isEqual>
		                        WHERE  1=1
		                        GROUP BY BUDGET_YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BSNS_CODE
		                                ,DEPT_CODE
		                                ,BUDGET_ACNT_CODE
		                       ) TB4
                    ON TB1.YEAR              = TB4.BUDGET_YEAR
                   AND TB1.BSNS_SE           = TB4.BSNS_SE
                   AND TB1.BALC_SE           = TB4.BALC_SE
                   AND TB1.BSNS_CODE         = TB4.BSNS_CODE
                   AND TB1.DEPT_CODE         = TB4.DEPT_CODE
                   AND TB1.BUDGET_ACNT_CODE  = TB4.BUDGET_ACNT_CODE
		 WHERE 1=1
		   AND TB1.ASIGN_TYPE = '00'
		<isNotEmpty property="YEAR"      prepend="AND ">TB1.YEAR      = #YEAR#</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
		  <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (TB1.DEPT_CODE='000000' OR TB1.DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="BUDGET_SE" prepend="AND ">TB1.BUDGET_SE = #BUDGET_SE#</isNotEmpty>
		ORDER BY TB1.BSNS_CODE
		       , TB1.DEPT_CODE
		       , TB1.BUDGET_ACNT_CODE
		       , TB1.SN
	</select>
	
	
	<!-- 수시배정요구추가 -->
    <insert id="BDG060201DAO.insertAnytmAsignDemand" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG060201DAO.insertAnytmAsignDemand*/]]>
        INSERT INTO TBBDG_BUDGET_ASIGN (
             YEAR
           , BUDGET_SE
           , BSNS_SE
           , BALC_SE
           , BSNS_CODE
           , DEPT_CODE
           , BUDGET_ACNT_CODE
           , SN
           , ASIGN_TYPE
           , ASIGN_RESN
           , DEMAND_AM
           , DEMAND_MT
           , DCSN_AM
           , DCSN_DE
           , DCSN_AT
           , REGISTER_ID
           , REGIST_DT
           , UPDUSR_ID
           , UPDT_DT
        )
        VALUES (
             #YEAR#
           , #BUDGET_SE#
           , #BSNS_SE#
           , #BALC_SE#
           , #BSNS_CODE#
           , #DEPT_CODE#
           , #BUDGET_ACNT_CODE#
           , (SELECT NVL(MAX(SN),0)+1 FROM TBBDG_BUDGET_ASIGN WHERE YEAR = #YEAR#)
           , #ASIGN_TYPE#
           , #ASIGN_RESN#
           , #DEMAND_AM#
           , #DEMAND_MT#
           , #DCSN_AM#
           , #DCSN_DE#
           , '0'
           , #S_USER_ID#
           , SYSDATE
           , #S_USER_ID#
           , SYSDATE
        )
    </insert>
    
    
    <!-- 수시배정요구수정 -->
    <update id="BDG060201DAO.updateAnytmAsignDemand" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG060201DAO.updateAnytmAsignDemand*/]]>
        UPDATE TBBDG_BUDGET_ASIGN
           SET ASIGN_RESN = #ASIGN_RESN#
             , DEMAND_AM  = #DEMAND_AM#
             , DEMAND_MT  = #DEMAND_MT#
             , UPDUSR_ID  = #S_USER_ID#
             , UPDT_DT    = SYSDATE
         WHERE YEAR             = #YEAR#
           AND BUDGET_SE        = #BUDGET_SE#
           AND BSNS_SE          = #BSNS_SE#
           AND BALC_SE          = #BALC_SE#
           AND BSNS_CODE        = #BSNS_CODE#
           AND DEPT_CODE        = #DEPT_CODE#
           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
           AND SN               = #SN#
    </update>
    
    
    <!-- 수시배정요구삭제 -->
    <delete id="BDG060201DAO.deleteAnytmAsignDemand" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG060201DAO.deleteAnytmAsignDemand*/]]>
        DELETE TBBDG_BUDGET_ASIGN
         WHERE YEAR             = #YEAR#
           AND BUDGET_SE        = #BUDGET_SE#
           AND BSNS_SE          = #BSNS_SE#
           AND BALC_SE          = #BALC_SE#
           AND BSNS_CODE        = #BSNS_CODE#
           AND DEPT_CODE        = #DEPT_CODE#
           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
           AND SN               = #SN#
    </delete>
	
	
	<!-- 예산계정과목코드 목록조회 -->
    <select id="BDG060201DAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG060201DAO.selectAcntCode*/]]>
        WITH EXECUT_BUDGET AS (
                SELECT t1.YEAR
                      ,t1.BSNS_SE
                      ,t1.BALC_SE
                      ,t2.UPPER_ACNT_CODE
                      ,t1.BUDGET_ACNT_CODE
                      ,t2.BUDGET_ACNT_NM
                      ,DECODE(t2.ACNT_LEVEL, '7', '4', t2.ACNT_LEVEL)               AS ACNT_LEVEL
                      ,t2.CHIT_PROCESS_AT
                FROM   (
                        SELECT YEAR
                              ,BSNS_SE
                              ,BALC_SE
                              ,BUDGET_ACNT_CODE
                        FROM   TBBDG_EXECUT_BUDGET
                        WHERE  1=1
                        <isNotEmpty property="YEAR"      prepend="AND    ">YEAR     = #YEAR#</isNotEmpty>
                        <isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE  = #BSNS_SE#</isNotEmpty>
                        <isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE  = #BALC_SE#</isNotEmpty>
                        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
                        GROUP BY YEAR
                                ,BSNS_SE
                                ,BALC_SE
                                ,BUDGET_ACNT_CODE
                       ) t1
                       INNER JOIN TBBDG_BUDGET_ACNT_CODE t2
                            ON t1.YEAR = t2.YEAR
                           AND t1.BSNS_SE = t2.BSNS_SE
                           AND t1.BALC_SE = t2.BALC_SE
                           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
                WHERE  1=1
                ORDER BY T1.YEAR
                        ,T1.BSNS_SE
                        ,T1.BALC_SE
                        ,T1.BUDGET_ACNT_CODE
        ), LV5_BUDGET AS (
            SELECT lv5.YEAR, lv5.BSNS_SE, lv5.BALC_SE, lv5.BUDGET_ACNT_CODE, lv5.BUDGET_ACNT_NM, lv5.ACNT_LEVEL, lv5.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv5
            WHERE  lv5.ACNT_LEVEL = '5'
            AND    EXISTS(
                SELECT *
                FROM   EXECUT_BUDGET
                WHERE  YEAR             = lv5.YEAR
                AND    BSNS_SE          = lv5.BSNS_SE
                AND    BALC_SE          = lv5.BALC_SE
                AND    BUDGET_ACNT_CODE = lv5.BUDGET_ACNT_CODE
            )
        ), LV4_BUDGET AS (
            SELECT lv4.YEAR, lv4.BSNS_SE, lv4.BALC_SE, lv4.BUDGET_ACNT_CODE, lv4.BUDGET_ACNT_NM, lv4.ACNT_LEVEL, lv4.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv4
            WHERE  lv4.ACNT_LEVEL IN ('4', '7')
            AND    (
                    lv4.BUDGET_ACNT_CODE IN (
                                             SELECT lv5.UPPER_ACNT_CODE
                                             FROM   LV5_BUDGET lv5
                                             WHERE  lv5.ACNT_LEVEL = '5'
                                             AND    lv5.YEAR       = lv4.YEAR
                                             AND    lv5.BSNS_SE    = lv4.BSNS_SE
                                             AND    lv5.BALC_SE    = lv4.BALC_SE
                                            )
                    OR
                    EXISTS (
                            SELECT *
                            FROM   EXECUT_BUDGET
                            WHERE  YEAR             = lv4.YEAR
                            AND    BSNS_SE          = lv4.BSNS_SE
                            AND    BALC_SE          = lv4.BALC_SE
                            AND    BUDGET_ACNT_CODE = lv4.BUDGET_ACNT_CODE
                           )
                   )
        ), LV3_BUDGET AS (
            SELECT lv3.YEAR, lv3.BSNS_SE, lv3.BALC_SE, lv3.BUDGET_ACNT_CODE, lv3.BUDGET_ACNT_NM, lv3.ACNT_LEVEL, lv3.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv3
            WHERE  lv3.ACNT_LEVEL = '3'
            AND    lv3.BUDGET_ACNT_CODE IN (
                                            SELECT lv4.UPPER_ACNT_CODE
                                            FROM   LV4_BUDGET lv4
                                            WHERE  lv4.ACNT_LEVEL IN ('4', '7')
                                            AND    lv4.YEAR       = lv3.YEAR
                                            AND    lv4.BSNS_SE    = lv3.BSNS_SE
                                            AND    lv4.BALC_SE    = lv3.BALC_SE
                                           )
        ), LV2_BUDGET AS (
            SELECT lv2.YEAR, lv2.BSNS_SE, lv2.BALC_SE, lv2.BUDGET_ACNT_CODE, lv2.BUDGET_ACNT_NM, lv2.ACNT_LEVEL, lv2.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv2
            WHERE  lv2.ACNT_LEVEL = '2'
            AND    lv2.BUDGET_ACNT_CODE IN (
                                            SELECT lv3.UPPER_ACNT_CODE
                                            FROM   LV3_BUDGET lv3
                                            WHERE  lv3.ACNT_LEVEL = '3'
                                            AND    lv3.YEAR       = lv2.YEAR
                                            AND    lv3.BSNS_SE    = lv2.BSNS_SE
                                            AND    lv3.BALC_SE    = lv2.BALC_SE
                                           )
        ), LV1_BUDGET AS (
            SELECT lv1.YEAR, lv1.BSNS_SE, lv1.BALC_SE, lv1.BUDGET_ACNT_CODE, lv1.BUDGET_ACNT_NM, lv1.ACNT_LEVEL, lv1.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv1
            WHERE  lv1.ACNT_LEVEL = '1'
            AND    lv1.BUDGET_ACNT_CODE IN (
                                            SELECT lv2.UPPER_ACNT_CODE
                                            FROM   LV2_BUDGET lv2
                                            WHERE  lv2.ACNT_LEVEL = '2'
                                            AND    lv2.YEAR       = lv1.YEAR
                                            AND    lv2.BSNS_SE    = lv1.BSNS_SE
                                            AND    lv2.BALC_SE    = lv1.BALC_SE
                                           )
        ), VWBDG_BUDGET_ACNT_CODE AS (
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV1_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV2_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV3_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV4_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV5_BUDGET
        ), BUDGET_ACNT_TREE AS (
            SELECT ROWNUM AS RNUM
                  ,t1.YEAR
                  ,t1.BSNS_SE
                  ,t1.BALC_SE
                  ,t1.BUDGET_ACNT_CODE
                  ,t1.BUDGET_ACNT_NM
                  ,(CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
                         WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
                         ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| t1.BUDGET_ACNT_NM              AS BUDGET_ACNT_NM2
                  ,SYS_CONNECT_BY_PATH((CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
                                             WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
                                             ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)                                                END) ||'.'|| t1.BUDGET_ACNT_NM,'|')||'|'    AS ACNT_NM_PATH
                  ,SYS_CONNECT_BY_PATH(t1.BUDGET_ACNT_NM,'|')||'|'                                                                                  AS ACNT_NM_PATH2
                  ,DECODE(t1.ACNT_LEVEL,'7','4',t1.ACNT_LEVEL)                                                                                      AS ACNT_LEVEL
                  ,t1.UPPER_ACNT_CODE
            FROM   VWBDG_BUDGET_ACNT_CODE t1
            START WITH t1.UPPER_ACNT_CODE IS NULL
            CONNECT BY PRIOR t1.BUDGET_ACNT_CODE = t1.UPPER_ACNT_CODE
            ORDER SIBLINGS BY t1.YEAR
                             ,t1.BSNS_SE
                             ,t1.BALC_SE
                             ,t1.BUDGET_ACNT_CODE
        )
        SELECT s1.YEAR                              AS YEAR
              ,s1.BSNS_SE                           AS BSNS_SE
              ,s1.BALC_SE                           AS BALC_SE
              ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
              ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
              ,s1.BUDGET_ACNT_NM2                   AS BUDGET_ACNT_NM2
              ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
              ,s1.UPPER_ACNT_CODE                   AS UPPER_ACNT_CODE
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
              ,        SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)-1)
               ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)-1)
               ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)-1)
               ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)-1)
               ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)-1)           AS BUDGET_ACNT_TREE_NM
        FROM   BUDGET_ACNT_TREE s1
        ORDER BY s1.RNUM
    </select>
	
    
    <!-- 부기코드 목록조회 -->
    <select id="BDG060201DAO.selectBukipCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
    <![CDATA[/*BDG060201DAO.selectBukipCode*/]]>
        SELECT t1.YEAR
              ,t1.BSNS_SE
              ,t1.BALC_SE
              ,t1.DETAIL_BSNS_CODE
              ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
              ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
              ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
              ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
              ,t1.DEPT_CODE                                                                                                                                             
              ,t7.DEPT_NM                                                                                                                                               
              ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
              ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
              ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
              ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
              ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
              ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
              ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
              ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
              ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
              ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
              ,NVL(t9.LEGACY_ASIGN_AM, 0)                                                                                                                               AS LEGACY_ASIGN_AM
              ,NVL(t1.BUDGET_AM, 0) - NVL(t9.LEGACY_ASIGN_AM, 0)                                                                                                        AS BUDGET_ASIGN_BLCE
              ,NVL(t9.LEGACY_ASIGN_AM, 0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                      AS ASIGN_EXCUT_BLCE
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
              ,NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
              ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
              ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
              ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
              ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
              ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
              ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
        FROM   (
                SELECT YEAR
                      ,BSNS_SE
                      ,BALC_SE
                      ,DETAIL_BSNS_CODE
                      ,DEPT_CODE
                      ,BUDGET_ACNT_CODE
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                                                   AS ORI_BUDGET_AM
                      ,SUM(NVL(CYFD_BUDGET,0))                                                                                                                          AS CYFD_BUDGET_AM
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(CYFD_BUDGET,0) + NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                              AS BUDGET_AM
                      ,MAX(EXPNDTR_POSBL_AT)                                                                                                                            AS EXPNDTR_POSBL_AT 
                FROM   TBBDG_EXECUT_BUDGET
                WHERE  1=1
                <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
                <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
                <isNotEmpty property="BALC_SE"          prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
                <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
                <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
                GROUP BY YEAR
                        ,BSNS_SE
                        ,BALC_SE
                        ,DETAIL_BSNS_CODE
                        ,DEPT_CODE
                        ,BUDGET_ACNT_CODE
               ) t1
               LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
                    ON t1.YEAR             = t2.YEAR
                   AND t1.BSNS_SE          = t2.BSNS_SE
                   AND t1.BALC_SE          = t2.BALC_SE
                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
                    ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                     , BSNS_SE
                                     , BALC_SE
                                     , BSNS_CODE
                                     , DEPT_CODE
                                     , BUDGET_ACNT_CODE
                                     , SUM(NVL(CYFD_BUDGET_AMT, 0))           AS CYFD_BUDGET_AMT
                                     , SUM(NVL(ORIBDGT_AMT, 0))               AS ORIBDGT_AMT
                                     , SUM(NVL(RVSPBGT_AMT, 0))               AS RVSPBGT_AMT
                                     , SUM(NVL(DVR_AMT, 0))                   AS DVR_AMT
                                     , SUM(NVL(EXECUT_BUDGET_AM, 0))          AS EXECUT_BUDGET_AM
                                     , SUM(NVL(CAUSE_ACTION_AMOUNT, 0))       AS CAUSE_ACTION_AMOUNT
                                     , SUM(NVL(CAUSE_ACTION_DECSN_AMOUNT, 0)) AS CAUSE_ACTION_DECSN_AMOUNT
                                     , SUM(NVL(CAUSE_ACTION_JAN_AMOUNT, 0))   AS CAUSE_ACTION_JAN_AMOUNT
                                     , SUM(NVL(EXP_DSN_AMOUNT, 0))            AS EXP_DSN_AMOUNT
                                     , SUM(NVL(DEBT_AMT, 0))                  AS DEBT_AMT
                                     , SUM(NVL(DECSN_AMOUNT, 0))              AS DECSN_AMOUNT
                                     , SUM(NVL(ASIGN_AMOUNT, 0))              AS ASIGN_AMOUNT
                                     , SUM(NVL(MONTH_CAUSE_ACTION_AMOUNT, 0)) AS MONTH_CAUSE_ACTION_AMOUNT
                                     , SUM(NVL(MONTH_DECSN_AMOUNT, 0))        AS MONTH_DECSN_AMOUNT
                                     , SUM(NVL(EXECUT_BUDGET_JAN_AM, 0))      AS EXECUT_BUDGET_JAN_AM
                                     , SUM(NVL(ASIGN_JAN_AMOUNT, 0))          AS ASIGN_JAN_AMOUNT
                                  FROM VWACC_EXP_DSN_MASTR
                                GROUP BY BUDGET_YEAR
                                       , BSNS_SE
                                       , BALC_SE
                                       , BSNS_CODE
                                       , DEPT_CODE
                                       , BUDGET_ACNT_CODE
                               ) t5
                    ON t1.YEAR              = t5.BUDGET_YEAR
                   AND t1.BSNS_SE           = t5.BSNS_SE
                   AND t1.BALC_SE           = t5.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
                   AND t1.DETAIL_BSNS_CODE  = t5.BSNS_CODE
                   AND t1.DEPT_CODE         = t5.DEPT_CODE
               LEFT OUTER JOIN TBHRM_DEPT t7
                    ON t1.DEPT_CODE = t7.DEPT_CODE
               LEFT OUTER JOIN (
                                SELECT YEAR
                                     , BSNS_SE
                                     , BALC_SE
                                     , BSNS_CODE
                                     , DEPT_CODE
                                     , BUDGET_ACNT_CODE
                                     , NVL(SUM(DEMAND_AM), 0)
                                     , NVL(SUM(DCSN_AM), 0) AS LEGACY_ASIGN_AM
                                  FROM TBBDG_BUDGET_ASIGN
                                 WHERE ASIGN_TYPE != '88'
                                GROUP BY YEAR
                                       , BSNS_SE
                                       , BALC_SE
                                       , BSNS_CODE
                                       , DEPT_CODE
                                       , BUDGET_ACNT_CODE
                                HAVING MIN(DCSN_DE) IS NOT NULL
                               ) t9
                    ON t1.YEAR              = t9.YEAR
                   AND t1.BSNS_SE           = t9.BSNS_SE
                   AND t1.BALC_SE           = t9.BALC_SE
                   AND t1.DETAIL_BSNS_CODE  = t9.BSNS_CODE
                   AND t1.DEPT_CODE         = t9.DEPT_CODE
                   AND t1.BUDGET_ACNT_CODE  = t9.BUDGET_ACNT_CODE
        WHERE  1=1
        ORDER BY t1.YEAR
                ,t1.BSNS_SE
                ,t1.BALC_SE
                ,t1.BUDGET_ACNT_CODE
                ,t1.DETAIL_BSNS_CODE
                ,t1.DEPT_CODE
    </select>
	
    
    <!-- 부기코드 목록조회 -->
    <select id="BDG060201DAO.selectBukipCodeOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
    <![CDATA[/*BDG060201DAO.selectBukipCodeOld*/]]>
        SELECT t1.YEAR
              ,t1.BSNS_SE
              ,t1.BALC_SE
              ,t1.DETAIL_BSNS_CODE
              ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
              ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
              ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
              ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
              ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
              ,t1.DEPT_CODE                                                                                                                                             
              ,t7.DEPT_NM                                                                                                                                               
              ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
              ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
              ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
              ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
              ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
              ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
              ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
              ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
              ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
              ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
              ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
              ,NVL(t9.LEGACY_ASIGN_AM, 0)                                                                                                                               AS LEGACY_ASIGN_AM
              ,NVL(t1.BUDGET_AM, 0) - NVL(t9.LEGACY_ASIGN_AM, 0)                                                                                                        AS BUDGET_ASIGN_BLCE
              ,NVL(t9.LEGACY_ASIGN_AM, 0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                      AS ASIGN_EXCUT_BLCE
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
              ,NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
              ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC2
              ,NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC2
              ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
              ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
              ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
              ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
              ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
              ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
        FROM   (
                SELECT YEAR
                      ,BSNS_SE
                      ,BALC_SE
                      ,DETAIL_BSNS_CODE
                      ,DEPT_CODE
                      ,BUDGET_ACNT_CODE
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                                                   AS ORI_BUDGET_AM
                      ,SUM(NVL(CYFD_BUDGET,0))                                                                                                                          AS CYFD_BUDGET_AM
                      ,SUM(NVL(ORIBDGT,0)
                           + NVL(RVSPBGT_1_ODR,0)
                           + NVL(RVSPBGT_2_ODR,0)
                           + NVL(RVSPBGT_3_ODR,0)
                           + NVL(RVSPBGT_4_ODR,0)
                           + NVL(RVSPBGT_5_ODR,0)
                           + NVL(RVSPBGT_6_ODR,0)
                           + NVL(RVSPBGT_7_ODR,0)
                           + NVL(CYFD_BUDGET,0) + NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                              AS BUDGET_AM
                      ,MAX(EXPNDTR_POSBL_AT)                                                                                                                            AS EXPNDTR_POSBL_AT 
                FROM   TBBDG_EXECUT_BUDGET
                WHERE  1=1
                <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
                <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
                <isNotEmpty property="BALC_SE"          prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
                <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
                <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
                GROUP BY YEAR
                        ,BSNS_SE
                        ,BALC_SE
                        ,DETAIL_BSNS_CODE
                        ,DEPT_CODE
                        ,BUDGET_ACNT_CODE
               ) t1
               LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
                    ON t1.YEAR             = t2.YEAR
                   AND t1.BSNS_SE          = t2.BSNS_SE
                   AND t1.BALC_SE          = t2.BALC_SE
                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
                    ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BUDGET_ACNT_CODE
                                      ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT
                                      ,NVL(SUM(DEBT_AMT           ),0)  AS DEBT_AMT
                                      ,NVL(SUM(DECSN_AMOUNT       ),0)  AS DECSN_AMOUNT
                                FROM   VHACC_EXP_DSN_MASTR
                                WHERE  1=1
                                <isNotEmpty property="MONTH" prepend="AND">
                                    SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
                                </isNotEmpty>
                                <isEmpty property="MONTH" prepend="AND">
                                    CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
                                </isEmpty>
                                GROUP BY BUDGET_YEAR
                                        ,BSNS_SE
                                        ,BALC_SE
                                        ,BUDGET_ACNT_CODE
                               ) t5
                    ON t1.YEAR              = t5.BUDGET_YEAR
                   AND t1.BSNS_SE           = t5.BSNS_SE
                   AND t1.BALC_SE           = t5.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
               LEFT OUTER JOIN (
                                SELECT BUDGET_YEAR
                                      ,BSNS_SE
                                      ,BALC_SE
                                      ,BUDGET_ACNT_CODE
                                      ,NVL(SUM(ORI_DECSN_AMOUNT  ),0)  AS ORI_DECSN_AMOUNT
                                      ,NVL(SUM(CYFD_DECSN_AMOUNT ),0)  AS CYFD_DECSN_AMOUNT
                                      ,NVL(SUM(DECSN_AMOUNT      ),0)  AS DECSN_AMOUNT
                                FROM   (
                                        SELECT DECSN_NO
                                              ,CPTAL_EXPNDTR_ACNTBK_DE
                                              ,ANACT_KND
                                              ,CYFD_SE
                                              ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
                                                    WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
                                                    ELSE BUDGET_YEAR
                                               END                                       AS BUDGET_YEAR
                                              ,BSNS_SE
                                              ,BALC_SE
                                              ,BUDGET_ACNT_CODE
                                              ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
                                              ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
                                              ,DECSN_AMOUNT               AS DECSN_AMOUNT
                                        FROM   TBACC_EXP_DSN_MASTR
                                        WHERE  1=1
                                       )
                                WHERE  1=1
                                GROUP BY BUDGET_YEAR
                                        ,BSNS_SE
                                        ,BALC_SE
                                        ,BUDGET_ACNT_CODE
                               ) t6
                    ON t1.YEAR              = t6.BUDGET_YEAR
                   AND t1.BSNS_SE           = t6.BSNS_SE
                   AND t1.BALC_SE           = t6.BALC_SE
                   AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBHRM_DEPT t7
                    ON t1.DEPT_CODE = t7.DEPT_CODE
               LEFT OUTER JOIN (
                                SELECT YEAR
                                     , BSNS_SE
                                     , BALC_SE
                                     , BSNS_CODE
                                     , DEPT_CODE
                                     , BUDGET_ACNT_CODE
                                     , NVL(SUM(DEMAND_AM), 0)
                                     , NVL(SUM(DCSN_AM), 0) AS LEGACY_ASIGN_AM
                                  FROM TBBDG_BUDGET_ASIGN
                                GROUP BY YEAR
                                       , BSNS_SE
                                       , BALC_SE
                                       , BSNS_CODE
                                       , DEPT_CODE
                                       , BUDGET_ACNT_CODE
                                HAVING MIN(DCSN_DE) IS NOT NULL
                               ) t9
                    ON t1.YEAR              = t9.YEAR
                   AND t1.BSNS_SE           = t9.BSNS_SE
                   AND t1.BALC_SE           = t9.BALC_SE
                   AND t1.DETAIL_BSNS_CODE  = t9.BSNS_CODE
                   AND t1.DEPT_CODE         = t9.DEPT_CODE
                   AND t1.BUDGET_ACNT_CODE  = t9.BUDGET_ACNT_CODE
        WHERE  1=1
        ORDER BY t1.YEAR
                ,t1.BSNS_SE
                ,t1.BALC_SE
                ,t1.BUDGET_ACNT_CODE
                ,t1.DETAIL_BSNS_CODE
                ,t1.DEPT_CODE
    </select>
	
	
</sqlMap>