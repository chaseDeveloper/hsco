<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030202P3_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 복합지표 실적 목록조회 -->
	<select id="ACH030202P3DAO.mainSearchList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.EVL_YEAR
		       , A.ODR_SE
		       , A.IX_CODE
		       , A.CMPND_SE
		       , A.CMPND_CODE
		       , A.WGHTVAL
		       , A.RM
		       , DECODE(B.ORGNZT_CODE, NULL, #ORGNZT_CODE#, B.ORGNZT_CODE) AS ORGNZT_CODE
		       , DECODE(B.ACMSLT_MT, NULL, #ACMSLT_MT#, B.ACMSLT_MT)       AS ACMSLT_MT
		       , NVL(B.GOALVAL,0) AS GOALVAL
		       , NVL(B.ACMSLTVAL,0) AS ACMSLTVAL
		       , NVL(B.ACMSLTVAL_RT,0) AS ACMSLTVAL_RT
		FROM   TBACH_KPI_CMPND A
		       LEFT OUTER JOIN TBACH_KPI_CMPND_ACM B
		                    ON A.EVL_YEAR = B.EVL_YEAR
		                   AND A.ODR_SE   = B.ODR_SE
		                   AND A.IX_CODE  = B.IX_CODE
		                   AND A.CMPND_SE = B.CMPND_SE
		                   AND A.CMPND_CODE = B.CMPND_CODE
		                   AND B.ORGNZT_CODE = #ORGNZT_CODE#
		                   AND B.ACMSLT_MT   = #ACMSLT_MT#
		WHERE 1=1
		  AND A.EVL_YEAR = #EVL_YEAR#
		  AND A.ODR_SE   = #ODR_SE#
		  AND A.IX_CODE  = #IX_CODE#
    </select>
    
    <!-- 복합지표실적 등록/수정 -->
    <update id="ACH030202P3DAO.saveU" parameterClass="java.util.HashMap" >
           MERGE INTO TBACH_KPI_CMPND_ACM
				  USING DUAL
				  ON (    EVL_YEAR = #EVL_YEAR# 
				      AND ODR_SE = #ODR_SE#
				      AND IX_CODE = #IX_CODE#
				      AND CMPND_SE = #CMPND_SE#
				      AND CMPND_CODE = #CMPND_CODE#
				      AND ORGNZT_CODE = #ORGNZT_CODE#
				      AND ACMSLT_MT = #ACMSLT_MT#
				     )
				  WHEN MATCHED THEN
				  UPDATE SET 
				  			  GOALVAL       = #GOALVAL#
				  			, ACMSLTVAL     = #ACMSLTVAL#
				  			, ACMSLTVAL_RT  = #ACMSLTVAL_RT#
				  			, UPDUSR_ID     = #S_USER_ID#
				  			, UPDT_DT       = SYSDATE
				  WHEN NOT MATCHED THEN 
				  INSERT(
                           EVL_YEAR
                         , ODR_SE
                         , IX_CODE
                         , ORGNZT_CODE
                         , ACMSLT_MT
                         , CMPND_SE
                         , CMPND_CODE
                         , GOALVAL
                         , ACMSLTVAL
                         , ACMSLTVAL_RT
                         , REGISTER_ID
                         , REGIST_DT
                         , UPDUSR_ID
                         , UPDT_DT
				            
				  )VALUES(
                           #EVL_YEAR#
                         , #ODR_SE#
                         , #IX_CODE#
                         , #ORGNZT_CODE#
                         , #ACMSLT_MT#
                         , #CMPND_SE#
                         , #CMPND_CODE#
                         , #GOALVAL#
                         , #ACMSLTVAL#
                         , #ACMSLTVAL_RT#
				         , #S_USER_ID#
				         , SYSDATE
				         , #S_USER_ID#
				         , SYSDATE
				  )
    </update>      
    
    <!-- 복합지표 실적 삭제 -->
    <delete id="ACH030202P3DAO.saveD" parameterClass="java.util.HashMap" >
<!--         DELETE FROM TBACH_KPI_CMPND_ACM
        WHERE 1=1
          AND EVL_YEAR    = #EVL_YEAR#
          AND ODR_SE      = #ODR_SE#
          AND IX_CODE     = #IX_CODE#
          AND ORGNZT_CODE = #ORGNZT_CODE#
          AND ACMSLT_MT   = #ACMSLT_MT#
          AND CMPND_SE    = #CMPND_SE#
          AND CMPND_CODE  = #CMPND_CODE#   -->  
    </delete>
    
    <!-- 계량지표배정실적 수정/신규 -->
    <update id="ACH030202P3DAO.qyevalDstbAcmsltU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_DSTB_ACMSLT
		USING DUAL ON (  
		                  EVL_YEAR = #EVL_YEAR#
				      AND ODR_SE = #ODR_SE#
				      AND IX_CODE = #IX_CODE#
				      AND ORGNZT_CODE = #ORGNZT_CODE#
				      AND ACMSLT_YY = #EVL_YEAR#
				      AND ACMSLT_MT = #ACMSLT_MT#
				      )
		WHEN MATCHED THEN
			UPDATE SET 
					  ACMSLT_VAL   = #MT_ACMSLT_VAL#     <!-- 월실적 -->
					, RESULT_SCORE = #MT_RESULT_SCORE#   <!-- 월설과점수 -->
					, UPDUSR_ID    = #S_USER_ID#
					, UPDT_DT 	   = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (
				  EVL_YEAR
				, ODR_SE
				, IX_CODE
				, ORGNZT_CODE
				, ACMSLT_YY
				, ACMSLT_MT
				, ACMSLT_VAL
				, RESULT_SCORE
				, REGISTER_ID
				, REGIST_DT
				, UPDUSR_ID
				, UPDT_DT	
				)
			VALUES	(
				 #EVL_YEAR#
				, #ODR_SE#
				, #IX_CODE#
				, #ORGNZT_CODE#
				, #EVL_YEAR#
				, #ACMSLT_MT#
				, #MT_ACMSLT_VAL#	<!-- 월실적 -->
				, #MT_RESULT_SCORE# <!-- 월설과점수 -->
				, #S_USER_ID#
				, SYSDATE
				, #S_USER_ID#
				, SYSDATE
			)
    </update>
    
    <!-- 지표/조직별 배정 결과  등록(수정) -->
    <update id="ACH030202P3DAO.qyevalResultU" parameterClass="java.util.HashMap" >
		UPDATE TBACH_QYEVAL_RESULT 
		   SET SM_ACMSLTVAL =  
		       <!-- 합계실적치 -->
               CASE #ACMSLT_INPUT_TY#
		           WHEN '001'   <!-- 누계합산 -->
		           THEN 
		               (SELECT SUM(k.ACMSLT_VAL) 
		                 FROM TBACH_QYEVAL_DSTB_ACMSLT k 
		                WHERE 1=1   
                          AND k.EVL_YEAR = #EVL_YEAR#
                          AND k.ODR_SE = #ODR_SE#
                          AND k.IX_CODE = #IX_CODE#                          
                          AND k.ORGNZT_CODE = #ORGNZT_CODE#
                        GROUP BY k.EVL_YEAR,k.ODR_SE,k.IX_CODE,k.ORGNZT_CODE
		               ) 
		           WHEN '002' <!-- 누계평균 -->
		           THEN 
		               (SELECT AVG(k.ACMSLT_VAL) 
		                 FROM TBACH_QYEVAL_DSTB_ACMSLT k 
		                WHERE 1=1
                          AND k.EVL_YEAR = #EVL_YEAR#
                          AND k.ODR_SE = #ODR_SE#
                          AND k.IX_CODE = #IX_CODE#                          
                          AND k.ORGNZT_CODE = #ORGNZT_CODE#
		                  AND k.ACMSLT_VAL IS NOT NULL
                     GROUP BY k.EVL_YEAR,k.ODR_SE,k.IX_CODE,k.ORGNZT_CODE                          
           	            )
		           WHEN '003' <!--  누계실적치 -->
		           THEN            	               
		               (SELECT * 
                          FROM (SELECT k.ACMSLT_VAL 
                                  FROM TBACH_QYEVAL_DSTB_ACMSLT k 
                                 WHERE 1=1
                                   AND k.EVL_YEAR = #EVL_YEAR#
                                   AND k.ODR_SE = #ODR_SE#
                                   AND k.IX_CODE = #IX_CODE#                          
                                   AND k.ORGNZT_CODE = #ORGNZT_CODE#
                                   AND k.ACMSLT_VAL IS NOT NULL
                                 ORDER BY k.ACMSLT_YY DESC,TO_NUMBER(k.ACMSLT_MT) DESC ) 
	                       <![CDATA[	
			                WHERE ROWNUM<=1 
			               ]]> 
                        )			                         	                
		           ELSE  0 END
		      , LAST_RESULT_SCORE =
				<!-- 최종결과점수 -->		      
                CASE #ACHIV_RT_CALC_FRMLA# 
		           WHEN '001' <!--  실적치/목표치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_GOAL#),0),0,0,
		                       TO_NUMBER(#FINAL_ACMSLT#) / TO_NUMBER(#FINAL_GOAL#) )
		                       * TO_NUMBER(#EVL_WGHTVAL#) 
		                  FROM DUAL
		                 WHERE 1=1 
		               ) 
		           WHEN '002' <!--  목표치/실적치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_ACMSLT#),0),0,1,TO_NUMBER(#FINAL_GOAL#) / TO_NUMBER(#FINAL_ACMSLT#) )
		                       * TO_NUMBER(#EVL_WGHTVAL#)   
		                  FROM DUAL
		                 WHERE 1=1
		               ) 
       			   ELSE 0 END
		      , ACMSLTVAL_RT =
				<!-- 달성율 -->		      
                CASE #ACHIV_RT_CALC_FRMLA# 
		           WHEN '001' <!--  실적치/목표치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_GOAL#),0),0,0,
		                       TO_NUMBER(#FINAL_ACMSLT#) / TO_NUMBER(#FINAL_GOAL#) * 100 )
		                  FROM DUAL
		                 WHERE 1=1 
		               ) 
		           WHEN '002' <!--  목표치/실적치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_ACMSLT#),0),0,1,
		                       TO_NUMBER(#FINAL_GOAL#) / TO_NUMBER(#FINAL_ACMSLT#) * 100)		                         
		                  FROM DUAL
		                 WHERE 1=1
		               ) 
       			   ELSE 0 END       			   
			  , UPDUSR_ID 	= #S_USER_ID#
			  , UPDT_DT 	= SYSDATE
	      WHERE 1=1
            AND EVL_YEAR = #EVL_YEAR#
	        AND ODR_SE = #ODR_SE#
	        AND IX_CODE = #IX_CODE#
	        AND ORGNZT_CODE = #ORGNZT_CODE#
    </update>       

</sqlMap>