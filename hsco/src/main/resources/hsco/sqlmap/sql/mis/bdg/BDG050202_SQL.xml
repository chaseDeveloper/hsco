<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG050202_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 집행계획표 조회 -->
	<select id="BDG050202DAO.selectBudgetExcutPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG050202DAO.selectBudgetExcutPlan*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.BUDGET_ACNT_CODE
		      ,t1.BUDGET_ACNT_NM
		      ,NVL(t1.EXECUT_AM,0)              AS EXECUT_AM
		      ,NVL(t1.PLAN_AM,0)                AS PLAN_AM
		      
		      ,NVL(t2.ASIGN_AM, 0) 				AS ASIGN_AM
		      ,NVL(t3.DECSN_AM, 0) 				AS DECSN_AM
		      ,ROUND(NVL(T3.DECSN_AM, 0) /
		             DECODE(NVL(T2.ASIGN_AM, 0), 0, 1, T2.ASIGN_AM) * 100
		            ,2) AS RATIO_
		       ,CASE
		         WHEN NVL(T2.ASIGN_AM, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM, 0) / T2.ASIGN_AM * 100 ,2)
		        END AS RATIO
       
		      ,NVL(t2.ASIGN_AM01, 0) AS ASIGN_AM01
		      ,NVL(t3.DECSN_AM01, 0) AS DECSN_AM01
		      ,ROUND(NVL(T3.DECSN_AM01, 0) /
		             DECODE(NVL(T2.ASIGN_AM01, 0), 0, 1, T2.ASIGN_AM01) * 100
		            ,2) AS RATIO_01
		            
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM01, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM01, 0) / T2.ASIGN_AM01 * 100 ,2)
		       END AS RATIO01
		       
		      ,NVL(t2.ASIGN_AM02, 0) AS ASIGN_AM02
		      ,NVL(t3.DECSN_AM02, 0) AS DECSN_AM02
		      ,ROUND(NVL(T3.DECSN_AM02, 0) /
		             DECODE(NVL(T2.ASIGN_AM02, 0), 0, 1, T2.ASIGN_AM02) * 100
		            ,2) AS RATIO_02
		      
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM02, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM02, 0) / T2.ASIGN_AM02 * 100 ,2)
		       END AS RATIO02
		        
		      ,NVL(t2.ASIGN_AM03, 0) AS ASIGN_AM03
		      ,NVL(t3.DECSN_AM03, 0) AS DECSN_AM03
		      ,ROUND(NVL(T3.DECSN_AM03, 0) /
		             DECODE(NVL(T2.ASIGN_AM03, 0), 0, 1, T2.ASIGN_AM03) * 100
		            ,2) AS RATIO_03
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM03, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM03, 0) / T2.ASIGN_AM03 * 100 ,2)
		       END AS RATIO03
		        
		      ,NVL(t2.ASIGN_AM04, 0) AS ASIGN_AM04
		      ,NVL(t3.DECSN_AM04, 0) AS DECSN_AM04
		      ,ROUND(NVL(T3.DECSN_AM04, 0) /
		             DECODE(NVL(T2.ASIGN_AM04, 0), 0, 1, T2.ASIGN_AM04) * 100
		            ,2) AS RATIO_04
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM04, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM04, 0) / T2.ASIGN_AM04 * 100 ,2)
		       END AS RATIO04
		       
		      ,NVL(t2.ASIGN_AM05, 0) AS ASIGN_AM05
		      ,NVL(t3.DECSN_AM05, 0) AS DECSN_AM05
		      ,ROUND(NVL(T3.DECSN_AM05, 0) /
		             DECODE(NVL(T2.ASIGN_AM05, 0), 0, 1, T2.ASIGN_AM05) * 100
		            ,2) AS RATIO_05
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM05, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM05, 0) / T2.ASIGN_AM05 * 100 ,2)
		       END AS RATIO05
		        
		      ,NVL(t2.ASIGN_AM06, 0) AS ASIGN_AM06
		      ,NVL(t3.DECSN_AM06, 0) AS DECSN_AM06
		      ,ROUND(NVL(T3.DECSN_AM06, 0) /
		             DECODE(NVL(T2.ASIGN_AM06, 0), 0, 1, T2.ASIGN_AM06) * 100
		            ,2) AS RATIO_06
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM06, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM06, 0) / T2.ASIGN_AM06 * 100 ,2)
		       END AS RATIO06
		        
		      ,NVL(t2.ASIGN_AM07, 0) AS ASIGN_AM07
		      ,NVL(t3.DECSN_AM07, 0) AS DECSN_AM07
		      ,ROUND(NVL(T3.DECSN_AM07, 0) /
		             DECODE(NVL(T2.ASIGN_AM07, 0), 0, 1, T2.ASIGN_AM07) * 100
		            ,2) AS RATIO_07
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM07, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM07, 0) / T2.ASIGN_AM07 * 100 ,2)
		       END AS RATIO07
		        
		      ,NVL(t2.ASIGN_AM08, 0) AS ASIGN_AM08
		      ,NVL(t3.DECSN_AM08, 0) AS DECSN_AM08
		      ,ROUND(NVL(T3.DECSN_AM08, 0) /
		             DECODE(NVL(T2.ASIGN_AM08, 0), 0, 1, T2.ASIGN_AM08) * 100
		            ,2) AS RATIO_08
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM08, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM08, 0) / T2.ASIGN_AM08 * 100 ,2)
		       END AS RATIO08
		        
		      ,NVL(t2.ASIGN_AM09, 0) AS ASIGN_AM09
		      ,NVL(t3.DECSN_AM09, 0) AS DECSN_AM09
		      ,ROUND(NVL(T3.DECSN_AM09, 0) /
		             DECODE(NVL(T2.ASIGN_AM09, 0), 0, 1, T2.ASIGN_AM09) * 100
		            ,2) AS RATIO_09
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM09, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM09, 0) / T2.ASIGN_AM09 * 100 ,2)
		       END AS RATIO09
		        
		      ,NVL(t2.ASIGN_AM10, 0) AS ASIGN_AM10
		      ,NVL(t3.DECSN_AM10, 0) AS DECSN_AM10
		      ,ROUND(NVL(T3.DECSN_AM10, 0) /
		             DECODE(NVL(T2.ASIGN_AM10, 0), 0, 1, T2.ASIGN_AM10) * 100
		            ,2) AS RATIO_10
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM10, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM10, 0) / T2.ASIGN_AM10 * 100 ,2)
		       END AS RATIO10
		        
		      ,NVL(t2.ASIGN_AM11, 0) AS ASIGN_AM11
		      ,NVL(t3.DECSN_AM11, 0) AS DECSN_AM11
		      ,ROUND(NVL(T3.DECSN_AM11, 0) /
		             DECODE(NVL(T2.ASIGN_AM11, 0), 0, 1, T2.ASIGN_AM11) * 100
		            ,2) AS RATIO_11
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM11, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM11, 0) / T2.ASIGN_AM11 * 100 ,2)
		       END AS RATIO11
		        
		      ,NVL(t2.ASIGN_AM12, 0) AS ASIGN_AM12
		      ,NVL(t3.DECSN_AM12, 0) AS DECSN_AM12
		      ,ROUND(NVL(T3.DECSN_AM12, 0) /
		             DECODE(NVL(T2.ASIGN_AM12, 0), 0, 1, T2.ASIGN_AM12) * 100
		            ,2) AS RATIO_12
		      ,CASE
		         WHEN NVL(T2.ASIGN_AM12, 0) = 0 THEN NULL
		         ELSE
		          ROUND(NVL(T3.DECSN_AM12, 0) / T2.ASIGN_AM12 * 100 ,2)
		       END AS RATIO12
		       
		FROM   (
		        SELECT s1.YEAR
		              ,s1.BSNS_SE
		              ,s1.BALC_SE
		              ,s1.BUDGET_ACNT_CODE
		              ,MAX(CASE WHEN s2.ACNT_LEVEL &lt; '4' THEN SUBSTR(s2.BUDGET_ACNT_CODE, 1, 3)
		                        WHEN SUBSTR(s2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(s2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(s2.BUDGET_ACNT_CODE, 4, 2)
		                        ELSE SUBSTR(s2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(s2.BUDGET_ACNT_CODE, 4) END) ||'.'|| MAX(s2.BUDGET_ACNT_NM)                                                             AS BUDGET_ACNT_NM
		              ,SUM(NVL(s1.ORIBDGT,0)
		                   +NVL(s1.RVSPBGT_1_ODR,0)
		                   +NVL(s1.RVSPBGT_2_ODR,0)
		                   +NVL(s1.RVSPBGT_3_ODR,0)
		                   +NVL(s1.RVSPBGT_4_ODR,0)
		                   +NVL(s1.RVSPBGT_5_ODR,0)
		                   +NVL(s1.RVSPBGT_6_ODR,0)
		                   +NVL(s1.RVSPBGT_7_ODR,0)
		                   +NVL(s1.TRSF_AM,0)+NVL(s1.MVMN_AM,0)+NVL(s1.BUKIP_MVMN_AM,0)+NVL(s1.DVR_AM,0)+NVL(s1.RSVFND_REQST_AM,0))  AS EXECUT_AM
		              ,SUM(NVL(s1.ORIBDGT,0)
		                   +NVL(s1.RVSPBGT_1_ODR,0)
		                   +NVL(s1.RVSPBGT_2_ODR,0)
		                   +NVL(s1.RVSPBGT_3_ODR,0)
		                   +NVL(s1.RVSPBGT_4_ODR,0)
		                   +NVL(s1.RVSPBGT_5_ODR,0)
		                   +NVL(s1.RVSPBGT_6_ODR,0)
		                   +NVL(s1.RVSPBGT_7_ODR,0))                AS PLAN_AM
		        FROM   TBBDG_EXECUT_BUDGET s1
		               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE s2
		                    ON s1.YEAR = s2.YEAR
		                   AND s1.BSNS_SE = s2.BSNS_SE
		                   AND s1.BALC_SE = s2.BALC_SE
		                   AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		               WHERE 1=1
		        <isNotEmpty property="DEPT_CODE">
		             <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
		               	s1.DEPT_CODE = #DEPT_CODE#
		             </isNotEqual>
		        </isNotEmpty>
		               
		        GROUP BY s1.YEAR
		                ,s1.BSNS_SE
		                ,s1.BALC_SE
		                ,s1.BUDGET_ACNT_CODE
		       ) t1
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,SUM(ASIGN_AM)                               AS ASIGN_AM
		                              ,SUM(DECODE(ASIGN_MT, '01', ASIGN_AM, 0))    AS ASIGN_AM01
		                              ,SUM(DECODE(ASIGN_MT, '02', ASIGN_AM, 0))    AS ASIGN_AM02
		                              ,SUM(DECODE(ASIGN_MT, '03', ASIGN_AM, 0))    AS ASIGN_AM03
		                              ,SUM(DECODE(ASIGN_MT, '04', ASIGN_AM, 0))    AS ASIGN_AM04
		                              ,SUM(DECODE(ASIGN_MT, '05', ASIGN_AM, 0))    AS ASIGN_AM05
		                              ,SUM(DECODE(ASIGN_MT, '06', ASIGN_AM, 0))    AS ASIGN_AM06
		                              ,SUM(DECODE(ASIGN_MT, '07', ASIGN_AM, 0))    AS ASIGN_AM07
		                              ,SUM(DECODE(ASIGN_MT, '08', ASIGN_AM, 0))    AS ASIGN_AM08
		                              ,SUM(DECODE(ASIGN_MT, '09', ASIGN_AM, 0))    AS ASIGN_AM09
		                              ,SUM(DECODE(ASIGN_MT, '10', ASIGN_AM, 0))    AS ASIGN_AM10
		                              ,SUM(DECODE(ASIGN_MT, '11', ASIGN_AM, 0))    AS ASIGN_AM11
		                              ,SUM(DECODE(ASIGN_MT, '12', ASIGN_AM, 0))    AS ASIGN_AM12
		                        FROM   TBBDG_BUDGET_EXCUT_PLAN
		                        GROUP BY YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                       ) t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.BSNS_SE = t2.BSNS_SE
		           AND t1.BALC_SE = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT t1.BUDGET_YEAR
		                              ,t1.BSNS_SE
		                              ,t1.BALC_SE
		                              ,t1.BUDGET_ACNT_CODE
		                              ,NVL(SUM(DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT)),0)                                                       AS DECSN_AM
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'01',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM01
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'02',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM02
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'03',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM03
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'04',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM04
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'05',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM05
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'06',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM06
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'07',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM07
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'08',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM08
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'09',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM09
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'10',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM10
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'11',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM11
		                              ,NVL(SUM(DECODE(SUBSTR(t1.CAUSE_ACTION_DE,5,2),'12',DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1, t1.DECSN_AMOUNT),0)),0)         AS DECSN_AM12
		                        FROM   VHACC_EXP_DSN_MASTR t1
		                        WHERE  1=1
		                        AND    t1.CAUSE_ACTION_DE BETWEEN #ST_DT# AND #ED_DT#
		                        GROUP BY t1.BUDGET_YEAR
		                                ,t1.BSNS_SE
		                                ,t1.BALC_SE
		                                ,t1.BUDGET_ACNT_CODE
		                       ) t3
		            ON t1.YEAR = t3.BUDGET_YEAR
		           AND t1.BSNS_SE = t3.BSNS_SE
		           AND t1.BALC_SE = t3.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		WHERE  1=1
		AND    t1.YEAR    = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.BALC_SE = #BALC_SE#
		<!-- <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">t1.DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty> -->
		<isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">t1.DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
	</select>

</sqlMap>