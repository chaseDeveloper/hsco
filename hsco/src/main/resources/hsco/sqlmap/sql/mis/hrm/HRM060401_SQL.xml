<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM060401_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 기간설정 조회 -->
	<select id="HRM060401DAO.selectWorkEvlPd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.EVL_YEAR
		      ,t1.HT_SE
		      ,t2.HT_BGNDE
		      ,t2.HT_ENDDE
		FROM   (
		        SELECT #EVL_YEAR# AS EVL_YEAR
		              ,#HT_SE#    AS HT_SE
		        FROM   DUAL
		       ) t1
		       LEFT OUTER JOIN TBHRM_WORK_EVL_PD t2
		            ON t1.EVL_YEAR = t2.EVL_YEAR
		           AND t1.HT_SE    = t2.HT_SE
	]]>
	</select>


	<!-- 평정집계결과 조회 -->
	<select id="HRM060401DAO.selectEvlGnrlzSm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.EVL_YEAR
		      ,t1.HT_SE
		      ,t1.EMPNO
		      ,t2.EMPNM
		      ,t1.CLSF_TY
		      ,t1.CLSF_SE
		      ,t1.DEPT_NM
		      ,t1.JSSFC_NM
		      ,t1.CLSF_NM
		      ,t1.JBLN_NM
		      ,t1.CLSF_GNFD_DE
		      ,t1.WORK_EVL_1_SCORE
		      ,t1.WORK_EVL_2_SCORE
		      ,t1.WORK_EVL_3_SCORE
		      ,t1.WORK_EVL_4_SCORE
		      ,t1.WORK_EVL_5_SCORE
		      ,t1.WORK_EVL_6_SCORE
		      ,t1.WORK_EVL_1_AVG_SCORE
		      ,t1.WORK_EVL_2_AVG_SCORE
		      ,t1.WORK_EVL_3_AVG_SCORE
		      ,t1.WORK_EVL_1_TOT_SCORE
		      ,t1.WORK_EVL_2_TOT_SCORE
		      ,t1.WORK_EVL_3_TOT_SCORE
		      ,t1.WORK_EVL_TOT_SCORE
		      ,t1.WORK_EVL_SCORE
		      ,t1.CAREER_TOT_SCORE
		      ,t1.CAREER_CNVRSN_SCORE
		      ,t1.CAREER_EVL_SCORE
		      ,t1.EDC_EVL_TOT_SCORE
		      ,t1.EDC_EVL_CNVRSN_SCORE
		      ,t1.EDC_EVL_SCORE
		      ,t1.PZDCR_QUALF_TOT_SCORE
		      ,t1.PZDCR_QUALF_CNVRSN_SCORE
		      ,t1.PZDCR_QUALF_SCORE
		      ,t1.DMRTR_SCORE
		      ,t1.EVL_GNRLZ_SCORE
		FROM   (
		        SELECT r1.*
		              ,CASE WHEN CLSF_SE IN ('201', '202', '401', '402')  THEN '1'
		                    WHEN CLSF_SE IN ('203', '204', '403', '404')  THEN '2'
		                    WHEN CLSF_SE IN ('205', '405')                THEN '3'   END         AS CLSF_TY
		        FROM   TBHRM_EVL_GNRLZ_SM r1
		       ) t1
		       LEFT OUTER JOIN TBHRM_HR_MASTR t2
		            ON t1.EMPNO = t2.EMPNO
		WHERE  t1.EVL_YEAR = #EVL_YEAR#
		AND    t1.HT_SE    = #HT_SE#
	]]>
	<isNotEmpty property="CLSF_TY">
		AND    t1.CLSF_TY = #CLSF_TY#
	</isNotEmpty>
	<isNotEmpty property="CLSF_SE">
		AND    t1.CLSF_SE = #CLSF_SE#
	</isNotEmpty>
	<![CDATA[
		ORDER BY t1.DEPT_CODE, t1.JSSFC_SE, t1.CLSF_SE
	]]>
	</select>


	<!-- 평정집계결과 삭제 -->
	<delete id="HRM060401DAO.deleteEvlGnrlzSm" parameterClass="java.util.HashMap">
	<![CDATA[
		DELETE
		FROM   TBHRM_EVL_GNRLZ_SM
		WHERE  EVL_YEAR = #EVL_YEAR#
		AND    HT_SE    = #HT_SE#
	]]>
	</delete>

	<!-- 평정집계결과 추가 -->
	<insert id="HRM060401DAO.insertEvlGnrlzSm" parameterClass="java.util.HashMap">
	<![CDATA[
		INSERT INTO TBHRM_EVL_GNRLZ_SM (
		     EVL_YEAR
		    ,HT_SE
		    ,EMPNO
		    ,DEPT_CODE
		    ,JSSFC_SE
		    ,CLSF_SE
		    ,JBLN_SE
		    ,DEPT_NM
		    ,JSSFC_NM
		    ,CLSF_NM
		    ,JBLN_NM
		    ,CLSF_GNFD_DE
		    ,WORK_EVL_1_SCORE
		    ,WORK_EVL_2_SCORE
		    ,WORK_EVL_3_SCORE
		    ,WORK_EVL_4_SCORE
		    ,WORK_EVL_5_SCORE
		    ,WORK_EVL_6_SCORE
		    ,WORK_EVL_1_AVG_SCORE
		    ,WORK_EVL_2_AVG_SCORE
		    ,WORK_EVL_3_AVG_SCORE
		    ,WORK_EVL_1_TOT_SCORE
		    ,WORK_EVL_2_TOT_SCORE
		    ,WORK_EVL_3_TOT_SCORE
		    ,WORK_EVL_TOT_SCORE
		    ,WORK_EVL_SCORE
		    ,CAREER_TOT_SCORE
		    ,CAREER_CNVRSN_SCORE
		    ,CAREER_EVL_SCORE
		    ,EDC_EVL_TOT_SCORE
		    ,EDC_EVL_CNVRSN_SCORE
		    ,EDC_EVL_SCORE
		    ,PZDCR_QUALF_TOT_SCORE
		    ,PZDCR_QUALF_CNVRSN_SCORE
		    ,PZDCR_QUALF_SCORE
		    ,DMRTR_SCORE
		    ,EVL_GNRLZ_SCORE
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		) 
		WITH CLSF_GNFD_DTLS_TM AS (
		    SELECT EMPNO
		          ,CLSF_SE
		          ,MIN(GNFD_DE) AS CLSF_GNFD_DE
		    FROM   TBHRM_GNFD_DTLS
		    WHERE  GNFD_SE = '012'
		    AND    DCSN_AT = '1'
		    GROUP BY EMPNO, CLSF_SE
		), WORK_EVL_TRGTER_TM AS (
		    SELECT EMPNO
		          ,DEPT_CODE
		          ,JSSFC_SE
		          ,CLSF_SE
		          ,JBLN_SE
		          ,EMPNM
		          ,DEPT_NM
		          ,JSSFC_NM
		          ,CLSF_NM
		          ,JBLN_NM
		          ,EVL_YEAR
		          ,HT_SE
		          ,HT_BGNDE
		          ,HT_ENDDE
		          ,CLSF_GNFD_DE
		          ,CASE WHEN CLSF_SE IN ('201', '202', '401', '402')  THEN '1'
		                WHEN CLSF_SE IN ('203', '204', '403', '404')  THEN '2'
		                WHEN CLSF_SE IN ('205', '405')                THEN '3'   END         AS CLSF_TY
		    FROM   (
		            SELECT s1.EMPNO
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'DEPT_CODE', s2.HT_BGNDE)   AS DEPT_CODE
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'JSSFC_SE',  s2.HT_BGNDE)   AS JSSFC_SE
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'CLSF_SE',   s2.HT_BGNDE)   AS CLSF_SE
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'JBLN_SE',   s2.HT_BGNDE)   AS JBLN_SE
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'EMPNM',     s2.HT_BGNDE)   AS EMPNM
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'DEPT_NM',   s2.HT_BGNDE)   AS DEPT_NM
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'JSSFC_NM',  s2.HT_BGNDE)   AS JSSFC_NM
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'CLSF_NM',   s2.HT_BGNDE)   AS CLSF_NM
		                  ,SFHRM_GET_EMPL_INFO(s1.EMPNO, 'JBLN_NM',   s2.HT_BGNDE)   AS JBLN_NM
		                  ,s1.EVL_YEAR
		                  ,s1.HT_SE
		                  ,s2.HT_BGNDE
		                  ,s2.HT_ENDDE
		                  ,NVL(s4.NOW_CLSF_EMPLMN_DE, s3.CLSF_GNFD_DE)              AS CLSF_GNFD_DE
				          ,DECODE(FLOOR((MONTHS_BETWEEN(#HT_ENDDE#, TO_DATE(NVL(S4.NOW_CLSF_EMPLMN_DE, S3.CLSF_GNFD_DE), 'YYYYMMDD'))) / 12), 0, NULL, FLOOR((MONTHS_BETWEEN(#HT_ENDDE#, TO_DATE(NVL(S4.NOW_CLSF_EMPLMN_DE, S3.CLSF_GNFD_DE), 'YYYYMMDD'))) / 12))   AS CLSF_YEAR /*현보직근무연수_년*/
				          ,DECODE(MOD(FLOOR(MONTHS_BETWEEN(#HT_ENDDE#, TO_DATE(NVL(S4.NOW_CLSF_EMPLMN_DE, S3.CLSF_GNFD_DE), 'YYYYMMDD'))),12), 0, NULL, MOD(FLOOR(MONTHS_BETWEEN(#HT_ENDDE#, TO_DATE(NVL(S4.NOW_CLSF_EMPLMN_DE, S3.CLSF_GNFD_DE), 'YYYYMMDD'))),12)) AS CLSF_MT	 /*현보직근무연수_개월*/
		            FROM   TBHRM_WORK_EVL_TRGTER s1
		                   LEFT OUTER JOIN TBHRM_WORK_EVL_PD s2
		                        ON s1.EVL_YEAR = s2.EVL_YEAR
		                       AND s1.HT_SE = s2.HT_SE
		                   LEFT OUTER JOIN CLSF_GNFD_DTLS_TM s3
		                        ON s1.EMPNO = s3.EMPNO
		                       AND SFHRM_GET_EMPL_INFO(s1.EMPNO, 'CLSF_SE', s2.HT_BGNDE) = s3.CLSF_SE
		                   LEFT OUTER JOIN TBHRM_HR_MASTR s4
		                        ON s1.EMPNO = s4.EMPNO
		            WHERE  s1.EVL_YEAR = #EVL_YEAR#
		            AND    s1.HT_SE = #HT_SE#
		           )
		    WHERE CLSF_YEAR >= (CASE WHEN CLSF_SE IN ('202', '402') THEN 5 WHEN CLSF_SE IN ('205', '405') THEN 2 ELSE 3 END)
		    AND   JSSFC_SE IN ('02' /*, '04' 일반직만 대상으로.. 2018.01.15 인사과장 */)
		    ORDER BY DEPT_NM, JSSFC_SE, CLSF_SE
		), EVL_YY_CO_TM AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,BEFORE_YY_RNK
		          ,CEIL(BEFORE_YY_RNK/2)     AS BEFORE_YY_CO        /*년차*/
		    FROM   (
		            SELECT LEVEL
		                  ,TRUNC(#EVL_YEAR# - (LEVEL-2) / 2)    AS EVL_YEAR
		                  ,LPAD(MOD(LEVEL, 2)+1, 2, '0')    AS HT_SE
		                  ,RANK() OVER (ORDER BY TRUNC(#EVL_YEAR# - (LEVEL-2) / 2) DESC, LPAD(MOD(LEVEL, 2)+1, 2, '0') DESC) - DECODE(#HT_SE#, '01', 1, 0)     AS BEFORE_YY_RNK
		            FROM   DUAL
		            CONNECT BY LEVEL <= 8
		           )
		    WHERE  1=1
		    AND    BEFORE_YY_RNK > 0
		    ORDER BY BEFORE_YY_RNK
		), DSCPL_DSPS_TM AS (
		    SELECT s2.EVL_YEAR
		          ,s2.HT_SE
		          ,s1.EMPNO
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '191'           THEN 1 ELSE 0 END)     AS DSCPL1   /*불문경고*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE IN ('130', '180') THEN 1 ELSE 0 END)     AS DSCPL2   /*경고,훈계*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '160'           THEN 1 ELSE 0 END)     AS DSCPL3   /*주의*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '210'           THEN ROUND(NVL(MONTHS_BETWEEN(TO_DATE(s1.DSPS_ENDDE, 'YYYYMMDD'), TO_DATE(s1.DSPS_BGNDE, 'YYYYMMDD')),0),0) END)     AS DSCPL4   /*직위해제*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '170'           THEN 1 ELSE 0 END)     AS DSCPL5   /*견책*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '150'           THEN 1 ELSE 0 END)     AS DSCPL6   /*감봉*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '140'           THEN 1 ELSE 0 END)     AS DSCPL7   /*정직*/
		    FROM   TBHRM_DSCPL_DSPS s1
		           INNER JOIN TBHRM_WORK_EVL_PD s2
		                ON s1.DSCPL_DCSN_DE BETWEEN s2.HT_BGNDE AND s2.HT_ENDDE
		    WHERE  1=1
		    GROUP BY s2.EVL_YEAR, s2.HT_SE, s1.EMPNO
		), DTY_EXC_ATITD_DMRTR_TM AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,LATEN_SRVIC_CO           /*지각복무_건수*/
		          ,WTRMS_ABSENC_CO          /*무단결근_건수*/
		          ,WTRMS_LRLY_CO            /*무단조회_건수*/
		          ,WTRMS_GNOT_CO            /*무단외출_건수*/
		          ,TWDCVLN_KD_IMPRTY_CO     /*대민불친절_건수*/
		    FROM   TBHRM_DTY_EXC_ATITD_DMRTR
		), DSCPL_DSPS_DATA_TM AS (
		    SELECT t1.EVL_YEAR
		          ,t1.HT_SE
		          ,t1.EMPNO
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '001'), '1', NVL(t2.LATEN_SRVIC_CO,      0), DECODE(NVL(t2.LATEN_SRVIC_CO,      0),0,0,1)) * 0.1         AS DMRTR_001  /*지각*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_ABSENC_CO,     0), DECODE(NVL(t2.WTRMS_ABSENC_CO,     0),0,0,1)) * 0.2         AS DMRTR_002  /*무단결근*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_LRLY_CO,       0), DECODE(NVL(t2.WTRMS_LRLY_CO,       0),0,0,1)) * 0.1         AS DMRTR_003  /*무단조회*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_GNOT_CO,       0), DECODE(NVL(t2.WTRMS_GNOT_CO,       0),0,0,1)) * 0.1         AS DMRTR_004  /*무단외출 장시간무단이석*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.TWDCVLN_KD_IMPRTY_CO,0), DECODE(NVL(t2.TWDCVLN_KD_IMPRTY_CO,0),0,0,1)) * 0.5         AS DMRTR_005  /*대민불친절*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL1,              0), DECODE(NVL(t3.DSCPL1,              0),0,0,1)) * 1           AS DMRTR_006  /*불문경고*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL2,              0), DECODE(NVL(t3.DSCPL2,              0),0,0,1)) * 0.5         AS DMRTR_007  /*훈계_경고포함*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL3,              0), DECODE(NVL(t3.DSCPL3,              0),0,0,1)) * 0.3         AS DMRTR_008  /*주의*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL4,              0), DECODE(NVL(t3.DSCPL4,              0),0,0,1)) * 2           AS DMRTR_009  /*직위해제*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL5,              0), DECODE(NVL(t3.DSCPL5,              0),0,0,1)) * 2           AS DMRTR_010  /*견책*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL6,              0), DECODE(NVL(t3.DSCPL6,              0),0,0,1)) * 3           AS DMRTR_011  /*감봉*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL7,              0), DECODE(NVL(t3.DSCPL7,              0),0,0,1)) * 4           AS DMRTR_012  /*정직*/
		    FROM   TBHRM_WORK_EVL_TRGTER t1
		           LEFT OUTER JOIN DTY_EXC_ATITD_DMRTR_TM t2
		                ON t1.EVL_YEAR = t2.EVL_YEAR
		               AND t1.HT_SE = t2.HT_SE
		               AND t1.EMPNO = t2.EMPNO
		           LEFT OUTER JOIN DSCPL_DSPS_TM t3
		                ON t1.EVL_YEAR = t3.EVL_YEAR
		               AND t1.HT_SE = t3.HT_SE
		               AND t1.EMPNO = t3.EMPNO
		    WHERE  1=1
		    ORDER BY t1.OFCPS_SE
		           , t1.JSSFC_SE
		           , t1.CLSF_SE
		), TOT_DMRTR_T AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,(CASE WHEN NVL(TOT_DMRTR,0) > 10 THEN 10 ELSE NVL(TOT_DMRTR,0) END)      AS TOT_DMRTR
		    FROM   (
		            SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EMPNO
		                  ,10 - SUM(NVL(DMRTR_001,0) + NVL(DMRTR_002,0) + NVL(DMRTR_003,0) + NVL(DMRTR_004,0) + NVL(DMRTR_005,0) + NVL(DMRTR_006,0) + NVL(DMRTR_007,0) + NVL(DMRTR_008,0) + NVL(DMRTR_009,0) + NVL(DMRTR_010,0) + NVL(DMRTR_011,0) + NVL(DMRTR_012,0))    AS TOT_DMRTR
		            FROM   DSCPL_DSPS_DATA_TM
		            GROUP BY EVL_YEAR
		                    ,HT_SE
		                    ,EMPNO
		           )
		    WHERE  1=1
		), WORK_EVL_SCORE_TM AS (
		    SELECT s1.EVL_YEAR
		          ,s1.HT_SE
		          ,s1.EMPNO
		          ,(NVL(s1.EVL_SCORE,0) + NVL(s3.TOT_DMRTR,0) + NVL(s2.ADIT_SCORE,0))       AS EVL_SCORE
		    FROM   (SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EMPNO
		                  ,SUM(EVL_SCORE) AS EVL_SCORE
		            FROM   TBHRM_WORK_SCRE_EVL_MANAGE
		            GROUP BY EVL_YEAR, HT_SE, EMPNO
		           ) s1
		           INNER JOIN TBHRM_WORK_EVL_TRGTER s2
		                ON s1.EVL_YEAR = s2.EVL_YEAR
		               AND s1.HT_SE = s2.HT_SE
		               AND s1.EMPNO = s2.EMPNO
		           LEFT OUTER JOIN TOT_DMRTR_T s3
		                ON s1.EVL_YEAR = s3.EVL_YEAR
		               AND s1.HT_SE = s3.HT_SE
		               AND s1.EMPNO = s3.EMPNO
		), WORK_EVL_EMPL_TM AS (
		    SELECT t1.EMPNO
		          ,t1.EMPNM
		          ,t1.CLSF_SE
		          ,t1.CLSF_NM
		          ,t2.EVL_YEAR
		          ,t2.HT_SE
		          ,t2.BEFORE_YY_RNK
		          ,t2.BEFORE_YY_CO
		          ,t3.EVL_SCORE
		    FROM   (
		            SELECT r1.EMPNO
		                  ,r1.EMPNM
		                  ,r1.CLSF_SE
		                  ,r1.CLSF_NM
		                  ,CASE WHEN r1.CLSF_SE IN ('201', '202', '203', '204', '401', '402', '403', '404')  THEN '3'
		                        WHEN r1.CLSF_SE IN ('205', '405')                                            THEN '2'   END         AS EVL_YY_CO
		            FROM   WORK_EVL_TRGTER_TM r1
		            WHERE  1=1
		           ) t1
		           LEFT OUTER JOIN EVL_YY_CO_TM t2
		                ON t2.BEFORE_YY_CO BETWEEN '1' AND t1.EVL_YY_CO
		           LEFT OUTER JOIN WORK_EVL_SCORE_TM t3
		                ON t2.EVL_YEAR = t3.EVL_YEAR
		               AND t2.HT_SE = t3.HT_SE
		               AND t1.EMPNO = t3.EMPNO
		    WHERE  1=1
		    ORDER BY t1.EMPNO
		            ,t2.EVL_YEAR DESC
		            ,t2.HT_SE DESC
		), WORK_EVL_AVG_SCORE_TM AS (
		    SELECT EMPNO
		          ,EMPNM
		          ,CLSF_SE
		          ,BEFORE_YY_CO
		          ,AVG(NVL(EVL_SCORE,0))    AS AVG_SCORE
		          ,AVG(NVL(EVL_SCORE,0)) * (
		                                    CASE WHEN CLSF_SE IN ('201', '202', '401', '402') AND BEFORE_YY_CO = '1' THEN 0.5
		                                         WHEN CLSF_SE IN ('201', '202', '401', '402') AND BEFORE_YY_CO = '2' THEN 0.3
		                                         WHEN CLSF_SE IN ('201', '202', '401', '402') AND BEFORE_YY_CO = '3' THEN 0.2
		                                         WHEN CLSF_SE IN ('203', '204', '403', '404') AND BEFORE_YY_CO = '1' THEN 0.55
		                                         WHEN CLSF_SE IN ('203', '204', '403', '404') AND BEFORE_YY_CO = '2' THEN 0.25
		                                         WHEN CLSF_SE IN ('203', '204', '403', '404') AND BEFORE_YY_CO = '3' THEN 0.2
		                                         WHEN CLSF_SE IN ('205', '405')               AND BEFORE_YY_CO = '1' THEN 0.6
		                                         WHEN CLSF_SE IN ('205', '405')               AND BEFORE_YY_CO = '2' THEN 0.4   END
		                                   )       AS EVL_SCORE
		    FROM   WORK_EVL_EMPL_TM
		    GROUP BY EMPNO
		            ,EMPNM
		            ,CLSF_SE
		            ,BEFORE_YY_CO
		    ORDER BY EMPNO, BEFORE_YY_CO
		)
		, WORK_EVL_RESULT_TM AS (
		    SELECT t1.EMPNO
		          ,t1.EMPNM
		          ,t1.CLSF_SE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '1', t1.EVL_SCORE)),2)        AS WORK_EVL_1_SCORE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '2', t1.EVL_SCORE)),2)        AS WORK_EVL_2_SCORE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '3', t1.EVL_SCORE)),2)        AS WORK_EVL_3_SCORE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '4', t1.EVL_SCORE)),2)        AS WORK_EVL_4_SCORE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '5', t1.EVL_SCORE)),2)        AS WORK_EVL_5_SCORE
		          ,ROUND(MAX(DECODE(t1.BEFORE_YY_RNK, '6', t1.EVL_SCORE)),2)        AS WORK_EVL_6_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '1', t2.AVG_SCORE)),2)        AS WORK_EVL_1_AVG_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '2', t2.AVG_SCORE)),2)        AS WORK_EVL_2_AVG_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '3', t2.AVG_SCORE)),2)        AS WORK_EVL_3_AVG_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '1', t2.EVL_SCORE)),2)        AS WORK_EVL_1_TOT_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '2', t2.EVL_SCORE)),2)        AS WORK_EVL_2_TOT_SCORE
		          ,ROUND(MAX(DECODE(t2.BEFORE_YY_CO,  '3', t2.EVL_SCORE)),2)        AS WORK_EVL_3_TOT_SCORE
		          ,ROUND(SUM(t2.EVL_SCORE)                               ,2)        AS WORK_EVL_TOT_SCORE
		          ,ROUND(SUM(t2.EVL_SCORE) * 0.6                         ,2)        AS WORK_EVL_SCORE
		    FROM   WORK_EVL_EMPL_TM t1
		           LEFT OUTER JOIN WORK_EVL_AVG_SCORE_TM t2
		                ON t1.EMPNO = t2.EMPNO
		               AND t1.BEFORE_YY_CO = t2.BEFORE_YY_CO
		    WHERE  1=1
		    GROUP BY t1.EMPNO
		            ,t1.EMPNM
		            ,t1.CLSF_SE
		), CAREER_EVL_TM AS (
		    SELECT EMPNO
		          ,ROUND(SUM(NVL(CAREER_EVL_SCORE,0)), 2)           AS CAREER_TOT_SCORE
		          ,ROUND(SUM(NVL(CAREER_EVL_SCORE,0)), 2)           AS CAREER_CNVRSN_SCORE
		          ,ROUND(SUM(NVL(CAREER_EVL_SCORE,0)) * 0.2, 2)     AS CAREER_EVL_SCORE
		    FROM   (
		            SELECT CNVRSN_SE
		                  ,EMPNO
		                  ,EMPNM
		                  ,CLSF_SE
		                  ,CLSF_MONTH_CO
		                  ,CLSF_GNFD_DE
		                  ,EVL_STDR_DE
		                  ,CNVRSN_CAREER_PD
		                  ,  ((CASE WHEN CNVRSN_CAREER_PD > CLSF_MONTH_CO THEN CNVRSN_CAREER_PD - CLSF_MONTH_CO ELSE CNVRSN_CAREER_PD END) * 0.35)
		                   + ((CASE WHEN CNVRSN_CAREER_PD > CLSF_MONTH_CO THEN CLSF_MONTH_CO ELSE 0 END)                                   * 0.11)
		                   + ((CASE WHEN CNVRSN_CAREER_PD > CLSF_MONTH_CO THEN CNVRSN_CAREER_PD - CLSF_MONTH_CO ELSE CNVRSN_CAREER_PD END) * 0.40)
		                   + ((CASE WHEN CNVRSN_CAREER_PD > CLSF_MONTH_CO THEN CLSF_MONTH_CO ELSE 0 END)                                   * 0.17)     AS CAREER_EVL_SCORE
		            FROM   (
		                    SELECT CNVRSN_SE
		                          ,EMPNO
		                          ,EMPNM
		                          ,CLSF_SE
		                          ,(CASE WHEN CLSF_SE IN ('201', '202', '401', '402') THEN 72 ELSE 60 END)      AS CLSF_MONTH_CO
		                          ,CLSF_GNFD_DE
		                          ,EVL_STDR_DE
		                          ,ROUND(NVL(MONTHS_BETWEEN(TO_DATE(EVL_STDR_DE, 'YYYYMMDD'), TO_DATE(CLSF_GNFD_DE, 'YYYYMMDD')),0) * DECODE(CNVRSN_SE, 'B', 0.6, 1),0)   AS CNVRSN_CAREER_PD
		                    FROM   (
		                            SELECT 'A'                                                          AS CNVRSN_SE
		                                  ,t1.EMPNO
		                                  ,t1.EMPNM
		                                  ,t1.CLSF_SE
		                                  ,t1.CLSF_GNFD_DE
		                                  ,TO_CHAR(TO_DATE(#HT_ENDDE#,'YYYYMMDD')-1,'YYYYMMDD')        AS EVL_STDR_DE
		                            FROM   WORK_EVL_TRGTER_TM t1
		                            WHERE  1=1
		                            UNION ALL
		                            SELECT 'B'                                                          AS CNVRSN_SE
		                                  ,t1.EMPNO
		                                  ,t1.EMPNM
		                                  ,t1.CLSF_SE
		                                  ,t2.CLSF_GNFD_DE                                              AS CLSF_GNFD_DE
		                                  ,TO_CHAR(TO_DATE(t1.CLSF_GNFD_DE,'YYYYMMDD')-1,'YYYYMMDD')    AS EVL_STDR_DE
		                            FROM   WORK_EVL_TRGTER_TM t1
		                                   LEFT OUTER JOIN CLSF_GNFD_DTLS_TM t2
		                                        ON t1.EMPNO       = t2.EMPNO
		                                       AND (t1.CLSF_SE+1) = t2.CLSF_SE
		                            WHERE  1=1
		                           )
		                    WHERE  1=1
		                   )
		            WHERE  1=1
		           )
		    GROUP BY EMPNO
		), RWARD_SCORE_TM AS (
		    SELECT EMPNO
		          ,MAX(NVL(PZDCR_SCORE, 0))     AS PZDCR_SCORE
		    FROM   (
		            SELECT t2.WNPZ_DE                       AS WNPZ_DE
		                  ,t1.EMPNO                         AS EMPNO
		                  ,t1.EMPNM                         AS EMPNM
		                  ,t2.PZDCR_SE                      AS PZDCR_SE
		                  ,t4.CODE_NM                       AS PZDCR_NM
		                  ,t2.CNFER_INSTT                   AS CNFER_INSTT
		                  ,t2.WNPZ_RESN                     AS WNPZ_RESN
		                  ,t4.MSTK_PREPAR_VALUE             AS PZDCR_SCORE
		                  ,RANK() OVER(PARTITION BY t2.EMPNO ORDER BY NVL(t4.MSTK_PREPAR_VALUE,0) DESC, WNPZ_DE ASC)  AS RNK
		            FROM   WORK_EVL_TRGTER_TM t1
		                   LEFT OUTER JOIN TBHRM_RWARD_DTLS t2
		                        ON t1.EMPNO = t2.EMPNO
		                   LEFT OUTER JOIN TBCOM_CMMN_CODE t4
		                        ON t2.PZDCR_SE = t4.CODE
		                       AND t4.GRP_CODE = 'HRM030'
		            WHERE  t4.MSTK_PREPAR_VALUE IS NOT NULL
		            AND    t2.WNPZ_DE BETWEEN t1.CLSF_GNFD_DE AND #HT_ENDDE#
		           )
		    WHERE  RNK = '1'
		    GROUP BY EMPNO
		), QUALF_SCORE_TM AS (
		    SELECT EMPNO
		          ,MAX(NVL(QUALF_SCORE,0))      AS QUALF_SCORE
		    FROM   (
		            SELECT t2.ACQS_DE
		                  ,t1.EMPNO
		                  ,t1.EMPNM
		                  ,t2.QUALF_CODE
		                  ,t4.CODE_NM                    AS QUALF_NM
		                  ,t2.PBLICTE_OFFIC_NM
		                  ,t4.MSTK_PREPAR_VALUE          AS QUALF_SCORE
		                  ,RANK() OVER(PARTITION BY t2.EMPNO ORDER BY NVL(t4.MSTK_PREPAR_VALUE,0) DESC, t2.ACQS_DE ASC)  AS RNK
		            FROM   WORK_EVL_TRGTER_TM t1
		                   LEFT OUTER JOIN TBHRM_HR_QUALF t2
		                        ON t1.EMPNO      = t2.EMPNO
		                   LEFT OUTER JOIN TBCOM_CMMN_CODE t4
		                        ON t2.QUALF_CODE = t4.CODE
		                       AND t4.GRP_CODE   = 'HRM009'
		            WHERE  t4.MSTK_PREPAR_VALUE IS NOT NULL
		            AND    t2.ACQS_DE BETWEEN t1.CLSF_GNFD_DE AND #HT_ENDDE#
		           )
		    WHERE  RNK = '1'
		    GROUP BY EMPNO
		), EDC_EVL_SCORE_TM AS (
		    SELECT r1.EMPNO
		          ,ROUND(CASE WHEN #EVL_YEAR# <= '2016' THEN   (
		                                                    CASE WHEN NVL(r1.EDC_CNFRM_TIME,0) >= DECODE(r1.CLSF_SE, '202', 120, '203', 150, '204', 170, '205', 140) THEN 10
		                                                         WHEN NVL(r1.EDC_CNFRM_TIME,0) BETWEEN DECODE(r1.CLSF_SE, '202', 111, '203', 131, '204', 161, '205', 131) AND DECODE(r1.CLSF_SE, '202', 119, '203', 139, '204', 169, '205', 139) THEN 7
		                                                         WHEN NVL(r1.EDC_CNFRM_TIME,0) < DECODE(r1.CLSF_SE, '202', 110, '203', 130, '204', 160, '205', 130) THEN 5
		                                                    END
		                                                   ) 
		                      ELSE (
		                            CASE WHEN NVL(r1.TOT_EDC_COMPL_TIME,0) = 0                                                THEN 0
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 100 THEN 10
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 90  THEN 9
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 80  THEN 8
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 70  THEN 7
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 60  THEN 6
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 50  THEN 5
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 40  THEN 4
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 30  THEN 3
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 20  THEN 2
		                                 WHEN ROUND(NVL(r1.EDC_CNFRM_TIME,0) / ( NVL(r1.TOT_EDC_COMPL_TIME,0) ) * 100) >= 10  THEN 1
		                                 ELSE 0 END
		                           )  END
		                , 2)  AS  EDC_EVL_SCORE
		    FROM   (
		            SELECT s1.*
		                  ,NVL(s2.YEAR01_EDC_CNFRM_TIME,0)+NVL(s2.YEAR02_EDC_CNFRM_TIME,0)+NVL(s2.YEAR03_EDC_CNFRM_TIME,0)+NVL(s2.YEAR04_EDC_CNFRM_TIME,0)+NVL(s2.YEAR05_EDC_CNFRM_TIME,0)      AS EDC_CNFRM_TIME           /* 당해직급 누적시간(실적) */
		                  ,TRUNC(NVL(s1.YEARS_BETWEEN,0) * NVL(s1.EDC_COMPL_TIME,0))                                                                                                            AS TOT_EDC_COMPL_TIME       /* 당해직급 의무이수시간 */
		                  ,(CASE WHEN NVL(s2.YEAR01_EDC_CNFRM_TIME,0)+NVL(s2.YEAR02_EDC_CNFRM_TIME,0)+NVL(s2.YEAR03_EDC_CNFRM_TIME,0)+NVL(s2.YEAR04_EDC_CNFRM_TIME,0)+NVL(s2.YEAR05_EDC_CNFRM_TIME,0) > TRUNC(NVL(s1.YEARS_BETWEEN,0) * NVL(s1.EDC_COMPL_TIME,0)) THEN '충족' ELSE '미충족' END)     AS  SUFFCN_AT
		            FROM   (
		                    SELECT t1.EMPNO
		                          ,t1.EMPNM
		                          ,t1.CLSF_SE
		                          ,SFHRM_GET_EDC_COMPL_TIME(SUBSTR(#HT_ENDDE#,1,4), 'D1', t1.CLSF_SE)                AS EDC_COMPL_TIME
		                          ,TRUNC((SFHRM_DATEDIF(TO_DATE(t1.CLSF_GNFD_DE,'YYYYMMDD'),TO_DATE(#HT_ENDDE#,'YYYYMMDD'),'M') + (CASE WHEN SFHRM_DATEDIF(TO_DATE(t1.CLSF_GNFD_DE,'YYYYMMDD'),TO_DATE(#HT_ENDDE#,'YYYYMMDD'),'MD') > 16 THEN 1 ELSE 0 END))/12)      AS YEARS_BETWEEN 
		                          ,DECODE(t1.CLSF_SE, '202', 5, '203', 3, '204', 3, '205', 2)        AS PRMOT_REQRE_YEAR
		                    FROM   WORK_EVL_TRGTER_TM t1
		                    WHERE  1=1
		                   ) s1
		                   LEFT OUTER JOIN (
		                                    SELECT t2.EMPNO                     AS EMPNO
		                                          ,SUM(CASE WHEN t1.YEAR = #EVL_YEAR#   AND (NVL(t1.FYER_MXMM_RCOGN_TIME,0) <= NVL(t2.EDC_SUM_TIME,0))  THEN NVL(t1.FYER_MXMM_RCOGN_TIME,0)     ELSE (CASE WHEN t2.YEAR = #EVL_YEAR#   THEN NVL(t2.EDC_SUM_TIME,0) ELSE 0 END)  END) AS YEAR01_EDC_CNFRM_TIME
		                                          ,SUM(CASE WHEN t1.YEAR = #EVL_YEAR#-1 AND (NVL(t1.FYER_MXMM_RCOGN_TIME,0) <= NVL(t2.EDC_SUM_TIME,0))  THEN NVL(t1.FYER_MXMM_RCOGN_TIME,0)     ELSE (CASE WHEN t2.YEAR = #EVL_YEAR#-1 THEN NVL(t2.EDC_SUM_TIME,0) ELSE 0 END)  END) AS YEAR02_EDC_CNFRM_TIME
		                                          ,SUM(CASE WHEN t1.YEAR = #EVL_YEAR#-2 AND (NVL(t1.FYER_MXMM_RCOGN_TIME,0) <= NVL(t2.EDC_SUM_TIME,0))  THEN NVL(t1.FYER_MXMM_RCOGN_TIME,0)     ELSE (CASE WHEN t2.YEAR = #EVL_YEAR#-2 THEN NVL(t2.EDC_SUM_TIME,0) ELSE 0 END)  END) AS YEAR03_EDC_CNFRM_TIME
		                                          ,SUM(CASE WHEN t1.YEAR = #EVL_YEAR#-3 AND (NVL(t1.FYER_MXMM_RCOGN_TIME,0) <= NVL(t2.EDC_SUM_TIME,0))  THEN NVL(t1.FYER_MXMM_RCOGN_TIME,0)     ELSE (CASE WHEN t2.YEAR = #EVL_YEAR#-3 THEN NVL(t2.EDC_SUM_TIME,0) ELSE 0 END)  END) AS YEAR04_EDC_CNFRM_TIME
		                                          ,SUM(CASE WHEN t1.YEAR = #EVL_YEAR#-4 AND (NVL(t1.FYER_MXMM_RCOGN_TIME,0) <= NVL(t2.EDC_SUM_TIME,0))  THEN NVL(t1.FYER_MXMM_RCOGN_TIME,0)     ELSE (CASE WHEN t2.YEAR = #EVL_YEAR#-4 THEN NVL(t2.EDC_SUM_TIME,0) ELSE 0 END)  END) AS YEAR05_EDC_CNFRM_TIME
		                                    FROM   TBHRM_EDC_TY_RCOGN_TIME t1
		                                           INNER JOIN (
		                                                       SELECT YEAR, EDC_TY_SN, EMPNO, SUM(EDC_RCOGN_TIME) AS EDC_SUM_TIME
		                                                       FROM TBHRM_EDC_MANAGE 
		                                                       GROUP BY YEAR, EDC_TY_SN, EMPNO
		                                                      ) t2
		                                                ON t1.YEAR  = t2.YEAR
		                                               AND t1.SN    = t2.EDC_TY_SN
		                                    WHERE  t1.YEAR = #EVL_YEAR#
		                                    GROUP BY t2.EMPNO
		                                   ) s2
		                        ON s1.EMPNO = s2.EMPNO
		            WHERE  s1.YEARS_BETWEEN >= s1.PRMOT_REQRE_YEAR
		           ) r1
		    WHERE  1=1
		), PZDCR_QUALF_SCORE_TM AS (
		    SELECT EMPNO
		          ,SUM(NVL(TOT_SCORE,0))                                AS PZDCR_QUALF_TOT_SCORE
		          ,ROUND(SUM(NVL(TOT_SCORE,0)) / 7, 4) * 100            AS PZDCR_QUALF_CNVRSN_SCORE
		          ,ROUND(ROUND(SUM(NVL(TOT_SCORE,0)) / 7, 4) * 10, 2)   AS PZDCR_QUALF_SCORE
		    FROM   (
		            SELECT EMPNO
		                  ,PZDCR_SCORE      AS TOT_SCORE
		            FROM   RWARD_SCORE_TM
		            UNION ALL
		            SELECT EMPNO
		                  ,QUALF_SCORE      AS TOT_SCORE
		            FROM   QUALF_SCORE_TM
		           )
		    GROUP BY EMPNO
		), DSCPL_DSPS_TM AS (
		    SELECT s2.EVL_YEAR
		          ,s2.HT_SE
		          ,s1.EMPNO
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '191'           THEN 1 ELSE 0 END)     AS DSCPL1   /*불문경고*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE IN ('130', '180') THEN 1 ELSE 0 END)     AS DSCPL2   /*경고,훈계*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '160'           THEN 1 ELSE 0 END)     AS DSCPL3   /*주의*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '210'           THEN ROUND(NVL(MONTHS_BETWEEN(TO_DATE(s1.DSPS_ENDDE, 'YYYYMMDD'), TO_DATE(s1.DSPS_BGNDE, 'YYYYMMDD')),0),0) END)     AS DSCPL4   /*직위해제*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '170'           THEN 1 ELSE 0 END)     AS DSCPL5   /*견책*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '150'           THEN 1 ELSE 0 END)     AS DSCPL6   /*감봉*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '140'           THEN 1 ELSE 0 END)     AS DSCPL7   /*정직*/
		    FROM   TBHRM_DSCPL_DSPS s1
		           INNER JOIN TBHRM_WORK_EVL_PD s2
		                ON s1.DSCPL_DCSN_DE BETWEEN s2.HT_BGNDE AND s2.HT_ENDDE
		    WHERE  1=1
		    GROUP BY s2.EVL_YEAR, s2.HT_SE, s1.EMPNO
		), DTY_EXC_ATITD_DMRTR_TM AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,LATEN_SRVIC_CO           /*지각복무_건수*/
		          ,WTRMS_ABSENC_CO          /*무단결근_건수*/
		          ,WTRMS_LRLY_CO            /*무단조회_건수*/
		          ,WTRMS_GNOT_CO            /*무단외출_건수*/
		          ,TWDCVLN_KD_IMPRTY_CO     /*대민불친절_건수*/
		    FROM   TBHRM_DTY_EXC_ATITD_DMRTR
		    WHERE  EVL_YEAR = #EVL_YEAR#
		    AND    HT_SE = #HT_SE#
		), DMRTR_SCORE_TM AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,ROUND(CASE WHEN TO_NUMBER(NVL(DMRTR_SCORE,0)) > 10 THEN 10 ELSE NVL(DMRTR_SCORE,0) END, 2)       AS DMRTR_SCORE 
		    FROM   (
		            SELECT s1.EVL_YEAR
		                  ,s1.HT_SE
		                  ,s1.EMPNO
		                  ,  NVL(s1.DMRTR_001,0) * NVL(s2.SCORE_001,0)
		                   + NVL(s1.DMRTR_002,0) * NVL(s2.SCORE_002,0)
		                   + NVL(s1.DMRTR_003,0) * NVL(s2.SCORE_003,0)
		                   + NVL(s1.DMRTR_004,0) * NVL(s2.SCORE_004,0)
		                   + NVL(s1.DMRTR_005,0) * NVL(s2.SCORE_005,0)
		                   + NVL(s1.DMRTR_006,0) * NVL(s2.SCORE_006,0)
		                   + NVL(s1.DMRTR_007,0) * NVL(s2.SCORE_007,0)
		                   + NVL(s1.DMRTR_008,0) * NVL(s2.SCORE_008,0)
		                   + NVL(s1.DMRTR_009,0) * NVL(s2.SCORE_009,0)
		                   + NVL(s1.DMRTR_010,0) * NVL(s2.SCORE_010,0)
		                   + NVL(s1.DMRTR_011,0) * NVL(s2.SCORE_011,0)
		                   + NVL(s1.DMRTR_012,0) * NVL(s2.SCORE_012,0)  AS DMRTR_SCORE
		            FROM   (
		                    SELECT t1.EVL_YEAR
		                          ,t1.HT_SE
		                          ,t1.EMPNO
		                          ,NVL(t2.LATEN_SRVIC_CO,0)         AS DMRTR_001  /*지각*/
		                          ,NVL(t2.WTRMS_ABSENC_CO,0)        AS DMRTR_002  /*무단결근*/
		                          ,NVL(t2.WTRMS_LRLY_CO,0)          AS DMRTR_003  /*무단조회*/
		                          ,NVL(t2.WTRMS_GNOT_CO,0)          AS DMRTR_004  /*무단외출 장시간무단이석*/
		                          ,NVL(t2.TWDCVLN_KD_IMPRTY_CO,0)   AS DMRTR_005  /*대민불친절*/
		                          ,NVL(t3.DSCPL1,0)                 AS DMRTR_006  /*불문경고*/
		                          ,NVL(t3.DSCPL2,0)                 AS DMRTR_007  /*훈계_경고포함*/
		                          ,NVL(t3.DSCPL3,0)                 AS DMRTR_008  /*주의*/
		                          ,NVL(t3.DSCPL4,0)                 AS DMRTR_009  /*직위해제*/
		                          ,NVL(t3.DSCPL5,0)                 AS DMRTR_010  /*견책*/
		                          ,NVL(t3.DSCPL6,0)                 AS DMRTR_011  /*감봉*/
		                          ,NVL(t3.DSCPL7,0)                 AS DMRTR_012  /*정직*/
		                    FROM   WORK_EVL_TRGTER_TM t1
		                           LEFT OUTER JOIN DTY_EXC_ATITD_DMRTR_TM t2
		                                ON t1.EVL_YEAR = t2.EVL_YEAR
		                               AND t1.HT_SE = t2.HT_SE
		                               AND t1.EMPNO = t2.EMPNO
		                           LEFT OUTER JOIN DSCPL_DSPS_TM t3
		                                ON t1.EVL_YEAR = t3.EVL_YEAR
		                               AND t1.HT_SE = t3.HT_SE
		                               AND t1.EMPNO = t3.EMPNO
		                    WHERE  1=1
		                   ) s1
		                   LEFT OUTER JOIN (
		                                    SELECT YEAR
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '001', DMRTR_SCORE))     AS SCORE_001
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '002', DMRTR_SCORE))     AS SCORE_002
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '003', DMRTR_SCORE))     AS SCORE_003
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '004', DMRTR_SCORE))     AS SCORE_004
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '005', DMRTR_SCORE))     AS SCORE_005
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '006', DMRTR_SCORE))     AS SCORE_006
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '007', DMRTR_SCORE))     AS SCORE_007
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '008', DMRTR_SCORE))     AS SCORE_008
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '009', DMRTR_SCORE))     AS SCORE_009
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '000', DMRTR_SCORE))     AS SCORE_010
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '011', DMRTR_SCORE))     AS SCORE_011
		                                          ,MAX(DECODE(DMRTR_STDR_CODE, '012', DMRTR_SCORE))     AS SCORE_012
		                                    FROM   TBHRM_DTY_EXC_DMRTR_STDR
		                                    GROUP BY YEAR
		                                   ) s2
		                        ON s1.EVL_YEAR = s2.YEAR
		            WHERE  1=1
		           )
		    WHERE  1=1
		)
		SELECT t1.EVL_YEAR
		      ,t1.HT_SE
		      ,t1.EMPNO
		      ,t1.DEPT_CODE
		      ,t1.JSSFC_SE
		      ,t1.CLSF_SE
		      ,t1.JBLN_SE
		      ,t1.DEPT_NM
		      ,t1.JSSFC_NM
		      ,t1.CLSF_NM
		      ,t1.JBLN_NM
		      ,t1.CLSF_GNFD_DE
		      ,t2.WORK_EVL_1_SCORE
		      ,t2.WORK_EVL_2_SCORE
		      ,t2.WORK_EVL_3_SCORE
		      ,t2.WORK_EVL_4_SCORE
		      ,t2.WORK_EVL_5_SCORE
		      ,t2.WORK_EVL_6_SCORE
		      ,t2.WORK_EVL_1_AVG_SCORE
		      ,t2.WORK_EVL_2_AVG_SCORE
		      ,t2.WORK_EVL_3_AVG_SCORE
		      ,t2.WORK_EVL_1_TOT_SCORE
		      ,t2.WORK_EVL_2_TOT_SCORE
		      ,t2.WORK_EVL_3_TOT_SCORE
		      ,t2.WORK_EVL_TOT_SCORE
		      ,t2.WORK_EVL_SCORE
		      ,t3.CAREER_TOT_SCORE
		      ,t3.CAREER_CNVRSN_SCORE
		      ,t3.CAREER_EVL_SCORE
		      ,t4.EDC_EVL_SCORE         AS EDC_EVL_TOT_SCORE
		      ,t4.EDC_EVL_SCORE * 10    AS EDC_EVL_CNVRSN_SCORE
		      ,t4.EDC_EVL_SCORE
		      ,t5.PZDCR_QUALF_TOT_SCORE
		      ,t5.PZDCR_QUALF_CNVRSN_SCORE
		      ,t5.PZDCR_QUALF_SCORE
		      ,t6.DMRTR_SCORE
		      ,NVL(t2.WORK_EVL_SCORE,0) + NVL(t3.CAREER_EVL_SCORE,0) + NVL(t4.EDC_EVL_SCORE,0) + NVL(t5.PZDCR_QUALF_SCORE,0) - NVL(t6.DMRTR_SCORE,0)   AS EVL_GNRLZ_SCORE
		      ,#S_USER_ID#                    AS REGISTER_ID
		      ,SYSDATE                        AS REGIST_DT
		      ,#S_USER_ID#                    AS UPDUSR_ID
		      ,SYSDATE                        AS UPDT_DT
		FROM   WORK_EVL_TRGTER_TM t1
		       LEFT OUTER JOIN WORK_EVL_RESULT_TM t2
		            ON t1.EMPNO = t2.EMPNO
		       LEFT OUTER JOIN CAREER_EVL_TM t3
		            ON t1.EMPNO = t3.EMPNO
		       LEFT OUTER JOIN EDC_EVL_SCORE_TM t4
		            ON t1.EMPNO = t4.EMPNO
		       LEFT OUTER JOIN PZDCR_QUALF_SCORE_TM t5
		            ON t1.EMPNO = t5.EMPNO
		       LEFT OUTER JOIN DMRTR_SCORE_TM t6
		            ON t1.EMPNO = t6.EMPNO
		WHERE  1=1
	]]>
	</insert>

</sqlMap>