<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060102_SQL">	
	
	<!-- 구분회계계정 목록 -->
	<select id="ACC060102DAO.seAccnutAcntCodeList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT 
			 t1.ACCNUT_YEAR
			,t1.SE_ACCNUT_ACNT_CODE
			,t1.SE_ACCNUT_ACNT_NM
			,t1.BSNS_DISTRICT
			,t2.CODE_NM				AS BSNS_DISTRICT_NM
			,t1.BSNS_HSMP
			,t3.CODE_NM				AS BSNS_HSMP_NM
			,t1.SUPLY_TY
			,t4.CODE_NM				AS SUPLY_TY_NM
			,t1.BSNS_TY
			,t5.CODE_NM				AS BSNS_TY_NM
			,t1.USE_AT
			,t1.BUDGET_USE_AT
		FROM TBACC_SE_ACCNUT_ACNT_CODE t1
			 LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t2
			 ON t2.SE_ACC_CODE = '1' AND t1.BSNS_DISTRICT = t2.CODE
			 LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t3
			 ON t3.SE_ACC_CODE = '2' AND t1.BSNS_HSMP = t3.CODE
			 LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t4
			 ON t4.SE_ACC_CODE = '3' AND t1.SUPLY_TY = t4.CODE
			 LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_TY_MANAGE t5
			 ON t5.SE_ACC_CODE = '4' AND t1.BSNS_TY = t5.CODE
		WHERE t1.ACCNUT_YEAR = #ACCNUT_YEAR#
		ORDER BY SE_ACCNUT_ACNT_CODE
	</select>
	
	<!-- 구분회계계정 등록 -->
	<insert id="ACC060102DAO.seAccnutAcntCodeC" parameterClass="java.util.HashMap">
		INSERT INTO TBACC_SE_ACCNUT_ACNT_CODE
		(
			 ACCNUT_YEAR
			,SE_ACCNUT_ACNT_CODE
			,SE_ACCNUT_ACNT_NM
			,BSNS_DISTRICT
			,BSNS_HSMP
			,SUPLY_TY
			,BSNS_TY
			,USE_AT
			,BUDGET_USE_AT
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #ACCNUT_YEAR#
			,#SE_ACCNUT_ACNT_CODE#
			,#SE_ACCNUT_ACNT_NM#
			,#BSNS_DISTRICT#
			,#BSNS_HSMP#
			,#SUPLY_TY#
			,#BSNS_TY#
			,#USE_AT#
			,#BUDGET_USE_AT#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>

	<!-- 사업코드 갱신 -->
	<insert id="ACC060102DAO.tbprjBsnsCodeCU" parameterClass="java.util.HashMap">
		MERGE INTO TBPRJ_BSNS_CODE A
			USING (
			        SELECT SE_ACCNUT_ACNT_CODE, SE_ACCNUT_ACNT_NM, USE_AT, REGISTER_ID
			          FROM TBACC_SE_ACCNUT_ACNT_CODE
			         WHERE ACCNUT_YEAR=#ACCNUT_YEAR#
			           AND SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
			) B
			ON (A.BSNS_CODE = B.SE_ACCNUT_ACNT_CODE)
			WHEN MATCHED THEN
			    UPDATE SET BSNS_NM=#SE_ACCNUT_ACNT_NM#
			    		  ,USE_AT=#USE_AT#
			WHEN NOT MATCHED THEN
			    INSERT (A.BSNS_CODE
			            , A.BSNS_NM
			            , A.USE_AT
			            , A.REGISTER_ID
			            , A.REGIST_DT
			            , A.UPDUSR_ID
			            , A.UPDT_DT)
			    VALUES (#SE_ACCNUT_ACNT_CODE#
			            , #SE_ACCNUT_ACNT_NM#
			            , #USE_AT#
			            , #S_USER_ID#
						, SYSDATE
						, #S_USER_ID#
						, SYSDATE)
	</insert>
	
	<!-- 구분회계계정 수정 -->
	<update id="ACC060102DAO.seAccnutAcntCodeU" parameterClass="java.util.HashMap">
		UPDATE TBACC_SE_ACCNUT_ACNT_CODE
		SET 
			 SE_ACCNUT_ACNT_NM		= #SE_ACCNUT_ACNT_NM#
			,BSNS_DISTRICT          = #BSNS_DISTRICT#    
			,BSNS_HSMP              = #BSNS_HSMP#        
			,SUPLY_TY               = #SUPLY_TY#         
			,BSNS_TY                = #BSNS_TY#          
			,USE_AT                 = #USE_AT#
			,BUDGET_USE_AT          = #BUDGET_USE_AT#           
			,UPDUSR_ID              = #S_USER_ID#        
			,UPDT_DT                = SYSDATE            
		WHERE ACCNUT_YEAR			= #ACCNUT_YEAR#
		  AND SE_ACCNUT_ACNT_CODE 	= #SE_ACCNUT_ACNT_CODE#
	</update>
	
	<!-- 구분회계계정 삭제 -->
	<delete id="ACC060102DAO.seAccnutAcntCodeD" parameterClass="java.util.HashMap">
		DELETE FROM TBACC_SE_ACCNUT_ACNT_CODE
		WHERE ACCNUT_YEAR			= #ACCNUT_YEAR#
		  AND SE_ACCNUT_ACNT_CODE 	= #SE_ACCNUT_ACNT_CODE#
	</delete>
	
	<!-- 구분회계유형 목록 -->
	<select id="ACC060102DAO.seAccnutAcntTyManageList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT 
			 t1.SE_ACC_CODE
			,t1.CODE
			,DECODE(t1.SE_ACC_CODE,'2',t2.BSNS_NM,t1.CODE_NM) AS CODE_NM
			,t1.USE_AT
		FROM TBACC_SE_ACCNUT_ACNT_TY_MANAGE t1
		     LEFT OUTER JOIN TBPRJ_BSNS_CODE t2
		     ON t1.CODE = t2.BSNS_CODE
		WHERE SE_ACC_CODE = #SE_ACC_CODE#
		ORDER BY CODE
	</select>
	
	<!-- 구분회계유형 등록 -->
	<insert id="ACC060102DAO.seAccnutAcntTyManageC" parameterClass="java.util.HashMap">
		INSERT INTO TBACC_SE_ACCNUT_ACNT_TY_MANAGE
		(
			 SE_ACC_CODE
			,CODE
			,CODE_NM
			,USE_AT
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #SE_ACC_CODE#
			,(SELECT 
				  CASE WHEN #SE_ACC_CODE# = '1' THEN LPAD(NVL(MAX(CODE),0)+1, 3, '0')
				       WHEN #SE_ACC_CODE# = '2' THEN #CODE#
				       WHEN #SE_ACC_CODE# = '3' THEN LPAD(NVL(MAX(CODE),0)+1, 2, '0')
				       WHEN #SE_ACC_CODE# = '4' THEN LPAD(NVL(MAX(CODE),0)+1, 2, '0')
				       ELSE NULL
				  END
			  FROM TBACC_SE_ACCNUT_ACNT_TY_MANAGE 
			  WHERE SE_ACC_CODE = #SE_ACC_CODE#
   <![CDATA[  AND CODE <> 999) ]]>
			,#CODE_NM#
			,#USE_AT#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 구분회계유형 수정 -->
	<update id="ACC060102DAO.seAccnutAcntTyManageU" parameterClass="java.util.HashMap">
		UPDATE TBACC_SE_ACCNUT_ACNT_TY_MANAGE
		SET
			 CODE_NM	  = #CODE_NM#  
			,USE_AT       = #USE_AT#   
			,UPDUSR_ID    = #S_USER_ID#
			,UPDT_DT      = SYSDATE    
		WHERE SE_ACC_CODE = #SE_ACC_CODE#
		  AND CODE 		  = #CODE#
	</update>
	
	<!-- 구분회계유형 삭제 -->
	<delete id="ACC060102DAO.seAccnutAcntTyManageD" parameterClass="java.util.HashMap">
		DELETE FROM TBACC_SE_ACCNUT_ACNT_TY_MANAGE
		WHERE SE_ACC_CODE = #SE_ACC_CODE#
		  AND CODE 		  = #CODE#
	</delete>
	
	<!-- 구분회계코드 전년도 복사 -->
	<insert id="ACC060102DAO.seAccnutAcntCopyC" parameterClass="java.util.HashMap">
		INSERT INTO TBACC_SE_ACCNUT_ACNT_CODE
		(
			 ACCNUT_YEAR
			,SE_ACCNUT_ACNT_CODE
			,SE_ACCNUT_ACNT_NM
			,BSNS_DISTRICT
			,BSNS_HSMP
			,SUPLY_TY
			,BSNS_TY
			,USE_AT
			,BUDGET_USE_AT
			,EXPNDTR_BSNS_CODE
			,CTNU_USE_AT
			,OPERTN_YEAR
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		)
		SELECT 
			 ACCNUT_YEAR + 1
			,SE_ACCNUT_ACNT_CODE
			,SE_ACCNUT_ACNT_NM
			,BSNS_DISTRICT
			,BSNS_HSMP
			,SUPLY_TY
			,BSNS_TY
			,USE_AT
			,BUDGET_USE_AT
			,EXPNDTR_BSNS_CODE
			,CTNU_USE_AT
			,OPERTN_YEAR
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		FROM TBACC_SE_ACCNUT_ACNT_CODE
		WHERE ACCNUT_YEAR = #ACCNUT_YEAR# - 1
	</insert>
	
	<!-- 구분회계코드 참조 테이블 조회 -->
	<select id="ACC060102DAO.seAccnutAcntRef" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT LISTAGG(TBL||'('||CNT||'건)',CHR(13)||CHR(10)) WITHIN GROUP(ORDER BY NULL) AS REF_INFO
		FROM (
			    SELECT COUNT(1) AS CNT, '전표상세' AS TBL
					FROM TBACC_CHIT_DETAIL			/* 전표상세 */
					WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
					  AND SE_ACCNUT_ACNT_CODE	= #SE_ACCNUT_ACNT_CODE#
					UNION ALL
					SELECT COUNT(1) AS CNT, '구분회계결산' AS TBL
					FROM TBACC_ACCNUT_STACNT_SE 	/* 회계결산 구분회계 */
					WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
					  AND SE_ACCNUT_ACNT_CODE	= #SE_ACCNUT_ACNT_CODE#
					UNION ALL
					SELECT COUNT(1) AS CNT, '구분회계결산집계' AS TBL
					FROM TBACC_ACCNUT_STACNTSUM_SE 	/* 회계결산집계_구분회계 */
					WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
					  AND SE_ACCNUT_ACNT_CODE	= #SE_ACCNUT_ACNT_CODE#
		)
		WHERE CNT <![CDATA[<>]]> 0
	</select>
	
	<!-- 회계명 동기화 -->
	<update id="ACC060102DAO.accNmSync" parameterClass="java.util.HashMap">
		UPDATE TBACC_SE_ACCNUT_ACNT_CODE O1 SET
		SE_ACCNUT_ACNT_NM = (
		                    SELECT 
		                    (
		                        /* 코드 앞3자리 사업지구 */
		                        SELECT DECODE (t1.SE_ACC_CODE, '2', t2.BSNS_NM, t1.CODE_NM) AS CODE_NM
		                        FROM    TBACC_SE_ACCNUT_ACNT_TY_MANAGE t1
		                             LEFT OUTER JOIN
		                                TBPRJ_BSNS_CODE t2
		                             ON t1.CODE = t2.BSNS_CODE
		                       WHERE SE_ACC_CODE = '1'
		                         AND SUBSTR(P1.SE_ACCNUT_ACNT_CODE,1,3)=t1.CODE
		                    ) 
		                    ||
		                    (
		                        /* 코드 중간 2자리 공급유형 */
		                        SELECT DECODE (t1.SE_ACC_CODE, '2', t2.BSNS_NM, t1.CODE_NM) AS CODE_NM
		                        FROM    TBACC_SE_ACCNUT_ACNT_TY_MANAGE t1
		                             LEFT OUTER JOIN
		                                TBPRJ_BSNS_CODE t2
		                             ON t1.CODE = t2.BSNS_CODE
		                       WHERE SE_ACC_CODE = '3'
		                       AND SUBSTR(P1.SE_ACCNUT_ACNT_CODE,4,2)=t1.CODE
		                    )
		                    ||
		                    (
		                        /* 코드 마지막 2자리 사업유형 */
		                        SELECT DECODE (t1.SE_ACC_CODE, '2', t2.BSNS_NM, t1.CODE_NM) AS CODE_NM
		                        FROM    TBACC_SE_ACCNUT_ACNT_TY_MANAGE t1
		                             LEFT OUTER JOIN
		                                TBPRJ_BSNS_CODE t2
		                             ON t1.CODE = t2.BSNS_CODE
		                       WHERE SE_ACC_CODE = '4'
		                       AND SUBSTR(P1.SE_ACCNUT_ACNT_CODE,6,2)=t1.CODE
		                    )   
		                    FROM TBACC_SE_ACCNUT_ACNT_CODE P1
		                    WHERE P1.SE_ACCNUT_ACNT_CODE = O1.SE_ACCNUT_ACNT_CODE
		                )
		WHERE ACCNUT_YEAR = #ACCNUT_YEAR#
	</update>
	
	<!-- 사업코드 동기화 -->
	<insert id="ACC060102DAO.bsnsSync" parameterClass="java.util.HashMap">
		DECLARE
		BEGIN
			<!-- 사업코드 테이블의 사용유무를 전체 미사용 처리 -->
			UPDATE TBPRJ_BSNS_CODE
			SET USE_AT='0';
			
			<!-- 사업 코드 테이블과 구분회계 테이블 비교해서 
				 같은 코드가 있으면 사용처리
				 같은 코드가 없으면 신규 입력 후 사용처리 -->
			MERGE INTO TBPRJ_BSNS_CODE A
			USING (
			        SELECT SE_ACCNUT_ACNT_CODE, SE_ACCNUT_ACNT_NM, USE_AT, REGISTER_ID
			          FROM TBACC_SE_ACCNUT_ACNT_CODE
			         WHERE ACCNUT_YEAR=#ACCNUT_YEAR#
			) B
			ON (A.BSNS_CODE = B.SE_ACCNUT_ACNT_CODE)
			WHEN MATCHED THEN
			    UPDATE  SET A.BSNS_NM=B.SE_ACCNUT_ACNT_NM
			    		  , A.USE_AT=B.USE_AT
			WHEN NOT MATCHED THEN
			    INSERT (A.BSNS_CODE
			            , A.BSNS_NM
			            , A.USE_AT
			            , A.REGISTER_ID
			            , A.REGIST_DT
			            , A.UPDUSR_ID
			            , A.UPDT_DT)
			    VALUES (B.SE_ACCNUT_ACNT_CODE
			            , B.SE_ACCNUT_ACNT_NM
			            , B.USE_AT
			            , B.REGISTER_ID
			            , SYSDATE
			            , B.REGISTER_ID
			            , SYSDATE)
			;    
		   	
		END;
	</insert>
</sqlMap>