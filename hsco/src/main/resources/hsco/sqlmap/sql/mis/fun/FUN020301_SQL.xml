<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="FUN020301_SQL">	
	<typeAlias alias="egovMap"          type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 공사채 리스트 조회(팝업) -->
	<select id="FUN020301DAO.selectPbncdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
		<![CDATA[	
			SELECT C.BSNS_CODE                                                                          AS BSNS_CODE  
			       ,C.BSNS_NM                                                                           AS BSNS_NM
			       ,A.PBNCD_NO                                                                          AS PBNCD_NO
			       ,A.CPTAL_KND                                                                         AS CPTAL_KND
			       ,B.CODE_NM                                                                           AS CPTAL_KND_NM
			       ,A.BRRW_ACNUT_NM                                                                     AS BRRW_ACNUT_NM
			       ,A.FNNC_INSTT_SPOT_CODE                                                              AS FNNC_INSTT_CODE
			       ,D.FNNC_INSTT_CODE_NM                                                                AS FNNC_INSTT_NM
			       ,A.BRRW_AMOUNT                                                                       AS BRRW_AMOUNT
			       ,A.BRRW_DE                                                                           AS BRRW_DE
			       ,A.INTRT                                                                             AS INTRT
			       ,CEIL(MONTHS_BETWEEN(TO_DATE(A.EXPRTN_DE,'YYYYMMDD'),TO_DATE(A.BRRW_DE,'YYYYMMDD'))) AS RPAY_PD
			       ,A.RM                                                                                AS RM
			       ,A.EXPRTN_AT                                                                         AS EXPRTN_AT
			       ,A.BRWOFC
			       ,A.EXPRTN_DE
			       ,A.KR_NO
                   ,NVL(A.OBJT_AT, '0')																	AS OBJT_AT
				   ,CASE WHEN NVL(A.OBJT_AT, '0') = '0' AND NVL((SELECT AA.PBLICTE_MTH FROM TBFUN_CDIT AA WHERE AA.ITEM_CODE = A.KR_NO AND AA.OBJT_AT = A.OBJT_AT)  ,'0') = '0'
					     THEN '2' /* 미등록 */
					     ELSE A.OBJT_AT
					END AS PBLICTE_SE  
			  FROM TBFUN_PBNCD A
				   LEFT OUTER JOIN (SELECT DETAIL_CODE    AS CODE
								         , DETAIL_CODE_NM AS CODE_NM
								    FROM TBFUN_CPTAL_DETAIL_CODE
								    WHERE CODE_SE = '000') B 
				                ON A.CPTAL_KND = B.CODE			  
		           LEFT OUTER JOIN TBPRJ_BSNS_CODE C
		                        ON A.BSNS_CODE = C.BSNS_CODE
			       LEFT OUTER JOIN (SELECT FNNC_INSTT_CODE
			                               ,FNNC_INSTT_CODE_NM
		                            FROM   TBACC_FNNC_INSTT_CODE) D
		                        ON A.FNNC_INSTT_SPOT_CODE = D.FNNC_INSTT_CODE		                        
			 WHERE 1=1
		]]>
		<isNotEmpty property="CPTAL_KND">
		       AND A.CPTAL_KND = #CPTAL_KND#
		</isNotEmpty>
		<isNotEmpty property="BRWOFC">
		       AND A.BRWOFC LIKE '%'||#BRWOFC#||'%'
		</isNotEmpty>
		<isNotEmpty property="EXPRTN_AT">
		       AND A.EXPRTN_AT = #EXPRTN_AT#
		</isNotEmpty>
		<isNotEmpty property="BRRW_ACNUT_NM">
		       AND A.BRRW_ACNUT_NM LIKE '%'||#BRRW_ACNUT_NM#||'%'
		</isNotEmpty>
		<isNotEmpty property="FUN_USER3_AT">
			<isEqual property="FUN_USER3_AT" compareValue="1">
				AND A.CPTAL_KND IN ('A02', 'B02')
			</isEqual>
		</isNotEmpty>
		<![CDATA[			   
			 ORDER BY A.BRRW_DE, A.PBNCD_NO
		]]>
    </select>
    
	<!-- 이자지급계획 리스트 조회(팝업) -->
	<select id="FUN020301DAO.selectIntrRpayPlan2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
		<![CDATA[	
			SELECT C.BSNS_CODE                                                                          AS BSNS_CODE  
			       ,C.BSNS_NM                                                                           AS BSNS_NM
			       ,A.PBNCD_NO                                                                          AS PBNCD_NO
			       ,A.CPTAL_KND                                                                         AS CPTAL_KND
			       ,B.CODE_NM                                                                           AS CPTAL_KND_NM
			       ,A.BRRW_ACNUT_NM                                                                     AS BRRW_ACNUT_NM
			       ,A.FNNC_INSTT_SPOT_CODE                                                              AS FNNC_INSTT_CODE
			       ,D.FNNC_INSTT_CODE_NM                                                                AS FNNC_INSTT_NM
			       ,A.BRRW_AMOUNT                                                                       AS BRRW_AMOUNT
			       ,NVL(A.BRRW_AMOUNT, 0) - NVL((SELECT SUM(AA.RPAY_AMOUNT) FROM TBFUN_PBNCD_PRNCPAL_RPAY_DTLS AA WHERE AA.PBNCD_NO = A.PBNCD_NO), 0) AS BRRW_BALANCE
			       ,A.BRRW_DE                                                                           AS BRRW_DE
			       ,A.INTRT                                                                             AS INTRT
			       ,CEIL(MONTHS_BETWEEN(TO_DATE(A.EXPRTN_DE,'YYYYMMDD'),TO_DATE(A.BRRW_DE,'YYYYMMDD'))) AS RPAY_PD
			       ,A.RM                                                                                AS RM
			       ,A.EXPRTN_AT                                                                         AS EXPRTN_AT
			       ,A.BRWOFC
			       ,A.EXPRTN_DE
			       ,A.KR_NO
                   ,NVL(A.OBJT_AT, '0')																	AS OBJT_AT
				   ,CASE WHEN NVL(A.OBJT_AT, '0') = '0' AND NVL((SELECT AA.PBLICTE_MTH FROM TBFUN_CDIT AA WHERE AA.ITEM_CODE = A.KR_NO AND AA.OBJT_AT = A.OBJT_AT)  ,'0') = '0'
					     THEN '2' /* 미등록 */
					     ELSE A.OBJT_AT
					END AS PBLICTE_SE  
				   ,E.RPAY_DE                                               AS RPAY_DE
				   ,E.RPAY_DE                                               AS RPAY_DE2
				   ,TO_CHAR(TO_DATE(E.RPAY_DE ,'YYYYMMDD') - 1 ,'YYYYMMDD') AS RPAY_DE3
				   ,E.RPAY_AMOUNT                                           AS RPAY_AMOUNT
				   ,SFACC_AMOUNT_TRANS(E.RPAY_AMOUNT)                       AS KR_AMT
				   ,E.RPAY_INTRT                                            AS RPAY_INTRT
				   ,E.SUMRY                                                 AS SUMRY
			       , SFCOM_GET_DRFTSTS(E.SANCTN_NO, E.REGIST_DT) AS DRFT_STS /* 기안상태 */
				   ,'theme://images/sanctn/' || 'D' || SFCOM_GET_DRFTSTS(E.SANCTN_NO, E.REGIST_DT) || '.png' AS DRFT_STS_IMG /* 기안상태Img */
				   ,TO_CHAR(F.DRFT_DT, 'YYYY-MM-DD HH24:MI:SS') AS DRFT_DT /* 기안일시 */
				   ,SFCOM_GET_APPRSTS(E.SANCTN_NO, E.REGIST_DT) AS SANCTN_STS /* 결재상태 */
				   ,'theme://images/sanctn/' || 'A' || SFCOM_GET_APPRSTS(E.SANCTN_NO, E.REGIST_DT) || '.png' AS SANCTN_STS_IMG /* 결재상태Img */
				   ,TO_CHAR(F.LAST_SANCTN_DT, 'YYYY-MM-DD HH24:MI:SS') AS LAST_SANCTN_DT /* 최종결재일시 */				   
			  FROM TBFUN_PBNCD A
				   LEFT OUTER JOIN (SELECT DETAIL_CODE    AS CODE
								         , DETAIL_CODE_NM AS CODE_NM
								    FROM TBFUN_CPTAL_DETAIL_CODE
								    WHERE CODE_SE = '000') B 
				                ON A.CPTAL_KND = B.CODE			  
		           LEFT OUTER JOIN TBPRJ_BSNS_CODE C
		                        ON A.BSNS_CODE = C.BSNS_CODE
			       LEFT OUTER JOIN (SELECT FNNC_INSTT_CODE
			                               ,FNNC_INSTT_CODE_NM
		                            FROM   TBACC_FNNC_INSTT_CODE) D
		                        ON A.FNNC_INSTT_SPOT_CODE = D.FNNC_INSTT_CODE
		         , TBFUN_PBNCD_INTR_RPAY_PLAN E		
		           LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR F
  				   ON E.SANCTN_NO = F.SANCTN_NO                         
			 WHERE 1=1
			 AND   A.PBNCD_NO = E.PBNCD_NO
		]]>
		<isNotEmpty property="FUN_USER3_AT">
			<isEqual property="FUN_USER3_AT" compareValue="1">
				AND A.CPTAL_KND IN ('A02', 'B02')
			</isEqual>
		</isNotEmpty>
				AND E.RPAY_DE BETWEEN #BGN_DE# AND #END_DE#
		<![CDATA[			   
			 ORDER BY A.BRRW_DE, A.PBNCD_NO
		]]>
    </select>
    
        
	<!-- 공사채 기본정보 조회(1건) -->
	<select id="FUN020301DAO.selectPbncdInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT A.CONFM_NO                                                                               AS CONFM_NO
			       ,A.CONFM_AMOUNT                                                                          AS CONFM_AMOUNT
			       ,A.BOD_CONFM_DE                                                                          AS BOD_CONFM_DE
			       ,A.GVRN_CONFM_DE                                                                         AS GVRN_CONFM_DE
			       ,A.CITY_CONFM_DE                                                                         AS CITY_CONFM_DE
			       ,B.BSNS_CODE                                                                             AS BSNS_CODE  
			       ,B.BSNS_NM                                                                               AS BSNS_NM
			       ,C.PBNCD_NO                                                                              AS PBNCD_NO
			       ,C.CPTAL_KND                                                                             AS CPTAL_KND
			       ,D.CODE_NM                                                                               AS CPTAL_KND_NM
			       ,C.CMPNINT_SE                                                                            AS CMPNINT_SE
			       ,C.INRST_SE                                                                              AS INRST_SE
			       ,C.RPAY_SE                                                                               AS RPAY_SE
			       ,C.BRRW_ACNUT_NM                                                                         AS BRRW_ACNUT_NM
			       ,C.FNNC_INSTT_SPOT_CODE                                                                  AS FNNC_INSTT_CODE
			       ,DECODE(C.FNNC_INSTT_SPOT_NM, NULL, '', E.FNNC_INSTT_CODE_NM||' '||C.FNNC_INSTT_SPOT_NM) AS FNNC_INSTT_NM  
			       ,C.BRRW_AMOUNT                                                                       AS BRRW_AMOUNT
			       ,NVL(C.BRRW_AMOUNT, 0) - NVL((SELECT SUM(AA.RPAY_AMOUNT) FROM TBFUN_PBNCD_PRNCPAL_RPAY_DTLS AA WHERE AA.PBNCD_NO = C.PBNCD_NO), 0) AS BRRW_BALANCE
			       ,C.BRRW_DE                                                                               AS BRRW_DE
			       ,C.EXPRTN_DE                                                                             AS EXPRTN_DE
			       ,C.INTRT                                                                                 AS INTRT
			       ,C.INTR_CYCLE                                                                            AS INTR_CYCLE
			       ,CEIL(MONTHS_BETWEEN(TO_DATE(C.EXPRTN_DE,'YYYYMMDD'),TO_DATE(C.BRRW_DE,'YYYYMMDD')))     AS RPAY_PD
			       ,C.RM                                                                                    AS RM
			       ,C.EXPRTN_AT                                                                             AS EXPRTN_AT
			       ,C.KR_NO                                                                                 AS KR_NO
			       ,C.DFR_MT                                                                                AS DFR_MT
			       ,C.RPAY_MT                                                                               AS RPAY_MT
			       ,C.ISU_FOM                                                                               AS ISU_FOM
			       ,C.BRWOFC                                                                                AS BRWOFC
			       ,C.PNINT_RCPMNY_INSTT                                                                    AS PNINT_RCPMNY_INSTT
			       ,C.REGIST_CNVRS_DE                                                                       AS REGIST_CNVRS_DE
			       ,C.REGIST_CNVRS_AT                                                                       AS REGIST_CNVRS_AT
			       ,C.FIXING_INRST_SE                                                                       AS FIXING_INRST_SE
			       ,C.FILE_SN                                                                               AS FILE_SN
			       ,C.FNNC_INSTT_SPOT_NM                                                                    AS FNNC_INSTT_SPOT_NM
			       ,C.OBJT_AT                                                                               AS OBJT_AT
			       ,C.ACNUTNO
			       ,C.CDLT1
			       ,C.CDLT2
			       ,C.CDLT3
			       ,C.CDLT4
			  FROM TBFUN_PBNCD_CONFM A
			       ,TBFUN_PBNCD C
		           LEFT OUTER JOIN TBPRJ_BSNS_CODE B
		                        ON C.BSNS_CODE = B.BSNS_CODE
			       LEFT OUTER JOIN (SELECT DETAIL_CODE    AS CODE
							             , DETAIL_CODE_NM AS CODE_NM
							        FROM TBFUN_CPTAL_DETAIL_CODE
							        WHERE CODE_SE = '000') D
			                    ON C.CPTAL_KND = D.CODE
			       LEFT OUTER JOIN (SELECT FNNC_INSTT_CODE
			                               ,FNNC_INSTT_CODE_NM
		                            FROM   TBACC_FNNC_INSTT_CODE) E
		                        ON C.FNNC_INSTT_SPOT_CODE = E.FNNC_INSTT_CODE			                    	                        			       
			 WHERE 1=1
			   AND C.CONFM_NO = A.CONFM_NO
			   AND C.PBNCD_NO = #PBNCD_NO#
		]]>
    </select>
    
	<!-- 공사채 이자 상환 계획 조회 -->
	<select id="FUN020301DAO.selectIntrRpayPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT  A.PBNCD_NO                                              AS PBNCD_NO
			       ,A.RPAY_DE                                               AS RPAY_DE
			       ,A.RPAY_DE                                               AS RPAY_DE2
			       ,TO_CHAR(TO_DATE(A.RPAY_DE, 'YYYYMMDD') - 1, 'YYYYMMDD') AS RPAY_DE3
			       ,A.RPAY_AMOUNT                                           AS RPAY_AMOUNT
			       ,SFACC_AMOUNT_TRANS(A.RPAY_AMOUNT)                       AS KR_AMT
			       ,A.RPAY_INTRT                                            AS RPAY_INTRT
			       ,A.SUMRY                                                 AS SUMRY
			       ,A.COMPUT_BSIS                                           AS COMPUT_BSIS       
			       ,A.PYMNT_DE                                              AS PYMNT_DE          
			       ,A.FNNC_INSTT_CODE                                       AS FNNC_INSTT_CODE   
			       ,A.ACNUTNO                                               AS ACNUTNO           
			       ,A.BUDGET_YEAR                                           AS BUDGET_YEAR       
			       ,A.BSNS_SE                                               AS BSNS_SE           
			       ,A.BALC_SE                                               AS BALC_SE           
			       ,A.BUDGET_ACNT_CODE                                      AS BUDGET_ACNT_CODE  
			       ,C.BUDGET_ACNT_NM                                        AS BUDGET_ACNT_NM    
			       ,A.EXPNDTR_UNIT_CODE                                     AS EXPNDTR_UNIT_CODE 
			       ,C.EXPNDTR_UNIT_NM                                       AS EXPNDTR_UNIT_NM   
			       ,C.BUDGET_CNRL_AT                                        AS BUDGET_CNRL_AT    
			       ,A.EXPNDTR_DECSN_YEAR                                    AS EXPNDTR_DECSN_YEAR
			       ,A.EXPNDTR_DECSN_DE                                      AS EXPNDTR_DECSN_DE  
			       ,A.EXPNDTR_DECSN_NO                                      AS EXPNDTR_DECSN_NO  
			       ,A.SANCTN_NO                                             AS SANCTN_NO
			       ,SFCOM_GET_SANCTN_KND(A.SANCTN_NO)                       AS SANCTN_STS /* 결재상태 */
			       ,A.CNFIRM_AT                                             AS CNFIRM_AT
			       ,A.REGISTER_ID                                           AS REGISTER_ID
			       ,TO_CHAR(A.REGIST_DT, 'YYYYMMDD')                        AS REGIST_DT
			       ,A.UPDUSR_ID                                             AS UPDUSR_ID
			       ,TO_CHAR(A.UPDT_DT, 'YYYYMMDD')                          AS UPDT_DT
			       ,NVL(D.EXPRTN_AT, '0')                                   AS EXPRTN_AT
			       ,CASE WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '1' THEN '0'      /* 결재상태 - 1:기안 */
			             WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '4' THEN '0'      /* 결재상태 - 4:중간결재 */
			             WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '5' THEN '0'      /* 결재상태 - 5:결재완료 */
			             WHEN A.CNFIRM_AT = '1' THEN '0'
			             WHEN D.EXPRTN_AT = '1' THEN '0'
			             ELSE '1'
			             END                                                AS UPDATE_POSBL_AT  /* 수정가능여부판단변수 */
			  FROM TBFUN_PBNCD_INTR_RPAY_PLAN A
			  LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR B
			          ON A.SANCTN_NO = B.SANCTN_NO
			  LEFT OUTER JOIN (
					            SELECT a1.YEAR
					                 , a1.BSNS_SE
					                 , a1.BALC_SE
					                 , a1.BUDGET_ACNT_CODE
					                 , a1.BUDGET_ACNT_NM
					                 , a2.EXPNDTR_UNIT_CODE
					                 , a2.EXPNDTR_UNIT_NM
					                 , a2.BUDGET_CNRL_AT
					            FROM TBBDG_BUDGET_ACNT_CODE a1
					            LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
					                    ON a1.YEAR             = a2.YEAR
					                   AND a1.BSNS_SE          = a2.BSNS_SE
					                   AND a1.BALC_SE          = a2.BALC_SE
					                   AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
					          ) C
					  ON A.BUDGET_YEAR       = C.YEAR
					 AND A.BSNS_SE           = C.BSNS_SE
					 AND A.BALC_SE           = C.BALC_SE
					 AND A.BUDGET_ACNT_CODE  = C.BUDGET_ACNT_CODE
					 AND A.EXPNDTR_UNIT_CODE = C.EXPNDTR_UNIT_CODE
			  LEFT OUTER JOIN TBFUN_PBNCD D
			          ON A.PBNCD_NO = D.PBNCD_NO
			 WHERE 1=1
			   AND A.PBNCD_NO = #PBNCD_NO#
			 ORDER BY A.RPAY_DE
		]]>
    </select>			
	
    <!-- 공사채 이자 상환 계획 등록 -->
    <insert id="FUN020301DAO.intrRpayPlanC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBFUN_PBNCD_INTR_RPAY_PLAN (
				 PBNCD_NO
				,RPAY_DE
				,RPAY_AMOUNT
				,RPAY_INTRT
				,SUMRY
				,CNFIRM_AT
				,REGISTER_ID
				,REGIST_DT
				,UPDUSR_ID
				,UPDT_DT
             ) VALUES (
				 #PBNCD_NO#
				,#RPAY_DE#
				,#RPAY_AMOUNT#
				,#RPAY_INTRT#
				,#SUMRY#
				,#CNFIRM_AT#
                ,#S_USER_ID#
                ,SYSDATE
                ,#S_USER_ID#
                ,SYSDATE
             )
        ]]>
    </insert>


    <!-- 공사채 이자 상환 계획 수정 -->
    <update id="FUN020301DAO.intrRpayPlanU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_INTR_RPAY_PLAN 
               SET  RPAY_DE         	= #RPAY_DE#
                   ,RPAY_AMOUNT    		= #RPAY_AMOUNT#
                   ,RPAY_INTRT      	= #RPAY_INTRT#
                   ,SUMRY           	= #SUMRY#
                   ,COMPUT_BSIS			= #COMPUT_BSIS#
                   ,PYMNT_DE			= #PYMNT_DE#
                   ,FNNC_INSTT_CODE		= #FNNC_INSTT_CODE#
                   ,ACNUTNO				= #ACNUTNO#
                   ,BUDGET_YEAR			= #BUDGET_YEAR#
                   ,BSNS_SE				= #BSNS_SE#
                   ,BALC_SE				= #BALC_SE#
                   ,BUDGET_ACNT_CODE	= #BUDGET_ACNT_CODE#
                   ,EXPNDTR_UNIT_CODE	= #EXPNDTR_UNIT_CODE#
                   ,CNFIRM_AT           = #CNFIRM_AT#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE2#
        ]]>
    </update>
    
    <!-- 공사채 이자 상환 계획 결재정보 수정 -->
    <update id="FUN020301DAO.intrRpayPlanSanctnU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_INTR_RPAY_PLAN 
               SET  COMPUT_BSIS			= #COMPUT_BSIS#
                   ,PYMNT_DE			= #PYMNT_DE#
                   ,FNNC_INSTT_CODE		= #FNNC_INSTT_CODE#
                   ,ACNUTNO				= #ACNUTNO#
                   ,BUDGET_YEAR			= #BUDGET_YEAR#
                   ,BSNS_SE				= #BSNS_SE#
                   ,BALC_SE				= #BALC_SE#
                   ,BUDGET_ACNT_CODE	= #BUDGET_ACNT_CODE#
                   ,EXPNDTR_UNIT_CODE	= #EXPNDTR_UNIT_CODE#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
        ]]>
    </update>
    
    <!-- 공사채 원금 상환 계획 결재정보 수정 -->
    <update id="FUN020301DAO.prncpalRpayPlanSanctnU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_PRNCPAL_RPAY_PLAN 
               SET  COMPUT_BSIS			= #COMPUT_BSIS#
                   ,PYMNT_DE			= #PYMNT_DE#
                   ,FNNC_INSTT_CODE		= #FNNC_INSTT_CODE#
                   ,ACNUTNO				= #ACNUTNO#
                   ,BUDGET_YEAR			= #BUDGET_YEAR1#
                   ,BSNS_SE				= #BSNS_SE1#
                   ,BALC_SE				= #BALC_SE1#
                   ,BUDGET_ACNT_CODE	= #BUDGET_ACNT_CODE1#
                   ,EXPNDTR_UNIT_CODE	= #EXPNDTR_UNIT_CODE1#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE1#
        ]]>
    </update>            

    <!-- 공사채 이자 상환 계획 삭제 -->
    <delete id="FUN020301DAO.intrRpayPlanD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_INTR_RPAY_PLAN 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
        ]]>
    </delete>
    
	<!-- 공사채 이자 상환 내역 조회 -->
	<select id="FUN020301DAO.selectIntrRpayDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT  A.PBNCD_NO                                           AS PBNCD_NO
			       ,A.RPAY_DE                                            AS RPAY_DE
			       ,A.RPAY_DE                                            AS RPAY_DE2
			       ,A.RPAY_AMOUNT                                        AS RPAY_AMOUNT
			       ,A.RPAY_INTRT                                         AS RPAY_INTRT
			       ,A.SUMRY                                              AS SUMRY          
			       ,A.REGISTER_ID                                        AS REGISTER_ID
			       ,TO_CHAR(A.REGIST_DT, 'YYYYMMDD')                     AS REGIST_DT
			       ,A.UPDUSR_ID                                          AS UPDUSR_ID
			       ,TO_CHAR(A.UPDT_DT, 'YYYYMMDD')                       AS UPDT_DT
			  FROM TBFUN_PBNCD_INTR_RPAY_DTLS A
			 WHERE 1=1
			   AND A.PBNCD_NO = #PBNCD_NO#
			 ORDER BY A.RPAY_DE
		]]>
    </select>    
    
    <!-- 공사채 이자 상환 내역 등록 -->
    <insert id="FUN020301DAO.intrRpayDtlsC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBFUN_PBNCD_INTR_RPAY_DTLS (
				 PBNCD_NO
				,RPAY_DE
				,RPAY_AMOUNT
				,RPAY_INTRT
				,SUMRY
				,REGISTER_ID
				,REGIST_DT
				,UPDUSR_ID
				,UPDT_DT
             ) VALUES (
				 #PBNCD_NO#
				,#RPAY_DE#
				,#RPAY_AMOUNT#
				,#RPAY_INTRT#
				,#SUMRY#  
                ,#S_USER_ID#
                ,SYSDATE
                ,#S_USER_ID#
                ,SYSDATE
             )
        ]]>
    </insert>


    <!-- 공사채 이자 상환 내역 수정 -->
    <update id="FUN020301DAO.intrRpayDtlsU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_INTR_RPAY_DTLS
               SET  RPAY_DE         = #RPAY_DE#
                   ,RPAY_AMOUNT     = #RPAY_AMOUNT#
                   ,RPAY_INTRT      = #RPAY_INTRT#
                   ,SUMRY           = #SUMRY#
                   ,SANCTN_NO       = #SANCTN_NO#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE2#
        ]]>
    </update>


    <!-- 공사채 이자 상환 내역 삭제 -->
    <delete id="FUN020301DAO.intrRpayDtlsD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_INTR_RPAY_DTLS 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
        ]]>
    </delete>


    <!-- 공사채 이자 상환 내역 가져와 등록 -->
    <insert id="FUN020301DAO.intrRpayDtlsLoadC" parameterClass="java.util.HashMap">
    BEGIN
    		DELETE TBFUN_PBNCD_INTR_RPAY_DTLS
    		WHERE  PBNCD_NO = #PBNCD_NO# ;
    		
        <![CDATA[
			INSERT 
			  INTO TBFUN_PBNCD_INTR_RPAY_DTLS 
			       ( 
			           PBNCD_NO, 
			           RPAY_DE, 
			           RPAY_AMOUNT, 
			           RPAY_INTRT, 
			           SUMRY, 
			           REGISTER_ID, 
			           REGIST_DT, 
			           UPDUSR_ID, 
			           UPDT_DT 
			       ) 
			SELECT PBNCD_NO, 
			       RPAY_DE, 
			       RPAY_AMOUNT, 
			       RPAY_INTRT, 
			       SUMRY, 
			       #S_USER_ID# AS REGISTER_ID, 
			       SYSDATE, 
			       #S_USER_ID# AS UPDUSR_ID, 
			       SYSDATE 
			  FROM TBFUN_PBNCD_INTR_RPAY_PLAN A 
			 WHERE A.PBNCD_NO = #PBNCD_NO# 
			       /*AND SFCOM_GET_APPRSTS(A.SANCTN_NO, A.REGIST_DT) = '256'*/
			       AND A.RPAY_DE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
			       AND NOT EXISTS 
			       (SELECT * 
			         FROM TBFUN_PBNCD_INTR_RPAY_DTLS 
			        WHERE PBNCD_NO = A.PBNCD_NO 
			              AND RPAY_DE = A.RPAY_DE
			       );
        ]]>
    END;
    </insert>


    <!-- 공사채 원금 상환 계획 조회 -->
	<select id="FUN020301DAO.selectPrncpalRpayPlan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT  A.PBNCD_NO                        AS PBNCD_NO
			       ,A.RPAY_DE                         AS RPAY_DE
			       ,A.RPAY_DE                         AS RPAY_DE2
			       ,A.RPAY_AMOUNT                     AS RPAY_AMOUNT
			       ,SFACC_AMOUNT_TRANS(A.RPAY_AMOUNT) AS KR_AMT             
			       ,A.RPAY_INTRT                      AS RPAY_INTRT
			       ,A.SUMRY                           AS SUMRY  
				   ,A.COMPUT_BSIS                     AS COMPUT_BSIS       
				   ,A.PYMNT_DE                        AS PYMNT_DE          
				   ,A.FNNC_INSTT_CODE                 AS FNNC_INSTT_CODE   
				   ,A.ACNUTNO                         AS ACNUTNO           
				   ,A.BUDGET_YEAR                     AS BUDGET_YEAR       
				   ,A.BSNS_SE                         AS BSNS_SE           
				   ,A.BALC_SE                         AS BALC_SE           
				   ,A.BUDGET_ACNT_CODE                AS BUDGET_ACNT_CODE  
				   ,C.BUDGET_ACNT_NM                  AS BUDGET_ACNT_NM    
				   ,A.EXPNDTR_UNIT_CODE               AS EXPNDTR_UNIT_CODE 
				   ,C.EXPNDTR_UNIT_NM                 AS EXPNDTR_UNIT_NM   
				   ,C.BUDGET_CNRL_AT                  AS BUDGET_CNRL_AT    
				   ,A.EXPNDTR_DECSN_YEAR              AS EXPNDTR_DECSN_YEAR
				   ,A.EXPNDTR_DECSN_DE                AS EXPNDTR_DECSN_DE  
				   ,A.EXPNDTR_DECSN_NO                AS EXPNDTR_DECSN_NO
			       ,A.SANCTN_NO                       AS SANCTN_NO
				   ,SFCOM_GET_SANCTN_KND(A.SANCTN_NO) AS SANCTN_STS /* 결재상태 */
				   ,A.CNFIRM_AT                       AS CNFIRM_AT
			       ,A.REGISTER_ID                     AS REGISTER_ID
			       ,TO_CHAR(A.REGIST_DT, 'YYYYMMDD')  AS REGIST_DT
			       ,A.UPDUSR_ID                       AS UPDUSR_ID
			       ,TO_CHAR(A.UPDT_DT, 'YYYYMMDD')    AS UPDT_DT
			       ,NVL(D.EXPRTN_AT, '0')             AS EXPRTN_AT
			       ,CASE WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '1' THEN '0'      /* 결재상태 - 1:기안 */
			             WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '4' THEN '0'      /* 결재상태 - 4:중간결재 */
			             WHEN SFCOM_GET_SANCTN_KND(A.SANCTN_NO) = '5' THEN '0'      /* 결재상태 - 5:결재완료 */
			             WHEN A.CNFIRM_AT = '1' THEN '0'
			             WHEN D.EXPRTN_AT = '1' THEN '0'
			             ELSE '1'
			             END                          AS UPDATE_POSBL_AT  /* 수정가능여부판단변수 */
			  FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN A
			  LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR B
			          ON A.SANCTN_NO = B.SANCTN_NO
			  LEFT OUTER JOIN (
			                   SELECT a1.YEAR        
			                        , a1.BSNS_SE          
			                        , a1.BALC_SE          
			                        , a1.BUDGET_ACNT_CODE 
			                        , a1.BUDGET_ACNT_NM   
			                        , a2.EXPNDTR_UNIT_CODE
			                        , a2.EXPNDTR_UNIT_NM  
			                        , a2.BUDGET_CNRL_AT
			                   FROM TBBDG_BUDGET_ACNT_CODE a1
			                   LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
			                           ON a1.YEAR             = a2.YEAR
			                          AND a1.BSNS_SE          = a2.BSNS_SE
			                          AND a1.BALC_SE          = a2.BALC_SE
			                          AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
			                  ) C
			          ON A.BUDGET_YEAR       = C.YEAR
			         AND A.BSNS_SE           = C.BSNS_SE
			         AND A.BALC_SE           = C.BALC_SE
			         AND A.BUDGET_ACNT_CODE  = C.BUDGET_ACNT_CODE
			         AND A.EXPNDTR_UNIT_CODE = C.EXPNDTR_UNIT_CODE
			  LEFT OUTER JOIN TBFUN_PBNCD D
			          ON A.PBNCD_NO = D.PBNCD_NO
			 WHERE 1=1
			   AND A.PBNCD_NO = #PBNCD_NO#
			 ORDER BY A.RPAY_DE
		]]>
    </select>
    
    <!-- 공사채 원금 상환 계획 등록 -->
    <insert id="FUN020301DAO.prncpalRpayPlanC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBFUN_PBNCD_PRNCPAL_RPAY_PLAN (
				 PBNCD_NO
				,RPAY_DE
				,RPAY_AMOUNT
				,RPAY_INTRT
				,SUMRY
				,CNFIRM_AT
				,REGISTER_ID
				,REGIST_DT
				,UPDUSR_ID
				,UPDT_DT
             ) VALUES (
				 #PBNCD_NO#
				,#RPAY_DE#
				,#RPAY_AMOUNT#
				,#RPAY_INTRT#
				,#SUMRY#
				,#CNFIRM_AT#
                ,#S_USER_ID#
                ,SYSDATE
                ,#S_USER_ID#
                ,SYSDATE
             )
        ]]>
    </insert>


    <!-- 공사채 원금 상환 계획 수정 -->
    <update id="FUN020301DAO.prncpalRpayPlanU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_PRNCPAL_RPAY_PLAN 
               SET  RPAY_DE         = #RPAY_DE#
                   ,RPAY_AMOUNT     = #RPAY_AMOUNT#
                   ,RPAY_INTRT      = #RPAY_INTRT#
                   ,SUMRY           = #SUMRY#
                   ,CNFIRM_AT       = #CNFIRM_AT#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE2#
        ]]>
    </update>


    <!-- 공사채 원금 상환 계획 삭제 -->
    <delete id="FUN020301DAO.prncpalRpayPlanD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
        ]]>
    </delete>   

	<!-- 공사채 원금 상환 내역 조회 -->
	<select id="FUN020301DAO.selectPrncpalRpayDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT  A.PBNCD_NO                                           AS PBNCD_NO
			       ,A.RPAY_DE                                            AS RPAY_DE
			       ,A.RPAY_DE                                            AS RPAY_DE2
			       ,A.RPAY_AMOUNT                                        AS RPAY_AMOUNT
			       ,A.RPAY_INTRT                                         AS RPAY_INTRT
			       ,A.SUMRY                                              AS SUMRY          
			       ,A.REGISTER_ID                                        AS REGISTER_ID
			       ,TO_CHAR(A.REGIST_DT, 'YYYYMMDD')                     AS REGIST_DT
			       ,A.UPDUSR_ID                                          AS UPDUSR_ID
			       ,TO_CHAR(A.UPDT_DT, 'YYYYMMDD')                       AS UPDT_DT
			  FROM TBFUN_PBNCD_PRNCPAL_RPAY_DTLS A
			 WHERE 1=1
			   AND A.PBNCD_NO = #PBNCD_NO#
			 ORDER BY A.RPAY_DE
		]]>
    </select>    
    
    
     <!-- 공사채 원금 상환 내역 등록 -->
    <insert id="FUN020301DAO.prncpalRpayDtlsC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBFUN_PBNCD_PRNCPAL_RPAY_DTLS (
				 PBNCD_NO
				,RPAY_DE
				,RPAY_AMOUNT
				,RPAY_INTRT
				,SUMRY
				,REGISTER_ID
				,REGIST_DT
				,UPDUSR_ID
				,UPDT_DT
             ) VALUES (
				 #PBNCD_NO#
				,#RPAY_DE#
				,#RPAY_AMOUNT#
				,#RPAY_INTRT#
				,#SUMRY#  
                ,#S_USER_ID#
                ,SYSDATE
                ,#S_USER_ID#
                ,SYSDATE
             )
        ]]>
    </insert>


    <!-- 공사채 원금 상환 내역 수정 -->
    <update id="FUN020301DAO.prncpalRpayDtlsU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_PRNCPAL_RPAY_DTLS 
               SET  RPAY_DE         = #RPAY_DE#
                   ,RPAY_AMOUNT     = #RPAY_AMOUNT#
                   ,RPAY_INTRT      = #RPAY_INTRT#
                   ,SUMRY           = #SUMRY#
                   ,SANCTN_NO       = #SANCTN_NO#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE2#
        ]]>
    </update>


    <!-- 공사채 원금 상환 내역 삭제 -->
    <delete id="FUN020301DAO.prncpalRpayDtlsD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_PRNCPAL_RPAY_DTLS 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
        ]]>
    </delete>


     <!-- 공사채 원금 상환 가져와 등록 -->
    <insert id="FUN020301DAO.prncpalRpayDtlsLoadC" parameterClass="java.util.HashMap">
    BEGIN
    		DELETE TBFUN_PBNCD_PRNCPAL_RPAY_DTLS
    		WHERE  PBNCD_NO = #PBNCD_NO# ;
    		    
        <![CDATA[
			INSERT 
			  INTO TBFUN_PBNCD_PRNCPAL_RPAY_DTLS 
			       ( 
			           PBNCD_NO, 
			           RPAY_DE, 
			           RPAY_AMOUNT, 
			           RPAY_INTRT, 
			           SUMRY, 
			           REGISTER_ID, 
			           REGIST_DT, 
			           UPDUSR_ID, 
			           UPDT_DT 
			       ) 
			SELECT PBNCD_NO, 
			       RPAY_DE, 
			       RPAY_AMOUNT, 
			       RPAY_INTRT, 
			       SUMRY, 
			       #S_USER_ID# AS REGISTER_ID, 
			       SYSDATE, 
			       #S_USER_ID# AS UPDUSR_ID, 
			       SYSDATE 
			  FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN A 
			 WHERE A.PBNCD_NO = #PBNCD_NO# 
			       /*AND SFCOM_GE<=T_APPRSTS(A.SANCTN_NO, A.REGIST_DT) = '256'*/
			       AND A.RPAY_DE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
			       AND NOT EXISTS 
			       (SELECT * 
			         FROM TBFUN_PBNCD_PRNCPAL_RPAY_DTLS 
			        WHERE PBNCD_NO = A.PBNCD_NO 
			              AND RPAY_DE = A.RPAY_DE
			       );
        ]]>
    END;
    </insert>


    <!-- 공사채 이자 상환 단리, 년복리 계획 생성(계획생성 시 실행)-->
    <insert id="FUN020301DAO.intrRpayPlanC01" parameterClass="java.util.HashMap">
        <![CDATA[/*FUN020301DAO.intrRpayPlanC01*/]]>
        <![CDATA[
		      INSERT INTO TBFUN_PBNCD_INTR_RPAY_PLAN (PBNCD_NO, RPAY_DE, RPAY_AMOUNT, RPAY_INTRT, REGISTER_ID, REGIST_DT, UPDUSR_ID, UPDT_DT)
			  SELECT A.PBNCD_NO                                                 AS PBNCD_NO
			        ,A.RPAY_DE                                                  AS RPAY_DE
			        ,CASE WHEN A.CMPNINT_SE = '04'           	/*단리*/
                          THEN CASE WHEN A.INRST_SE = '01'       /*고정*/
                                    THEN /*월할적용*/ 
                                         FLOOR(((A.BRRW_AMOUNT - NVL(LAG(A.TOT_RPAY_AMOUNT,1)OVER(ORDER BY A.RPAY_DE),0)) * (A.INTRT * 0.01)) / (12 / A.INTR_CYCLE)/10)*10                                          
                                    WHEN A.INRST_SE = '02'       /*변동*/
                                    THEN FLOOR((A.BRRW_AMOUNT - NVL(LAG(A.TOT_RPAY_AMOUNT,1)OVER(ORDER BY A.RPAY_DE),0)) * (A.INTRT * 0.01) * TO_NUMBER(TO_DATE(A.RPAY_DE,'YYYYMMDD') - TO_DATE(NVL(LAG(A.RPAY_DE,1)OVER(ORDER BY A.RPAY_DE),A.BRRW_DE),'YYYYMMDD'))/365/ 10)*10
                               END
                          WHEN A.CMPNINT_SE = '03'             /*년복리*/  
                          THEN FLOOR(((A.BRRW_AMOUNT - NVL(LAG(A.TOT_RPAY_AMOUNT,1)OVER(ORDER BY A.RPAY_DE),0)) * POWER((1+(A.INTRT * 0.01)),TRUNC(A.DFR_MT/12)))/10)*10 - (A.BRRW_AMOUNT - NVL(LAG(A.TOT_RPAY_AMOUNT,1)OVER(ORDER BY A.RPAY_DE),0))
                          END                                                   AS RPAY_AMOUNT
			        ,A.INTRT                                                    AS INTRT
			        ,#S_USER_ID#                                                AS REGISTER_ID
			        ,SYSDATE                                                    AS REGIST_DT
			        ,#S_USER_ID#                                                AS UPDUSR_ID
			        ,SYSDATE                                                    AS UPDT_DT
			  FROM  (SELECT A.*
                            ,B.INRST AS INTRT
                     FROM   (SELECT A.PBNCD_NO              AS PBNCD_NO
                                    ,A.RPAY_DE              AS RPAY_DE
                                    ,MAX(A.CMPNINT_SE)      AS CMPNINT_SE
                                    ,MAX(A.FIXING_INRST_SE) AS FIXING_INRST_SE
                                    ,MAX(A.BRRW_AMOUNT)     AS BRRW_AMOUNT
                                    ,MAX(B.TOT_RPAY_AMOUNT) AS TOT_RPAY_AMOUNT
                                    ,MAX(C.APPLC_DE)        AS APPLC_DE
                                    ,MAX(A.INTR_CYCLE)      AS INTR_CYCLE
                                    ,MAX(A.DFR_MT)          AS DFR_MT
                                    ,MAX(A.BRRW_DE)         AS BRRW_DE
                                    ,MAX(A.INRST_SE)        AS INRST_SE
                             FROM   (SELECT LEAD(A.RPAY_DE) OVER (ORDER BY A.R_LEVEL) AS RPAY_DE1
                                            ,A.*
                                     FROM   (SELECT LEVEL                                                                             AS R_LEVEL
                                                    ,CASE WHEN TO_CHAR(ADD_MONTHS(TO_DATE(BRRW_DE, 'YYYYMMDD'), (LEVEL*DECODE(A.RPAY_SE, '01', A.DFR_MT, A.INTR_CYCLE))),'d') = '7'
                                                          THEN TO_CHAR(ADD_MONTHS(TO_DATE(BRRW_DE, 'YYYYMMDD'), (LEVEL*DECODE(A.RPAY_SE, '01', A.DFR_MT, A.INTR_CYCLE)))+2,'YYYYMMDD')
                                                          WHEN TO_CHAR(ADD_MONTHS(TO_DATE(BRRW_DE, 'YYYYMMDD'), (LEVEL*DECODE(A.RPAY_SE, '01', A.DFR_MT, A.INTR_CYCLE))),'d') = '1'
                                                          THEN TO_CHAR(ADD_MONTHS(TO_DATE(BRRW_DE, 'YYYYMMDD'), (LEVEL*DECODE(A.RPAY_SE, '01', A.DFR_MT, A.INTR_CYCLE)))+1,'YYYYMMDD')
                                                          ELSE TO_CHAR(ADD_MONTHS(TO_DATE(BRRW_DE, 'YYYYMMDD'), (LEVEL*DECODE(A.RPAY_SE, '01', A.DFR_MT, A.INTR_CYCLE))),'YYYYMMDD')
                                                     END  AS RPAY_DE                   
                                                    ,A.*
                                             FROM   (SELECT *
                                                     FROM   TBFUN_PBNCD
                                                     WHERE PBNCD_NO = #PBNCD_NO#) A
                                             CONNECT BY LEVEL <= CEIL(MONTHS_BETWEEN(TO_DATE(EXPRTN_DE, 'YYYYMMDD'), TO_DATE(BRRW_DE, 'YYYYMMDD'))) / DECODE(RPAY_SE, '01', DFR_MT, INTR_CYCLE)) A
                                    )A        
                                    LEFT OUTER JOIN (SELECT RPAY_DE AS RPAY_DE
                                                           ,(SELECT SUM(RPAY_AMOUNT) FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN WHERE PBNCD_NO = A.PBNCD_NO AND RPAY_DE <= A.RPAY_DE) AS TOT_RPAY_AMOUNT
                                                     FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN A
                                                     WHERE A.PBNCD_NO = #PBNCD_NO#) B
                                                 ON A.RPAY_DE1 > B.RPAY_DE
                                                AND A.RPAY_DE <= B.RPAY_DE
                                    LEFT OUTER JOIN TBFUN_PBNCD_INRST C
                                                 ON A.PBNCD_NO = C.PBNCD_NO
                                                AND A.RPAY_DE >= C.APPLC_DE
                             GROUP BY A.PBNCD_NO, A.RPAY_DE
                             ) A
                     LEFT OUTER JOIN TBFUN_PBNCD_INRST B
                                  ON A.PBNCD_NO = B.PBNCD_NO
                                 AND A.APPLC_DE = B.APPLC_DE
                     LEFT OUTER JOIN (SELECT PBNCD_NO, MAX(RPAY_DE) AS MAX_RPAY_DE 
                                        FROM TBFUN_PBNCD_INTR_RPAY_PLAN  
                                       WHERE PBNCD_NO = #PBNCD_NO# 
                                       GROUP BY PBNCD_NO
                                     )C
                                  ON A.PBNCD_NO = C.PBNCD_NO
                     WHERE A.RPAY_DE > NVL(C.MAX_RPAY_DE,'19000101')
                    ) A
        ]]>
    </insert>    
    
    
    <!-- 공사채 이자 상환 단리, 년복리 계획 생성(계획생성 시 실행)-->
    <insert id="FUN020301DAO.intrRpayPlanC02" parameterClass="java.util.HashMap">
		DECLARE
		    IN_PBNCD_NO     VARCHAR2(200);
		    IN_TYPE         VARCHAR2(200);
		    IN_REGISTER_ID  VARCHAR2(200);
		    OUT_RESULT_MSG  VARCHAR2(200);
		
		
		BEGIN
		    IN_PBNCD_NO     := #PBNCD_NO#;
		    IN_TYPE         := '2';
		    IN_REGISTER_ID  := #S_USER_ID#;
		    
		    SP_FUN_PBNCD_IU( IN_PBNCD_NO, IN_TYPE, IN_REGISTER_ID, OUT_RESULT_MSG);
		    
		    DBMS_OUTPUT.PUT_LINE('IN_PBNCD_NO     = ' || IN_PBNCD_NO );
		    DBMS_OUTPUT.PUT_LINE('IN_TYPE         = ' || IN_TYPE );
		    DBMS_OUTPUT.PUT_LINE('IN_REGISTER_ID  = ' || IN_REGISTER_ID );
		    DBMS_OUTPUT.PUT_LINE('OUT_RESULT_MSG  = ' || OUT_RESULT_MSG );
		END;

	</insert>

    
    
    <!-- 공사채 원금 상환 계획 등록 (계획생성 시 실행)-->
    <insert id="FUN020301DAO.prncpalRpayPlanC01" parameterClass="java.util.HashMap">
        <![CDATA[/*FUN020301DAO.prncpalRpayPlanC01*/]]>
        <![CDATA[
		      INSERT INTO TBFUN_PBNCD_PRNCPAL_RPAY_PLAN (PBNCD_NO, RPAY_DE, RPAY_AMOUNT, RPAY_INTRT, REGISTER_ID, REGIST_DT, UPDUSR_ID, UPDT_DT)
		      SELECT A.*
		      FROM   (SELECT  A.PBNCD_NO                                                                     AS PBNCD_NO
		                     ,RPAY_DE AS RPAY_DE
		                     ,CASE WHEN RPAY_MT <> '0' 
		                           THEN (CASE WHEN R_LEVEL > DFR_MT / INTR_CYCLE
		                                      THEN BRRW_AMOUNT / RPAY_MT * INTR_CYCLE
		                                      ELSE 0
		                                      END
		                                )
		                           ELSE (CASE WHEN R_LEVEL = DFR_MT / INTR_CYCLE
		                                      THEN BRRW_AMOUNT
		                                      ELSE 0
		                                      END
		                                )
		                           END                                                                       AS RPAY_AMOUNT
		                     ,INTRT                                                                          AS RPAY_INTRT
		                     ,#S_USER_ID#                                                                    AS REGISTER_ID
		                     ,SYSDATE                                                                        AS REGIST_DT
		                     ,#S_USER_ID#                                                                    AS UPDUSR_ID
		                     ,SYSDATE                                                                        AS UPDT_DT
		              FROM  (SELECT LEVEL AS R_LEVEL
		                            ,CASE WHEN TO_CHAR(ADD_MONTHS(TO_DATE(A.BRRW_DE, 'YYYYMMDD'),((LEVEL)*A.INTR_CYCLE)),'d') = '7'
		                                  THEN TO_CHAR(ADD_MONTHS(TO_DATE(A.BRRW_DE, 'YYYYMMDD'),((LEVEL)*A.INTR_CYCLE))+2,'YYYYMMDD')
		                                  WHEN TO_CHAR(ADD_MONTHS(TO_DATE(A.BRRW_DE, 'YYYYMMDD'),((LEVEL)*A.INTR_CYCLE)),'d') = '1'
		                                  THEN TO_CHAR(ADD_MONTHS(TO_DATE(A.BRRW_DE, 'YYYYMMDD'),((LEVEL)*A.INTR_CYCLE))+1,'YYYYMMDD')
		                                  ELSE TO_CHAR(ADD_MONTHS(TO_DATE(A.BRRW_DE, 'YYYYMMDD'),((LEVEL)*A.INTR_CYCLE)),'YYYYMMDD')
		                              END AS RPAY_DE           
		                            ,A.*
		                     FROM   (SELECT *
		                             FROM   TBFUN_PBNCD
		                             WHERE PBNCD_NO = #PBNCD_NO#) A
		                     CONNECT BY LEVEL <= CEIL(MONTHS_BETWEEN(TO_DATE(EXPRTN_DE, 'YYYYMMDD'), TO_DATE(BRRW_DE, 'YYYYMMDD'))) / A.INTR_CYCLE
		                    ) A
		              LEFT OUTER JOIN (SELECT A.PBNCD_NO, SUM(NVL(RPAY_AMOUNT,0)) AS RPAY_AMOUNT, MAX(B.MAX_RPAY_DE) AS MAX_RPAY_DE
	                                     FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN A
	                                        , (SELECT PBNCD_NO, MAX(RPAY_DE) AS MAX_RPAY_DE 
	                                             FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN  
	                                            WHERE PBNCD_NO = #PBNCD_NO# 
	                                            GROUP BY PBNCD_NO
	                                          ) B
	                                    WHERE A.PBNCD_NO = B.PBNCD_NO
	                                      AND A.RPAY_DE <= B.MAX_RPAY_DE
	                                    GROUP BY A.PBNCD_NO
	                                  ) B
	                               ON A.PBNCD_NO = B.PBNCD_NO
	                  WHERE A.RPAY_DE > NVL(B.MAX_RPAY_DE,'19000101')
		             ) A
		      WHERE 1=1
		      AND A.RPAY_AMOUNT > 0
        ]]>
    </insert>
    
    <!-- 공사채 원금 상환 계획 등록 (계획생성 시 실행)-->
    <insert id="FUN020301DAO.prncpalRpayPlanC02" parameterClass="java.util.HashMap">
		DECLARE
		    IN_PBNCD_NO     VARCHAR2(200);
		    IN_TYPE         VARCHAR2(200);
		    IN_REGISTER_ID  VARCHAR2(200);
		    OUT_RESULT_MSG  VARCHAR2(200);
		
		
		BEGIN
		    IN_PBNCD_NO     := #PBNCD_NO#;
		    IN_TYPE         := '1';
		    IN_REGISTER_ID  := #S_USER_ID#;
		    
		    SP_FUN_PBNCD_IU( IN_PBNCD_NO, IN_TYPE, IN_REGISTER_ID, OUT_RESULT_MSG);
		    
		    DBMS_OUTPUT.PUT_LINE('IN_PBNCD_NO     = ' || IN_PBNCD_NO );
		    DBMS_OUTPUT.PUT_LINE('IN_TYPE         = ' || IN_TYPE );
		    DBMS_OUTPUT.PUT_LINE('IN_REGISTER_ID  = ' || IN_REGISTER_ID );
		    DBMS_OUTPUT.PUT_LINE('OUT_RESULT_MSG  = ' || OUT_RESULT_MSG );
		END;

	</insert>
    
    
    <!-- 공사채 이자 상환 계획 삭제 (계획생성 시 실행) -->
    <delete id="FUN020301DAO.intrRpayPlanD01" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_INTR_RPAY_PLAN 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE > (SELECT NVL(MAX(RPAY_DE),'19000101') FROM TBFUN_PBNCD_INTR_RPAY_PLAN WHERE PBNCD_NO = #PBNCD_NO# AND (SFCOM_GET_SANCTN_KND(SANCTN_NO) IN ('1', '4', '5') OR NVL(CNFIRM_AT,'0') = '1'))
        ]]>
    </delete>     
    
    <!-- 공사채 원금 상환 계획 삭제(계획생성 시 실행) -->
    <delete id="FUN020301DAO.prncpalRpayPlanD01" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE 
              FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN 
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE > (SELECT NVL(MAX(RPAY_DE),'19000101') FROM TBFUN_PBNCD_PRNCPAL_RPAY_PLAN WHERE PBNCD_NO = #PBNCD_NO# AND (SFCOM_GET_SANCTN_KND(SANCTN_NO) IN ('1', '4', '5') OR NVL(CNFIRM_AT,'0') = '1'))
        ]]>
    </delete>
    
    <!-- 공사채 계좌 만기 처리 -->
    <update id="FUN020301DAO.pbncdInfoU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD 
               SET  EXPRTN_AT = #EXPRTN_AT#
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
        ]]>
    </update>
    
    <!-- 전자결재 금액 한글화 -->
	<select id="FUN020301DAO.selectAmtTrans" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			   
			SELECT SFACC_AMOUNT_TRANS(#C02#) AS KR_AMT
			FROM   DUAL
		]]> 				 		        	     
    </select>
    
	<!-- 전자결재번호 조회 -->
	<select id="FUN020301DAO.selectSanctnNO" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<![CDATA[ /* CUS010207DAO.selectSanctnNO */ ]]>
			SELECT SANCTN_NO 
			FROM   TBCOM_ELCTRN_SANCTN_MASTR 
			WHERE  INTRLCK_IDNTFR = #KEY#
    </select> 
    
    <!--  이자계획 테이블 결재번호 수정 -->
	<update id="FUN020301DAO.approveU" parameterClass="java.util.HashMap">
		<![CDATA[
            UPDATE TBFUN_PBNCD_INTR_RPAY_PLAN 
               SET  SANCTN_NO       = #SANCTN_NO#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE#
		]]>
	</update> 
	
    <!-- 원금상환 테이블 결재번호 수정 -->
    <update id="FUN020301DAO.approveU2" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBFUN_PBNCD_PRNCPAL_RPAY_PLAN 
               SET  SANCTN_NO       = #SANCTN_NO#
                   ,UPDUSR_ID	    = #S_USER_ID#
                   ,UPDT_DT		    = SYSDATE
             WHERE 1=1
               AND PBNCD_NO = #PBNCD_NO#
               AND RPAY_DE  = #RPAY_DE1#
        ]]>
    </update>	   
    
	<!--지출결의 번호 저장-->
	<update id="FUN020301DAO.updateExpndtrDecsnNo" parameterClass="java.util.HashMap" >
		<![CDATA[
			UPDATE TBFUN_PBNCD_INTR_RPAY_PLAN SET
				   EXPNDTR_DECSN_DE  	= #EXPNDTR_DECSN_DE#
				  ,EXPNDTR_DECSN_YEAR 	= #DSNMASTR.DECSN_YEAR#
				  ,EXPNDTR_DECSN_NO  	= #DSNMASTR.DECSN_NO#
				  ,UPDUSR_ID         	= #S_USER_ID#
				  ,UPDT_DT           	= SYSDATE     
			WHERE PBNCD_NO = #PBNCD_NO#
			AND   RPAY_DE = #RPAY_DE#
		]]>
	</update>    
    
    <update id="FUN020301DAO.updateExpndtrDecsnNo2" parameterClass="java.util.Map">
		UPDATE TBFUN_PBNCD_PRNCPAL_RPAY_PLAN SET
			   EXPNDTR_DECSN_DE  	= #EXPNDTR_DECSN_DE#
			  ,EXPNDTR_DECSN_YEAR 	= #DSNMASTR.DECSN_YEAR#
			  ,EXPNDTR_DECSN_NO  	= #DSNMASTR.DECSN_NO#
			  ,UPDUSR_ID         	= #S_USER_ID#
			  ,UPDT_DT           	= SYSDATE     
		WHERE PBNCD_NO = #PBNCD_NO#
		AND   RPAY_DE = #RPAY_DE#
	</update>
	
	
	
    
</sqlMap>