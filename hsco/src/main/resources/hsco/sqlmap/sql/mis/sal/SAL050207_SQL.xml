<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SAL050207_SQL">	
	
	<!-- 연말정산대상자정보 목록조회 -->
	<select id="SAL050207DAO.selectYndMediumEmpList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     A.EXCCLC_YEAR
				,A.EXCCLC_SE
				,A.EMPNO
				,A.EMPNM
				,SFHRM_GET_OFCPSCD(A.EMPNO, C.JSSFC_SE, C.PAY_CLSF_SE, C.ECNY_DE)  AS OFCPS   /* 직위 */
				,A.EMPL_SE
				,A.DEPT_NM
				,A.ECNY_DE
				,A.EXCCLC_BGNDE
				,A.EXCCLC_ENDDE
				,A.DDCT_LEV_INCMTAX
				,A.DDCT_LEV_AGSPT
				,A.DDCT_LEV_LCLTY_INCMTAX
				,A.DDCT_RETUN_INCMTAX
				,A.DDCT_RETUN_AGSPT
				,A.DDCT_RETUN_LCLTY_INCMTAX
		   FROM TBSAL_YND_EXCCLC_DETAIL A
		       ,TBHRM_HR_MASTR C
			   ,VWHRM_DEPT B
		   WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND A.EMPNO = C.EMPNO
		   AND A.DEPT_CODE = B.DEPT_CODE
		   /* AND B.USE_AT = '1' */
		   AND B.DEPT_LEVEL_SE IN('1','2')
		]]>
		<isNotEmpty property="EMPNO" prepend="AND">
	 	   A.EMPNO = #EMPNO#
		</isNotEmpty>  	
		<isPropertyAvailable property="EXCCLC_SE">	
			<isNotEmpty property="EXCCLC_SE" prepend="AND">
				A.EXCCLC_SE = #EXCCLC_SE#
			</isNotEmpty>
		</isPropertyAvailable>
		<isNotPropertyAvailable property="EXCCLC_SE">
			<isEmpty property="EXCCLC_SE" prepend="AND">
				A.EXCCLC_SE IN ('1','2')
			</isEmpty>   
		</isNotPropertyAvailable>
		   ORDER BY  C.RSPOFC_SE, SFHRM_GET_OFCPSCD(A.EMPNO,C.JSSFC_SE,C.HR_CLSF_SE,C.ECNY_DE), C.PAY_CLSF_SE,  A.EMPNO,C.JSSFC_SE 
			
    </select>
    
    <!-- 퇴직대상자정보 목록조회 -->
	<select id="SAL050207DAO.selectYndMediumEmp2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     #EXCCLC_YEAR#  AS EXCCLC_YEAR
				,'3'  AS EXCCLC_SE
				,A.EMPNO
				,C.EMPNM
				,SFHRM_GET_OFCPSCD(A.EMPNO, C.JSSFC_SE, C.PAY_CLSF_SE, C.ECNY_DE)  AS OFCPS   /* 직위 */
				,C.JSSFC_SE AS EMPL_SE
				,SFSAL_GETDEPTNM_01(C.DEPT_CODE)  AS DEPT_NM
				,C.ECNY_DE				
		   FROM TBSAL_RETIRE_SALARY_PYMNT A
		       ,TBHRM_HR_MASTR C
		   WHERE SUBSTR(A.RETIRE_DE,1,4) = #EXCCLC_YEAR#
		   AND A.RETIRE_SE = '0'
		   AND A.EMPNO = C.EMPNO
		]]>
		<isNotEmpty property="EMPNO">
	 	   AND A.EMPNO = #EMPNO#
		</isNotEmpty>  		   
		   ORDER BY C.RSPOFC_SE, SFHRM_GET_OFCPSCD(A.EMPNO,C.JSSFC_SE,C.HR_CLSF_SE,C.ECNY_DE), C.PAY_CLSF_SE,  A.EMPNO,C.JSSFC_SE 
			
    </select>  
    
     <!-- 퇴직대상자정보2 목록조회 -->
	<select id="SAL050207DAO.selectYndMediumEmp3List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     TO_CHAR(COUNT(*))  AS COUNT1
			    ,TO_CHAR(SUM(A.RTRPAY))                     AS AMT1
			    ,TO_CHAR(SUM(A.INCMTAX))                    AS AMT2
			    ,TO_CHAR(SUM(A.PSTPONE_RETIRE_INCMTAX))     AS AMT3
			    ,TO_CHAR(SUM(A.DDCT_LEV_SRC_INCMTAX))       AS AMT4
			    ,TO_CHAR(SUM(A.DDCT_LEV_SRC_LCLTY_INCMTAX)) AS AMT5
			    ,TO_CHAR(SUM(A.DDCT_LEV_SRC_INCMTAX) + SUM(A.DDCT_LEV_SRC_LCLTY_INCMTAX)) AS AMT6
			FROM TBSAL_RETIRE_SALARY_PYMNT A
			WHERE SUBSTR(A.RETIRE_DE,1,4) = #EXCCLC_YEAR#
			AND A.RETIRE_SE = '0'
		]]>	
    </select>  
    
     <!-- 퇴직대상자정보2 목록조회 -->
	<select id="SAL050207DAO.selectYndMediumEmp4List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     #EXCCLC_YEAR# || '0101'  AS S_DE
			    ,TO_CHAR(A.PYMNT_DE) AS PYMNT_DE
				,TO_CHAR(A.RETIRE_DE) AS RETIRE_DE
				,A.EMPNO
				,A.RETIRE_SE
				,C.EMPNM
				,A.DEPT_CODE
				,SFSAL_GETDEPTNM_01(A.DEPT_CODE)  AS DEPT_NAME
				,A.CLSF_CODE
				,A.SRCLS
				,TO_CHAR(A.BGNDE) AS BGNDE
				,TO_CHAR(A.ENDDE) AS ENDDE
				,TO_CHAR(A.CNWK_PD) AS CNWK_PD
				,TO_CHAR(A.CNWK_YY) AS CNWK_YY
				,TO_CHAR(A.CNWK_DE) AS CNWK_DE
				,TO_CHAR(A.PRMPC_SE) AS PRMPC_SE				
				,A.PYMNT_BANK_CODE
				,A.PYMNT_BANK_ACNUT
				,TO_CHAR(A.DPSTR)                          AS DPSTR
				,TO_CHAR(A.AVRGWAGE)                       AS AVRGWAGE
				,TO_CHAR(A.RTRPAY)                         AS RTRPAY
				,TO_CHAR(A.SCHXPN_DDC)                     AS SCHXPN_DDC
				,TO_CHAR(A.HLTHINS_EXCCLC)                 AS HLTHINS_EXCCLC
				,TO_CHAR(A.EMPLYMINSRNC_EXCCLC)            AS EMPLYMINSRNC_EXCCLC
				,TO_CHAR(A.SALARY_SEIZR)                   AS SALARY_SEIZR
				,TO_CHAR(A.WLFARE_CARD_EXCCLC)             AS WLFARE_CARD_EXCCLC
				,TO_CHAR(A.CNWK_SDYTRN_BEFORE)             AS CNWK_SDYTRN_BEFORE
				,TO_CHAR(A.CNWK_SDYTRN_AFTER)              AS CNWK_SDYTRN_AFTER
				,TO_CHAR(A.TAXT_STD_PRPDVS_BEFORE)         AS TAXT_STD_PRPDVS_BEFORE
				,TO_CHAR(A.YRYMN_TAXT_STD_BEFORE)          AS YRYMN_TAXT_STD_BEFORE
				,TO_CHAR(A.YRYMN_COMPUT_TAXAMT_BEFORE)     AS YRYMN_COMPUT_TAXAMT_BEFORE
				,TO_CHAR(A.COMPUT_TAXAMT_BEFORE)           AS COMPUT_TAXAMT_BEFORE
				,TO_CHAR(A.TAXT_STD_PRPDVS_AFTER)          AS TAXT_STD_PRPDVS_AFTER
				,TO_CHAR(A.YRYMN_TAXT_STD_AFTER)           AS YRYMN_TAXT_STD_AFTER
				,TO_CHAR(A.CNVRSN_TAXT_STD_AFTER)          AS CNVRSN_TAXT_STD_AFTER
				,TO_CHAR(A.CNVRSN_COMPUT_TAXAMT_AFTER)     AS CNVRSN_COMPUT_TAXAMT_AFTER
				,TO_CHAR(A.YRYMN_COMPUT_TAXAMT_AFTER)      AS YRYMN_COMPUT_TAXAMT_AFTER
				,TO_CHAR(A.COMPUT_TAXAMT_AFTER)            AS COMPUT_TAXAMT_AFTER
				,TO_CHAR(A.PRESV_MIN)                      AS PRESV_MIN
				,TO_CHAR(A.STDTAX)                         AS STDTAX
				,TO_CHAR(A.YY_STDTAX)                      AS YY_STDTAX
				,TO_CHAR(A.YY_COMPUT_TAXAMT)               AS YY_COMPUT_TAXAMT
				,TO_CHAR(A.COMPUT_TAXAMT)                  AS COMPUT_TAXAMT
				,TO_CHAR(A.TAXAMT_DDC)                     AS TAXAMT_DDC
				,TO_CHAR(A.INCMTAX)                        AS INCMTAX
				,TO_CHAR(A.LCLTY_INCMTAX)                  AS LCLTY_INCMTAX
				,TO_CHAR(A.PSTPONE_RETIRE_INCMTAX)         AS PSTPONE_RETIRE_INCMTAX
				,TO_CHAR(A.PSTPONE_RETIRE_LCLTY_INCMTAX)   AS PSTPONE_RETIRE_LCLTY_INCMTAX
				,A.PSTPONE_RETIRE_ANNTY_ACNUT_TRT
				,A.PSTPONE_RETIRE_BSNM_NO
				,A.PSTPONE_RETIRE_ACNUTNO
				,A.PSTPONE_RETIRE_RCPMNY_DE
				,TO_CHAR(A.PSTPONE_RETIRE_RCPMNY_AM)       AS PSTPONE_RETIRE_RCPMNY_AM
				,TO_CHAR(A.DDCT_LEV_SRC_INCMTAX)           AS DDCT_LEV_SRC_INCMTAX
				,TO_CHAR(A.DDCT_LEV_SRC_LCLTY_INCMTAX)     AS DDCT_LEV_SRC_LCLTY_INCMTAX
				,TO_CHAR(A.RL_RECPT_AMOUNT)                AS RL_RECPT_AMOUNT
				,CASE WHEN A.EXCTV_AT = '1' THEN '1'
				      WHEN A.EXCTV_AT = '' THEN '2'
				      ELSE '2' END   AS EXCTV_AT
				,TO_CHAR(A.ANSLRY_AT)      AS ANSLRY_AT
				,TO_CHAR(A.JSSFC_SE)       AS JSSFC_SE
				,TO_CHAR(A.ECNY_DE)        AS ECNY_DE
				,TO_CHAR(A.ENDW_LOAN_DDC)  AS ENDW_LOAN_DDC
				,TO_CHAR(A.CNWK_MONTH_BEFORE)   AS CNWK_MONTH_BEFORE
				,TO_CHAR(A.CNWK_MONTH_AFTER)    AS CNWK_MONTH_AFTER
				,TO_CHAR(A.FIX_RATE_DDC)        AS FIX_RATE_DDC
				,TO_CHAR(A.CNWK_YEAR_DDC)       AS CNWK_YEAR_DDC
				,TO_CHAR(A.GNFD_SE)             AS GNFD_SE
				,TO_CHAR(A.CNWK_MONTH)          AS CNWK_MONTH
				,TO_CHAR(B.IHIDNUM)             AS IHIDNUM
				,TO_CHAR(NVL(A.RTRPAY,0) - NVL(A.FIX_RATE_DDC,0) - NVL(A.CNWK_YEAR_DDC,0))  AS RTRPAY2
				,TO_CHAR(NVL(A.TAXT_STD_PRPDVS_BEFORE,0) + NVL(A.TAXT_STD_PRPDVS_AFTER,0))  AS PRPDVS
				,TO_CHAR(NVL(A.YRYMN_COMPUT_TAXAMT_BEFORE,0) + NVL(A.YRYMN_COMPUT_TAXAMT_AFTER,0))  AS COMPUT_TAXAMT
				,TO_CHAR(NVL(A.COMPUT_TAXAMT_BEFORE,0) + NVL(A.COMPUT_TAXAMT_AFTER,0)) AS COMPUT_TAXAMT2
				,TO_CHAR(NVL(A.INCMTAX,0) + NVL(A.LCLTY_INCMTAX,0)) AS INCMTAX2
			FROM TBSAL_RETIRE_SALARY_PYMNT A
			    ,TBSAL_TEMP B
			    ,TBHRM_HR_MASTR C
			WHERE SUBSTR(A.RETIRE_DE,1,4) = #EXCCLC_YEAR#
			AND A.RETIRE_SE = '0'
			AND A.EMPNO = B.EMPNO
			AND A.EMPNO = C.EMPNO
			AND B.GUBUN = '1'
			
		]]>	
    </select>  
    
    <!-- 연말정산정보1 목록조회 -->
	<select id="SAL050207DAO.selectYndMediumList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     COUNT(A.EMPNO)    AS COUNT1
			    ,(SELECT COUNT(A.EMPNO) FROM TBSAL_YND_EXCCLC_BEFORE_WORK WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE)  AS COUNT2
				,SUM(A.SALARY_TOT_AMOUNT)             AS AMT1
				,SUM(A.DECSN_TAXAMT_INCMTAX)          AS DDC1
				,SUM(A.DECSN_TAXAMT_LCLTY_INCMTAX)    AS DDC2
				,SUM(A.DECSN_TAXAMT_AGSPT)            AS DDC3
				,NVL(SUM(A.DECSN_TAXAMT_INCMTAX),0) + NVL(SUM(A.DECSN_TAXAMT_LCLTY_INCMTAX),0) + NVL(SUM(A.DECSN_TAXAMT_AGSPT),0) AS DDC4
		   FROM TBSAL_YND_EXCCLC_DETAIL A
		   WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#	
		   AND A.EXCCLC_SE  IN ('1','2')
		   GROUP BY A.EXCCLC_YEAR, A.EXCCLC_SE
		]]>
		
    </select>  
    
    <!-- 연말정산정보_기부금 목록조회 -->
	<select id="SAL050207DAO.selectYndMedium2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     COUNT(*)    AS COUNT1
			    
		   FROM TBSAL_YND_EXCCLC_NTS A
		   WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#	
		   AND A.EXCCLC_SE IN ('1','2')
		   AND FORMAT_CODE = 'L101Y'
		]]>
		
    </select>  
    
   <!-- 연말정산결과정보 목록조회 -->
	<select id="SAL050207DAO.selectYndResultList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     A.EXCCLC_YEAR
				,A.EXCCLC_SE
				,A.EMPNO
				,A.EMPNM
				,A.CLSF_CODE
				,A.EXCCLC_BGNDE
				,A.EXCCLC_ENDDE
				,A.DEPT_CODE
				,A.DEPT_NM
				,A.SRCLS
				,A.OFCPS_CODE
				,A.ECNY_SE
				,A.ECNY_DE
				,A.RETIRE_DE
				,A.LAYOFF_BEGIN_DE
				,A.LAYOFF_ENDDE
				,SUBSTR(A.ZIP,1,3) || '-' || SUBSTR(A.ZIP,4,3)  AS ZIP
				,A.ADRES
				,A.EMPL_SE
				,TO_CHAR(ROW_NUMBER() OVER (ORDER BY  C.RSPOFC_SE, SFHRM_GET_OFCPSCD(A.EMPNO,C.JSSFC_SE,C.HR_CLSF_SE,C.ECNY_DE), C.PAY_CLSF_SE,  A.EMPNO,C.JSSFC_SE)) AS COUNT1
				,TO_CHAR(A.NOW_WORK_SALARY_AMOUNT)  AS NOW_WORK_SALARY_AMOUNT
				,TO_CHAR(A.NOW_WORK_BNS_AMOUNT)  AS NOW_WORK_BNS_AMOUNT
				,TO_CHAR(A.NOW_WORK_RCOGN_BNS_AMOUNT)  AS NOW_WORK_RCOGN_BNS_AMOUNT
				,TO_CHAR(A.BEFORE_WORK_1_SALARY)  AS BEFORE_WORK_1_SALARY
				,TO_CHAR(A.BEFORE_WORK_1_BNS)  AS BEFORE_WORK_1_BNS
				,TO_CHAR(A.BEFORE_WORK_1_RCOGN_BNS)  AS BEFORE_WORK_1_RCOGN_BNS
				,TO_CHAR(A.BEFORE_WORK_2_SALARY)  AS BEFORE_WORK_2_SALARY
				,TO_CHAR(A.BEFORE_WORK_2_BNS)  AS BEFORE_WORK_2_BNS
				,TO_CHAR(A.BEFORE_WORK_2_RCOGN_BNS)  AS BEFORE_WORK_2_RCOGN_BNS
				,TO_CHAR(A.TAXXMPT_OUTNATN_INCOME)  AS TAXXMPT_OUTNATN_INCOME
				,TO_CHAR(A.TAXXMPT_NIGHT_ERNM)  AS TAXXMPT_NIGHT_ERNM
				,TO_CHAR(A.ETC_TAXXMPT)  AS ETC_TAXXMPT
				,TO_CHAR(A.SALARY_TOT_AMOUNT)  AS  SALARY_TOT_AMOUNT
				,TO_CHAR(A.BNS_TOT_AMOUNT)  AS BNS_TOT_AMOUNT
				,TO_CHAR(A.RCOGN_BNS_TOT_AMOUNT)  AS RCOGN_BNS_TOT_AMOUNT
				,TO_CHAR(NVL(A.NOW_WORK_SALARY_AMOUNT,0) + NVL(A.NOW_WORK_BNS_AMOUNT,0) + NVL(NOW_WORK_RCOGN_BNS_AMOUNT,0))   AS AMOUNT
				,TO_CHAR(A.ERNM_INCME_AMOUNT)  AS ERNM_INCME_AMOUNT
				,TO_CHAR(A.ERNM_DDC)  AS ERNM_DDC
				,TO_CHAR(A.ERNM_AMOUNT)  AS ERNM_AMOUNT
				,TO_CHAR(A.BSIS_DDC)  AS BSIS_DDC
				,TO_CHAR(A.SPOUSE_DDC)  AS SPOUSE_DDC
				,TO_CHAR(A.DNTMY_DDC)  AS DNTMY_DDC
				,TO_CHAR(A.COURS_PVLTRT_DDC_65)  AS COURS_PVLTRT_DDC_65
				,TO_CHAR(A.COURS_PVLTRT_DDC_70)  AS COURS_PVLTRT_DDC_70
				,TO_CHAR(A.DSPSN_DDC)  AS DSPSN_DDC
				,TO_CHAR(A.LADY_HSHLDR_DDC)  AS LADY_HSHLDR_DDC
				,TO_CHAR(A.MNYCH_BRP_DDC)  AS MNYCH_BRP_DDC
				,TO_CHAR(A.CHLDBRTH_ADP_DDC)  AS CHLDBRTH_ADP_DDC
				,TO_CHAR(A.MNYCH_DDC)  AS MNYCH_DDC
				,TO_CHAR(A.PARNTS_1_DDC)  AS PARNTS_1_DDC
				,TO_CHAR(A.HN_DDC_AMOUNT_SM)  AS HN_DDC_AMOUNT_SM
				,TO_CHAR(A.IRNCF_DDC)  AS IRNCF_DDC
				,TO_CHAR(A.MCP_DDC)  AS MCP_DDC
				,TO_CHAR(A.EDCCT_DDC)  AS EDCCT_DDC
				,TO_CHAR(A.CASH_RCIPT_AMOUNT)  AS CASH_RCIPT_AMOUNT
				,TO_CHAR(A.LFSTS_INTR)  AS LFSTS_INTR
				,TO_CHAR(A.PNINT_RPAY_AMOUNT)  AS PNINT_RPAY_AMOUNT
				,TO_CHAR(A.BRRW_INTR_RPAY_AMOUNT)  AS BRRW_INTR_RPAY_AMOUNT
				,TO_CHAR(A.HOUSE_PREPRTN_SVINGS)  AS HOUSE_PREPRTN_SVINGS
				,TO_CHAR(A.MTHT_AM)  AS MTHT_AM
				,TO_CHAR(A.HOUSE_CPTAL_DDC)  AS HOUSE_CPTAL_DDC
				,TO_CHAR(A.CTBNY_DDC)  AS CTBNY_DDC
				,TO_CHAR(A.MRRG_INTR_FNRL_DDC)  AS MRRG_INTR_FNRL_DDC
				,TO_CHAR(A.STD_DDC)  AS STD_DDC
				,TO_CHAR(A.ANNTY_IRNCF)  AS ANNTY_IRNCF
				,TO_CHAR(A.DDCT_INCOME_AMOUNT)  AS DDCT_INCOME_AMOUNT
				,TO_CHAR(A.INDVDL_ANNTY_SVINGS_INCOME_DDC)  AS INDVDL_ANNTY_SVINGS_INCOME_DDC
				,TO_CHAR(A.ANNTY_SVINGS_INCOME_DDC)  AS ANNTY_SVINGS_INCOME_DDC
				,TO_CHAR(A.SPT_HNF_TCHNLGY_DDC)  AS SPT_HNF_TCHNLGY_DDC
				,TO_CHAR(A.INVT_MXTR_INCOME_DDC)  AS INVT_MXTR_INCOME_DDC
				,TO_CHAR(A.CREDTCARD_DDC)  AS CREDTCARD_DDC
				,TO_CHAR(A.GNRLZ_STDTAX)  AS GNRLZ_STDTAX
				,TO_CHAR(A.COMPUT_TAXAMT)  AS COMPUT_TAXAMT
				,TO_CHAR(A.ERNM_TAXAMT_DDC_AMOUNT)  AS ERNM_TAXAMT_DDC_AMOUNT
				,TO_CHAR(A.TAXAMT_DDC_6_BELOW)  AS TAXAMT_DDC_6_BELOW
				,TO_CHAR(A.RETIRE_ANNTY)  AS RETIRE_ANNTY
				,TO_CHAR(A.RETIRE_ANNTY_DDC)  AS RETIRE_ANNTY_DDC
				,TO_CHAR(A.DSPSN_GRNT_INSRNC)  AS DSPSN_GRNT_INSRNC
				,TO_CHAR(A.DSPSN_GRNT_INSRNC_DDC)  AS DSPSN_GRNT_INSRNC_DDC
				,TO_CHAR(A.HOUSE_BRRW_AMOUNT)  AS HOUSE_BRRW_AMOUNT
				,TO_CHAR(A.FRNTN_PAY)  AS FRNTN_PAY
				,TO_CHAR(A.CNTR_POLITC_CPTAL)  AS CNTR_POLITC_CPTAL
				,TO_CHAR(A.LABRR_STOCK_SVINGS)  AS LABRR_STOCK_SVINGS
				,TO_CHAR(A.INORG_STOCK_SVINGS)  AS INORG_STOCK_SVINGS
				,TO_CHAR(A.TAXAMT_DDC_SM)  AS TAXAMT_DDC_SM
				,TO_CHAR(A.RDCXPT_TAXAMT)  AS RDCXPT_TAXAMT
				,TO_CHAR(CASE  WHEN A.DECSN_TAXAMT_INCMTAX < 0 THEN 0
					           WHEN A.DECSN_TAXAMT_INCMTAX > 0 THEN A.DECSN_TAXAMT_INCMTAX
					           ELSE 0 END)                                                 AS DECSN_TAXAMT_INCMTAX
				,TO_CHAR(CASE  WHEN A.DECSN_TAXAMT_AGSPT < 0 THEN 0
					           WHEN A.DECSN_TAXAMT_AGSPT > 0 THEN A.DECSN_TAXAMT_AGSPT
					           ELSE 0 END)                                                 AS DECSN_TAXAMT_AGSPT
				,TO_CHAR(CASE  WHEN A.DECSN_TAXAMT_LCLTY_INCMTAX < 0 THEN 0
					           WHEN A.DECSN_TAXAMT_LCLTY_INCMTAX > 0 THEN A.DECSN_TAXAMT_LCLTY_INCMTAX
					           ELSE 0 END)                                                 AS DECSN_TAXAMT_LCLTY_INCMTAX
				,TO_CHAR(A.DECSN_TAXAMT_EMPLYMINSRNC)  AS DECSN_TAXAMT_EMPLYMINSRNC
				,TO_CHAR(A.DECSN_TAXAMT_ENCRG_ENDW)  AS DECSN_TAXAMT_ENCRG_ENDW
				,TO_CHAR(A.BEFORE_WORK_INCMTAX)  AS BEFORE_WORK_INCMTAX
				,TO_CHAR(A.BEFORE_WORK_AGSPT)  AS BEFORE_WORK_AGSPT
				,TO_CHAR(A.BEFORE_WORK_LCLTY_INCMTAX)  AS BEFORE_WORK_LCLTY_INCMTAX
				,TO_CHAR(A.NOW_LEV_PREARNGE_INCMTAX)  AS NOW_LEV_PREARNGE_INCMTAX
				,TO_CHAR(A.NOW_LEV_PREARNGE_AGSPT)  AS NOW_LEV_PREARNGE_AGSPT
				,TO_CHAR(A.NOW_LEV_PREARNGE_LCLTY_INCMTAX)  AS NOW_LEV_PREARNGE_LCLTY_INCMTAX
				,TO_CHAR(A.NOW_LEV_PREARNGE_EMPLYMINSRNC)  AS NOW_LEV_PREARNGE_EMPLYMINSRNC
				,TO_CHAR(A.NOW_LEV_PREARNGE_ENCRG_ENDW)  AS NOW_LEV_PREARNGE_ENCRG_ENDW
				,TO_CHAR(A.NOW_LEV_RESULT_INCMTAX)  AS NOW_LEV_RESULT_INCMTAX
				,TO_CHAR(A.NOW_LEV_RESULT_AGSPT)  AS NOW_LEV_RESULT_AGSPT
				,TO_CHAR(A.NOW_LEV_RESULT_LCLTY_INCMTAX)  AS NOW_LEV_RESULT_LCLTY_INCMTAX
				,TO_CHAR(A.NOW_LEV_RESULT_EMPLYMINSRNC)  AS NOW_LEV_RESULT_EMPLYMINSRNC
				,TO_CHAR(A.NOW_LEV_RESULT_ENCRG_ENDW)  AS NOW_LEV_RESULT_ENCRG_ENDW
				,TO_CHAR(A.DDCT_LEV_INCMTAX)  AS DDCT_LEV_INCMTAX
				,TO_CHAR(A.DDCT_LEV_AGSPT)  AS DDCT_LEV_AGSPT
				,TO_CHAR(A.DDCT_LEV_LCLTY_INCMTAX)  AS DDCT_LEV_LCLTY_INCMTAX
				,TO_CHAR(A.DDCT_LEV_EMPLYMINSRNC)  AS DDCT_LEV_EMPLYMINSRNC
				,TO_CHAR(A.DDCT_LEV_ENCRG_ENDW)  AS DDCT_LEV_ENCRG_ENDW
				,TO_CHAR(A.DDCT_RETUN_INCMTAX)  AS DDCT_RETUN_INCMTAX
				,TO_CHAR(A.DDCT_RETUN_AGSPT)  AS DDCT_RETUN_AGSPT
				,TO_CHAR(A.DDCT_RETUN_LCLTY_INCMTAX)  AS DDCT_RETUN_LCLTY_INCMTA
				,TO_CHAR(A.DDCT_RETUN_EMPLYMINSRNC)  AS DDCT_RETUN_EMPLYMINSRNC
				,TO_CHAR(A.DDCT_RETUN_ENCRG_ENDW)  AS DDCT_RETUN_ENCRG_ENDW
				,TO_CHAR(A.CNTR_CYFD)  AS CNTR_CYFD
				,TO_CHAR(A.ETC_INCOME_DDC_SM)  AS ETC_INCOME_DDC_SM
				,TO_CHAR(A.GNRLZ_LMT_EXCESS_AMOUNT)  AS GNRLZ_LMT_EXCESS_AMOUNT
				
				,TO_CHAR(A.ANNTY_SVINGS_TAXAMT)  AS ANNTY_SVINGS_TAXAMT
				,TO_CHAR(A.IRNCF_TAXAMT)  AS IRNCF_TAXAMT
				,TO_CHAR(A.MCP_TAXAMT)  AS MCP_TAXAMT
				,TO_CHAR(A.EDCCT_TAXAMT)  AS EDCCT_TAXAMT
				,TO_CHAR(A.CNTR_POLITC_TAXAMT)  AS CNTR_POLITC_TAXAMT
				,TO_CHAR(A.CNTR_POLITC_UP)  AS CNTR_POLITC_UP
				,TO_CHAR(A.CNTR_POLITC_UP_TAXAMT)  AS CNTR_POLITC_UP_TAXAMT
				,TO_CHAR(A.LEGAL_CNTR)  AS LEGAL_CNTR
				,TO_CHAR(A.LEGAL_CNTR_TAXAMT)  AS LEGAL_CNTR_TAXAMT
				,TO_CHAR(A.APPN_CNTR)  AS APPN_CNTR
				,TO_CHAR(A.APPN_CNTR_TAXAMT)  AS APPN_CNTR_TAXAMT
				,TO_CHAR(A.END_CNTR)  AS END_CNTR
				,TO_CHAR(A.END_CNTR_TAXAMT)  AS END_CNTR_TAXAMT
				,TO_CHAR(A.MTHT_AM_TAXAMT)  AS MTHT_AM_TAXAMT
                    						
				,TO_CHAR(A.GRNT_IRNCF)  AS GRNT_IRNCF
				
				,A.IHIDNUM_ENCPT
				,TO_CHAR(A.PNINT_RPAY_FNNC)  AS PNINT_RPAY_FNNC
				,TO_CHAR(A.PNINT_RPAY_RESIDNT)  AS PNINT_RPAY_RESIDNT
				,TO_CHAR(A.SUBSCRPT_SVINGS)  AS SUBSCRPT_SVINGS
				,TO_CHAR(A.HOUSE_SUBSCRPT_GNRLZ)  AS HOUSE_SUBSCRPT_GNRLZ
				,TO_CHAR(A.LABRR_HOUSE_PREPRTN)  AS LABRR_HOUSE_PREPRTN
				,TO_CHAR(A.SPECL_INCOME_DDC)  AS SPECL_INCOME_DDC
				,TO_CHAR(A.SPECL_TAXAMT_DDC_SM)  AS SPECL_TAXAMT_DDC_SM
				,SFHRM_GET_OFCPSCD(A.EMPNO, C.JSSFC_SE, C.PAY_CLSF_SE, C.ECNY_DE)  AS OFCPS   /* 직위 */
				,C.JSSFC_SE  AS  EMPL_SE   /* 직종  */
				,H_DECRYPT(C.IHIDNUM_ENCPT)IHIDNUM
				,(SELECT TO_CHAR(NVL(SUPORTR_20,0) + NVL(SUPORTR_60,0)) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  SUPORTR
				,(SELECT TO_CHAR(HSHLDR_AT) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  HSHLDR_AT
				,(SELECT TO_CHAR(COURS_PVLTRT_70) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  COURS_PVLTRT_70
				,(SELECT TO_CHAR(DSPSN_CO) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  DSPSN_CO
				,(SELECT TO_CHAR(NPN) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  NPN
				,(SELECT TO_CHAR(HLTHINS) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  HLTHINS
				,(SELECT TO_CHAR(EMPLYMINSRNC) 
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  EMPLYMINSRNC
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_14) AS  HOUSE_MRTG_BRRW_INTR_14  
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_29) AS  HOUSE_MRTG_BRRW_INTR_29
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_30) AS  HOUSE_MRTG_BRRW_INTR_30
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_FIXING) AS  HOUSE_MRTG_BRRW_INTR_FIXING  
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_ETC) AS  HOUSE_MRTG_BRRW_INTR_ETC 
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_15Y_15_1) AS  HOUSE_MRTG_BRRW_INTR_15Y_15_1  
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_15Y_15_2) AS  HOUSE_MRTG_BRRW_INTR_15Y_15_2
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_15Y_15_3) AS  HOUSE_MRTG_BRRW_INTR_15Y_15_3
				,TO_CHAR(HOUSE_MRTG_BRRW_INTR_15Y_10) AS  HOUSE_MRTG_BRRW_INTR_15Y_10  
				,TO_CHAR(SMALL_CRNTY_DDC) AS  SMALL_CRNTY_DDC
				,(SELECT TO_CHAR(INVT_MXTR)
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  INVT_MXTR
				,(SELECT TO_CHAR(MNYCH)
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  MNYCH  
				,(SELECT TO_CHAR(CHLDRN_6_BELOW)
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  CHLDRN_6_BELOW
				,(SELECT TO_CHAR(CHLDBRTH_ADP_CHLDRN)
				  FROM TBSAL_YND_EXCCLC_BSIS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO)  AS  CHLDBRTH_ADP_CHLDRN   
				,TO_CHAR(CASE WHEN DDCT_LEV_INCMTAX > 0 THEN 0
			          WHEN DDCT_RETUN_INCMTAX > 0 THEN 1   
			          ELSE 0 END)                                                             AS GUBUN1
			    ,TO_CHAR(CASE WHEN DDCT_LEV_INCMTAX > 0 THEN DDCT_LEV_INCMTAX
			          WHEN DDCT_RETUN_INCMTAX > 0 THEN DDCT_RETUN_INCMTAX
			          ELSE 0 END)                                                             AS INCMTAX
			    ,TO_CHAR(CASE WHEN DDCT_LEV_LCLTY_INCMTAX > 0 THEN 0
			          WHEN DDCT_RETUN_LCLTY_INCMTAX > 0 THEN 1
			          ELSE 0 END)                                                             AS GUBUN2      
			    ,TO_CHAR(CASE WHEN DDCT_LEV_LCLTY_INCMTAX > 0 THEN DDCT_LEV_LCLTY_INCMTAX
			          WHEN DDCT_RETUN_LCLTY_INCMTAX > 0 THEN DDCT_RETUN_LCLTY_INCMTAX
			          ELSE 0 END)                                                             AS LCLTY_INCMTAX   
			    ,TO_CHAR(CASE WHEN DDCT_LEV_AGSPT > 0 THEN 0
			          WHEN DDCT_RETUN_AGSPT > 0 THEN 1
			          ELSE 0 END)                                                             AS GUBUN3       
			    ,TO_CHAR(CASE WHEN DDCT_LEV_AGSPT > 0 THEN DDCT_LEV_AGSPT
			          WHEN DDCT_RETUN_AGSPT > 0 THEN DDCT_RETUN_AGSPT
			          ELSE 0 END)                                                             AS AGSPT
			    , TO_CHAR((SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_BEFORE_WORK AA WHERE A.EXCCLC_YEAR = AA.EXCCLC_YEAR AND A.EXCCLC_SE = AA.EXCCLC_SE AND A.EMPNO = AA.EMPNO)) AS EXCCLC_BEFORE_WORK_CNT                   
		   FROM TBSAL_YND_EXCCLC_DETAIL A
		       ,TBHRM_HR_MASTR C
			   ,VWHRM_DEPT B
		   WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND A.EXCCLC_SE IN ('1','2')
		   AND A.EMPNO = C.EMPNO
		   AND A.DEPT_CODE = B.DEPT_CODE
		   /* AND B.USE_AT = '1' */
		   AND B.DEPT_LEVEL_SE IN('1','2')
		]]>
		<isNotEmpty property="EMPNO">
	 	   AND A.EMPNO = #EMPNO#
		</isNotEmpty>  		   
		   ORDER BY  C.RSPOFC_SE, SFHRM_GET_OFCPSCD(A.EMPNO,C.JSSFC_SE,C.HR_CLSF_SE,C.ECNY_DE), C.PAY_CLSF_SE,  A.EMPNO,C.JSSFC_SE 
			
    </select>
    
    <!-- 연말정산결과정보 목록조회2 -->
	<select id="SAL050207DAO.selectYndResult2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     EXCCLC_YEAR
				,EXCCLC_SE
				,TO_CHAR(ROWNUM)  AS COUNT2
				,EMPNO
				,INCOME_SE
				,EMPNM
				,WRKPLC_NM
				,BIZRNO
				,TO_CHAR(SALARY_TOTAMT)                            AS SALARY_TOTAMT
				,TO_CHAR(BNS_TOTAMT)                               AS BNS_TOTAMT
				,TO_CHAR(NVL(SALARY_TOTAMT,0) + NVL(BNS_TOTAMT,0)) AS TOT1
				,TO_CHAR(TAXXMPT_OUTNATN_ERNM)                     AS TAXXMPT_OUTNATN_ERNM
				,TO_CHAR(TAXXMPT_NIGHT_ERNM)                       AS TAXXMPT_NIGHT_ERNM
				,TO_CHAR(TAXXMPT_ETC_INCOME)                       AS TAXXMPT_ETC_INCOME
				,TO_CHAR(NVL(TAXXMPT_OUTNATN_ERNM,0) + NVL(TAXXMPT_NIGHT_ERNM,0) + NVL(TAXXMPT_ETC_INCOME,0)) AS TAXXMPT
				,TO_CHAR(INCMTAX)                                  AS INCMTAX
				,TO_CHAR(LCLTY_INCMTAX)                            AS LCLTY_INCMTAX
				,TO_CHAR(AGSPT)                                    AS AGSPT
				,TO_CHAR(PAY_ENDW)                                 AS PAY_ENDW
				,TO_CHAR(HLTHINS)                                  AS HLTHINS
				,TO_CHAR(NPN)                                      AS NPN
				,TO_CHAR(EMPLYMINSRNC)                             AS EMPLYMINSRNC
				,WORK_BEGIN_DE
				,WORK_ENDDE
		   FROM TBSAL_YND_EXCCLC_BEFORE_WORK		      
		   WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND EXCCLC_SE IN ('1','2')
		   AND EMPNO = #EMPNO#
		]]>   
    </select>	
    
    <!-- 연말정산결과정보 목록조회3 -->
	<select id="SAL050207DAO.selectYndResult3List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     EXCCLC_YEAR
				,EXCCLC_SE
				,EMPNO
				,FAMILY_NM
				,SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT) AS FAMILY_IHIDNUM_ENCPT
				,EMPNM
				,CASE WHEN FAMILY_RELATE = '000' THEN '0'
				      WHEN FAMILY_RELATE = '001' THEN '1' WHEN FAMILY_RELATE = '002' THEN '1' WHEN FAMILY_RELATE = '003' THEN '1' WHEN FAMILY_RELATE = '004' THEN '1'
				      WHEN FAMILY_RELATE = '013' THEN '2' WHEN FAMILY_RELATE = '014' THEN '2' WHEN FAMILY_RELATE = '017' THEN '2' WHEN FAMILY_RELATE = '018' THEN '2' 
				      WHEN FAMILY_RELATE = '035' THEN '2' WHEN FAMILY_RELATE = '036' THEN '2' 
				      WHEN FAMILY_RELATE = '005' THEN '3' WHEN FAMILY_RELATE = '006' THEN '3' 
				      WHEN FAMILY_RELATE = '007' THEN '4' 
				      WHEN FAMILY_RELATE = '008' THEN '6' WHEN FAMILY_RELATE = '009' THEN '6' WHEN FAMILY_RELATE = '010' THEN '6' 
				      WHEN FAMILY_RELATE = '011' THEN '6' WHEN FAMILY_RELATE = '012' THEN '6'
				      WHEN FAMILY_RELATE = '999' THEN '7'  
				      ELSE '7' END  AS FAMILY_RELATE
				,DECODE(DDC_AT,'1','1','0','')  AS DDC_AT
				,ISE_FRGNR_SE
				,DECODE(TROBL_AT,'1','1','2','2','3','3','0','')  AS TROBL_AT
				,DECODE(BELOW_6_AT,'1','1','0','')  AS BELOW_6_AT
				,DECODE(FAMILY_RELATE, '000', DECODE(LADY_AT,'1','1','0',''),'')  AS LADY_AT
				,DECODE(COURS_PVLTRT_AT,'1','1','0','')  AS COURS_PVLTRT_AT
				,DECODE(CHLDBRTH_ADP_AT,'1','1','0','')  AS CHLDBRTH_ADP_AT
				,DECODE(FAMILY_RELATE, '000', DECODE(PARNTS_1_AT,'1','1','0',''),'')  AS PARNTS_1_AT
				,EDCCT_SE_DTA
				,TO_CHAR(EDCCT_DTA+EDCCT_DTA1+EDCCT_DTA2+EDCCT_DTA3+EDCCT_DTA4+EDCCT_DTA5)  AS EDCCT_DTA
				,CASE WHEN DDC_AT = '1' THEN TO_CHAR(CTBNY_DTA)
				 ELSE TO_CHAR('0') END CTBNY_DTA
				,MCP_SE_DTA
				,TO_CHAR(MCP_DTA+GLASSES_BUY+CBPR_TREAT)  AS MCP_DTA
				,TO_CHAR(CREDTCARD_DTA)  AS CREDTCARD_DTA
				,TO_CHAR(DBCD_PRPAY_DTA)  AS DBCD_PRPAY_DTA
				,TO_CHAR(CASH_RCIPT_DTA)  AS CASH_RCIPT_DTA
				,TO_CHAR(TRDIT_MRKT_DTA)  AS TRDIT_MRKT_DTA
				,TO_CHAR(PBTRNSP_TRNSPORT_USE_DTA)  AS PBTRNSP_TRNSPORT_USE_DTA
				,EDCCT_SE_ETC
				,TO_CHAR(EDCCT_ETC+EDCCT_ETC1+EDCCT_ETC2+EDCCT_ETC3+EDCCT_ETC4+EDCCT_ETC5)  AS EDCCT_ETC
				,CASE WHEN DDC_AT = '1' THEN TO_CHAR(CTBNY_ETC)
				 ELSE TO_CHAR('0') END CTBNY_ETC
				,MCP_SE_ETC
				,TO_CHAR(MCP_ETC+GLASSES_BUY_ETC+CBPR_TREAT_ETC)  AS MCP_ETC
				,TO_CHAR(CREDTCARD_ETC)  AS CREDTCARD_ETC
				,TO_CHAR(DBCD_PRPAY_ETC)  AS DBCD_PRPAY_ETC
				,TO_CHAR(TRDIT_MRKT_ETC)  AS TRDIT_MRKT_ETC
				,TO_CHAR(PBTRNSP_USE_ETC)  AS PBTRNSP_USE_ETC
				,TO_CHAR(GRNT_INSRNC)  AS GRNT_INSRNC
				,TO_CHAR(GRNT_INSRNC_ETC)  AS GRNT_INSRNC_ETC
				,TO_CHAR(DSPSN_INSRNC)  AS DSPSN_INSRNC
				,TO_CHAR(DSPSN_INSRNC_ETC)  AS DSPSN_INSRNC_ETC
				,TO_CHAR(HLTHINS)  AS HLTHINS
				,TO_CHAR(HLTHINS_ETC)  AS HLTHINS_ETC
		   FROM TBSAL_YND_EXCCLC_HN_DDC		      
		   WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND EXCCLC_SE IN ('1','2')
		   AND EMPNO = #EMPNO#
		   ORDER BY FAMILY_RELATE
		]]>   
    </select>
    
    <!-- 연말정산결과정보 목록조회4 -->
	<select id="SAL050207DAO.selectYndResult4List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     SN
				,EXCCLC_YEAR
				,EXCCLC_SE
				,EMPNO
				,DTA_SE
				,CASE WHEN FORMAT_CODE = 'E102Y' THEN '22'
		              WHEN FORMAT_CODE = 'D101Y' THEN '21'
		              WHEN FORMAT_CODE = 'N101Y' THEN '51'
		              WHEN FORMAT_CODE = 'F102Y' THEN '11'
		              WHEN FORMAT_CODE = 'J301Y' AND DETAIL_KND_2 = '1' THEN '31'
		              WHEN FORMAT_CODE = 'J301Y' AND DETAIL_KND_2 = '2' THEN '32'
		              WHEN FORMAT_CODE = 'J301Y' AND DETAIL_KND_2 = '4' THEN '34'
		              ELSE '' END  AS  FORMAT_CODE
				,IEM_CODE
				,TO_CHAR(SFCOM_DEC_ALL(IHIDNUM)) AS IHIDNUM
				,NM
				,RELATE_SE
				,BIZRNO
				,MTLTY
				,DETAIL_KND
				,DETAIL_KND_2
				,REPLACE(ESNTL_NO, '-', '') AS ESNTL_NO
				,GOODS_NM
				,STDR_DE
				,BEGIN_DE
				,END_DE
				,TO_CHAR(GNRL_2)           AS  GNRL_2
				,TO_CHAR(TRDIT_MRKT_2)     AS  TRDIT_MRKT_2
				,TO_CHAR(MASS_TRNSPORT_2)  AS  MASS_TRNSPORT_2
				,TO_CHAR(GNRL_1)           AS  GNRL_1
				,TO_CHAR(TRDIT_MRKT_1)     AS  TRDIT_MRKT_1
				,TO_CHAR(MASS_TRNSPORT_1)  AS  MASS_TRNSPORT_1
				,TO_CHAR(FRHFYR_CARD)      AS  FRHFYR_CARD
				,TO_CHAR(SHYY_CARD)        AS  SHYY_CARD
				,TO_CHAR(RPAY_PD)          AS  RPAY_PD
				,TO_CHAR(BRRW_AMOUNT)      AS  BRRW_AMOUNT
				,TO_CHAR(FIXING_BRRW_AMOUNT)    AS  FIXING_BRRW_AMOUNT
				,TO_CHAR(NTHG_DFR_BRRW_AMOUNT)  AS  NTHG_DFR_BRRW_AMOUNT
				,TO_CHAR(PRTINT_PRNCPAL_RPAY)   AS  PRTINT_PRNCPAL_RPAY
				,TO_CHAR(PAY_AMOUNT)       AS  PAY_AMOUNT
				,RM
				,TO_CHAR(DDC_AMOUNT)       AS  DDC_AMOUNT
		   FROM TBSAL_YND_EXCCLC_NTS	      
		   WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND EXCCLC_SE IN ('1','2')
		   AND EMPNO = #EMPNO#
		   AND DDC_AMOUNT > 0
        ]]>
        <isEqual property="FORMAT_CODE" compareValue="E102Y" >		
		   AND FORMAT_CODE IN ('F102Y','D101Y','E102Y','J301Y','N101Y')
		</isEqual>
		   ORDER BY RELATE_SE
    </select>	
    
    <!-- 연말정산결과정보 목록조회5 -->
	<select id="SAL050207DAO.selectYndResult5List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     EXCCLC_YEAR
				,EXCCLC_SE
				,EMPNO
				,EMPNM
				,RNTAGNT_NM
				,TO_CHAR(REPLACE(SFCOM_DEC_ALL(RNTAGNT_NO), '-', '')) AS RNTAGNT_NO
				,CTRTC_ADRES
				,TO_CHAR(CNTRCT_BGNDE) AS CNTRCT_BGNDE
				,TO_CHAR(CNTRCT_ENDDE) AS CNTRCT_ENDDE
				,TO_CHAR(MTHT_AM)  AS  MTHT_AM
				,TO_CHAR(DDC_AMOUNT)  AS  DDC_AMOUNT
				,LENDR_NM
				,TO_CHAR(REPLACE(SFCOM_DEC_ALL(LENDR_IHIDNUM_ENCPT), '-', '')) AS LENDR_IHIDNUM_ENCPT
				,TO_CHAR(BRRW_INTR_RT)         AS  BRRW_INTR_RT
				,TO_CHAR(PNINT_RPAY_AMOUNT)    AS  PNINT_RPAY_AMOUNT
				,TO_CHAR(PRNCPAL)              AS  PRNCPAL
				,TO_CHAR(INTR_AMOUNT)          AS  INTR_AMOUNT
				,TO_CHAR(DDC_AMOUNT_2)         AS  DDC_AMOUNT_2
				,RNTAGNT_NM_2
				,TO_CHAR(REPLACE(SFCOM_DEC_ALL(RNTAGNT_IHIDNUM_ENCPT_2), '-', '')) AS RNTAGNT_IHIDNUM_ENCPT_2
				,CTRTC_ADRES_2
				,TO_CHAR(CNTRCT_BGNDE_2) AS CNTRCT_BGNDE_2
				,TO_CHAR(CNTRCT_ENDDE_2) AS CNTRCT_ENDDE_2
				,TO_CHAR(LFSTS_GTN)            AS  LFSTS_GTN
				,CRRNCY_CNSMP_HOUSE_TY
				,TO_CHAR(CRRNCY_CNSMP_HOUSE_AR *100)    AS  CRRNCY_CNSMP_HOUSE_AR
				,LS_HOUSE_TY
				,TO_CHAR(LS_HOUSE_AR * 100)             AS  LS_HOUSE_AR
				,TO_CHAR(CRRNCY_CNSMP_BEGIN_DE) AS CRRNCY_CNSMP_BEGIN_DE
		   FROM TBSAL_YND_EXCCLC_PNINT_RPAY      
		   WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND EXCCLC_SE IN ('1','2')
		   AND EMPNO = #EMPNO#
        ]]>
    </select>	
    
    <!-- 연말정산결과정보 의료비 -->
	<select id="SAL050207DAO.selectYndMcpList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       		SELECT 
			     A.EMPNO
			    ,TO_CHAR(ROW_NUMBER() OVER (ORDER BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.IHIDNUM, A.DETAIL_KND, DECODE(A.DETAIL_KND, 1, NULL, A.BIZRNO), A.CBPR_TREAT_AT)) AS COUNT1
				,NVL((SELECT SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT) AS FAMILY_IHIDNUM_ENCPT
			      FROM TBSAL_YND_EXCCLC_HN_DDC 
			      WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
			      AND EXCCLC_SE = A.EXCCLC_SE
			      AND EMPNO = A.EMPNO
			      AND FAMILY_RELATE = '000'),'19900101') AS IHIDNUM2				/* 소득자 주민번호 */
				,(SELECT FAMILY_NM
			      FROM TBSAL_YND_EXCCLC_HN_DDC 
			      WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
			      AND EXCCLC_SE = A.EXCCLC_SE
			      AND EMPNO = A.EMPNO
			      AND FAMILY_RELATE = '000') AS NM 									/* 소득자 성명 */
				,DECODE(DETAIL_KND, 1, NULL, BIZRNO)  AS  BIZRNO					/* 지급처 사업자 번호 */
			    ,NVL2(DECODE(DETAIL_KND, 1, NULL, BIZRNO), MAX(MTLTY), '') AS MTLTY	/* 지급처 상호 */
			    ,A.DETAIL_KND														/* 의료증빙코드 */
				,TO_CHAR(COUNT(A.PAY_AMOUNT))  AS PAY_CNT
			    ,TO_CHAR(SUM(A.PAY_AMOUNT))  AS PAY_AMOUNT
				,DECODE(CBPR_TREAT_AT, '1', '1') AS CBPR_TREAT_AT					/* 난임시술비 여부 */
			    ,SFCOM_DEC_ALL(A.IHIDNUM) AS IHIDNUM
			    ,(
					SELECT CASE WHEN FAMILY_RELATE = '000' THEN '1'
								WHEN NVL(TROBL_AT, '0') != 0 THEN '1'
								WHEN FLOOR( MONTHS_BETWEEN( TO_DATE(AA.EXCCLC_YEAR||'0101', 'YYYYMMDD')
																			  , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
																						 WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
																						 WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
																						 WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
																						 , 'YYYYMMDD' ) )/12) >= 65 THEN '1'
								ELSE '0' END
					FROM TBSAL_YND_EXCCLC_HN_DDC AA
					WHERE A.EXCCLC_YEAR = AA.EXCCLC_YEAR 
					AND A.EXCCLC_SE = AA.EXCCLC_SE 
					AND A.EMPNO = AA.EMPNO
					AND A.IHIDNUM = AA.FAMILY_IHIDNUM_ENCPT
				) AS DETAIL_KND_2	/* 본인등 해당여부 */
			FROM TBSAL_YND_EXCCLC_NTS A
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE IN ('1','2')
			AND A.FORMAT_CODE = 'B101Y'
			AND EXISTS(SELECT 1 FROM TBSAL_YND_EXCCLC_DETAIL AA WHERE A.EXCCLC_YEAR = AA.EXCCLC_YEAR AND A.EXCCLC_SE = AA.EXCCLC_SE AND A.EMPNO = AA.EMPNO AND MCP_DDC > 0)
			GROUP BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.IHIDNUM, A.DETAIL_KND, DECODE(A.DETAIL_KND, 1, NULL, A.BIZRNO), A.CBPR_TREAT_AT
			ORDER BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.IHIDNUM, A.DETAIL_KND, DECODE(A.DETAIL_KND, 1, NULL, A.BIZRNO), A.CBPR_TREAT_AT
        ]]>
    </select>
    
    <!-- 연말정산결과정보 기부금 -->
	<select id="SAL050207DAO.selectYndCtbnyMain" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT *
			FROM (
					SELECT	TO_CHAR(COUNT(*)) AS CNTR_MDAT_CNT
							, TO_CHAR(SUM(A.CNTR_AMOUNT)) AS CNTR_MDAT_AMOUNT
							, TO_CHAR(SUM(A.CRRSPND_DDC)) AS CNTR_MDAT_CRRSPND_DDC
					FROM TBSAL_YND_EXCCLC_CNTR_MDAT A
					WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
					AND A.EXCCLC_SE IN ('1','2')
				),
				(
					SELECT TO_CHAR(COUNT(*)) AS CNTR_CNT
					FROM (
							SELECT '1'
							FROM (	SELECT	AA.*
											, (	SELECT FAMILY_RELATE
												FROM TBSAL_YND_EXCCLC_HN_DDC
												WHERE EXCCLC_YEAR = AA.EXCCLC_YEAR
												AND EXCCLC_SE = AA.EXCCLC_SE
												AND EMPNO = AA.EMPNO
												AND FAMILY_IHIDNUM_ENCPT = AA.IHIDNUM) AS FAMILY_RELATE
									FROM TBSAL_YND_EXCCLC_NTS AA) A
							WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
							AND A.EXCCLC_SE IN ('1','2')
							AND A.FORMAT_CODE = 'L102Y'
							GROUP BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.DETAIL_KND, A.BIZRNO, A.FAMILY_RELATE, A.IHIDNUM
						)
				)
        ]]>
    </select>
    
    <!-- 연말정산결과정보 기부금 -->
	<select id="SAL050207DAO.selectYndCtbnyList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			 
	       SELECT 
			     A.EMPNO    
			FROM TBSAL_YND_EXCCLC_NTS A
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE IN ('1','2')
			GROUP BY A.EMPNO
        ]]>
    </select>
    <!-- 연말정산결과정보 기부금 -->
	<select id="SAL050207DAO.selectYndCtbny2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT A.EMPNO
					, (	SELECT SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT)
						FROM TBSAL_YND_EXCCLC_HN_DDC
						WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
						AND EXCCLC_SE = A.EXCCLC_SE
						AND EMPNO = A.EMPNO
						AND FAMILY_RELATE = '000') AS IHIDNUM
					, (	SELECT EMPNM
						FROM TBSAL_YND_EXCCLC_HN_DDC
						WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
						AND EXCCLC_SE = A.EXCCLC_SE
						AND EMPNO = A.EMPNO
						AND FAMILY_RELATE = '000') AS EMPNM
					, TO_CHAR(A.CNTR_TY) AS CNTR_TY							/* 기부구분 */
					, TO_CHAR(A.CNTR_YEAR) AS CNTR_YEAR						/* 기부년도 */
					, TO_CHAR(A.CNTR_AMOUNT) AS CNTR_AMOUNT					/* 기부금액 */
					, TO_CHAR(A.PRVYY_DDC) AS PRVYY_DDC						/* 전년공제 */
					, TO_CHAR(A.DDC_TRGET) AS DDC_TRGET						/* 공제대상 */
					, TO_CHAR(A.CRRSPND_DDC) AS CRRSPND_DDC					/* 해당공제 */
					, TO_CHAR(A.EXTSH_AMOUNT) AS EXTSH_AMOUNT				/* 소멸금액 */
					, TO_CHAR(A.CYFD_AMOUNT) AS CYFD_AMOUNT					/* 이월금액 */
					, ROW_NUMBER() OVER (ORDER BY CNTR_YEAR, CNTR_TY) R_NUM /* 순번 */
			FROM TBSAL_YND_EXCCLC_CNTR_MDAT A
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE IN ('1','2')
			AND A.EMPNO = #EMPNO#
			ORDER BY CNTR_YEAR, CNTR_TY
        ]]>
    </select>
    
    <!-- 연말정산결과정보 기부금 -->
	<select id="SAL050207DAO.selectYndCtbny3List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT 
			     A.EMPNO
				,(	SELECT SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT)
					FROM TBSAL_YND_EXCCLC_HN_DDC
					WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					AND EXCCLC_SE = A.EXCCLC_SE
					AND EMPNO = A.EMPNO
					AND FAMILY_RELATE = '000') AS MY_IHIDNUM
			    ,A.DETAIL_KND
				,A.BIZRNO
			    ,MAX(A.MTLTY) AS MTLTY
				,FAMILY_RELATE
			    ,CASE WHEN FAMILY_RELATE = '000' THEN '1'
				      WHEN FAMILY_RELATE = '001' THEN '4' WHEN FAMILY_RELATE = '002' THEN '4' WHEN FAMILY_RELATE = '003' THEN '4' WHEN FAMILY_RELATE = '004' THEN '4'
				      WHEN FAMILY_RELATE = '013' THEN '6' WHEN FAMILY_RELATE = '014' THEN '6' WHEN FAMILY_RELATE = '017' THEN '6' WHEN FAMILY_RELATE = '018' THEN '6' 
				      WHEN FAMILY_RELATE = '035' THEN '6' WHEN FAMILY_RELATE = '036' THEN '6' 
				      WHEN FAMILY_RELATE = '005' THEN '2' WHEN FAMILY_RELATE = '006' THEN '2' 
				      WHEN FAMILY_RELATE = '007' THEN '3' 
				      WHEN FAMILY_RELATE = '008' THEN '5' WHEN FAMILY_RELATE = '009' THEN '5' WHEN FAMILY_RELATE = '010' THEN '5' 
				      WHEN FAMILY_RELATE = '011' THEN '5' WHEN FAMILY_RELATE = '012' THEN '5'
				      WHEN FAMILY_RELATE = '999' THEN '6'  
				      ELSE '7' END  AS FAMILY_RELATE
				,MAX(A.NM) AS NM
			    ,SFCOM_DEC_ALL(A.IHIDNUM) AS IHIDNUM
				,TO_CHAR(COUNT(*)) AS PAY_CNT									/* 건수 */
			    ,TO_CHAR(SUM(A.CTBNY_AMOUNT))  AS CTBNY_AMOUNT					/* 기부금 합계 */
				,TO_CHAR(SUM(A.PAY_AMOUNT))  AS PAY_AMOUNT						/* 공제대상금액 */
				,TO_CHAR(SUM(A.CTBNY_ICNT_AMOUNT))  AS CTBNY_ICNT_AMOUNT		/* 기부장려금 */
			FROM (	SELECT	AA.*
							, (	SELECT FAMILY_RELATE
								FROM TBSAL_YND_EXCCLC_HN_DDC
								WHERE EXCCLC_YEAR = AA.EXCCLC_YEAR
								AND EXCCLC_SE = AA.EXCCLC_SE
								AND EMPNO = AA.EMPNO
								AND FAMILY_IHIDNUM_ENCPT = AA.IHIDNUM) AS FAMILY_RELATE
					FROM TBSAL_YND_EXCCLC_NTS AA) A
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE IN ('1','2')
			AND A.EMPNO = #EMPNO#
			AND A.FORMAT_CODE = 'L102Y'
			GROUP BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.DETAIL_KND, A.BIZRNO, A.FAMILY_RELATE, A.IHIDNUM
			ORDER BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.DETAIL_KND, A.BIZRNO, A.FAMILY_RELATE, A.IHIDNUM
        ]]>
    </select>
    	 		 	 		 

</sqlMap>