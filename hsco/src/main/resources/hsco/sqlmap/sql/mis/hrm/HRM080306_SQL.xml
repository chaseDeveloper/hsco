<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM080306_SQL">
	
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 교육목록 조회 -->
	<select id="HRM080306DAO.selectEdcList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*HRM080306DAO.selectEdcList*/]]>
		WITH EDC_INFO AS (
		    SELECT t1.YEAR
		         , t1.EMPNO
		         , t1.SN
		         , t1.DEPT_CODE
		         , t1.EDC_TY_SN
		         , t1.EDC_CL_SN
		         , t1.EDC_INSTT
		         , t1.CRSE_NM
		         , t1.EDC_PLACE
		         , t1.EDC_BGNDE
		         , t1.EDC_ENDDE
		         , NVL(t1.CONFM_AT, '0') AS CONFM_AT
		         , NVL(t1.CNFIRM_AT, '0') AS CNFIRM_AT
		         , t1.SANCTN_NO
		         , SFCOM_GET_SANCTN_KND(t1.SANCTN_NO)    AS SANCTN_STS
		         , NVL(t1.DE_CT, 0)          AS DE_CT
		         , NVL(t1.MEAL_CT, 0)        AS MEAL_CT
		         , NVL(t1.TRNSPORT_CT, 0)    AS TRNSPORT_CT
		         , NVL(t1.STAYNG_CT, 0)      AS STAYNG_CT
		         , NVL(t1.DE_CT, 0) + NVL(t1.MEAL_CT, 0) + NVL(t1.TRNSPORT_CT, 0) + NVL(t1.STAYNG_CT, 0)    AS EDC_CNSUL_AM /*교육품의금액*/
		         , '1'    AS EDC_TY /*교육관리*/
		         , t1.DECSN_YEAR
		         , t1.DECSN_NO
		         , NVL(t1.EXCCLC_CONFM_AT, '0')    AS EXCCLC_CONFM_AT
		         , t1.BUDGET_ACNT_CODE
		         , t1.EDCCT_FILE_SN
		         , (t2.HANG_NM || '-' || t2.SEHANG_NM || '-' || t2.MOK_NM || '-' || t2.SEMOK_NM) AS BUDGET_ACNT_NM
		         , t3.DEPT_NM                      AS BUDGET_DEPT
		      FROM TBHRM_EDC_MANAGE t1
		        LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
		          ON  t1.YEAR                = t2.YEAR
		          AND t1.BSNS_SE             = t2.BSNS_SE
		          AND t1.BALC_SE             = t2.BALC_SE
		          AND t1.BUDGET_ACNT_CODE    = t2.BUDGET_ACNT_CODE
		        LEFT OUTER JOIN TBHRM_DEPT t3
		          ON t1.BUDGET_DEPT_CODE = t3.DEPT_CODE
		/* ***********************************************************
		    UNION ALL
		    SELECT T1.YEAR
		         , T2.EMPNO
		         , T1.SN
		         , T2.DEPT_CODE
		         , T1.EDC_TY_SN
		         , T1.EDC_CL_SN
		         , T1.EDC_INSTT
		         , T1.CRSE_NM
		         , T1.EDC_PLACE
		         , T1.EDC_BGNDE
		         , T1.EDC_ENDDE
		         , T2.PARTCPTN_AT    AS CONFM_AT
		         , T1.SANCTN_NO
		         , '5'   AS SANCTN_STS  /*집합교육의 경우 결재가 없으면 고정값으로 넘김
		         , NVL(T1.DE_CT, 0)          AS DE_CT
		         , NVL(T1.MEAL_CT, 0)        AS MEAL_CT
		         , NVL(T1.TRNSPORT_CT, 0)    AS TRNSPORT_CT
		         , NVL(T1.STAYNG_CT, 0)      AS STAYNG_CT
		         , NVL(T1.DE_CT, 0) + NVL(T1.MEAL_CT, 0) + NVL(T1.TRNSPORT_CT, 0) + NVL(T1.STAYNG_CT, 0)    AS EDC_CNSUL_AM /*교육품의금액
		         , '2'    AS EDC_TY /*교육과정관리
		         , T1.DECSN_YEAR
		         , T1.DECSN_NO
		         , NVL(T2.EXCCLC_CONFM_AT, '0')    AS EXCCLC_CONFM_AT
		      FROM TBHRM_EDC_CRSE_MANAGE T1
		           INNER JOIN TBHRM_GRUP_EDC_TRGTER_MANAGE T2
		                ON T1.YEAR = T2.YEAR
		               AND T1.SN   = T2.SN
		*********************************************************** */
		)
		SELECT T1.YEAR
		     , T1.EMPNO
		     , T3.EMPNM
		     , T1.SN
		     , T1.DEPT_CODE
		     , NVL(T4.DEPT_NM, T5.DEPT_NM)                                                       AS DEPT_NM
		     , T1.EDC_TY_SN
		     , DECODE(T7.EDC_TY_LCLAS, NULL, NULL, T7.EDC_TY_LCLAS || '-' || T7.EDC_TY_SCLAS)    AS EDC_TY_NM
		     , T1.EDC_CL_SN
		     , DECODE(T1.EDC_CL_SN, NULL, NULL, T9.CODE_NM || '-' || T8.ABILITY_NM)              AS EDC_CL_NM
		     , T1.EDC_INSTT
		     , T1.CRSE_NM
		     , T1.EDC_PLACE
		     , T1.EDC_BGNDE
		     , T1.EDC_ENDDE
		     , T1.CONFM_AT
		     , T1.CNFIRM_AT
		     , T1.SANCTN_NO
		     , T1.SANCTN_STS
		     , NVL(T1.DE_CT, 0)                                                                  AS DE_CT
		     , NVL(T1.MEAL_CT, 0)                                                                AS MEAL_CT
		     , NVL(T1.TRNSPORT_CT, 0)                                                            AS TRNSPORT_CT
		     , NVL(T1.STAYNG_CT, 0)                                                              AS STAYNG_CT
		     , NVL(T1.EDC_CNSUL_AM, 0)                                                           AS EDC_CNSUL_AM
		     , NVL(T6.EXCCLC_AM, 0)                                                              AS EXCCLC_AM
		     , NVL(T6.SUM_DE, 0)                                                                 AS SUM_DE
		     , NVL(T6.SUM_MEAL, 0)                                                               AS SUM_MEAL
		     , NVL(T6.SUM_TRNSPORT, 0)                                                           AS SUM_TRNSPORT
		     , NVL(T6.SUM_STAYNG, 0)                                                             AS SUM_STAYNG
		     , NVL(T1.EDC_CNSUL_AM, 0) - NVL(T6.EXCCLC_AM, 0)                                    AS BLCE
		     , T1.EDC_TY
		     , T1.DECSN_YEAR
		     , T1.DECSN_NO
		     , DECODE(t1.DECSN_NO, NULL, NULL, t1.DECSN_YEAR || '-' || t1.DECSN_NO)              AS DECSN_NO_VIEW
		     , DECODE(T1.DECSN_NO, NULL, '1', '0')                                               AS ENABLE_AT
		     , DECODE(T1.DECSN_NO, NULL, '0', '1')                                               AS EXCCLC_AT
		     , T1.EXCCLC_CONFM_AT
		     , T1.BUDGET_ACNT_CODE
		     , T1.EDCCT_FILE_SN
		     , T1.BUDGET_ACNT_NM
		     , T1.BUDGET_DEPT
		  FROM EDC_INFO T1
		       LEFT OUTER JOIN TBHRM_HR_MASTR T3
		            ON T1.EMPNO = T3.EMPNO
		       LEFT OUTER JOIN TBHRM_DEPT T4
		            ON T1.DEPT_CODE = T4.DEPT_CODE
		       LEFT OUTER JOIN TBHRM_DEPT T5
		            ON T3.DEPT_CODE = T5.DEPT_CODE
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                             , EMPNO
		                             , SN
		                             , EDC_TY
		                             , SUM(NVL(USE_AM, 0))                                AS EXCCLC_AM
		                             , SUM(DECODE(EDCCT_SE, '003', NVL(USE_AM, 0), 0))    AS SUM_DE
		                             , SUM(DECODE(EDCCT_SE, '004', NVL(USE_AM, 0), 0))    AS SUM_MEAL
		                             , SUM(DECODE(EDCCT_SE, '005', NVL(USE_AM, 0), 0))    AS SUM_TRNSPORT
		                             , SUM(DECODE(EDCCT_SE, '006', NVL(USE_AM, 0), 0))    AS SUM_STAYNG
		                          FROM TBHRM_EDCCT_EXCCLC_MANAGE
		                        GROUP BY YEAR
		                               , EMPNO
		                               , SN
		                               , EDC_TY
		       ) T6
		            ON T1.YEAR   = T6.YEAR
		           AND T1.SN     = T6.SN
		           AND T1.EMPNO  = T6.EMPNO
		           AND T1.EDC_TY = T6.EDC_TY
		       LEFT OUTER JOIN TBHRM_EDC_TY_RCOGN_TIME T7
		            ON T1.YEAR      = T7.YEAR
		           AND T1.EDC_TY_SN = T7.SN
		       LEFT OUTER JOIN TBHRM_ABILITY_CODE_MANAGE T8
		            ON T1.YEAR      = T8.YEAR
		           AND T1.EDC_CL_SN = T8.SN
		       LEFT OUTER JOIN TBCOM_CMMN_CODE T9
		            ON T8.ABILITY_SE = T9.CODE
		           AND T9.GRP_CODE   = 'HRM037'
		 WHERE 1=1
		<isNotEmpty property="DECSN_NO">
			   AND t1.DECSN_YEAR = #DECSN_YEAR#
			   AND t1.DECSN_NO   = #DECSN_NO#
		</isNotEmpty>
		<isEmpty property="DECSN_NO">
			   AND T1.CONFM_AT = '1'	/*교육승인여부가 1인 데이터만 조회*/
			   AND SUBSTR(T1.EDC_ENDDE, 1, 6) = #EDC_YM#
			<isNotEmpty property="DEPT_CODE">
			    <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
			        (T1.DEPT_CODE='000000' OR T1.DEPT_CODE = #DEPT_CODE#)
			    </isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="EDC_TY_SN">
			   AND T1.EDC_TY_SN = #EDC_TY_SN#
			</isNotEmpty>
			<isNotEmpty property="EDC_CL_SN">
			   AND T1.EDC_CL_SN = #EDC_CL_SN#
			</isNotEmpty>
			<isNotEmpty property="CRSE_NM">
			   AND T1.CRSE_NM LIKE '%' || #CRSE_NM# || '%'
			</isNotEmpty>
			<isNotEmpty property="EMPNO">
			   AND T1.EMPNO     = #EMPNO#
			</isNotEmpty>
			<isEqual property="AUTH_GRP" compareValue="GRFRS">
			   AND t1.DEPT_CODE IN (SELECT DEPT_CODE FROM TABLE(SFHRM_DEPT_TREE(SFCOM_USER_DEPT_CODE(#S_USER_ID#, 'U'))))
			</isEqual>
			<isEqual property="AUTH_GRP" compareValue="USER">
			   AND t1.DEPT_CODE IN (SELECT DEPT_CODE FROM TABLE(SFHRM_DEPT_TREE(SFCOM_USER_DEPT_CODE(#S_USER_ID#, 'N'))))
			</isEqual>
			<isNotEmpty property="UNSNCT_AT">
				<isEqual property="UNSNCT_AT" compareValue="1">
			   AND t1.DECSN_NO IS NULL
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="EXCCLC">
				<isEqual property="EXCCLC" compareValue="1">
				    AND t1.CNFIRM_AT = '1'
			        AND t1.DECSN_NO IS NULL
				</isEqual>
			</isNotEmpty>
		</isEmpty>
		ORDER BY T1.DEPT_CODE
		       , T1.EMPNO
		       , T1.SN
	</select>
	
	<!-- 개인별 출장비 집계(여비지출결의서 세부내용 목적) -->
	<select id="HRM080306DAO.selectExpDsnDetailTrvct" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')     AS RCPT_DE
		      ,t1.EMPNO                         AS RCPT_MAN_EMPNO
		      ,t2.EMPNM                         AS RCPT_MAN
		      ,t3.SALARY_BANK_CODE              AS FNNC_INSTT_CODE
		      ,t3.SALARY_BANK_ACNUT             AS ACNUTNO
		      ,NVL(t1.SUM_ACPLC_ACT,   0)       AS SUM_ACPLC_ACT
		      ,NVL(t1.SUM_ETC_EXPENS,  0)       AS SUM_ETC_EXPENS
		      ,NVL(t1.SUM_DAIL,        0)       AS SUM_DAIL
		      ,NVL(t1.SUM_MAEL,        0)       AS SUM_MAEL
		      ,NVL(t1.SUM_TRNSPORT,    0)       AS SUM_TRNSPORT
		      ,NVL(t1.SUM_STAYNG,      0)       AS SUM_STAYNG
		      ,NVL(t1.TOT_AMOUNT,      0)       AS TOT_AMOUNT
		      ,NVL(t1.CPR_CARD_AMOUNT, 0)       AS CPR_CARD_AMOUNT
		      ,NVL(t1.DECSN_AMOUNT,    0)       AS DECSN_AMOUNT   
		FROM   (
		        SELECT SUBSTR(b1.EDC_ENDDE, 1, 6)                       AS EDC_YM
		              ,b1.DEPT_CODE
		              ,b1.EMPNO
		              ,0                                                AS SUM_ACPLC_ACT
		              ,0                                                AS SUM_ETC_EXPENS
		              ,SUM(DECODE(b2.EDCCT_SE, '003', b2.USE_AM, 0))    AS SUM_DAIL
		              ,SUM(DECODE(b2.EDCCT_SE, '004', b2.USE_AM, 0))    AS SUM_MAEL
		              ,SUM(DECODE(b2.EDCCT_SE, '005', b2.USE_AM, 0))    AS SUM_TRNSPORT
		              ,SUM(DECODE(b2.EDCCT_SE, '006', b2.USE_AM, 0))    AS SUM_STAYNG
		              ,SUM(b2.USE_AM)                                   AS TOT_AMOUNT
		              ,SUM(DECODE(b2.EXCCLC_SE, '001', b2.USE_AM, 0))   AS CPR_CARD_AMOUNT
		              ,SUM(DECODE(b2.EXCCLC_SE, '001', 0, b2.USE_AM))   AS DECSN_AMOUNT
		        FROM   TBHRM_EDC_MANAGE b1
		               LEFT OUTER JOIN TBHRM_EDCCT_EXCCLC_MANAGE b2
		                    ON b1.YEAR = b2.YEAR
		                   AND b1.SN = b2.SN
		                   AND b1.EMPNO = b2.EMPNO
		                   AND b2.EDC_TY = '1'
		        WHERE  b1.CONFM_AT = '1'    /*교육승인여부가 1인 데이터만 조회*/
		          AND b1.CNFIRM_AT = '1'    /*팀장승인*/
		<isNotEmpty property="UNSNCT_AT">
			<isEqual property="UNSNCT_AT" compareValue="1">
		        AND    b1.DECSN_NO IS NULL
			</isEqual>
		</isNotEmpty>
		        GROUP BY SUBSTR(b1.EDC_ENDDE, 1, 6)
		                ,b1.DEPT_CODE
		                ,b1.EMPNO
		       ) t1
		       LEFT OUTER JOIN TBHRM_HR_MASTR t2
		            ON t1.EMPNO = t2.EMPNO
		       LEFT OUTER JOIN TBSAL_EMPL_BANK_ACNUT t3
		            ON t2.EMPNO = t3.EMPNO
		WHERE  t1.EDC_YM   = #EDC_YM#
		ORDER BY t1.DEPT_CODE
		        ,t1.EMPNO
	</select>
	
	<!-- 교육비 정산 조회 -->
	<select id="HRM080306DAO.selectEdcctExcclcTab" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*HRM080306DAO.selectEdcctExcclcTab*/]]>
		SELECT T1.YEAR
		     , T1.EMPNO
		     , T2.EMPNM
		     , T1.SN
		     , T1.EDC_TY
		     , T1.EXCCLC_SN
		     , T1.EXCCLC_SE
		     , T1.EDCCT_SE
		     , T1.USE_DE
		     , NVL(T1.USE_AM, 0)                                                        AS USE_AM
		     , T1.FILE_SN
		     , (SELECT COUNT(*) FROM TBCOM_CMMN_ATCHMNFL WHERE FILE_SN = T1.FILE_SN)    AS FILE_CNT
		     , T1.RM
		     , T1.BANK_CD
		     , T1.CARD_NO
		     , T4.CARD_NM
		     , T1.APPR_TIME
		     , T1.APPR_NO
		     , T1.CANCEL_YN
		     , T3.CHAIN_NM
		     , T3.BRANCHTYPE
		  FROM TBHRM_EDCCT_EXCCLC_MANAGE T1
		       LEFT OUTER JOIN TBHRM_HR_MASTR T2
		            ON T1.EMPNO = T2.EMPNO
		       LEFT OUTER JOIN NH_APPR T3
		            ON  T1.BANK_CD   = T3.BANK_CD
		           AND  T1.CARD_NO   = T3.CARD_NO
		           AND  T1.USE_DE    = T3.APPR_DATE
		           AND  T1.APPR_TIME = T3.APPR_TIME
		           AND  T1.APPR_NO   = T3.APPR_NO
		           AND  T1.USE_AM    = T3.APPR_AMT
		           AND  T1.CANCEL_YN = T3.CANCEL_YN
		       LEFT OUTER JOIN TBACC_CPR_CARD_MANAGE T4
		            ON T1.CARD_NO = T4.CARD_NO
		       LEFT OUTER JOIN TBHRM_EDC_MANAGE t5
		            ON t1.YEAR = t5.YEAR
		           AND t1.SN = t5.SN
		           AND t1.EMPNO = t5.EMPNO
		 WHERE 1=1
		   AND T1.EXCCLC_SE = #EXCCLC_SE#
		<isNotEmpty property="DECSN_NO">
			   AND t5.DECSN_YEAR = #DECSN_YEAR#
			   AND t5.DECSN_NO   = #DECSN_NO#
		</isNotEmpty>
		<isEmpty property="DECSN_NO">
			<isNotEmpty property="EDC_YM">
				   AND SUBSTR(t5.EDC_ENDDE, 1, 6) = #EDC_YM#
				   AND t5.DEPT_CODE = #DEPT_CODE#
			</isNotEmpty>
			<isEmpty property="EDC_YM">
				   AND t1.YEAR      = #YEAR#
				   AND t1.EMPNO     = #EMPNO#
				   AND t1.SN        = #SN#
				   AND t1.EDC_TY    = #EDC_TY#
			</isEmpty>
			<isNotEmpty property="UNSNCT_AT">
				<isEqual property="UNSNCT_AT" compareValue="1">
				   AND t5.DECSN_NO IS NULL
				</isEqual>
			</isNotEmpty>
		</isEmpty>
		ORDER BY T1.EXCCLC_SN
	</select>
	
	<!-- 교육비정산 생성 -->
	<insert id="HRM080306DAO.insertEdcctExcclc" parameterClass="java.util.HashMap">
		<![CDATA[/*HRM080306DAO.insertEdcctExcclc*/]]>
		INSERT INTO TBHRM_EDCCT_EXCCLC_MANAGE (
		       YEAR
		     , EMPNO
		     , SN
		     , EDC_TY
		     , EXCCLC_SN
		     , EXCCLC_SE
		     , EDCCT_SE
		     , USE_DE
		     , USE_AM
		     , FILE_SN
		     , RM
		     , BANK_CD
		     , CARD_NO
		     , APPR_TIME
		     , APPR_NO
		     , CANCEL_YN
		     , REGISTER_ID
		     , REGIST_DT
		     , UPDUSR_ID
		     , UPDT_DT
		)
		VALUES (
		       #YEAR#
		     , #EMPNO#
		     , #SN#
		     , #EDC_TY#
		     , (SELECT NVL(MAX(EXCCLC_SN), 0) + 1 FROM TBHRM_EDCCT_EXCCLC_MANAGE WHERE YEAR = #YEAR# AND EMPNO = #EMPNO# AND SN = #SN# AND EDC_TY = #EDC_TY#)
		     , #EXCCLC_SE#
		     , #EDCCT_SE#
		     , #USE_DE#
		     , #USE_AM#
		     , #FILE_SN#
		     , #RM#
		     , #BANK_CD#
		     , #CARD_NO#
		     , #APPR_TIME#
		     , #APPR_NO#
		     , DECODE(#CANCEL_YN#, '1', 'Y', 'N')
		     , #S_USER_ID#
		     , SYSDATE
		     , #S_USER_ID#
		     , SYSDATE
		)
	</insert>
	
	<!-- 교육비정산 수정 -->
	<update id="HRM080306DAO.updateEdcctExcclc" parameterClass="java.util.Map">
		<![CDATA[/*HRM080306DAO.updateEdcctExcclc*/]]>
		UPDATE TBHRM_EDCCT_EXCCLC_MANAGE
		   SET EDCCT_SE  = #EDCCT_SE#
		     , USE_DE    = #USE_DE#
		     , USE_AM    = #USE_AM#
		     , RM        = #RM#
		     , BANK_CD   = #BANK_CD#
		     , CARD_NO   = #CARD_NO#
		     , APPR_TIME = #APPR_TIME#
		     , APPR_NO   = #APPR_NO#
		     , CANCEL_YN = DECODE(#CANCEL_YN#, '1', 'Y', 'N')
		     , UPDUSR_ID = #S_USER_ID#
		     , UPDT_DT   = SYSDATE
		 WHERE 1=1
		   AND YEAR      = #YEAR#
		   AND EMPNO     = #EMPNO#
		   AND SN        = #SN#
		   AND EDC_TY    = #EDC_TY#
		   AND EXCCLC_SN = #EXCCLC_SN#
	</update>
	
	<!-- 교육비정산 삭제 -->
	<delete id="HRM080306DAO.deleteEdcctExcclc" parameterClass="java.util.HashMap">
		<![CDATA[/*HRM080306DAO.deleteEdcctExcclc*/]]>
		DELETE
		  FROM TBHRM_EDCCT_EXCCLC_MANAGE
		 WHERE 1=1
		   AND YEAR      = #YEAR#
		   AND EMPNO     = #EMPNO#
		   AND SN        = #SN#
		   AND EDC_TY    = #EDC_TY#
		   AND EXCCLC_SN = #EXCCLC_SN#
	</delete>
	
	<!-- 교육목록 수정 -->
	<update id="HRM080306DAO.updateEdcList" parameterClass="java.util.Map">
		<![CDATA[/*HRM080306DAO.updateEdcList*/]]>
		<isEqual property="EDC_TY" compareValue="1">
			UPDATE TBHRM_EDC_MANAGE
			   SET EXCCLC_CONFM_AT = NVL(#EXCCLC_CONFM_AT#, '0')
			     , CNFIRM_AT       = NVL(#CNFIRM_AT#, '0')
			     , UPDUSR_ID       = #S_USER_ID#
			     , UPDT_DT         = SYSDATE
			 WHERE 1=1
			   AND YEAR  = #YEAR#
			   AND EMPNO = #EMPNO#
			   AND SN    = #SN#
		</isEqual>
		<isEqual property="EDC_TY" compareValue="2">
			UPDATE TBHRM_GRUP_EDC_TRGTER_MANAGE
			   SET EXCCLC_CONFM_AT = NVL(#EXCCLC_CONFM_AT#, '0')
			     , CNFIRM_AT       = NVL(#CNFIRM_AT#, '0')
			     , UPDUSR_ID       = #S_USER_ID#
			     , UPDT_DT         = SYSDATE
			 WHERE 1=14
			   AND YEAR  = #YEAR#
			   AND EMPNO = #EMPNO#
			   AND SN    = #SN#
		</isEqual>
	</update>
	
	<!-- 교육목록 수정 -->
	<update id="HRM080306DAO.updateEdcList2" parameterClass="java.util.Map">
		<![CDATA[/*HRM080306DAO.updateEdcList2*/]]>
		UPDATE TBHRM_EDC_MANAGE
		   SET BUDGET_YEAR      = #BUDGET_YEAR#
		     , BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		     , BSNS_SE          = #BSNS_SE#
		     , BALC_SE          = #BALC_SE#
		     , BUDGET_DEPT_CODE = #BUDGET_DEPT_CODE#
		     , EDCCT_FILE_SN    = #EDCCT_FILE_SN#
		     , CNFIRM_AT        = NVL(#CNFIRM_AT#, '0')
		     , UPDUSR_ID        = #S_USER_ID#
		     , UPDT_DT          = SYSDATE
		 WHERE 1=1
		   AND YEAR  = #YEAR#
		   AND EMPNO = #EMPNO#
		   AND SN    = #SN#
	</update>
	
	
	
	<!-- 예산계정선택(P01) -->
	<select id="HRM080306DAO.selectBudgetAcntList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*HRM080306DAO.selectBudgetAcntList*/]]>
		WITH EXECUT_BUDGET_TM AS (
		    SELECT t1.YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , t1.DETAIL_BSNS_CODE AS BSNS_CODE
		         , MAX(t4.BSNS_NM)     AS BSNS_NM
		         , MAX(t2.HANG_NM || '-' || t2.SEHANG_NM || '-' || t2.MOK_NM || '-' || t2.SEMOK_NM) AS BUDGET_ACNT_NM
		         , t1.DEPT_CODE
		         , MAX(t5.DEPT_NM)     AS DEPT_NM
		         , t1.BUDGET_ACNT_CODE
		         , t1.EXPNDTR_UNIT_CODE AS BUKIP_CODE
		         , MAX(t3.BUKIP_NM)     AS BUKIP_NM
		         , SUM(NVL(t1.ORIBDGT, 0)
		                  + NVL(t1.RVSPBGT_1_ODR, 0)
		                  + NVL(t1.RVSPBGT_2_ODR, 0) 
		                  + NVL(t1.RVSPBGT_3_ODR, 0) 
		                  + NVL(t1.RVSPBGT_4_ODR, 0)
		                  + NVL(t1.RVSPBGT_5_ODR, 0)
		                  + NVL(t1.RVSPBGT_6_ODR, 0)
		                  + NVL(t1.RVSPBGT_7_ODR, 0)
		                  + NVL(t1.CYFD_BUDGET, 0)
		                  + NVL(t1.MVMN_AM, 0)
		                  + NVL(t1.BUKIP_MVMN_AM, 0)
		                  + NVL(t1.DVR_AM, 0)
		                  + NVL(t1.RSVFND_REQST_AM, 0)
		                  + NVL(t1.TRSF_AM, 0)
		            ) AS EXECUT_BUDGET_AMT
		    FROM TBBDG_EXECUT_BUDGET t1
		        INNER JOIN VHBDG_BUDGET_ACNT_CODE t2
		          ON  t1.YEAR             = t2.YEAR
		          AND t1.BSNS_SE          = t2.BSNS_SE
		          AND t1.BALC_SE          = t2.BALC_SE
		          AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		        LEFT OUTER JOIN TBBDG_BUKIP_CODE t3
		          ON  t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
		        LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		          ON  t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		        LEFT OUTER JOIN TBHRM_DEPT t5
		          ON  t1.DEPT_CODE = t5.DEPT_CODE
		    WHERE t1.YEAR    = #YEAR#
			<isNotEmpty property="DEPT_CODE">
				<isNotEqual property="DEPT_CODE" compareValue="000000">
				  AND   t1.DEPT_CODE = #DEPT_CODE#
				</isNotEqual>
			</isNotEmpty>
		    OR    (t1.DEPT_CODE = '020000' AND t2.SEMOK_NM = '교육훈련비')
		    AND   t1.BALC_SE = '2'
		    GROUP BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , t1.DETAIL_BSNS_CODE
		           , t1.DEPT_CODE
		           , t1.BUDGET_ACNT_CODE
		           , t1.EXPNDTR_UNIT_CODE
		    ORDER BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , t1.DETAIL_BSNS_CODE
		           , t1.BUDGET_ACNT_CODE
		           , t1.EXPNDTR_UNIT_CODE
		)
		, EXP_DSN_MASTR_TM AS (
		    SELECT BUDGET_YEAR AS YEAR
		         , BSNS_SE
		         , BALC_SE
		         , BUDGET_ACNT_CODE
		         , EXPNDTR_UNIT_CODE AS BUKIP_CODE
		         , DEPT_CODE
		         , SUM(DECSN_AMOUNT) AS DECSN_AMOUNT
		    FROM TBACC_EXP_DSN_MASTR
		    WHERE BUDGET_YEAR = #YEAR#
		    AND   BALC_SE     = '2'
		    GROUP BY BUDGET_YEAR
		           , BSNS_SE
		           , BALC_SE
		           , BUDGET_ACNT_CODE
		           , EXPNDTR_UNIT_CODE
		           , DEPT_CODE
		)
		SELECT t1.*
		      ,t2.DECSN_AMOUNT
		FROM   EXECUT_BUDGET_TM t1
		       LEFT OUTER JOIN EXP_DSN_MASTR_TM t2
		           ON t1.YEAR              = t2.YEAR
		          AND t1.BSNS_SE           = t2.BSNS_SE
		          AND t1.BALC_SE           = t2.BALC_SE
		          AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		          AND t1.BUKIP_CODE        = t2.BUKIP_CODE
		          AND t1.DEPT_CODE         = t2.DEPT_CODE
		WHERE t1.YEAR    = #YEAR#
		AND   t1.BALC_SE = '2'
		AND   NVL(t1.EXECUT_BUDGET_AMT,0) > 0
		ORDER BY DECODE(t1.DEPT_CODE,'020000',1,0), t1.BUDGET_ACNT_CODE, t1.DEPT_CODE
	</select>
	
	<!--지출결의 번호 저장-->
	<update id="HRM080306DAO.updateEdcDecsnNo" parameterClass="java.util.HashMap" >
	<![CDATA[
		DECLARE
		BEGIN
		    /* 교육 */
		    UPDATE TBHRM_EDC_MANAGE
		    SET    DECSN_YEAR   = #DSNMASTR.DECSN_YEAR#
		          ,DECSN_NO     = #DSNMASTR.DECSN_NO#
		          ,UPDUSR_ID    = #S_USER_ID#
		          ,UPDT_DT      = SYSDATE
		    WHERE  YEAR         = #YEAR#
		    AND    EMPNO        = #EMPNO#
		    AND    SN           = #SN#;
		    
		    /* 법인카드 */
		    UPDATE NH_APPR t1
		    SET    t1.DECSN_YEAR   = #DSNMASTR.DECSN_YEAR#
		          ,t1.DECSN_NO     = #DSNMASTR.DECSN_NO#
		    WHERE  EXISTS (
		        SELECT *
		        FROM   TBHRM_EDCCT_EXCCLC_MANAGE s1
		               INNER JOIN TBHRM_EDC_MANAGE s2
		                    ON s1.YEAR  = s2.YEAR
		                   AND s1.SN    = s2.SN
		                   AND s1.EMPNO = s2.EMPNO
		        WHERE  s1.BANK_CD       = t1.BANK_CD
		        AND    s1.CARD_NO       = t1.CARD_NO 
		        AND    s1.USE_DE        = t1.APPR_DATE 
		        AND    s1.APPR_TIME     = t1.APPR_TIME 
		        AND    s1.APPR_NO       = t1.APPR_NO 
		        AND    s1.USE_AM        = t1.APPR_AMT 
		        AND    s1.CANCEL_YN     = t1.CANCEL_YN
		        AND    s1.EXCCLC_SE     = '001'
		        AND    s2.YEAR          = #YEAR#
		        AND    s2.EMPNO         = #EMPNO#
		        AND    s2.SN            = #SN#
		    );
		END;
	]]>
	</update>
	
	<!--지출결의 번호 저장-->
	<update id="HRM080306DAO.updateEdcDecsnNoToNull" parameterClass="java.util.HashMap" >
	<![CDATA[
		DECLARE
		BEGIN
		    /* 교육 */
		    UPDATE TBHRM_EDC_MANAGE
		    SET    DECSN_YEAR   = NULL
		          ,DECSN_NO     = NULL
		          ,UPDUSR_ID    = #S_USER_ID#
		          ,UPDT_DT      = SYSDATE
		    WHERE  DECSN_YEAR   = #DECSN_YEAR#
		    AND    DECSN_NO     = #DECSN_NO#;
		    
		    /* 법인카드 */
		    UPDATE NH_APPR t1
		    SET    t1.DECSN_YEAR   = NULL
		          ,t1.DECSN_NO     = NULL
		    WHERE  t1.DECSN_YEAR   = #DECSN_YEAR#
		    AND    t1.DECSN_NO     = #DECSN_NO#;
		END;
	]]>
	</update>


	<!-- 첨부파일 목록 조회 조회 -->
	<select id="HRM080306DAO.selectFileList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.FILE_SN                     /*  파일일련번호 */
		     , A.FILE_ORDR                    /*  파일순차 */
		     , A.FILE_STRE_COURS              /*  파일저장경로 */
		     , A.STRE_FILE_NM                 /*  저장파일명 */
		     , A.ORGINL_FILE_NM               /*  원본파일명 */
		     , A.FILE_EXTSN                   /*  파일확장자 */
		     , A.FILE_CN                      /*  파일내용   */
		     , A.FILE_MG                      /*  파일크기   */
		     , A.USE_AT                       /*  사용여부   */
		     , A.FILE_ID                      /*       */
		     , B.SYS_SE_CODE                  /*  시스템구분코드 */
		     , B.JOB_SE_CODE     AS JOB_SE    /*  업무구분코드 */
		     , ROW_NUMBER() OVER (PARTITION BY A.FILE_SN ORDER BY A.FILE_ORDR ASC) AS SN
		     , A.FILE_TY
		     , 'theme://images/fileUpDownload/file_icon_' || DECODE(LOWER(A.FILE_EXTSN), 'zip', 'ZIP','rar', 'ZIP','7z', 'ZIP', 'jpg', 'IMG', 'jpeg', 'IMG', 'gif', 'IMG', 'png', 'IMG', 'bmp', 'IMG', 'txt', 'TXT', 'xml', 'TXT', 'doc', 'DOC', 'docx', 'DOC', 'xls', 'XLS', 'xlsx', 'XLS', 'ppt', 'PPT', 'pptx', 'PPT', 'pdf', 'PDF', 'hwp', 'HWP', 'hwt', 'HWP', 'ETC' ) || '.png' AS FILE_IMAGE
		     , 100 AS PROGRS
		     , NULL AS TRNSMIS_FILE_SIZE
		     , 'theme://images/img_WF_ConfirmE.png' AS DELETE_IMAGE
		     , NULL AS STTUS
		     , '0' AS CHK
		FROM   TBCOM_CMMN_ATCHMNFL A           /* 공통첨부파일 */
		     , TBCOM_CMMN_ATCHMNFL_MASTR B     /* 공통첨부파일마스터 */
		WHERE  1=1
		AND    A.FILE_SN = B.FILE_SN
		AND    B.FILE_SN IN (
		                    SELECT t1.FILE_SN
		                    FROM   TBHRM_EDCCT_EXCCLC_MANAGE t1
		                           LEFT OUTER JOIN TBHRM_EDC_MANAGE t5
		                                ON t1.YEAR = t5.YEAR
		                               AND t1.SN = t5.SN
		                               AND t1.EMPNO = t5.EMPNO
		                    WHERE  T1.EXCCLC_SE = #EXCCLC_SE#
		<isNotEmpty property="DECSN_NO">
			                     AND t5.DECSN_YEAR = #DECSN_YEAR#
			                     AND t5.DECSN_NO   = #DECSN_NO#
		</isNotEmpty>
		<isEmpty property="DECSN_NO">
			<isNotEmpty property="EDC_YM">
				                     AND SUBSTR(t5.EDC_ENDDE, 1, 6) = #EDC_YM#
				                     AND t5.DEPT_CODE = #DEPT_CODE#
			</isNotEmpty>
			<isEmpty property="EDC_YM">
				                     AND t1.YEAR      = #YEAR#
				                     AND t1.EMPNO     = #EMPNO#
				                     AND t1.SN        = #SN#
				                     AND t1.EDC_TY    = #EDC_TY#
			</isEmpty>
		</isEmpty>
		                   )
		ORDER BY 1,2,3
	</select>

</sqlMap>