<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="bdgAcntPop_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />

	<!-- 예산계정과목코드 목록조회 -->
	<select id="BdgAcntPopDAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BdgAcntPopDAO.selectAcntCode*/]]>
		WITH EXECUT_BUDGET AS (
		    <isEqual property="BALC_SE" compareValue="1">
		        SELECT YEAR
		             , BSNS_SE
		             , BALC_SE
		             , UPPER_ACNT_CODE
		             , BUDGET_ACNT_CODE
		             , BUDGET_ACNT_NM
		             , DECODE(ACNT_LEVEL, '7', '4', ACNT_LEVEL)    AS ACNT_LEVEL
		             , '' AS CHIT_PROCESS_AT
		          FROM TBBDG_BUDGET_ACNT_CODE
		         WHERE 1=1
		        <isNotEmpty property="YEAR"      prepend="AND    ">YEAR     = #YEAR#</isNotEmpty>
		        <isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE  = #BSNS_SE#</isNotEmpty>
		        <isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE  = #BALC_SE#</isNotEmpty>
		        <isNotEmpty property="ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE LIKE #ACNT_CODE#</isNotEmpty>
		    </isEqual>
		    <isEqual property="BALC_SE" compareValue="2">
		        SELECT t1.YEAR
		              ,t1.BSNS_SE
		              ,t1.BALC_SE
		              ,t2.UPPER_ACNT_CODE
		              ,t1.BUDGET_ACNT_CODE
		              ,t2.BUDGET_ACNT_NM
		              ,DECODE(t2.ACNT_LEVEL, '7', '4', t2.ACNT_LEVEL)               AS ACNT_LEVEL
		              ,t2.CHIT_PROCESS_AT
		        FROM   (
		                SELECT YEAR
		                      ,BSNS_SE
		                      ,BALC_SE
		                      ,BUDGET_ACNT_CODE
		                FROM   TBBDG_EXECUT_BUDGET
		                WHERE  1=1
		                <isNotEmpty property="YEAR"      prepend="AND    ">YEAR     = #YEAR#</isNotEmpty>
		                <isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE  = #BSNS_SE#</isNotEmpty>
		                <isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE  = #BALC_SE#</isNotEmpty>
		                <isNotEmpty property="ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE LIKE #ACNT_CODE#</isNotEmpty>
		                <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                GROUP BY YEAR
		                        ,BSNS_SE
		                        ,BALC_SE
		                        ,BUDGET_ACNT_CODE
		               ) t1
		               INNER JOIN TBBDG_BUDGET_ACNT_CODE t2
		                    ON t1.YEAR = t2.YEAR
		                   AND t1.BSNS_SE = t2.BSNS_SE
		                   AND t1.BALC_SE = t2.BALC_SE
		                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		        WHERE  1=1
		        ORDER BY T1.YEAR
		                ,T1.BSNS_SE
		                ,T1.BALC_SE
		                ,T1.BUDGET_ACNT_CODE
		    </isEqual>
		), LV5_BUDGET AS (
		    SELECT lv5.YEAR, lv5.BSNS_SE, lv5.BALC_SE, lv5.BUDGET_ACNT_CODE, lv5.BUDGET_ACNT_NM, lv5.ACNT_LEVEL, lv5.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv5
		    WHERE  lv5.ACNT_LEVEL = '5'
		    AND    EXISTS(
		        SELECT *
		        FROM   EXECUT_BUDGET
		        WHERE  YEAR             = lv5.YEAR
		        AND    BSNS_SE          = lv5.BSNS_SE
		        AND    BALC_SE          = lv5.BALC_SE
		        AND    BUDGET_ACNT_CODE = lv5.BUDGET_ACNT_CODE
		    )
		), LV4_BUDGET AS (
		    SELECT lv4.YEAR, lv4.BSNS_SE, lv4.BALC_SE, lv4.BUDGET_ACNT_CODE, lv4.BUDGET_ACNT_NM, lv4.ACNT_LEVEL, lv4.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv4
		    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		    AND    (
		            lv4.BUDGET_ACNT_CODE IN (
		                                     SELECT lv5.UPPER_ACNT_CODE
		                                     FROM   LV5_BUDGET lv5
		                                     WHERE  lv5.ACNT_LEVEL = '5'
		                                     AND    lv5.YEAR       = lv4.YEAR
		                                     AND    lv5.BSNS_SE    = lv4.BSNS_SE
		                                     AND    lv5.BALC_SE    = lv4.BALC_SE
		                                    )
		            OR
		            EXISTS (
		                    SELECT *
		                    FROM   EXECUT_BUDGET
		                    WHERE  YEAR             = lv4.YEAR
		                    AND    BSNS_SE          = lv4.BSNS_SE
		                    AND    BALC_SE          = lv4.BALC_SE
		                    AND    BUDGET_ACNT_CODE = lv4.BUDGET_ACNT_CODE
		                   )
		           )
		<isNotEmpty property="SEMOK_CODE">
		    AND    lv4.BUDGET_ACNT_CODE = (
		                                   SELECT MAX(UPPER_ACNT_CODE)
		                                   FROM   TBBDG_BUDGET_ACNT_CODE
		                                   WHERE  YEAR = lv4.YEAR
		                                   AND    BSNS_SE = lv4.BSNS_SE
		                                   AND    BALC_SE = lv4.BALC_SE
		                                   AND    UPPER_ACNT_CODE = lv4.BUDGET_ACNT_CODE
		                                   AND    BUDGET_ACNT_CODE = #SEMOK_CODE#
		                                  )
		</isNotEmpty>
		), LV3_BUDGET AS (
		    SELECT lv3.YEAR, lv3.BSNS_SE, lv3.BALC_SE, lv3.BUDGET_ACNT_CODE, lv3.BUDGET_ACNT_NM, lv3.ACNT_LEVEL, lv3.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv3
		    WHERE  lv3.ACNT_LEVEL = '3'
		    AND    lv3.BUDGET_ACNT_CODE IN (
		                                    SELECT lv4.UPPER_ACNT_CODE
		                                    FROM   LV4_BUDGET lv4
		                                    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		                                    AND    lv4.YEAR       = lv3.YEAR
		                                    AND    lv4.BSNS_SE    = lv3.BSNS_SE
		                                    AND    lv4.BALC_SE    = lv3.BALC_SE
		                                   )
		), LV2_BUDGET AS (
		    SELECT lv2.YEAR, lv2.BSNS_SE, lv2.BALC_SE, lv2.BUDGET_ACNT_CODE, lv2.BUDGET_ACNT_NM, lv2.ACNT_LEVEL, lv2.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv2
		    WHERE  lv2.ACNT_LEVEL = '2'
		    AND    lv2.BUDGET_ACNT_CODE IN (
		                                    SELECT lv3.UPPER_ACNT_CODE
		                                    FROM   LV3_BUDGET lv3
		                                    WHERE  lv3.ACNT_LEVEL = '3'
		                                    AND    lv3.YEAR       = lv2.YEAR
		                                    AND    lv3.BSNS_SE    = lv2.BSNS_SE
		                                    AND    lv3.BALC_SE    = lv2.BALC_SE
		                                   )
		), LV1_BUDGET AS (
		    SELECT lv1.YEAR, lv1.BSNS_SE, lv1.BALC_SE, lv1.BUDGET_ACNT_CODE, lv1.BUDGET_ACNT_NM, lv1.ACNT_LEVEL, lv1.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv1
		    WHERE  lv1.ACNT_LEVEL = '1'
		    AND    lv1.BUDGET_ACNT_CODE IN (
		                                    SELECT lv2.UPPER_ACNT_CODE
		                                    FROM   LV2_BUDGET lv2
		                                    WHERE  lv2.ACNT_LEVEL = '2'
		                                    AND    lv2.YEAR       = lv1.YEAR
		                                    AND    lv2.BSNS_SE    = lv1.BSNS_SE
		                                    AND    lv2.BALC_SE    = lv1.BALC_SE
		                                   )
		), VWBDG_BUDGET_ACNT_CODE AS (
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV1_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV2_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV3_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV4_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV5_BUDGET
		), BUDGET_ACNT_TREE AS (
		    SELECT ROWNUM AS RNUM
		          ,t1.YEAR
		          ,t1.BSNS_SE
		          ,t1.BALC_SE
		          ,t1.BUDGET_ACNT_CODE
		          ,t1.BUDGET_ACNT_NM
		          ,(CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                 WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
		                 ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| t1.BUDGET_ACNT_NM              AS BUDGET_ACNT_NM2
		          ,SYS_CONNECT_BY_PATH((CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 3)
		                                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)                                                END) ||'.'|| t1.BUDGET_ACNT_NM,'|')||'|'    AS ACNT_NM_PATH
		          ,SYS_CONNECT_BY_PATH(t1.BUDGET_ACNT_NM,'|')||'|'                                                                                  AS ACNT_NM_PATH2
		          ,DECODE(t1.ACNT_LEVEL,'7','4',t1.ACNT_LEVEL)                                                                                      AS ACNT_LEVEL
		          ,t1.UPPER_ACNT_CODE
		    FROM   VWBDG_BUDGET_ACNT_CODE t1
		    START WITH t1.UPPER_ACNT_CODE IS NULL
		    CONNECT BY PRIOR t1.BUDGET_ACNT_CODE = t1.UPPER_ACNT_CODE
		    ORDER SIBLINGS BY t1.YEAR
		                     ,t1.BSNS_SE
		                     ,t1.BALC_SE
		                     ,t1.BUDGET_ACNT_CODE
		)
		SELECT s1.YEAR                              AS YEAR
		      ,s1.BSNS_SE                           AS BSNS_SE
		      ,s1.BALC_SE                           AS BALC_SE
		      ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
		      ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
		      ,s1.BUDGET_ACNT_NM2                   AS BUDGET_ACNT_NM2
		      ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
		      ,s1.UPPER_ACNT_CODE                   AS UPPER_ACNT_CODE
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
		      ,        SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)-1)           AS BUDGET_ACNT_TREE_NM
		      ,s2.BUKIP_CODE_CNT
		FROM   BUDGET_ACNT_TREE s1
		       LEFT OUTER JOIN (
		                         SELECT T2.YEAR
		                              , T2.BUDGET_ACNT_CODE
		                              , COUNT(T2.BUKIP_CODE)    AS BUKIP_CODE_CNT
		                           FROM TBBDG_BUKIP_CODE T1
		                                INNER JOIN TBBDG_BUDGET_BUKIP_MAPPING T2
		                                     ON T1.BUKIP_CODE = T2.BUKIP_CODE
		                          WHERE T1.USE_AT = '1'
		                         GROUP BY T2.YEAR, T2.BUDGET_ACNT_CODE
		                       ) s2
		            ON s1.YEAR = s2.YEAR
		           AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		ORDER BY s1.RNUM
	</select>


	<!-- 세목/지출단위코드 목록조회 -->
	<select id="BdgAcntPopDAO.selectExpndtrUnitCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<![CDATA[/*BdgAcntPopDAO.selectExpndtrUnitCode*/]]>
	
		<isEqual property="BALC_SE" compareValue="1">
			SELECT t1.YEAR
			      ,t2.BSNS_SE
			      ,t2.BALC_SE
			      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
			      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
			      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
			      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
			      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
			      ,t1.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
			      ,t3.DETAIL_BSNS_CODE
			      ,t9.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
			      ,DECODE(t3.DETAIL_BSNS_CODE, NULL, '', t3.DETAIL_BSNS_CODE || '.' || t9.BSNS_NM)                                                                          AS DETAIL_BSNS_NM2
			      ,t3.DEPT_CODE
			      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
			      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t1.BUKIP_CODE)                                                                   AS EXPNDTR_UNIT_TREE_NM
			      ,NVL(t3.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
			      ,NVL(t3.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
			      ,NVL(t3.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
			      ,NVL(t5.CYFD_BUDGET_AMT,0)                                                                                                AS CYFD_BUDGET_AMT
			      ,NVL(t5.ORIBDGT_AMT,0)                                                                                                    AS ORIBDGT_AMT
			      ,NVL(t5.RVSPBGT_AMT,0)                                                                                                    AS RVSPBGT_AMT
			      ,NVL(t5.DVR_AMT,0)                                                                                                        AS DVR_AMT
			      ,NVL(t5.EXECUT_BUDGET_AM,0)                                                                                               AS EXECUT_BUDGET_AM
			      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                            AS CAUSE_ACTION_AMOUNT
			      ,NVL(t5.CAUSE_ACTION_DECSN_AMOUNT,0)                                                                                      AS CAUSE_ACTION_DECSN_AMOUNT
			      ,NVL(t5.CAUSE_ACTION_JAN_AMOUNT,0)                                                                                        AS CAUSE_ACTION_JAN_AMOUNT
			      ,NVL(t5.EXP_DSN_AMOUNT,0)                                                                                                 AS EXP_DSN_AMOUNT
			      ,NVL(t5.DEBT_AMT,0)                                                                                                       AS DEBT_AMT
			      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                   AS DECSN_AMOUNT
			      ,NVL(t5.ASIGN_AMOUNT,0)                                                                                                   AS ASIGN_AMOUNT
			      ,NVL(t5.MONTH_CAUSE_ACTION_AMOUNT,0)                                                                                      AS MONTH_CAUSE_ACTION_AMOUNT
			      ,NVL(t5.MONTH_DECSN_AMOUNT,0)                                                                                             AS MONTH_DECSN_AMOUNT
			      ,NVL(t5.EXECUT_BUDGET_JAN_AM,0)                                                                                           AS EXECUT_BUDGET_JAN_AM
			      ,NVL(t5.ASIGN_JAN_AMOUNT,0)                                                                                               AS ASIGN_JAN_AMOUNT
			      ,SUM(NVL(t3.BUDGET_AM,0))                          OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
			      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
			      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
			      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
			      ,SUM(NVL(t5.EXECUT_BUDGET_JAN_AM,0))               OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
			      ,NVL(t5.EXECUT_BUDGET_JAN_AM,0)                                                                                                                           AS EXPNDTR_UNIT_BALC
			      ,NVL(t3.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
			      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
			      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
			      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
			      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
			      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
			      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
			FROM
			       (
			          SELECT YEAR
			             , BUDGET_ACNT_CODE
			             , BUKIP_CODE
			          FROM TBBDG_BUDGET_BUKIP_MAPPING
			         WHERE YEAR             = #YEAR#
			           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
			       ) t1
			       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
			            ON t1.YEAR             = t2.YEAR
			           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
			       LEFT OUTER JOIN (
			                        SELECT YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,DETAIL_BSNS_CODE
			                              ,DEPT_CODE
			                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
			                              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
			                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
			                              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
			                        FROM   TBBDG_EXECUT_BUDGET
			                        WHERE  1=1
			                        AND    BALC_SE          = #BALC_SE#
			                        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
			                        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
			                        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
			                        <isNotEmpty property="DEPT_CODE">
			                            <isNotEqual property="DEPT_CODE" compareValue="000000">
			                        AND    DEPT_CODE        = #DEPT_CODE#
			                            </isNotEqual>
			                        </isNotEmpty>
			                        GROUP BY YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                                ,DETAIL_BSNS_CODE
			                                ,DEPT_CODE
			                       ) t3
			            ON t1.YEAR             = t3.YEAR
			           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
			           AND t1.BUKIP_CODE       = t3.EXPNDTR_UNIT_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BSNS_CODE
			                              ,DEPT_CODE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,CYFD_BUDGET_AMT
			                              ,ORIBDGT_AMT
			                              ,RVSPBGT_AMT
			                              ,DVR_AMT
			                              ,EXECUT_BUDGET_AM
			                              ,CAUSE_ACTION_AMOUNT
			                              ,CAUSE_ACTION_DECSN_AMOUNT
			                              ,CAUSE_ACTION_JAN_AMOUNT
			                              ,EXP_DSN_AMOUNT
			                              ,DEBT_AMT
			                              ,DECSN_AMOUNT
			                              ,ASIGN_AMOUNT
			                              ,MONTH_CAUSE_ACTION_AMOUNT
			                              ,MONTH_DECSN_AMOUNT
			                              ,EXECUT_BUDGET_JAN_AM
			                              ,ASIGN_JAN_AMOUNT
			                        FROM   VWACC_EXP_DSN_MASTR
			                       ) t5
			            ON t3.YEAR              = t5.BUDGET_YEAR
			           AND t3.BSNS_SE           = t5.BSNS_SE
			           AND t3.BALC_SE           = t5.BALC_SE
			           AND t3.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
			           AND t3.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
			           AND t3.DETAIL_BSNS_CODE  = t5.BSNS_CODE
			           AND t3.DEPT_CODE         = t5.DEPT_CODE
			       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
			            ON t1.BUKIP_CODE = t8.BUKIP_CODE
			       LEFT OUTER JOIN TBPRJ_BSNS_CODE t9
			            ON t3.DETAIL_BSNS_CODE = t9.BSNS_CODE
			WHERE  1=1
			ORDER BY t1.YEAR
			        ,t2.BSNS_SE
			        ,t2.BALC_SE
			        ,t2.BUDGET_ACNT_CODE
			        ,t3.DETAIL_BSNS_CODE
			        ,t1.BUKIP_CODE
		</isEqual>
	
		<isEqual property="BALC_SE" compareValue="2">
			SELECT t1.YEAR
			      ,t2.BSNS_SE
			      ,t2.BALC_SE
			      ,t1.DETAIL_BSNS_CODE
			      ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
			      ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
			      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
			      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
			      ,t8.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
			      ,t8.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
			      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
			      ,t8.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
			      ,t1.DEPT_CODE
			      ,t7.DEPT_NM
			      ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
			      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
			      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t8.BUKIP_CODE)                                                                    AS EXPNDTR_UNIT_TREE_NM
			      ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
			      ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
			      ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
			      ,NVL(t5.CYFD_BUDGET_AMT,0)                                                                                                AS CYFD_BUDGET_AMT
			      ,NVL(t5.ORIBDGT_AMT,0)                                                                                                    AS ORIBDGT_AMT
			      ,NVL(t5.RVSPBGT_AMT,0)                                                                                                    AS RVSPBGT_AMT
			      ,NVL(t5.DVR_AMT,0)                                                                                                        AS DVR_AMT
			      ,NVL(t5.EXECUT_BUDGET_AM,0)                                                                                               AS EXECUT_BUDGET_AM
			      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                            AS CAUSE_ACTION_AMOUNT
			      ,NVL(t5.CAUSE_ACTION_DECSN_AMOUNT,0)                                                                                      AS CAUSE_ACTION_DECSN_AMOUNT
			      ,NVL(t5.CAUSE_ACTION_JAN_AMOUNT,0)                                                                                        AS CAUSE_ACTION_JAN_AMOUNT
			      ,NVL(t5.EXP_DSN_AMOUNT,0)                                                                                                 AS EXP_DSN_AMOUNT
			      ,NVL(t5.DEBT_AMT,0)                                                                                                       AS DEBT_AMT
			      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                   AS DECSN_AMOUNT
			      ,NVL(t5.ASIGN_AMOUNT,0)                                                                                                   AS ASIGN_AMOUNT
			      ,NVL(t5.MONTH_CAUSE_ACTION_AMOUNT,0)                                                                                      AS MONTH_CAUSE_ACTION_AMOUNT
			      ,NVL(t5.MONTH_DECSN_AMOUNT,0)                                                                                             AS MONTH_DECSN_AMOUNT
			      ,NVL(t5.EXECUT_BUDGET_JAN_AM,0)                                                                                           AS EXECUT_BUDGET_JAN_AM
			      ,NVL(t5.ASIGN_JAN_AMOUNT,0)                                                                                               AS ASIGN_JAN_AMOUNT
			      ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
			      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
			      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
			      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
			      ,SUM(NVL(t5.EXECUT_BUDGET_JAN_AM,0))               OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
			      ,NVL(t5.EXECUT_BUDGET_JAN_AM,0)                                                                                                                           AS EXPNDTR_UNIT_BALC
			      ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
			      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
			      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
			      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
			      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
			      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
			      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
			FROM
			       (
			        SELECT YEAR
			              ,BSNS_SE
			              ,BALC_SE
			              ,DETAIL_BSNS_CODE
			              ,DEPT_CODE
			              ,BUDGET_ACNT_CODE
			              ,EXPNDTR_UNIT_CODE
			              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
			              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
			              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
			              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
			        FROM   TBBDG_EXECUT_BUDGET
			        WHERE  1=1
			        AND    BALC_SE          = #BALC_SE#
			        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
			        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
			        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
			        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
			        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
			        GROUP BY YEAR
			                ,BSNS_SE
			                ,BALC_SE
			                ,DETAIL_BSNS_CODE
			                ,DEPT_CODE
			                ,BUDGET_ACNT_CODE
			                ,EXPNDTR_UNIT_CODE
			       ) t1
			       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
			            ON t1.YEAR             = t2.YEAR
			           AND t1.BSNS_SE          = t2.BSNS_SE
			           AND t1.BALC_SE          = t2.BALC_SE
			           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
			       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t3
			            ON t1.YEAR              = t3.YEAR
			           AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
			           AND t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
			       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
			            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
			       LEFT OUTER JOIN VWHRM_DEPT t7
			            ON t1.DEPT_CODE = t7.DEPT_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BSNS_CODE
			                              ,DEPT_CODE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,CYFD_BUDGET_AMT
			                              ,ORIBDGT_AMT
			                              ,RVSPBGT_AMT
			                              ,DVR_AMT
			                              ,EXECUT_BUDGET_AM
			                              ,CAUSE_ACTION_AMOUNT
			                              ,CAUSE_ACTION_DECSN_AMOUNT
			                              ,CAUSE_ACTION_JAN_AMOUNT
			                              ,EXP_DSN_AMOUNT
			                              ,DEBT_AMT
			                              ,DECSN_AMOUNT
			                              ,ASIGN_AMOUNT
			                              ,MONTH_CAUSE_ACTION_AMOUNT
			                              ,MONTH_DECSN_AMOUNT
			                              ,EXECUT_BUDGET_JAN_AM
			                              ,ASIGN_JAN_AMOUNT
			                        FROM   VWACC_EXP_DSN_MASTR
			                       ) t5
			            ON t1.YEAR              = t5.BUDGET_YEAR
			           AND t1.BSNS_SE           = t5.BSNS_SE
			           AND t1.BALC_SE           = t5.BALC_SE
			           AND t1.DETAIL_BSNS_CODE = t5.BSNS_CODE
			           AND t1.DEPT_CODE        = t5.DEPT_CODE
			           AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
			           AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
			       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
			            ON T1.EXPNDTR_UNIT_CODE = t8.BUKIP_CODE
			WHERE  1=1
			ORDER BY t1.YEAR
			        ,t1.BSNS_SE
			        ,t1.BALC_SE
			        ,t1.BUDGET_ACNT_CODE
			        ,t1.DETAIL_BSNS_CODE
			        ,t1.DEPT_CODE
			        ,t1.EXPNDTR_UNIT_CODE
		</isEqual>
	</select>
	
	<!-- 예산계정과목코드(과년도) 목록조회 -->
	<select id="BdgAcntPopDAO.selectPstyrAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BdgAcntPopDAO.selectPstyrAcntCode*/]]>
		   WITH BUDGET_ACNT_TREE AS
				( SELECT ROWNUM AS RNUM
				         ,YEAR
				         ,BSNS_SE
				         ,BALC_SE
				         ,BUDGET_ACNT_CODE
				         ,BUDGET_ACNT_NM
				         ,BUDGET_ACNT_NM2
				         ,ACNT_LEVEL
				         ,UPPER_ACNT_CODE
				         ,ELPD_EXCUT_RT
				         ,ELPD_EXCUT_AT
				         ,PLAN_REGIST_AT
				         ,CHIT_PROCESS_AT
				         ,JRNLZ_CNT
				         ,SYS_CONNECT_BY_PATH(BUDGET_ACNT_NM2,'|') || '|' AS ACNT_NM_PATH
				    FROM ( SELECT a1.YEAR
				                  ,a1.BSNS_SE
				                  ,a1.BALC_SE
				                  ,a1.BUDGET_ACNT_CODE
				                  ,a1.BUDGET_ACNT_NM
				                  ,(CASE
				             <![CDATA[ WHEN a1.ACNT_LEVEL < '4']]>
				                       THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
				                       WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00'
				                       THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
				                       ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)
				                       END)||'.'|| a1.BUDGET_ACNT_NM AS BUDGET_ACNT_NM2
				                  ,DECODE(a1.ACNT_LEVEL,'7','4',a1.ACNT_LEVEL) AS ACNT_LEVEL
				                  ,a1.UPPER_ACNT_CODE
				                  ,a1.ELPD_EXCUT_RT
				                  ,a1.ELPD_EXCUT_AT
				                  ,a1.PLAN_REGIST_AT
				                  ,a1.CHIT_PROCESS_AT
				                  ,a2.JRNLZ_CNT
				             FROM TBBDG_BUDGET_ACNT_CODE a1
				                  LEFT OUTER JOIN
				                       ( SELECT BUDGET_YEAR
				                                ,BSNS_SE
				                                ,BALC_SE
				                                ,BUDGET_ACNT_CODE
				                                ,COUNT(1) AS JRNLZ_CNT
				                           FROM TBACC_ATMC_JRNLZ_TY
				                          GROUP BY BUDGET_YEAR
				                                ,BSNS_SE
				                                ,BALC_SE
				                                ,BUDGET_ACNT_CODE
				                        )
				                        a2
				                     ON a1.YEAR             = a2.BUDGET_YEAR
				                    AND a1.BSNS_SE          = a2.BSNS_SE
				                    AND a1.BALC_SE          = a2.BALC_SE
				                    AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
				            WHERE 1=1
		                <isNotEmpty property="YEAR"             prepend="AND    ">a1.YEAR             = #YEAR#</isNotEmpty>
				        <isNotEmpty property="BSNS_SE"          prepend="AND    ">a1.BSNS_SE          = #BSNS_SE#</isNotEmpty>
				        <isNotEmpty property="BALC_SE"          prepend="AND    ">a1.BALC_SE          = #BALC_SE#</isNotEmpty>
				        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">a1.DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
				        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">a1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
				        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
				           )
				           START WITH UPPER_ACNT_CODE  IS NULL
				           CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE
				     ORDER SIBLINGS BY YEAR
				           ,BSNS_SE
				           ,BALC_SE
				           ,BUDGET_ACNT_CODE
				    )
			SELECT s1.YEAR                                                                                                                                 AS YEAR
			       ,s1.BSNS_SE                                                                                                                              AS BSNS_SE
			       ,s1.BALC_SE                                                                                                                              AS BALC_SE
			       ,s1.BUDGET_ACNT_CODE                                                                                                                     AS BUDGET_ACNT_CODE
			       ,s1.BUDGET_ACNT_NM                                                                                                                       AS BUDGET_ACNT_NM
			       ,s1.BUDGET_ACNT_NM2                                                                                                                      AS BUDGET_ACNT_NM2
			       ,s1.ACNT_LEVEL                                                                                                                           AS ACNT_LEVEL
			       ,s1.UPPER_ACNT_CODE                                                                                                                      AS UPPER_ACNT_CODE
			       ,s1.ELPD_EXCUT_RT                                                                                                                        AS ELPD_EXCUT_RT
			       ,s1.ELPD_EXCUT_AT                                                                                                                        AS ELPD_EXCUT_AT
			       ,s1.PLAN_REGIST_AT                                                                                                                       AS PLAN_REGIST_AT
			       ,s1.CHIT_PROCESS_AT                                                                                                                      AS CHIT_PROCESS_AT
			       ,s1.JRNLZ_CNT                                                                                                                            AS JRNLZ_CNT
			       ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1) +1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
			       ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2) +1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
			       ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3) +1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
			       ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4) +1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
			       ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5) +1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
			FROM   BUDGET_ACNT_TREE s1
			WHERE  1=1

	</select>
	
	<!-- 세목/지출단위코드 목록조회 -->
	<select id="BdgAcntPopDAO.selectPstyrExpndtrUnitCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BdgAcntPopDAO.selectPstyrExpndtrUnitCode*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
		      ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
		      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,6)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,2)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
		      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,6)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,2)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
		      ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE
		      ,SUBSTR(t1.EXPNDTR_UNIT_CODE,1,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,3,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,5,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,7,2)    AS EXPNDTR_UNIT_CODE2
		      ,t3.EXPNDTR_UNIT_NM                                                                                                                                       AS EXPNDTR_UNIT_NM
		      ,SUBSTR(t1.EXPNDTR_UNIT_CODE,1,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,3,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,5,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,7,2)
		       ||'.'|| NVL(t1.EXPNDTR_UNIT_NM,'')                                                                                                                       AS EXPNDTR_UNIT_NM2
		      ,t3.TAXITM_CODE                                                                                                                                           
		      ,t3.TAXITM_NM                                                                                                                                             
		      ,t3.TAXITM_CODE ||'.'|| NVL(t3.TAXITM_NM,'')                                                                                                              AS TAXITM_NM2
		      ,t3.DEPT_CODE                                                                                                                                             
		      ,t3.DEPT_NM                                                                                                                                               
		      ,t3.DEPT_CODE ||'.'|| NVL(t3.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
		      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t1.BSNS_SE,t1.BALC_SE,t1.BUDGET_ACNT_CODE,t1.EXPNDTR_UNIT_CODE)                                                            AS EXPNDTR_UNIT_TREE_NM
		      ,NVL(t5.CYFD_BUDGET_AMT,0)                                                                                                AS CYFD_BUDGET_AMT
		      ,NVL(t5.ORIBDGT_AMT,0)                                                                                                    AS ORIBDGT_AMT
		      ,NVL(t5.RVSPBGT_AMT,0)                                                                                                    AS RVSPBGT_AMT
		      ,NVL(t5.DVR_AMT,0)                                                                                                        AS DVR_AMT
		      ,NVL(t5.EXECUT_BUDGET_AM,0)                                                                                               AS EXECUT_BUDGET_AM
		      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                            AS CAUSE_ACTION_AMOUNT
		      ,NVL(t5.CAUSE_ACTION_DECSN_AMOUNT,0)                                                                                      AS CAUSE_ACTION_DECSN_AMOUNT
		      ,NVL(t5.CAUSE_ACTION_JAN_AMOUNT,0)                                                                                        AS CAUSE_ACTION_JAN_AMOUNT
		      ,NVL(t5.EXP_DSN_AMOUNT,0)                                                                                                 AS EXP_DSN_AMOUNT
		      ,NVL(t5.DEBT_AMT,0)                                                                                                       AS DEBT_AMT
		      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                   AS DECSN_AMOUNT
		      ,NVL(t5.ASIGN_AMOUNT,0)                                                                                                   AS ASIGN_AMOUNT
		      ,NVL(t5.MONTH_CAUSE_ACTION_AMOUNT,0)                                                                                      AS MONTH_CAUSE_ACTION_AMOUNT
		      ,NVL(t5.MONTH_DECSN_AMOUNT,0)                                                                                             AS MONTH_DECSN_AMOUNT
		      ,NVL(t5.EXECUT_BUDGET_JAN_AM,0)                                                                                           AS EXECUT_BUDGET_JAN_AM
		      ,NVL(t5.ASIGN_JAN_AMOUNT,0)                                                                                               AS ASIGN_JAN_AMOUNT
		      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
		      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
		      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
		      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
		      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
		      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
		      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
		      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
		      ,(
		        SELECT (CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END)
		        FROM   TBBDG_BUDGET_FRMTN_PD r1
		               LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT r2
		                    ON r1.YEAR = r2.YEAR
		                   AND r1.SN = r2.SN
		        WHERE  r1.USE_AT = '1'
		        AND    r1.REQST_SE = '4'
		        AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN r1.BGNDE AND r1.ENDDE
		        AND    r1.YEAR = t1.YEAR
		        AND    (r2.DEPT_CODE = '000000' OR r2.DEPT_CODE = t1.DEPT_CODE)
		       )                                                                                                                                                        AS USE_AT
		FROM   (
		        SELECT YEAR
		              ,BSNS_SE
		              ,BALC_SE
		              ,DETAIL_BSNS_CODE
		              ,DEPT_CODE
		              ,BUDGET_ACNT_CODE
		              ,EXPNDTR_UNIT_CODE
		              ,EXPNDTR_UNIT_NM
		        FROM   TBBDG_EXPNDTR_UNIT_CODE 
		        WHERE  1=1
		        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
		        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
		        <isNotEmpty property="BALC_SE"          prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
		        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
		        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
		        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		        GROUP BY YEAR
		                ,BSNS_SE
		                ,BALC_SE
		                ,DETAIL_BSNS_CODE
		                ,DEPT_CODE
		                ,BUDGET_ACNT_CODE
		                ,EXPNDTR_UNIT_CODE
		                ,EXPNDTR_UNIT_NM
		       ) t1
		       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.BSNS_SE = t2.BSNS_SE
		           AND t1.BALC_SE = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE t3
		            ON t1.YEAR = t3.YEAR
		           AND t1.BSNS_SE = t3.BSNS_SE
		           AND t1.BALC_SE = t3.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t3.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BSNS_CODE
		                              ,DEPT_CODE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,CYFD_BUDGET_AMT
		                              ,ORIBDGT_AMT
		                              ,RVSPBGT_AMT
		                              ,DVR_AMT
		                              ,EXECUT_BUDGET_AM
		                              ,CAUSE_ACTION_AMOUNT
		                              ,CAUSE_ACTION_DECSN_AMOUNT
		                              ,CAUSE_ACTION_JAN_AMOUNT
		                              ,EXP_DSN_AMOUNT
		                              ,DEBT_AMT
		                              ,DECSN_AMOUNT
		                              ,ASIGN_AMOUNT
		                              ,MONTH_CAUSE_ACTION_AMOUNT
		                              ,MONTH_DECSN_AMOUNT
		                              ,EXECUT_BUDGET_JAN_AM
		                              ,ASIGN_JAN_AMOUNT
		                        FROM   VWACC_EXP_DSN_MASTR
		                       ) t5
		            ON t1.YEAR              = t5.BUDGET_YEAR
		           AND t1.BSNS_SE           = t5.BSNS_SE
		           AND t1.BALC_SE           = t5.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
		           AND t1.DEPT_CODE         = t5.DEPT_CODE
		           AND t1.DETAIL_BSNS_CODE  = t5.BSNS_CODE
		WHERE  1=1
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.DEPT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
	</select>
	
	
	<!-- 세목/지출단위코드 목록조회 -->
	<select id="BdgAcntPopDAO.selectExpndtrUnitCodeOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<![CDATA[/*BdgAcntPopDAO.selectExpndtrUnitCodeOld*/]]>
	
		<isEqual property="BALC_SE" compareValue="1">
			SELECT t1.YEAR
			      ,t2.BSNS_SE
			      ,t2.BALC_SE
			      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
			      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
			      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
			      ,t1.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
			      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
			      ,t1.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
			      ,t3.DETAIL_BSNS_CODE
			      ,t9.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
			      ,DECODE(t3.DETAIL_BSNS_CODE, NULL, '', t3.DETAIL_BSNS_CODE || '.' || t9.BSNS_NM)                                                                          AS DETAIL_BSNS_NM2
			      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
			      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t1.BUKIP_CODE)                                                                   AS EXPNDTR_UNIT_TREE_NM
			      ,NVL(t3.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
			      ,NVL(t3.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
			      ,NVL(t3.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
			      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
			      ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
			      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
			      ,SUM(NVL(t3.BUDGET_AM,0))                          OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
			      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
			      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
			      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
			      ,SUM(NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
			      ,NVL(t3.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
			      ,SUM(NVL(t3.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)) OVER (PARTITION BY t3.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC2
			      ,NVL(t3.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC2
			      ,NVL(t3.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
			      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
			      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
			      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
			      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
			      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
			      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
			FROM
			       (
			          SELECT YEAR
			             , BUDGET_ACNT_CODE
			             , BUKIP_CODE
			          FROM TBBDG_BUDGET_BUKIP_MAPPING
			         WHERE YEAR             = #YEAR#
			           AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
			       ) t1
			       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
			            ON t1.YEAR             = t2.YEAR
			           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
			       LEFT OUTER JOIN (
			                        SELECT YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,DETAIL_BSNS_CODE
			                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
			                              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
			                              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
			                              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
			                        FROM   TBBDG_EXECUT_BUDGET
			                        WHERE  1=1
			                        AND    BALC_SE          = #BALC_SE#
			                        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
			                        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
			                        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
			                        <isNotEmpty property="DEPT_CODE">
			                            <isNotEqual property="DEPT_CODE" compareValue="000000">
			                        AND    DEPT_CODE        = #DEPT_CODE#
			                            </isNotEqual>
			                        </isNotEmpty>
			                        GROUP BY YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                                ,DETAIL_BSNS_CODE
			                       ) t3
			            ON t1.YEAR             = t3.YEAR
			           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
			           AND t1.BUKIP_CODE       = t3.EXPNDTR_UNIT_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,BSNS_CODE
			                              ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT
			                              ,NVL(SUM(DEBT_AMT           ),0)  AS DEBT_AMT
			                              ,NVL(SUM(DECSN_AMOUNT       ),0)  AS DECSN_AMOUNT
			                        FROM   VHACC_EXP_DSN_MASTR
			                        WHERE  1=1
			                        <isNotEmpty property="DEPT_CODE">
			                            <isNotEqual property="DEPT_CODE" compareValue="000000">
			                        AND    DEPT_CODE        = #DEPT_CODE#
			                            </isNotEqual>
			                        </isNotEmpty>
			                        <isNotEmpty property="MONTH" prepend="AND">
			                        	SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
			                        </isNotEmpty>
			                        <isEmpty property="MONTH" prepend="AND">
			                        	CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
			                        </isEmpty>
			                        GROUP BY BUDGET_YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                                ,BSNS_CODE
			                       ) t5
			            ON t3.YEAR              = t5.BUDGET_YEAR
			           AND t3.BSNS_SE           = t5.BSNS_SE
			           AND t3.BALC_SE           = t5.BALC_SE
			           AND t3.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
			           AND t3.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
			           AND t3.DETAIL_BSNS_CODE  = t5.BSNS_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,BSNS_CODE
			                              ,NVL(SUM(ORI_DECSN_AMOUNT  ),0)  AS ORI_DECSN_AMOUNT
			                              ,NVL(SUM(CYFD_DECSN_AMOUNT ),0)  AS CYFD_DECSN_AMOUNT
			                              ,NVL(SUM(DECSN_AMOUNT      ),0)  AS DECSN_AMOUNT
			                        FROM   (
			                                SELECT DECSN_NO
			                                      ,CPTAL_EXPNDTR_ACNTBK_DE
			                                      ,ANACT_KND
			                                      ,CYFD_SE
			                                      ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
			                                            WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
			                                            ELSE BUDGET_YEAR
			                                       END                                       AS BUDGET_YEAR
			                                      ,BSNS_SE
			                                      ,BALC_SE
			                                      ,BUDGET_ACNT_CODE
			                                      ,EXPNDTR_UNIT_CODE
			                                      ,BSNS_CODE
			                                      ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
			                                      ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
			                                      ,DECSN_AMOUNT               AS DECSN_AMOUNT
			                                FROM   TBACC_EXP_DSN_MASTR
			                                WHERE  1=1
			                                <isNotEmpty property="DEPT_CODE">
			                                    <isNotEqual property="DEPT_CODE" compareValue="000000">
			                                AND    DEPT_CODE        = #DEPT_CODE#
			                                    </isNotEqual>
			                                </isNotEmpty>
			                               )
			                        WHERE  1=1
			                        GROUP BY BUDGET_YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                                ,BSNS_CODE
			                       ) t6
			            ON t3.YEAR              = t6.BUDGET_YEAR
			           AND t3.BSNS_SE           = t6.BSNS_SE
			           AND t3.BALC_SE           = t6.BALC_SE
			           AND t3.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
			           AND t3.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
			           AND t3.DETAIL_BSNS_CODE  = t6.BSNS_CODE
			       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
			            ON t1.BUKIP_CODE = t8.BUKIP_CODE
			       LEFT OUTER JOIN TBPRJ_BSNS_CODE t9
			            ON t3.DETAIL_BSNS_CODE = t9.BSNS_CODE
			WHERE  1=1
			ORDER BY t1.YEAR
			        ,t2.BSNS_SE
			        ,t2.BALC_SE
			        ,t2.BUDGET_ACNT_CODE
			        ,t3.DETAIL_BSNS_CODE
			        ,t1.BUKIP_CODE
		</isEqual>
	
		<isEqual property="BALC_SE" compareValue="2">
			SELECT t1.YEAR
			      ,t2.BSNS_SE
			      ,t2.BALC_SE
			      ,t1.DETAIL_BSNS_CODE
			      ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
			      ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
			      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
			      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
			      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
			             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,7)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,3)
			             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
			      ,t8.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE
			      ,t8.BUKIP_CODE                                                                                                                                            AS EXPNDTR_UNIT_CODE2
			      ,t8.BUKIP_NM                                                                                                                                              AS EXPNDTR_UNIT_NM
			      ,t8.BUKIP_CODE ||'.'|| NVL(t8.BUKIP_NM,'')                                                                                                                AS EXPNDTR_UNIT_NM2
			      ,t1.DEPT_CODE
			      ,t7.DEPT_NM
			      ,t1.DEPT_CODE ||'.'|| NVL(t7.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
			      ,''                                                                                                                                                       AS BUDGET_CNRL_AT  /* 예산통제여부 2016.08.16 */
			      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t2.BSNS_SE,t2.BALC_SE,t1.BUDGET_ACNT_CODE,t8.BUKIP_CODE)                                                                    AS EXPNDTR_UNIT_TREE_NM
			      ,NVL(t1.ORI_BUDGET_AM,0)                                                                                                                                  AS ORI_BUDGET_AM
			      ,NVL(t1.CYFD_BUDGET_AM,0)                                                                                                                                 AS CYFD_BUDGET_AM
			      ,NVL(t1.BUDGET_AM,0)                                                                                                                                      AS BUDGET_AM
			      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
			      ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
			      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
			      ,SUM(NVL(t1.BUDGET_AM,0))                          OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_EXECUT_AM
			      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
			      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
			      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
			      ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC
			      ,NVL(t1.BUDGET_AM,0) - NVL(t5.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC
			      ,SUM(NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)) OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_BALC2
			      ,NVL(t1.BUDGET_AM,0) - NVL(t6.DECSN_AMOUNT,0)                                                                                                             AS EXPNDTR_UNIT_BALC2
			      ,NVL(T1.EXPNDTR_POSBL_AT,'0')                                                                                                                             AS EXPNDTR_POSBL_AT
			      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
			      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
			      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
			      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
			      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
			      ,t2.BUDGET_ACNT_NM2 AS BUDGET_TREE_NM
			FROM
			       (
			        SELECT YEAR
			              ,BSNS_SE
			              ,BALC_SE
			              ,DETAIL_BSNS_CODE
			              ,DEPT_CODE
			              ,BUDGET_ACNT_CODE
			              ,EXPNDTR_UNIT_CODE
			              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                   NVL(TRSF_AM,0) + NVL(MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                                       AS ORI_BUDGET_AM
			              ,SUM(NVL(CYFD_BUDGET,0))                                                                                              AS CYFD_BUDGET_AM
			              ,SUM(NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0) + NVL(RVSPBGT_5_ODR,0) + NVL(RVSPBGT_6_ODR,0) + NVL(RVSPBGT_7_ODR,0) +
			                   NVL(TRSF_AM,0) + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0) )                  AS BUDGET_AM
			              ,MAX(EXPNDTR_POSBL_AT)                                                                                                AS EXPNDTR_POSBL_AT 
			        FROM   TBBDG_EXECUT_BUDGET
			        WHERE  1=1
			        AND    BALC_SE          = #BALC_SE#
			        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
			        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
			        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
			        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
			        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
			        GROUP BY YEAR
			                ,BSNS_SE
			                ,BALC_SE
			                ,DETAIL_BSNS_CODE
			                ,DEPT_CODE
			                ,BUDGET_ACNT_CODE
			                ,EXPNDTR_UNIT_CODE
			       ) t1
			       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
			            ON t1.YEAR             = t2.YEAR
			           AND t1.BSNS_SE          = t2.BSNS_SE
			           AND t1.BALC_SE          = t2.BALC_SE
			           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
			       LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING t3
			            ON t1.YEAR              = t3.YEAR
			           AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
			           AND t1.EXPNDTR_UNIT_CODE = t3.BUKIP_CODE
			       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
			            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
			       LEFT OUTER JOIN VWHRM_DEPT t7
			            ON t1.DEPT_CODE = t7.DEPT_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BSNS_CODE
			                              ,DEPT_CODE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,NVL(SUM(CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT
			                              ,NVL(SUM(DEBT_AMT           ),0)  AS DEBT_AMT
			                              ,NVL(SUM(DECSN_AMOUNT       ),0)  AS DECSN_AMOUNT
			                        FROM   VHACC_EXP_DSN_MASTR
			                        WHERE  1=1
			                        <isNotEmpty property="MONTH" prepend="AND">
			                        	SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
			                        </isNotEmpty>
			                        <isEmpty property="MONTH" prepend="AND">
			                        	CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
			                        </isEmpty>
			                        GROUP BY BUDGET_YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BSNS_CODE
			                                ,DEPT_CODE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                       ) t5
			            ON t1.YEAR              = t5.BUDGET_YEAR
			           AND t1.BSNS_SE           = t5.BSNS_SE
			           AND t1.BALC_SE           = t5.BALC_SE
			           AND t1.DETAIL_BSNS_CODE = t5.BSNS_CODE
			           AND t1.DEPT_CODE        = t5.DEPT_CODE
			           AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
			           AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
			       LEFT OUTER JOIN (
			                        SELECT BUDGET_YEAR
			                              ,BSNS_SE
			                              ,BALC_SE
			                              ,BSNS_CODE
			                              ,DEPT_CODE
			                              ,BUDGET_ACNT_CODE
			                              ,EXPNDTR_UNIT_CODE
			                              ,NVL(SUM(ORI_DECSN_AMOUNT  ),0)  AS ORI_DECSN_AMOUNT
			                              ,NVL(SUM(CYFD_DECSN_AMOUNT ),0)  AS CYFD_DECSN_AMOUNT
			                              ,NVL(SUM(DECSN_AMOUNT      ),0)  AS DECSN_AMOUNT
			                        FROM   (
			                                SELECT DECSN_NO
			                                      ,CPTAL_EXPNDTR_ACNTBK_DE
			                                      ,ANACT_KND
			                                      ,CYFD_SE
			                                      ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
			                                            WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
			                                            ELSE BUDGET_YEAR
			                                       END                                       AS BUDGET_YEAR
			                                      ,BSNS_SE
			                                      ,BALC_SE
			                                      ,BSNS_CODE
			                                      ,DEPT_CODE
			                                      ,BUDGET_ACNT_CODE
			                                      ,EXPNDTR_UNIT_CODE
			                                      ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
			                                      ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
			                                      ,DECSN_AMOUNT               AS DECSN_AMOUNT
			                                FROM   TBACC_EXP_DSN_MASTR
			                                WHERE  1=1
			                               )
			                        WHERE  1=1
			                        GROUP BY BUDGET_YEAR
			                                ,BSNS_SE
			                                ,BALC_SE
			                                ,BSNS_CODE
			                                ,DEPT_CODE
			                                ,BUDGET_ACNT_CODE
			                                ,EXPNDTR_UNIT_CODE
			                       ) t6
			            ON t1.YEAR              = t6.BUDGET_YEAR
			           AND t1.BSNS_SE           = t6.BSNS_SE
			           AND t1.BALC_SE           = t6.BALC_SE
			           AND t1.DETAIL_BSNS_CODE  = t6.BSNS_CODE
			           AND t1.DEPT_CODE         = t6.DEPT_CODE
			           AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
			           AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
			       LEFT OUTER JOIN TBBDG_BUKIP_CODE t8
			            ON T1.EXPNDTR_UNIT_CODE = t8.BUKIP_CODE
			WHERE  1=1
			ORDER BY t1.YEAR
			        ,t1.BSNS_SE
			        ,t1.BALC_SE
			        ,t1.BUDGET_ACNT_CODE
			        ,t1.DETAIL_BSNS_CODE
			        ,t1.DEPT_CODE
			        ,t1.EXPNDTR_UNIT_CODE
		</isEqual>
	</select>

</sqlMap>