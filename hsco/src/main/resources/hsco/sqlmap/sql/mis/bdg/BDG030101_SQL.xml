<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG030101_SQL">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

    <!-- 입력가능여부 조회 -->
    <select id="BDG030101DAO.selectInpYn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectInpYn*/]]>
        SELECT CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END AS INP_YN
        FROM   TBBDG_BUDGET_FRMTN_PD t1
               LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT t2
                    ON t1.YEAR = t2.YEAR
                   AND t1.SN = t2.SN
        WHERE  t1.USE_AT = '1'
        AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN t1.BGNDE AND t1.ENDDE
        AND    t1.YEAR = #YEAR#
        AND    t1.BUDGET_SE = #BUDGET_SE#
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (t2.DEPT_CODE='000000' OR t2.DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </select>


    <!-- 조정의견건수 조회 -->
    <select id="BDG030101DAO.selectCntDemandOpinion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectCntDemandOpinion*/]]>
        SELECT COUNT(1)    AS CNT_DEMAND_OPINION
          FROM TBBDG_DEMAND_OPINION
         WHERE YEAR      = #YEAR#
           AND BUDGET_SE = #BUDGET_SE#
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (DEPT_CODE='000000' OR DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </select>


    <!-- 전년도편성금액 조회 -->
    <select id="BDG030101DAO.selectPrvYearBdgAm" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectPrvYearBdgAm*/]]>
        SELECT SUM(PART_SM_AM_DEMAND)
          FROM TBBDG_DEMAND_BUDGET
         WHERE OUTPT_LEVEL = '1'
        <isNotEmpty property="YEAR"             prepend="AND ">YEAR             = #YEAR# - 1</isNotEmpty>
        <isNotEmpty property="BUDGET_SE"        prepend="AND ">BUDGET_SE        = #BUDGET_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"          prepend="AND ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"          prepend="AND ">BALC_SE          = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE"        prepend="AND ">BSNS_CODE        = #BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE"        prepend="AND ">DEPT_CODE        = #DEPT_CODE#</isNotEmpty>
        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
        <isNotEmpty property="BUKIP_CODE"       prepend="AND ">BUKIP_CODE       = #BUKIP_CODE#</isNotEmpty>
    </select>


    <!-- 예산요구등록 조회 -->
    <select id="BDG030101DAO.selectDemandBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectDemandBudget*/]]>
        SELECT T1.YEAR
             , T1.BUDGET_SE
             , T1.BSNS_SE
             , T1.BALC_SE
             , T1.BSNS_CODE
             , T3.BSNS_NM
             , T1.DEPT_CODE
             , T4.DEPT_NM
             , T1.DEMAND_NO
             , T1.DEMAND_NO AS ORG_DEMAND_NO
             , T1.BUDGET_ACNT_CODE
             , T2.BUDGET_ACNT_NM
             , T1.SN
             , T1.YEAR                AS ORG_YEAR
             , T1.BUDGET_SE           AS ORG_BUDGET_SE
             , T1.BSNS_SE             AS ORG_BSNS_SE
             , T1.BSNS_CODE           AS ORG_BSNS_CODE
             , T1.DEPT_CODE           AS ORG_DEPT_CODE
             , T1.BUDGET_ACNT_CODE    AS ORG_BUDGET_ACNT_CODE
             , T1.BALC_SE             AS ORG_BALC_SE
             , T1.SN                  AS ORG_SN
             , T1.CONFM_AT
             , T1.BUKIP_CODE
             , T6.BUKIP_NM
             , T1.BUKIP_DTLS
             , T1.COMPUT_OFCL
             , T1.PRVYY_BUDGET_AM
             , T1.DEMAND_BUDGET_DCSN_AM
             , T1.FRST_DEMAND_BUDGET_AM
             , T1.OUTPT_LEVEL
             , T1.OUTPT_ORDR
             , T1.CNTRCT_YEAR
             , T1.CNTRCT_NO
             , T9.CNTRCT_NM
             , T1.PART_SM_AM_DEMAND
             , T1.CNTRCT_AT
             , T1.DETAIL_DTLS
             , T1.MDAT_OPINION
             , T1.REGIST_DT
             , T1.REGISTER_ID
             , NVL(T7.EMPNM, '알수없음') AS REGISTER_NM
             , T1.UPDT_DT
             , T1.UPDUSR_ID
             , NVL(T8.EMPNM, '알수없음') AS UPDUSR_NM
             , T1.COMPUT_OFCL_BUKIP_ACCNUT
             , T1.BUDGET_EXCUT_AM
             , T1.PART_SM_AM_DCSN
             , T1.FIRST_RVSPBGT_BUDGET_AM
             , T1.SUMRY
             , T1.PRVYY_BUDGET_PART_SM_AM
             , T2.GWAN_NM AS GWAN
             , T2.HANG_NM AS HANG
             , T2.SEHANG_NM AS SEGANG
             , T2.MOK_NM AS MOK
             , T2.SEMOK_NM AS SEMOK
             , CASE WHEN T2.SEMOK_NM IS NULL THEN T2.MOK_NM
                    ELSE T2.MOK_NM || '(' || T2.SEMOK_NM || ')'
                    END AS MOK_SEMOK
        FROM   TBBDG_DEMAND_BUDGET T1
               LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE T2
                    ON T1.YEAR = T2.YEAR
                   AND T1.BSNS_SE = T2.BSNS_SE
                   AND T1.BALC_SE = T2.BALC_SE
                   AND T1.BUDGET_ACNT_CODE = T2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBPRJ_BSNS_CODE T3
                    ON T1.BSNS_CODE = T3.BSNS_CODE
               LEFT OUTER JOIN VWHRM_DEPT T4
                    ON T1.DEPT_CODE = T4.DEPT_CODE
               LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING T5
                    ON T1.YEAR             = T5.YEAR
                   AND T1.BUDGET_ACNT_CODE = T5.BUDGET_ACNT_CODE
                   AND T1.BUKIP_CODE       = T5.BUKIP_CODE
               LEFT OUTER JOIN TBBDG_BUKIP_CODE T6
                    ON T1.BUKIP_CODE = T6.BUKIP_CODE
               LEFT OUTER JOIN TBHRM_HR_MASTR T7
                    ON T1.REGISTER_ID = T7.EMPNO
               LEFT OUTER JOIN TBHRM_HR_MASTR T8
                    ON T1.UPDUSR_ID = T8.EMPNO
               LEFT OUTER JOIN TBCTR_CNTRCT T9
                    ON T1.CNTRCT_NO = T9.CNTRCT_NO
        WHERE  1=1
        <isNotEmpty property="YEAR"             prepend="AND    ">T1.YEAR             = #YEAR#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"          prepend="AND    ">T1.BSNS_SE          = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"          prepend="AND    ">T1.BALC_SE          = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BUDGET_SE"        prepend="AND    ">T1.BUDGET_SE        = #BUDGET_SE#</isNotEmpty>
        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">T1.BSNS_CODE        = #DETAIL_BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">T1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">T1.DEPT_CODE        = #DEPT_CODE#</isNotEqual></isNotEmpty>
        ORDER BY T1.BSNS_SE
               , T1.BALC_SE
               , T1.BSNS_CODE
               , T1.DEPT_CODE
               , T1.BUDGET_ACNT_CODE
               , T1.DEMAND_NO
    </select>

    <!-- 예산요구등록 추가 -->
    <insert id="BDG030101DAO.insertDemandBudget" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.insertDemandBudget*/]]>
        INSERT INTO TBBDG_DEMAND_BUDGET(
             YEAR
            ,BUDGET_SE
            ,BALC_SE
            ,BSNS_SE
            ,BSNS_CODE
            ,DEPT_CODE
            ,DEMAND_NO
            ,BUDGET_ACNT_CODE
            ,SN
            ,CONFM_AT
            ,BUKIP_CODE
            ,BUKIP_DTLS
            ,COMPUT_OFCL
            ,PRVYY_BUDGET_AM
            ,DEMAND_BUDGET_DCSN_AM
            ,FRST_DEMAND_BUDGET_AM
            ,OUTPT_LEVEL
            ,OUTPT_ORDR
            ,CNTRCT_YEAR
            ,CNTRCT_NO
            ,PART_SM_AM_DEMAND
            ,CNTRCT_AT
            ,DETAIL_DTLS
            ,MDAT_OPINION
            ,COMPUT_OFCL_BUKIP_ACCNUT
            ,BUDGET_EXCUT_AM
            ,PART_SM_AM_DCSN
            ,FIRST_RVSPBGT_BUDGET_AM
            ,SUMRY
            ,PRVYY_BUDGET_PART_SM_AM
            ,REGIST_DT
            ,REGISTER_ID
            ,UPDT_DT
            ,UPDUSR_ID
        )
        VALUES (
             #YEAR#
            ,#BUDGET_SE#
            ,#BALC_SE#
            ,#BSNS_SE#
            ,#BSNS_CODE#
            ,#DEPT_CODE#
            ,(SELECT NVL(MAX(DEMAND_NO), 0) + 1 FROM TBBDG_DEMAND_BUDGET WHERE YEAR = #YEAR# AND BSNS_SE = #BSNS_SE# AND BALC_SE = #BALC_SE# AND BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE# AND DEPT_CODE = #DEPT_CODE#)
            ,#BUDGET_ACNT_CODE#
            ,(SELECT NVL(MAX(SN), 0) + 1 FROM TBBDG_DEMAND_BUDGET WHERE YEAR = #YEAR#)
            ,#CONFM_AT#
            ,#BUKIP_CODE#
            ,#BUKIP_DTLS#
            ,#COMPUT_OFCL#
            ,NVL(#PRVYY_BUDGET_AM#, 0)
            ,NVL(#DEMAND_BUDGET_DCSN_AM#, 0)
            ,NVL(#FRST_DEMAND_BUDGET_AM#, 0)
            ,#OUTPT_LEVEL#
            ,#OUTPT_ORDR#
            ,#CNTRCT_YEAR#
            ,#CNTRCT_NO#
            ,NVL(#PART_SM_AM_DEMAND#, 0)
            ,NVL(#CNTRCT_AT#, '0')
            ,#DETAIL_DTLS#
            ,#MDAT_OPINION#
            ,#COMPUT_OFCL_BUKIP_ACCNUT#
            ,NVL(#BUDGET_EXCUT_AM#, 0)
            ,NVL(#PART_SM_AM_DCSN#, 0)
            ,NVL(#FIRST_RVSPBGT_BUDGET_AM#, 0)
            ,#SUMRY#
            ,NVL(#PRVYY_BUDGET_PART_SM_AM#, 0)
            ,SYSDATE
            ,#S_USER_ID#
            ,SYSDATE
            ,#S_USER_ID#
        )
    </insert>


    <!-- 예산요구등록 수정 -->
    <update id="BDG030101DAO.updateDemandBudget" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.updateDemandBudget*/]]>
        UPDATE TBBDG_DEMAND_BUDGET
        SET    YEAR                     = #YEAR#
              ,BUDGET_SE                = #BUDGET_SE#
              ,BSNS_SE                  = #BSNS_SE#
              ,BSNS_CODE                = #BSNS_CODE#
              ,DEPT_CODE                = #DEPT_CODE#
              ,BUDGET_ACNT_CODE         = #BUDGET_ACNT_CODE#
              ,BUKIP_CODE               = #BUKIP_CODE#
              ,BALC_SE                  = #BALC_SE#
              ,DEMAND_NO                = #DEMAND_NO#
              ,CONFM_AT                 = #CONFM_AT#
              ,BUKIP_DTLS               = #BUKIP_DTLS#
              ,COMPUT_OFCL              = #COMPUT_OFCL#
              ,PRVYY_BUDGET_AM          = NVL(#PRVYY_BUDGET_AM#, 0)
              ,DEMAND_BUDGET_DCSN_AM    = NVL(#DEMAND_BUDGET_DCSN_AM#, 0)
              ,FRST_DEMAND_BUDGET_AM    = NVL(#FRST_DEMAND_BUDGET_AM#, 0)
              ,OUTPT_LEVEL              = #OUTPT_LEVEL#
              ,OUTPT_ORDR               = #OUTPT_ORDR#
              ,CNTRCT_YEAR              = #CNTRCT_YEAR#
              ,CNTRCT_NO                = #CNTRCT_NO#
              ,PART_SM_AM_DEMAND        = NVL(#PART_SM_AM_DEMAND#, 0)
              ,CNTRCT_AT                = NVL(#CNTRCT_AT#, '0')
              ,DETAIL_DTLS              = #DETAIL_DTLS#
              ,MDAT_OPINION             = #MDAT_OPINION#
              ,COMPUT_OFCL_BUKIP_ACCNUT = #COMPUT_OFCL_BUKIP_ACCNUT#
              ,BUDGET_EXCUT_AM          = NVL(#BUDGET_EXCUT_AM#, 0)
              ,PART_SM_AM_DCSN          = NVL(#PART_SM_AM_DCSN#, 0)
              ,FIRST_RVSPBGT_BUDGET_AM  = NVL(#FIRST_RVSPBGT_BUDGET_AM#, 0)
              ,SUMRY                    = #SUMRY#
              ,PRVYY_BUDGET_PART_SM_AM  = NVL(#PRVYY_BUDGET_PART_SM_AM#, 0)
              <isEqual property="CHANGE_AT" compareValue="1">
              ,UPDT_DT                  = SYSDATE
              ,UPDUSR_ID                = #UPDUSR_ID#
              </isEqual>
        WHERE  YEAR              = #ORG_YEAR#
          AND  BUDGET_SE         = #ORG_BUDGET_SE#
          AND  BSNS_SE           = #ORG_BSNS_SE#
          AND  BSNS_CODE         = #ORG_BSNS_CODE#
          AND  DEPT_CODE         = #ORG_DEPT_CODE#
          AND  BUDGET_ACNT_CODE  = #ORG_BUDGET_ACNT_CODE#
          AND  BALC_SE           = #ORG_BALC_SE#
          AND  SN                = #ORG_SN#
    </update>


    <!-- 요구번호 조정 -->
    <update id="BDG030101DAO.updateDemandNo" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.updateDemandNo*/]]>
        UPDATE TBBDG_DEMAND_BUDGET T1
           SET T1.DEMAND_NO = (
                            SELECT DEMAND_NO2
                              FROM VWBDG_DEMAND_BUDGET
                             WHERE YEAR             = T1.YEAR
                               AND BUDGET_SE        = T1.BUDGET_SE
                               AND BSNS_SE          = T1.BSNS_SE
                               AND BSNS_CODE        = T1.BSNS_CODE
                               AND DEPT_CODE        = T1.DEPT_CODE
                               AND BUDGET_ACNT_CODE = T1.BUDGET_ACNT_CODE
                               AND BALC_SE          = T1.BALC_SE
                               AND SN               = T1.SN
                           )
         WHERE T1.YEAR = #YEAR#
           AND T1.BUDGET_SE = #BUDGET_SE#
         <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (T1.DEPT_CODE='000000' OR T1.DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
    </update>

    <!-- 요구번호 조정 -->
    <update id="BDG030101DAO.updateDemandNo2" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.updateDemandNo2*/]]>
        UPDATE TBBDG_DEMAND_BUDGET
           SET DEMAND_NO = #DEMAND_NO#
         WHERE YEAR             = #ORG_YEAR#
           AND BUDGET_SE        = #ORG_BUDGET_SE#
           AND BSNS_SE          = #ORG_BSNS_SE#
           AND BSNS_CODE        = #ORG_BSNS_CODE#
           AND DEPT_CODE        = #ORG_DEPT_CODE#
           AND BUDGET_ACNT_CODE = #ORG_BUDGET_ACNT_CODE#
           AND BALC_SE          = #ORG_BALC_SE#
           AND SN               = #ORG_SN#
    </update>


    <!-- 합계금액 조정 -->
    <update id="BDG030101DAO.updateAm" parameterClass="java.util.HashMap">
	    <![CDATA[/*BDG030101DAO.updateAm*/]]>
	    <![CDATA[
	        UPDATE TBBDG_DEMAND_BUDGET T1
	           SET T1.PART_SM_AM_DEMAND = (
	                                    NVL((
	                                          SELECT SUM(S1.FRST_DEMAND_BUDGET_AM)
	                                          FROM   TBBDG_DEMAND_BUDGET S1
	                                          WHERE  S1.YEAR             = T1.YEAR
	                                          AND    S1.BUDGET_SE        = T1.BUDGET_SE
	                                          AND    S1.BSNS_SE          = T1.BSNS_SE
	                                          AND    S1.BALC_SE          = T1.BALC_SE
	                                          AND    S1.BSNS_CODE        = T1.BSNS_CODE
	                                          AND    S1.BUDGET_ACNT_CODE = T1.BUDGET_ACNT_CODE
	                                          AND    S1.DEPT_CODE        = T1.DEPT_CODE
	                                          AND    S1.DEMAND_NO > T1.DEMAND_NO
	                                          AND    S1.DEMAND_NO < NVL((
	                                                                     SELECT MIN(DEMAND_NO)
	                                                                     FROM   TBBDG_DEMAND_BUDGET
	                                                                     WHERE  1=1
	                                                                     AND    YEAR             = S1.YEAR
	                                                                     AND    BUDGET_SE        = S1.BUDGET_SE
	                                                                     AND    BSNS_SE          = S1.BSNS_SE
	                                                                     AND    BALC_SE          = S1.BALC_SE
	                                                                     AND    BSNS_CODE        = S1.BSNS_CODE
	                                                                     AND    BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE
	                                                                     AND    DEPT_CODE        = S1.DEPT_CODE
	                                                                     AND    DEMAND_NO > T1.DEMAND_NO
	                                                                     AND    OUTPT_LEVEL <= T1.OUTPT_LEVEL
	                                                                    ), 999999)
	                                          AND    S1.OUTPT_LEVEL > T1.OUTPT_LEVEL
	                                          AND    NOT EXISTS (
	                                                             SELECT *
	                                                             FROM   TBBDG_DEMAND_BUDGET Q1
	                                                             WHERE  1=1
	                                                             AND    Q1.YEAR             = S1.YEAR
	                                                             AND    Q1.BUDGET_SE        = S1.BUDGET_SE
	                                                             AND    Q1.BSNS_SE          = S1.BSNS_SE
	                                                             AND    Q1.BALC_SE          = S1.BALC_SE
	                                                             AND    Q1.BSNS_CODE        = S1.BSNS_CODE
	                                                             AND    Q1.BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE
	                                                             AND    Q1.DEPT_CODE        = S1.DEPT_CODE
	                                                             AND    Q1.DEMAND_NO > S1.DEMAND_NO
	                                                             AND    Q1.OUTPT_LEVEL > S1.OUTPT_LEVEL
	                                                             AND    Q1.DEMAND_NO < NVL((
	                                                                                        SELECT MIN(DEMAND_NO)
	                                                                                        FROM   TBBDG_DEMAND_BUDGET
	                                                                                        WHERE  1=1
	                                                                                        AND    YEAR             = Q1.YEAR
	                                                                                        AND    BUDGET_SE        = Q1.BUDGET_SE
	                                                                                        AND    BSNS_SE          = Q1.BSNS_SE
	                                                                                        AND    BALC_SE          = Q1.BALC_SE
	                                                                                        AND    BSNS_CODE        = Q1.BSNS_CODE
	                                                                                        AND    BUDGET_ACNT_CODE = Q1.BUDGET_ACNT_CODE
	                                                                                        AND    DEPT_CODE        = Q1.DEPT_CODE
	                                                                                        AND    DEMAND_NO > S1.DEMAND_NO
	                                                                                        AND    OUTPT_LEVEL <= S1.OUTPT_LEVEL
	                                                                                      ), 999999)
	                                                            )
	                                          AND    S1.BSNS_SE          = T1.BSNS_SE
	                                          AND    S1.BALC_SE          = T1.BALC_SE
	                                          AND    S1.BSNS_CODE        = T1.BSNS_CODE
	                                          AND    S1.BUDGET_ACNT_CODE = T1.BUDGET_ACNT_CODE
	                                          AND    S1.DEPT_CODE        = T1.DEPT_CODE
	                                         ), NVL(T1.FRST_DEMAND_BUDGET_AM, 0)))
	             , T1.PART_SM_AM_DCSN   = (
	                                    NVL((
	                                          SELECT SUM(NVL(S1.DEMAND_BUDGET_DCSN_AM, 0))
	                                          FROM   TBBDG_DEMAND_BUDGET S1
	                                          WHERE  S1.YEAR             = T1.YEAR
	                                          AND    S1.BUDGET_SE        = T1.BUDGET_SE
	                                          AND    S1.BSNS_SE          = T1.BSNS_SE
	                                          AND    S1.BALC_SE          = T1.BALC_SE
	                                          AND    S1.BSNS_CODE        = T1.BSNS_CODE
	                                          AND    S1.BUDGET_ACNT_CODE = T1.BUDGET_ACNT_CODE
	                                          AND    S1.DEPT_CODE        = T1.DEPT_CODE
	                                          AND    S1.DEMAND_NO > T1.DEMAND_NO
	                                          AND    S1.DEMAND_NO < NVL((
	                                                                     SELECT MIN(DEMAND_NO)
	                                                                     FROM   TBBDG_DEMAND_BUDGET
	                                                                     WHERE  1=1
	                                                                     AND    YEAR             = S1.YEAR
	                                                                     AND    BUDGET_SE        = S1.BUDGET_SE
	                                                                     AND    BSNS_SE          = S1.BSNS_SE
	                                                                     AND    BALC_SE          = S1.BALC_SE
	                                                                     AND    BSNS_CODE        = S1.BSNS_CODE
	                                                                     AND    BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE
	                                                                     AND    DEPT_CODE        = S1.DEPT_CODE
	                                                                     AND    DEMAND_NO > T1.DEMAND_NO
	                                                                     AND    OUTPT_LEVEL <= T1.OUTPT_LEVEL
	                                                                    ), 999999)
	                                          AND    S1.OUTPT_LEVEL > T1.OUTPT_LEVEL
	                                          AND    NOT EXISTS (
	                                                             SELECT *
	                                                             FROM   TBBDG_DEMAND_BUDGET Q1
	                                                             WHERE  1=1
	                                                             AND    Q1.YEAR             = S1.YEAR
	                                                             AND    Q1.BUDGET_SE        = S1.BUDGET_SE
	                                                             AND    Q1.BSNS_SE          = S1.BSNS_SE
	                                                             AND    Q1.BALC_SE          = S1.BALC_SE
	                                                             AND    Q1.BSNS_CODE        = S1.BSNS_CODE
	                                                             AND    Q1.BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE
	                                                             AND    Q1.DEPT_CODE        = S1.DEPT_CODE
	                                                             AND    Q1.DEMAND_NO > S1.DEMAND_NO
	                                                             AND    Q1.OUTPT_LEVEL > S1.OUTPT_LEVEL
	                                                             AND    Q1.DEMAND_NO < NVL((
	                                                                                        SELECT MIN(DEMAND_NO)
	                                                                                        FROM   TBBDG_DEMAND_BUDGET
	                                                                                        WHERE  1=1
	                                                                                        AND    YEAR             = Q1.YEAR
	                                                                                        AND    BUDGET_SE        = Q1.BUDGET_SE
	                                                                                        AND    BSNS_SE          = Q1.BSNS_SE
	                                                                                        AND    BALC_SE          = Q1.BALC_SE
	                                                                                        AND    BSNS_CODE        = Q1.BSNS_CODE
	                                                                                        AND    BUDGET_ACNT_CODE = Q1.BUDGET_ACNT_CODE
	                                                                                        AND    DEPT_CODE        = Q1.DEPT_CODE
	                                                                                        AND    DEMAND_NO > S1.DEMAND_NO
	                                                                                        AND    OUTPT_LEVEL <= S1.OUTPT_LEVEL
	                                                                                      ), 999999)
	                                                            )
	                                          AND    S1.BSNS_SE          = T1.BSNS_SE
	                                          AND    S1.BALC_SE          = T1.BALC_SE
	                                          AND    S1.BSNS_CODE        = T1.BSNS_CODE
	                                          AND    S1.BUDGET_ACNT_CODE = T1.BUDGET_ACNT_CODE
	                                          AND    S1.DEPT_CODE        = T1.DEPT_CODE
	                                         ), NVL(T1.DEMAND_BUDGET_DCSN_AM, 0)))
	         WHERE T1.YEAR             = #YEAR#
	           AND T1.BUDGET_SE        = #BUDGET_SE#
	    ]]>
	    <isNotEmpty property="BSNS_SE">
	           AND T1.BSNS_SE          = #BSNS_SE#
	    </isNotEmpty>
	    <isNotEmpty property="BALC_SE">
	           AND T1.BALC_SE          = #BALC_SE#
	    </isNotEmpty>
	    <isNotEmpty property="BSNS_CODE">
	           AND T1.BSNS_CODE        = #BSNS_CODE#
	    </isNotEmpty>
	    <isNotEmpty property="BUDGET_ACNT_CODE">
	           AND T1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
	    </isNotEmpty>
	    <isNotEmpty property="DEPT_CODE">
	        <isNotEqual property="DEPT_CODE" compareValue="000000">
	           AND T1.DEPT_CODE        = #DEPT_CODE#
	        </isNotEqual>
	    </isNotEmpty>
    </update>


    <!-- 예산요구등록 삭제 -->
    <delete id="BDG030101DAO.deleteDemandBudget" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.deleteDemandBudget*/]]>
        DELETE
        FROM   TBBDG_DEMAND_BUDGET
        WHERE  YEAR              = #ORG_YEAR#
          AND  BUDGET_SE         = #ORG_BUDGET_SE#
          AND  BSNS_SE           = #ORG_BSNS_SE#
          AND  BSNS_CODE         = #ORG_BSNS_CODE#
          AND  DEPT_CODE         = #ORG_DEPT_CODE#
          AND  BUDGET_ACNT_CODE  = #ORG_BUDGET_ACNT_CODE#
          AND  BALC_SE           = #ORG_BALC_SE#
          AND  SN                = #ORG_SN#
    </delete>


    <!-- 예산 불러오기(삭제) -->
    <delete id="BDG030101DAO.deleteDemandCopyPrvYear" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.deleteDemandCopyPrvYear*/]]>
        DELETE
        FROM   TBBDG_DEMAND_BUDGET
        WHERE  1=1
        <isNotEmpty property="YEAR"             prepend="AND ">YEAR             = #DEMAND_YEAR#</isNotEmpty>
        <isNotEmpty property="BUDGET_SE"        prepend="AND ">BUDGET_SE        = #DEMAND_BUDGET_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"          prepend="AND ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"          prepend="AND ">BALC_SE          = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE"        prepend="AND ">BSNS_CODE        = #BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE        = #DEPT_CODE#</isNotEqual></isNotEmpty>
    </delete>


    <!-- 예산 불러오기(입력) -->
    <insert id="BDG030101DAO.insertDemandCopyPrvYear" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.insertDemandCopyPrvYear*/]]>
        INSERT INTO TBBDG_DEMAND_BUDGET (
             YEAR
            ,BUDGET_SE
            ,BALC_SE
            ,BSNS_SE
            ,BSNS_CODE
            ,DEPT_CODE
            ,DEMAND_NO
            ,BUDGET_ACNT_CODE
            ,SN
            ,CONFM_AT
            ,BUKIP_CODE
            ,BUKIP_DTLS
            ,COMPUT_OFCL
            ,PRVYY_BUDGET_AM
            ,DEMAND_BUDGET_DCSN_AM
            ,FRST_DEMAND_BUDGET_AM
            ,OUTPT_LEVEL
            ,OUTPT_ORDR
            ,CNTRCT_YEAR
            ,CNTRCT_NO
            ,PART_SM_AM_DEMAND
            ,CNTRCT_AT
            ,DETAIL_DTLS
            ,MDAT_OPINION
            ,COMPUT_OFCL_BUKIP_ACCNUT
            ,BUDGET_EXCUT_AM
            ,PART_SM_AM_DCSN
            ,FIRST_RVSPBGT_BUDGET_AM
            ,SUMRY
            ,PRVYY_BUDGET_PART_SM_AM
            ,REGISTER_ID
            ,REGIST_DT
            ,UPDUSR_ID
            ,UPDT_DT
        )
        SELECT #DEMAND_YEAR# AS YEAR
              ,#DEMAND_BUDGET_SE#
              ,r1.BALC_SE
              ,r1.BSNS_SE
              ,#BSNS_CODE#
              ,r1.DEPT_CODE
              ,r1.DEMAND_NO
              ,r1.BUDGET_ACNT_CODE
              ,r1.SN
              ,r1.CONFM_AT
              ,r1.BUKIP_CODE
              ,r1.BUKIP_DTLS
              ,r1.COMPUT_OFCL
              ,r1.DEMAND_BUDGET_DCSN_AM AS PRVYY_BUDGET_AM
              ,r1.DEMAND_BUDGET_DCSN_AM
              ,r1.FRST_DEMAND_BUDGET_AM
              ,r1.OUTPT_LEVEL
              ,r1.OUTPT_ORDR
              ,r1.CNTRCT_YEAR
              ,r1.CNTRCT_NO
              ,r1.PART_SM_AM_DEMAND
              ,r1.CNTRCT_AT
              ,r1.DETAIL_DTLS
              ,r1.MDAT_OPINION
              ,r1.COMPUT_OFCL_BUKIP_ACCNUT
              ,r1.BUDGET_EXCUT_AM
              ,r1.PART_SM_AM_DCSN
              ,r1.FIRST_RVSPBGT_BUDGET_AM
              ,r1.SUMRY
              ,r1.PRVYY_BUDGET_PART_SM_AM
              ,#S_USER_ID#
              ,SYSDATE
              ,#S_USER_ID#
              ,SYSDATE
        FROM   (
                SELECT YEAR
                     ,BUDGET_SE
                     ,BALC_SE
                     ,BSNS_SE
                     ,BSNS_CODE
                     ,DEPT_CODE
                     ,DEMAND_NO
                     ,BUDGET_ACNT_CODE
                     ,SN
                     ,CONFM_AT
                     ,BUKIP_CODE
                     ,BUKIP_DTLS
                     ,COMPUT_OFCL
                     ,PRVYY_BUDGET_AM
                     ,DEMAND_BUDGET_DCSN_AM
                     ,FRST_DEMAND_BUDGET_AM
                     ,OUTPT_LEVEL
                     ,OUTPT_ORDR
                     ,CNTRCT_YEAR
                     ,CNTRCT_NO
                     ,PART_SM_AM_DEMAND
                     ,CNTRCT_AT
                     ,DETAIL_DTLS
                     ,MDAT_OPINION
                     ,COMPUT_OFCL_BUKIP_ACCNUT
                     ,BUDGET_EXCUT_AM
                     ,PART_SM_AM_DCSN
                     ,FIRST_RVSPBGT_BUDGET_AM
                     ,SUMRY
                     ,PRVYY_BUDGET_PART_SM_AM
                     ,DCSN_AT
                FROM TBBDG_DEMAND_BUDGET
               ) r1
        WHERE  1=1
        AND    r1.DCSN_AT = '1'
        <isNotEmpty property="YEAR"             prepend="AND ">r1.YEAR             = #YEAR#</isNotEmpty>
        <isNotEmpty property="BUDGET_SE"        prepend="AND ">r1.BUDGET_SE        = #BUDGET_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_SE"          prepend="AND ">r1.BSNS_SE          = #BSNS_SE#</isNotEmpty>
        <isNotEmpty property="BALC_SE"          prepend="AND ">r1.BALC_SE          = #BALC_SE#</isNotEmpty>
        <isNotEmpty property="BSNS_CODE"        prepend="AND ">r1.BSNS_CODE        = #PRVYY_BSNS_CODE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">r1.DEPT_CODE        = #DEPT_CODE#</isNotEqual></isNotEmpty>
    </insert>


    <!-- (POPUP01) 예산계정과목 코드목록 -->
    <select id="BDG030101DAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectAcntCode*/]]>
        WITH BUDGET_ACNT_TREE AS (
            SELECT ROWNUM AS RNUM
                  ,YEAR
                  ,BSNS_SE
                  ,BALC_SE
                  ,BUDGET_ACNT_CODE
                  ,BUDGET_ACNT_NM
                  ,BUDGET_ACNT_NM2
                  ,ACNT_LEVEL
                  ,UPPER_ACNT_CODE
                  ,ELPD_EXCUT_RT
                  ,ELPD_EXCUT_AT
                  ,PLAN_REGIST_AT
                  ,CHIT_PROCESS_AT
                  ,COST_ACNT_CODE
                  ,PARTN_ACNT_CODE
                  ,SYS_CONNECT_BY_PATH(BUDGET_ACNT_NM2,'|')||'|'    AS ACNT_NM_PATH
            FROM   (
                    SELECT a1.YEAR
                          ,a1.BSNS_SE
                          ,a1.BALC_SE
                          ,a1.BUDGET_ACNT_CODE
                          ,a1.BUDGET_ACNT_NM
                          ,a1.BUDGET_ACNT_NM ||'.'||
                           (CASE WHEN a1.ACNT_LEVEL &lt; '4' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
                                 WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 7) = '00' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 3)
                                 ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)    END)    AS BUDGET_ACNT_NM2
                          ,DECODE(a1.ACNT_LEVEL,'7', '4',a1.ACNT_LEVEL)                                     AS ACNT_LEVEL
                          ,a1.UPPER_ACNT_CODE
                          ,a1.ELPD_EXCUT_RT
                          ,a1.ELPD_EXCUT_AT
                          ,a1.PLAN_REGIST_AT
                          ,a1.CHIT_PROCESS_AT
                          ,a1.COST_ACNT_CODE
                          ,a1.PARTN_ACNT_CODE
                    FROM   TBBDG_BUDGET_ACNT_CODE a1
                    WHERE  a1.YEAR    = #YEAR#
                    AND    a1.BSNS_SE = #BSNS_SE#
                    AND    a1.BALC_SE = #BALC_SE#
                    <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">a1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
                   )
            START WITH UPPER_ACNT_CODE IS NULL
            CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE
            ORDER SIBLINGS BY YEAR
                             ,BSNS_SE
                             ,BALC_SE
                             ,BUDGET_ACNT_CODE
        )
        SELECT t1.BUDGET_ACNT_CODE         AS CODE
              ,t1.BUDGET_ACNT_NM2          AS CODE_NM
        FROM   BUDGET_ACNT_TREE t1
        WHERE  t1.ACNT_LEVEL = '4'
    </select>


    <!-- (POPUP01) 지출단위 코드목록 -->
    <select id="BDG030101DAO.selectExpndtrUnitCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectExpndtrUnitCode*/]]>
        SELECT t2.BUDGET_ACNT_CODE                                AS BUDGET_ACNT_CODE
              ,t1.BUKIP_CODE                                      AS CODE
              ,t3.BUKIP_NM||'.'||t1.BUKIP_CODE||
               '['||t2.BUDGET_ACNT_NM||'.'||
               (CASE WHEN t2.ACNT_LEVEL &lt; '4' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)
                     WHEN SUBSTR(t2.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4, 2)
                     ELSE SUBSTR(t2.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t2.BUDGET_ACNT_CODE, 4) END)
               ||'] '    AS CODE_NM
        FROM   TBBDG_BUDGET_BUKIP_MAPPING t1
               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
                    ON t1.YEAR = t2.YEAR
                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
               LEFT OUTER JOIN TBBDG_BUKIP_CODE t3
                    ON t1.BUKIP_CODE = t3.BUKIP_CODE
        WHERE  t1.YEAR    = #YEAR#
        AND    t2.BSNS_SE = #BSNS_SE#
        AND    t2.BALC_SE = #BALC_SE#
        <isNotEmpty property="BUDGET_ACNT_CODE"  prepend="AND    ">t1.BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#</isNotEmpty>
        <isNotEmpty property="BUKIP_CODE" prepend="AND    ">t1.BUKIP_CODE = #BUKIP_CODE#</isNotEmpty>
        ORDER BY t2.BUDGET_ACNT_CODE, t1.BUKIP_CODE
    </select>


    <!-- (POPUP) 지출단위코드 조회 -->
    <select id="BDG030101DAO.selectExpndtrUnitPopup" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectExpndtrUnitPopup*/]]>
        WITH VWBDG_BUDGET_BUKIP_CODE AS (
            SELECT a1.BUKIP_CODE
                 , a2.BUKIP_NM
                 , a1.BUDGET_ACNT_CODE
                 , a1.YEAR
                 , a1.REGISTER_ID
                 , a1.REGIST_DT
                 , a1.UPDUSR_ID
                 , a1.UPDT_DT
            FROM   TBBDG_BUDGET_BUKIP_MAPPING a1
                   INNER JOIN TBBDG_BUKIP_CODE a2
                         ON a1.BUKIP_CODE = a2.BUKIP_CODE
            WHERE  1=1
            AND    YEAR      = #YEAR#
        ), LV5_BUDGET AS (
            SELECT lv5.YEAR, lv5.BSNS_SE, lv5.BALC_SE, lv5.BUDGET_ACNT_CODE, lv5.BUDGET_ACNT_NM, lv5.ACNT_LEVEL, lv5.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv5
            WHERE  lv5.ACNT_LEVEL = '5'
            AND    EXISTS(
                SELECT *
                FROM   VWBDG_BUDGET_BUKIP_CODE
                WHERE  YEAR             = lv5.YEAR
                AND    BUDGET_ACNT_CODE = lv5.BUDGET_ACNT_CODE
            )
        ), LV4_BUDGET AS (
            SELECT lv4.YEAR, lv4.BSNS_SE, lv4.BALC_SE, lv4.BUDGET_ACNT_CODE, lv4.BUDGET_ACNT_NM, lv4.ACNT_LEVEL, lv4.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv4
            WHERE  lv4.ACNT_LEVEL IN ('4', '7')
            AND    (
                    lv4.BUDGET_ACNT_CODE IN (
                                             SELECT lv5.UPPER_ACNT_CODE
                                             FROM   LV5_BUDGET lv5
                                             WHERE  lv5.ACNT_LEVEL = '5'
                                             AND    lv5.YEAR       = lv4.YEAR
                                             AND    lv5.BSNS_SE    = lv4.BSNS_SE
                                             AND    lv5.BALC_SE    = lv4.BALC_SE
                                            )
                    OR
                    EXISTS (
                            SELECT *
                            FROM   VWBDG_BUDGET_BUKIP_CODE
                            WHERE  YEAR             = lv4.YEAR
                            AND    BSNS_SE          = lv4.BSNS_SE
                            AND    BALC_SE          = lv4.BALC_SE
                            AND    BUDGET_ACNT_CODE = lv4.BUDGET_ACNT_CODE
                           )
            )
        ), LV3_BUDGET AS (
            SELECT lv3.YEAR, lv3.BSNS_SE, lv3.BALC_SE, lv3.BUDGET_ACNT_CODE, lv3.BUDGET_ACNT_NM, lv3.ACNT_LEVEL, lv3.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv3
            WHERE  lv3.ACNT_LEVEL = '3'
            AND    lv3.BUDGET_ACNT_CODE IN (
                                            SELECT lv4.UPPER_ACNT_CODE
                                            FROM   LV4_BUDGET lv4
                                            WHERE  lv4.ACNT_LEVEL IN ('4', '7')
                                            AND    lv4.YEAR       = lv3.YEAR
                                            AND    lv4.BSNS_SE    = lv3.BSNS_SE
                                            AND    lv4.BALC_SE    = lv3.BALC_SE
                                           )
        ), LV2_BUDGET AS (
            SELECT lv2.YEAR, lv2.BSNS_SE, lv2.BALC_SE, lv2.BUDGET_ACNT_CODE, lv2.BUDGET_ACNT_NM, lv2.ACNT_LEVEL, lv2.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv2
            WHERE  lv2.ACNT_LEVEL = '2'
            AND    lv2.BUDGET_ACNT_CODE IN (
                                            SELECT lv3.UPPER_ACNT_CODE
                                            FROM   LV3_BUDGET lv3
                                            WHERE  lv3.ACNT_LEVEL = '3'
                                            AND    lv3.YEAR       = lv2.YEAR
                                            AND    lv3.BSNS_SE    = lv2.BSNS_SE
                                            AND    lv3.BALC_SE    = lv2.BALC_SE
                                           )
        ), LV1_BUDGET AS (
            SELECT lv1.YEAR, lv1.BSNS_SE, lv1.BALC_SE, lv1.BUDGET_ACNT_CODE, lv1.BUDGET_ACNT_NM, lv1.ACNT_LEVEL, lv1.UPPER_ACNT_CODE
            FROM   TBBDG_BUDGET_ACNT_CODE lv1
            WHERE  lv1.ACNT_LEVEL = '1'
            AND    lv1.BUDGET_ACNT_CODE IN (
                                            SELECT lv2.UPPER_ACNT_CODE
                                            FROM   LV2_BUDGET lv2
                                            WHERE  lv2.ACNT_LEVEL = '2'
                                            AND    lv2.YEAR       = lv1.YEAR
                                            AND    lv2.BSNS_SE    = lv1.BSNS_SE
                                            AND    lv2.BALC_SE    = lv1.BALC_SE
                                           )
        ), VWBDG_BUDGET_ACNT_CODE AS (
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV1_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV2_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV3_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV4_BUDGET
            UNION ALL
            SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
            FROM   LV5_BUDGET
        )
        SELECT s1.YEAR                                                                                                                                        AS YEAR
              ,s1.BSNS_SE                                                                                                                                     AS BSNS_SE
              ,s1.BALC_SE                                                                                                                                     AS BALC_SE
              ,s1.BUDGET_ACNT_CODE                                                                                                                            AS BUDGET_ACNT_CODE
              ,s1.BUDGET_ACNT_NM                                                                                                                              AS BUDGET_ACNT_NM
              ,s1.BUDGET_ACNT_NM2                                                                                                                             AS BUDGET_ACNT_NM2
              ,s1.ACNT_LEVEL                                                                                                                                  AS ACNT_LEVEL
              ,s1.UPPER_ACNT_CODE                                                                                                                             AS UPPER_ACNT_CODE
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1)        AS GWAN
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1)        AS HANG
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1)        AS SEHANG
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1)        AS MOK
              ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1)        AS SEMOK
              ,SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)-1)    AS MOK2
              ,SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)-1)    AS SEMOK2
              ,s1.BUKIP_CODE
              ,s1.BUKIP_NM
              ,DECODE(s1.BUKIP_CODE,NULL,'',BUKIP_CODE||'.'||s1.BUKIP_NM)                                                                                     AS BUKIP_NM2
        FROM   (
                SELECT ROWNUM AS RNUM
                      ,YEAR
                      ,BSNS_SE
                      ,BALC_SE
                      ,BUDGET_ACNT_CODE
                      ,BUDGET_ACNT_NM
                      ,BUDGET_ACNT_NM2
                      ,ACNT_LEVEL
                      ,UPPER_ACNT_CODE
                      ,SYS_CONNECT_BY_PATH(BUDGET_ACNT_NM2,'|')||'|' AS ACNT_NM_PATH
                      ,SYS_CONNECT_BY_PATH(BUDGET_ACNT_NM,'|')||'|'  AS ACNT_NM_PATH2
                      ,BUKIP_CODE
                      ,BUKIP_NM
                FROM   (
                        SELECT a1.YEAR
                              ,a1.BSNS_SE
                              ,a1.BALC_SE
                              ,a1.BUDGET_ACNT_CODE
                              ,a1.BUDGET_ACNT_NM
                              ,(CASE WHEN a1.ACNT_LEVEL &lt; '4' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
                                     WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
                                     ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4) END)||'.'||a1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM2
                              ,DECODE(a1.ACNT_LEVEL,'7', '4',a1.ACNT_LEVEL)                                     AS ACNT_LEVEL
                              ,a1.UPPER_ACNT_CODE
                              ,a2.BUKIP_CODE
                              ,a2.BUKIP_NM
                        FROM   VWBDG_BUDGET_ACNT_CODE a1
                               LEFT OUTER JOIN VWBDG_BUDGET_BUKIP_CODE a2
                                    ON a1.YEAR = a2.YEAR
                                   AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
                        WHERE  1=1
                        <isNotEmpty property="BSNS_SE" prepend="AND    ">a1.BSNS_SE          = #BSNS_SE#</isNotEmpty>
                        <isNotEmpty property="BALC_SE" prepend="AND    ">a1.BALC_SE          = #BALC_SE#</isNotEmpty>
                       )
                START WITH UPPER_ACNT_CODE IS NULL
                CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE
                ORDER SIBLINGS BY YEAR
                                 ,BUDGET_ACNT_CODE
                                 ,BUKIP_CODE
               ) s1
        WHERE  1=1
        <isNotEmpty property="BUDGET_ACNT_CODE"  prepend="AND    ">s1.BUDGET_ACNT_CODE LIKE SUBSTR(#BUDGET_ACNT_CODE#, 1, 6) || '%'</isNotEmpty>
        <isNotEmpty property="BUKIP_CODE"        prepend="AND    ">s1.BUKIP_CODE       = #BUKIP_CODE#</isNotEmpty>
        ORDER BY s1.RNUM
    </select>


    <!-- (POPUP02) 조정의견목록 -->
    <select id="BDG030101DAO.selectDemandOpinion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.selectDemandOpinion*/]]>
        SELECT T1.NO
             , T1.LWPRT_NO
             , DECODE(T1.LWPRT_NO, 0, 1, 2)                                                       AS TREE_LVL
             , (SELECT COUNT(1) FROM TBBDG_DEMAND_OPINION WHERE YEAR = T1.YEAR AND NO = T1.NO)    AS CNT_LWPRT_NO
             , T1.YEAR
             , T1.BUDGET_SE
             , T1.BUDGET_ACNT_CODE
             , T3.BUDGET_ACNT_NM
             , T1.BUKIP_CODE
             , T5.BUKIP_NM
             , T1.DEPT_CODE
             , T6.DEPT_NM
             , T1.CN
             , NVL(T7.DEPT_NM, '알수없음')                                                        AS UPDUSR_DEPT_NM
             , T1.UPDUSR_ID
             , NVL(T2.EMPNM, '알수없음')                                                          AS UPDUSR_NM
             , TO_CHAR(T1.UPDT_DT, 'YYYY-MM-DD')                                                  AS UPDT_DT
          FROM TBBDG_DEMAND_OPINION T1
               LEFT OUTER JOIN TBHRM_HR_MASTR T2
                    ON T1.UPDUSR_ID = T2.EMPNO
               LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE T3
                    ON T1.BUDGET_ACNT_CODE = T3.BUDGET_ACNT_CODE
                   AND T1.YEAR = T3.YEAR
               LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING T4
                    ON T1.YEAR = T4.YEAR
                   AND T1.BUDGET_ACNT_CODE = T4.BUDGET_ACNT_CODE
                   AND T1.BUKIP_CODE = T4.BUKIP_CODE
               LEFT OUTER JOIN TBBDG_BUKIP_CODE T5
                    ON T1.BUKIP_CODE = T5.BUKIP_CODE
               LEFT OUTER JOIN VWHRM_DEPT T6
                    ON T1.DEPT_CODE = T6.DEPT_CODE
               LEFT OUTER JOIN VWHRM_DEPT T7
                    ON T2.DEPT_CODE = T7.DEPT_CODE
         WHERE 1=1
        <isNotEmpty property="YEAR"  prepend="   AND ">T1.YEAR = #YEAR#</isNotEmpty>
        <isNotEmpty property="BUDGET_SE" prepend="   AND ">T1.BUDGET_SE = #BUDGET_SE#</isNotEmpty>
        <isNotEmpty property="DEPT_CODE">
            <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
                (T1.DEPT_CODE='000000' OR T1.DEPT_CODE = #DEPT_CODE#)
            </isNotEqual>
        </isNotEmpty>
        <isEqual property="SEARCH_CND" compareValue="0">
            <isNotEmpty property="SEARCH_PARAMTR" prepend="   AND ">
                   T3.BUDGET_ACNT_NM LIKE '%' || #SEARCH_PARAMTR# || '%'
                OR T5.BUKIP_NM LIKE '%' || #SEARCH_PARAMTR# || '%'
                OR T2.EMPNM LIKE '%' || #SEARCH_PARAMTR# || '%'
            </isNotEmpty>
        </isEqual>
        <isEqual property="SEARCH_CND" compareValue="1">
            <isNotEmpty property="SEARCH_PARAMTR" prepend="   AND ">T3.BUDGET_ACNT_NM LIKE '%' || #SEARCH_PARAMTR# || '%'</isNotEmpty>
        </isEqual>
        <isEqual property="SEARCH_CND" compareValue="2">
            <isNotEmpty property="SEARCH_PARAMTR" prepend="   AND ">T5.BUKIP_NM LIKE '%' || #SEARCH_PARAMTR# || '%'</isNotEmpty>
        </isEqual>
        <isEqual property="SEARCH_CND" compareValue="3">
            <isNotEmpty property="SEARCH_PARAMTR" prepend="   AND ">T2.EMPNM LIKE '%' || #SEARCH_PARAMTR# || '%'</isNotEmpty>
        </isEqual>
      ORDER BY T1.NO DESC, T1.LWPRT_NO ASC
    </select>


    <!-- 조정의견 추가 -->
    <insert id="BDG030101DAO.insertDemandOpinion" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.insertDemandOpinion*/]]>
        INSERT INTO TBBDG_DEMAND_OPINION(
               NO
             , LWPRT_NO
             , YEAR
             , BUDGET_SE
             , BUDGET_ACNT_CODE
             , BUKIP_CODE
             , DEPT_CODE
             , CN
             , REGISTER_ID
             , REGIST_DT
             , UPDUSR_ID
             , UPDT_DT
        )
        VALUES (
             <isEqual property="TREE_LVL" compareValue="1">
               (SELECT NVL(MAX(NO), 0) + 1 FROM TBBDG_DEMAND_OPINION WHERE YEAR = #YEAR#)
             , '0'
             </isEqual>
             <isEqual property="TREE_LVL" compareValue="2">
               #NO#
             , (SELECT NVL(MAX(LWPRT_NO)+1, 0) FROM TBBDG_DEMAND_OPINION WHERE YEAR = #YEAR# AND NO = #NO#)
             </isEqual>
             , #YEAR#
             , #BUDGET_SE#
             , #BUDGET_ACNT_CODE#
             , #BUKIP_CODE#
             , #DEPT_CODE#
             , #CN#
             , #S_USER_ID#
             , SYSDATE
             , #S_USER_ID#
             , SYSDATE
        )
    </insert>


    <!-- 조정의견 수정 -->
    <update id="BDG030101DAO.updateDemandOpinion" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.updateDemandOpinion*/]]>
        UPDATE TBBDG_DEMAND_OPINION
           SET CN        = #CN#
             , UPDUSR_ID = #S_USER_ID#
             , UPDT_DT   = SYSDATE
         WHERE NO       = #NO#
           AND LWPRT_NO = #LWPRT_NO#
    </update>


    <!-- 조정의견 삭제 -->
    <delete id="BDG030101DAO.deleteDemandOpinion" parameterClass="java.util.HashMap">
    <![CDATA[/*BDG030101DAO.deleteDemandOpinion*/]]>
        DELETE
          FROM TBBDG_DEMAND_OPINION
         WHERE NO       = #NO#
           AND LWPRT_NO = #LWPRT_NO#
    </delete>


</sqlMap>