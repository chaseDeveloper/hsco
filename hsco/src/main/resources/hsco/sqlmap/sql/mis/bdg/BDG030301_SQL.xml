<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG030301_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 입력가능여부 조회 -->
	<select id="BDG030301DAO.selectInpYn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectInpYn*/]]>
		SELECT CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END AS INP_YN
		FROM   TBBDG_BUDGET_FRMTN_PD t1
		       LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.SN = t2.SN
		WHERE  t1.USE_AT = '1'
		AND    t1.REQST_SE = '2'
		AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN t1.BGNDE AND t1.ENDDE
		AND    t1.YEAR = #YEAR#
		AND    t1.BUDGET_SE = #BUDGET_SE#
		<isNotEmpty property="DEPT_CODE">
			<isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
				(t2.DEPT_CODE = '000000' OR t2.DEPT_CODE = #DEPT_CODE#)
			</isNotEqual>
		</isNotEmpty>
	</select>


	<!-- 세목코드 조회 -->
	<select id="BDG030301DAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectAcntCode*/]]>
		WITH BUDGET_ACNT_TREE AS (
		    SELECT ROWNUM AS RNUM
		          ,t1.YEAR
		          ,t1.BSNS_SE
		          ,t1.BALC_SE
		          ,t1.BUDGET_ACNT_CODE
		          ,t1.BUDGET_ACNT_NM
		          ,t1.BUDGET_ACNT_NM2
		          ,t1.ACNT_LEVEL
		          ,t1.UPPER_ACNT_CODE
		          ,SYS_CONNECT_BY_PATH(t1.BUDGET_ACNT_NM2,'|')||'|'    AS ACNT_NM_PATH
		          ,t2.BUDGET_AM                             AS DEMAND_BUDGET_AM
		          ,DECODE( #BUDGET_SE# ,'0' , NVL(t3.BUDGET_0_AM,0),'1' , NVL(t3.BUDGET_1_AM,0),'2' , NVL(t3.BUDGET_2_AM,0),'3' , NVL(t3.BUDGET_3_AM,0),'0' )  AS FRMTN_BUDGET_AM
		          ,t3.BUDGET_0_AM
                  ,t3.BUDGET_1_AM
                  ,t3.BUDGET_2_AM
                  ,t3.BUDGET_3_AM
                  ,t4.BUDGET_AM AS PRV_FRMTN_AM
                  ,EXECUT_CONFIRM_AT
            FROM   (
		            SELECT a1.YEAR
		                  ,a1.BSNS_SE
		                  ,a1.BALC_SE
		                  ,a1.BUDGET_ACNT_CODE
		                  ,a1.BUDGET_ACNT_NM
		                  ,(CASE WHEN a1.ACNT_LEVEL &lt; '4' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                         WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                         ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| a1.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM2
		                  ,DECODE(a1.ACNT_LEVEL,'7', '4',a1.ACNT_LEVEL)                                     AS ACNT_LEVEL
		                  ,a1.UPPER_ACNT_CODE
		                  
		            FROM   TBBDG_BUDGET_ACNT_CODE a1
		            WHERE  a1.YEAR    = #YEAR#
		            <isNotEmpty property="BSNS_SE"          prepend="AND    ">a1.BSNS_SE = #BSNS_SE#</isNotEmpty>
		            <isNotEmpty property="BALC_SE"          prepend="AND    ">a1.BALC_SE = #BALC_SE#</isNotEmpty>
		            <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">a1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
		           ) t1
		           LEFT OUTER JOIN (
		                            SELECT YEAR
		                                  ,BSNS_SE
		                                  ,BALC_SE
		                                  ,BUDGET_ACNT_CODE
		                                  ,SUM(DEMAND_BUDGET_DCSN_AM)       AS BUDGET_AM
		                            FROM   TBBDG_DEMAND_BUDGET
		                            WHERE  1=1
		                            AND   BUDGET_SE = #BUDGET_SE#
		           <isNotEmpty property="DETAIL_BSNS_CODE"          prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
		           <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                            GROUP BY YEAR
		                                    ,BSNS_SE
		                                    ,BALC_SE
		                                    ,BUDGET_ACNT_CODE
		                           ) t2
		                ON t1.YEAR = t2.YEAR
		               AND t1.BSNS_SE = t2.BSNS_SE
		               AND t1.BALC_SE = t2.BALC_SE
		               AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		           LEFT OUTER JOIN (
		                            SELECT YEAR
		                                  ,BSNS_SE
		                                  ,BALC_SE
		                                  ,BUDGET_ACNT_CODE
		                                  ,SUM(DECODE(BUDGET_SE, (SELECT MAX(BUDGET_SE) 
		                                  							FROM TBBDG_FRMTN_BUDGET 
		                                  						   WHERE YEAR    = #YEAR#
                                                                     AND BSNS_SE = #BSNS_SE#
                                                                     AND BALC_SE = #BALC_SE# ) ,BUDGET_AM,0)) AS BUDGET_AM		                               
                                          ,SUM(DECODE(BUDGET_SE,'0', BUDGET_AM, 0)) AS BUDGET_0_AM
                                          ,SUM(DECODE(BUDGET_SE,'1', BUDGET_AM, 0)) AS BUDGET_1_AM 
                                          ,SUM(DECODE(BUDGET_SE,'2', BUDGET_AM, 0)) AS BUDGET_2_AM 
                                          ,SUM(DECODE(BUDGET_SE,'3', BUDGET_AM, 0)) AS BUDGET_3_AM
                                          , (SELECT DISTINCT NVL(EXECUT_CONFIRM_AT,0) FROM TBBDG_FRMTN_BUDGET 
                                             WHERE   YEAR    = #YEAR#
                                             AND     BSNS_SE = #BSNS_SE#
                                             AND     BALC_SE = #BALC_SE#
                                             AND BUDGET_SE = #BUDGET_SE#) AS EXECUT_CONFIRM_AT
		                            FROM   TBBDG_FRMTN_BUDGET
		                            WHERE  1=1
		              <isNotEmpty property="DETAIL_BSNS_CODE"          prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
		              <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                            GROUP BY YEAR
		                                    ,BSNS_SE
		                                    ,BALC_SE
		                                    ,BUDGET_ACNT_CODE
		                              
		                           ) t3
		                ON t1.YEAR = t3.YEAR
		               AND t1.BSNS_SE = t3.BSNS_SE
		               AND t1.BALC_SE = t3.BALC_SE
		               AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		           LEFT OUTER JOIN
                                     ( SELECT  YEAR ,
                                              BSNS_SE ,
                                              BALC_SE ,
                                              BUDGET_ACNT_CODE ,
                                              SUM(DECODE(BUDGET_SE,
                                              (SELECT MAX(BUDGET_SE)
                                              FROM    TBBDG_FRMTN_BUDGET
                                              WHERE   YEAR    = #YEAR# -1
                                              AND     BSNS_SE = #BSNS_SE#
                                              AND     BALC_SE = #BALC_SE#
                                              )
                                              ,BUDGET_AM,0))                           AS BUDGET_AM
                                             
                                     FROM     TBBDG_FRMTN_BUDGET
                                     WHERE    1=1
                                     GROUP BY YEAR ,
                                              BSNS_SE ,
                                              BALC_SE ,
                                              BUDGET_ACNT_CODE
                                     )
                                     t4
                   ON                t1.YEAR -1           = t4.YEAR
                   AND               t1.BSNS_SE          = t4.BSNS_SE
                   AND               t1.BALC_SE          = t4.BALC_SE
                   AND               t1.BUDGET_ACNT_CODE = t4.BUDGET_ACNT_CODE
                   
		    START WITH t1.UPPER_ACNT_CODE IS NULL
		    CONNECT BY PRIOR t1.BUDGET_ACNT_CODE = t1.UPPER_ACNT_CODE
		    ORDER SIBLINGS BY t1.YEAR
		                     ,t1.BSNS_SE
		                     ,t1.BALC_SE
		                     ,t1.BUDGET_ACNT_CODE
		)
		SELECT s1.YEAR                              AS YEAR
		      ,s1.BSNS_SE                           AS BSNS_SE
		      ,s1.BALC_SE                           AS BALC_SE
		      ,#BUDGET_SE#							AS BUDGET_SE
		      ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
		      ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
		      ,s1.BUDGET_ACNT_NM2                   AS BUDGET_ACNT_NM2
		      ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
		      ,(SELECT SUM(NVL(PRV_FRMTN_AM,0))
		        FROM   BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   )                    AS PRV_FRMTN_AM
		      ,(SELECT SUM(NVL(DEMAND_BUDGET_AM,0))
		        FROM   BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   )                    AS DEMAND_BUDGET_AM
		      ,(SELECT SUM(NVL(FRMTN_BUDGET_AM,0))
		        FROM   BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   )                    AS FRMTN_BUDGET_AM
		      ,(SELECT SUM(NVL(BUDGET_0_AM,0))
		        FROM   BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   ) 				   AS BUDGET_0_AM
		      ,(SELECT SUM(NVL(BUDGET_1_AM,0))
		        FROM    BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   )  				   AS BUDGET_1_AM
		      ,(SELECT SUM(NVL(BUDGET_2_AM,0))
		        FROM    BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   )					   AS BUDGET_2_AM
		      ,(SELECT SUM(NVL(BUDGET_3_AM,0))
		        FROM    BUDGET_ACNT_TREE
		        START WITH BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE   ) 		   		   AS BUDGET_3_AM
		      ,NVL(EXECUT_CONFIRM_AT,0) AS EXECUT_CONFIRM_AT
		FROM   BUDGET_ACNT_TREE s1
		WHERE  1=1
		ORDER BY s1.RNUM
	</select>




	<!-- 요구예산 조회 -->
	<select id="BDG030301DAO.selectDemandBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectDemandBudget*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t3.BSNS_CODE          AS DETAIL_BSNS_NM
		      ,t1.BALC_SE
		      ,t1.BUDGET_SE
		      ,t1.DEPT_CODE
		      ,t6.DEPT_NM
		      ,t1.BUDGET_ACNT_CODE
		      ,t4.BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t1.EXPNDTR_UNIT_NM
		      ,t1.COMPUT_BSIS_DTLS
		      ,t1.ELPD_EXCUT_AT
		      ,t1.BUDGET_AM
		FROM   TBBDG_DEMAND_BUDGET T1
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t4
		            ON t1.YEAR = t4.YEAR
		           AND t1.BSNS_SE = t4.BSNS_SE
		           AND t1.BALC_SE = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t6
		            ON t1.DEPT_CODE = t6.DEPT_CODE
		WHERE  t1.YEAR = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.BALC_SE = #BALC_SE#
		AND    t1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">t1.DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="BUDGET_SE" prepend="AND    ">t1.BUDGET_SE = #BUDGET_SE#</isNotEmpty>
		
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.BALC_SE
		        ,t1.BUDGET_SE
		        ,t1.DEPT_CODE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
	</select>


	<!-- 요구예산 산출기초 조회 -->
	<select id="BDG030301DAO.selectDemandComputBsis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectDemandComputBsis*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t1.BUDGET_SE
		      ,t1.BUDGET_ACNT_CODE
		      ,t1.DEPT_CODE
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t1.COMPUT_BSIS_CODE
		      ,t1.COMPUT_BSIS_NM
		      ,t1.COMPUT_BSIS_DTLS
		      ,t1.COMPUT_BSIS_REFRN
		      ,t1.BUDGET_AM
		FROM   TBBDG_DEMAND_COMPUT_BSIS t1
		WHERE  t1.YEAR = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#
		AND    t1.BALC_SE = #BALC_SE#
		AND    t1.BUDGET_SE = #BUDGET_SE#
		AND    t1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		AND    t1.EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.BUDGET_SE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.DEPT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
		        ,t1.COMPUT_BSIS_CODE
	</select>


	<!-- 편성예산 조회 -->
	<select id="BDG030301DAO.selectFrmtnBudget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectFrmtnBudget*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t3.BSNS_NM          AS DETAIL_BSNS_NM
		      ,t1.BALC_SE
		      ,#BUDGET_SE#		   AS BUDGET_SE
		      ,t1.DEPT_CODE
		      ,t6.DEPT_NM
		      ,t1.BUDGET_ACNT_CODE
		      ,t4.BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t9.EXPNDTR_UNIT_NM
		      ,(SELECT COMPUT_BSIS_DTLS FROM TBBDG_FRMTN_BUDGET 
	         	 WHERE YEAR = t1.YEAR 
		           AND BSNS_SE = t1.BSNS_SE 
		           AND BALC_SE = t1.BALC_SE
		           AND DETAIL_BSNS_CODE = t1.DETAIL_BSNS_CODE
		           AND DEPT_CODE = t1.DEPT_CODE
		           AND BUDGET_ACNT_CODE = t1.BUDGET_ACNT_CODE
		           AND EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
		           AND BUDGET_SE = #BUDGET_SE#
	          ) AS COMPUT_BSIS_DTLS
		      ,t1.ELPD_EXCUT_AT
		      ,SUM(t1.BUDGET_AM) AS BUDGET_AM
		      ,t1.SE_ACCNUT_ACNT_CODE
		      ,t7.SE_ACCNUT_ACNT_NM
		      ,t1.EXPNDTR_POSBL_AT
		      ,t8.BUDGET_0_AM
		      ,t8.BUDGET_1_AM
		      ,t8.BUDGET_2_AM
		      ,t8.BUDGET_3_AM
		      ,DECODE(#BUDGET_SE#,'0',0
         	         			 ,'1',t8.BUDGET_1_AM - t8.BUDGET_0_AM 
                   				 ,'2',t8.BUDGET_2_AM - t8.BUDGET_1_AM
                   				 ,'3',t8.BUDGET_3_AM - t8.BUDGET_2_AM                             ) AS MIN_AM
		      ,(SELECT DECODE(COUNT(*),0,'N','Y')
	              FROM TBBDG_FRMTN_COMPUT_BSIS
	             WHERE YEAR              = t1.YEAR
	               AND BSNS_SE           = t1.BSNS_SE
	               AND BALC_SE           = t1.BALC_SE
	               AND DETAIL_BSNS_CODE  = t1.DETAIL_BSNS_CODE
	               AND DEPT_CODE         = t1.DEPT_CODE
	               AND BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
	               AND EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
	               AND BUDGET_SE = #BUDGET_SE#
	          ) AS BSIS_CHK
		FROM   TBBDG_FRMTN_BUDGET t1
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t4
		            ON t1.YEAR = t4.YEAR
		           AND t1.BSNS_SE = t4.BSNS_SE
		           AND t1.BALC_SE = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t4.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t6
		            ON t1.DEPT_CODE = t6.DEPT_CODE
		       LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_CODE t7
		            ON t1.YEAR = t7.ACCNUT_YEAR
		           AND t1.SE_ACCNUT_ACNT_CODE = t7.SE_ACCNUT_ACNT_CODE
		       LEFT OUTER JOIN (
		                        SELECT YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,SUM(DECODE(BUDGET_SE,'0',BUDGET_AM,0)) AS BUDGET_0_AM
		                              ,SUM(DECODE(BUDGET_SE,'1',BUDGET_AM,0)) AS BUDGET_1_AM
		                              ,SUM(DECODE(BUDGET_SE,'2',BUDGET_AM,0)) AS BUDGET_2_AM
		                              ,SUM(DECODE(BUDGET_SE,'3',BUDGET_AM,0)) AS BUDGET_3_AM
		                        FROM   TBBDG_FRMTN_BUDGET
		                        GROUP BY YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                       ) t8
		            ON t1.YEAR = t8.YEAR
		           AND t1.BSNS_SE = t8.BSNS_SE
		           AND t1.BALC_SE = t8.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t8.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t8.EXPNDTR_UNIT_CODE
		      LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE t9
		  		    ON t1.YEAR              = t9.YEAR
		           AND t1.BSNS_SE           = t9.BSNS_SE
		           AND t1.BALC_SE           = t9.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t9.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t9.EXPNDTR_UNIT_CODE	
		WHERE  t1.YEAR = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.BALC_SE = #BALC_SE#
		AND    t1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">t1.DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">t1.DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
		GROUP BY
				 t1.YEAR 
				 , t1.BSNS_SE 
				 , t1.DETAIL_BSNS_CODE 
				 , t3.BSNS_NM  
				 , t1.BALC_SE 
				 , t1.DEPT_CODE 
				 , t6.DEPT_NM 
				 , t1.BUDGET_ACNT_CODE 
				 , t4.BUDGET_ACNT_NM 
				 , t1.EXPNDTR_UNIT_CODE 
				 , t9.EXPNDTR_UNIT_NM 
				 , t1.ELPD_EXCUT_AT 
				 , t1.SE_ACCNUT_ACNT_CODE 
				 , t7.SE_ACCNUT_ACNT_NM 
				 , t1.EXPNDTR_POSBL_AT 
				 , t8.BUDGET_0_AM 
				 , t8.BUDGET_1_AM 
				 , t8.BUDGET_2_AM 
				 , t8.BUDGET_3_AM 
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.BALC_SE
		        ,t1.DEPT_CODE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
	</select>


	<!-- 편성예산 산출기초 조회 -->
	<select id="BDG030301DAO.selectFrmtnComputBsis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectFrmtnComputBsis*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t1.BUDGET_SE
		      ,t1.BUDGET_ACNT_CODE
		      ,t1.DEPT_CODE
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t1.COMPUT_BSIS_CODE
		      ,t1.COMPUT_BSIS_NM
		      ,t1.COMPUT_BSIS_DTLS
		      ,B.COMPUT_BSIS_DTLS AS PRV_COMPUT_BSIS_DTLS
		      ,t1.COMPUT_BSIS_REFRN
		      ,t1.BUDGET_AM
		      ,NVL(B.BUDGET_AM,0) AS FRMTN_BUDGET_AM
         	  ,t1.BUDGET_AM - NVL(B.BUDGET_AM,0) AS MIN_AM
		FROM   TBBDG_FRMTN_COMPUT_BSIS t1
<isNotEqual property="BUDGET_SE" compareValue="0">
		LEFT OUTER JOIN  TBBDG_FRMTN_COMPUT_BSIS B
</isNotEqual>
<isEqual property="BUDGET_SE" compareValue="0">
		LEFT OUTER JOIN  TBBDG_DEMAND_COMPUT_BSIS B
</isEqual>
		
		ON	  t1.YEAR = B.YEAR
		AND	  t1.BSNS_SE = B.BSNS_SE
		AND	  t1.DETAIL_BSNS_CODE = B.DETAIL_BSNS_CODE
		AND	  t1.DEPT_CODE = B.DEPT_CODE
		AND	  t1.BUDGET_ACNT_CODE = B.BUDGET_ACNT_CODE
		AND	  t1.EXPNDTR_UNIT_CODE = B.EXPNDTR_UNIT_CODE
		AND	  t1.BALC_SE = B.BALC_SE
<isNotEqual property="BUDGET_SE" compareValue="0">
		AND   t1.BUDGET_SE -1 = B.BUDGET_SE
</isNotEqual>
<isEqual property="BUDGET_SE" compareValue="0">
		AND   t1.BUDGET_SE    = B.BUDGET_SE
</isEqual>
		AND   t1.COMPUT_BSIS_CODE = B.COMPUT_BSIS_CODE
		WHERE t1.YEAR = #YEAR#
		AND   t1.BSNS_SE = #BSNS_SE#
		AND   t1.DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#
		AND   t1.BALC_SE = #BALC_SE#
		AND   t1.BUDGET_SE = #BUDGET_SE#
		AND   t1.BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		AND   t1.EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.BUDGET_SE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.DEPT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
		        ,t1.COMPUT_BSIS_CODE
	</select>



	<!-- 편성예산 추가 -->
	<insert id="BDG030301DAO.insertFrmtnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.insertFrmtnBudget*/]]>
		INSERT INTO TBBDG_FRMTN_BUDGET (
		     YEAR
		    ,BSNS_SE
		    ,DETAIL_BSNS_CODE
		    ,BALC_SE
		    ,BUDGET_SE
		    ,DEPT_CODE
		    ,BUDGET_ACNT_CODE
		    ,EXPNDTR_UNIT_CODE
		    ,SE_ACCNUT_ACNT_CODE
		    ,EXPNDTR_UNIT_NM
		    ,COMPUT_BSIS_DTLS
		    ,ELPD_EXCUT_AT
		    ,BUDGET_AM
		    ,EXPNDTR_POSBL_AT
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		    ,RVSPBGT_YM
		)
		VALUES (
		     #YEAR#
		    ,#BSNS_SE#
		    ,#DETAIL_BSNS_CODE#
		    ,#BALC_SE#
		    ,#BUDGET_SE#
		    ,#DEPT_CODE#
		    ,#BUDGET_ACNT_CODE#
		    ,#EXPNDTR_UNIT_CODE#
		    ,#SE_ACCNUT_ACNT_CODE#
		    ,#EXPNDTR_UNIT_NM#
		    ,#COMPUT_BSIS_DTLS#
		    ,#ELPD_EXCUT_AT#
	    <isEqual property="BUDGET_SE" compareValue="0">
	      	,#BUDGET_0_AM#
	    </isEqual>
	    <isEqual property="BUDGET_SE" compareValue="1">
	      	,#BUDGET_1_AM#
	    </isEqual>
	    <isEqual property="BUDGET_SE" compareValue="2">
	      	,#BUDGET_2_AM#
	    </isEqual>
	    <isEqual property="BUDGET_SE" compareValue="3">
	      	,#BUDGET_3_AM#
	    </isEqual>
		    ,#EXPNDTR_POSBL_AT#
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#RVSPBGT_YM#
		)
	</insert>


	<!-- 편성예산 수정 -->
	<update id="BDG030301DAO.updateFrmtnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.updateFrmtnBudget*/]]>
		UPDATE TBBDG_FRMTN_BUDGET
		SET    YEAR                = #YEAR#
		      ,BSNS_SE             = #BSNS_SE#
		      ,DETAIL_BSNS_CODE    = #DETAIL_BSNS_CODE#
		      ,BALC_SE             = #BALC_SE#
		      ,BUDGET_SE           = #BUDGET_SE#
		      ,DEPT_CODE           = #DEPT_CODE#
		      ,BUDGET_ACNT_CODE    = #BUDGET_ACNT_CODE#
		      ,EXPNDTR_UNIT_CODE   = #EXPNDTR_UNIT_CODE#
		      ,SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		      ,EXPNDTR_UNIT_NM     = #EXPNDTR_UNIT_NM#
		      ,COMPUT_BSIS_DTLS    = #COMPUT_BSIS_DTLS#
		      ,ELPD_EXCUT_AT       = #ELPD_EXCUT_AT#
		      ,BUDGET_AM           = 
		  <isEqual property="BUDGET_SE" compareValue="0">
	      		#BUDGET_0_AM#
	      </isEqual>
	      <isEqual property="BUDGET_SE" compareValue="1">
	      		#BUDGET_1_AM#
	      </isEqual>
	      <isEqual property="BUDGET_SE" compareValue="2">
	      		#BUDGET_2_AM#
	      </isEqual>
	      <isEqual property="BUDGET_SE" compareValue="3">
	      		#BUDGET_3_AM#
	      </isEqual>
		      ,EXPNDTR_POSBL_AT    = #EXPNDTR_POSBL_AT#
		      ,UPDUSR_ID           = #S_USER_ID#
		      ,UPDT_DT             = SYSDATE
		      ,RVSPBGT_YM		   = #RVSPBGT_YM#
		WHERE  YEAR                = #YEAR#
		AND    BSNS_SE             = #BSNS_SE#
		AND    DETAIL_BSNS_CODE    = #DETAIL_BSNS_CODE#
		AND    BALC_SE             = #BALC_SE#
		AND    BUDGET_SE           = #BUDGET_SE#
		AND    DEPT_CODE           = #DEPT_CODE#
		AND    BUDGET_ACNT_CODE    = #BUDGET_ACNT_CODE#
		AND    EXPNDTR_UNIT_CODE   = #EXPNDTR_UNIT_CODE#
	</update>


	<!-- 편성예산 삭제 -->
	<delete id="BDG030301DAO.deleteFrmtnBudget" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.deleteFrmtnBudget*/]]>
		DELETE
		FROM   TBBDG_FRMTN_BUDGET
		WHERE  YEAR              = #YEAR#
		AND    BSNS_SE           = #BSNS_SE#
		AND    DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		AND    BALC_SE           = #BALC_SE#
		AND    BUDGET_SE         = #BUDGET_SE#
		AND    DEPT_CODE         = #DEPT_CODE#
		AND    BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		AND    EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
	</delete>


	<!-- 편성예산 산출기초 추가 -->
	<insert id="BDG030301DAO.insertFrmtnComputBsis" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.insertFrmtnComputBsis*/]]>
		INSERT INTO TBBDG_FRMTN_COMPUT_BSIS (
		     YEAR
		    ,BSNS_SE
		    ,BALC_SE
		    ,DETAIL_BSNS_CODE
		    ,BUDGET_SE
		    ,BUDGET_ACNT_CODE
		    ,DEPT_CODE
		    ,EXPNDTR_UNIT_CODE
		    ,COMPUT_BSIS_CODE
		    ,COMPUT_BSIS_NM
		    ,COMPUT_BSIS_DTLS
		    ,COMPUT_BSIS_REFRN
		    ,BUDGET_AM
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		VALUES (
		     #YEAR#
		    ,#BSNS_SE#
		    ,#BALC_SE#
		    ,#DETAIL_BSNS_CODE#
		    ,#BUDGET_SE#
		    ,#BUDGET_ACNT_CODE#
		    ,#DEPT_CODE#
		    ,#EXPNDTR_UNIT_CODE#
		    ,#COMPUT_BSIS_CODE#
		    ,#COMPUT_BSIS_NM#
		    ,#COMPUT_BSIS_DTLS#
		    ,#COMPUT_BSIS_REFRN#
		    ,#BUDGET_AM#
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#S_USER_ID#
		    ,SYSDATE
		)
	</insert>


	<!-- 편성예산 산출기초 수정 -->
	<update id="BDG030301DAO.updateFrmtnComputBsis" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.updateFrmtnComputBsis*/]]>
		UPDATE TBBDG_FRMTN_COMPUT_BSIS
		SET    YEAR              = #YEAR#
		      ,BSNS_SE           = #BSNS_SE#
		      ,BALC_SE           = #BALC_SE#
		      ,DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		      ,BUDGET_SE         = #BUDGET_SE#
		      ,BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		      ,DEPT_CODE         = #DEPT_CODE#
		      ,EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		      ,COMPUT_BSIS_CODE  = #COMPUT_BSIS_CODE#
		      ,COMPUT_BSIS_NM    = #COMPUT_BSIS_NM#
		      ,COMPUT_BSIS_DTLS  = #COMPUT_BSIS_DTLS#
		      ,COMPUT_BSIS_REFRN = #COMPUT_BSIS_REFRN#
		      ,BUDGET_AM         = #BUDGET_AM#
		      ,UPDUSR_ID         = #S_USER_ID#
		      ,UPDT_DT           = SYSDATE
		WHERE  YEAR              = #YEAR#
		AND    BSNS_SE           = #BSNS_SE#
		AND    BALC_SE           = #BALC_SE#
		AND    DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		AND    BUDGET_SE         = #BUDGET_SE#
		AND    BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		AND    DEPT_CODE         = #DEPT_CODE#
		AND    EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		AND    COMPUT_BSIS_CODE  = #COMPUT_BSIS_CODE#
	</update>


	<!-- 편성예산 산출기초 삭제 -->
	<delete id="BDG030301DAO.deleteFrmtnComputBsis" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.deleteFrmtnComputBsis*/]]>
		DELETE
		FROM   TBBDG_FRMTN_COMPUT_BSIS
		WHERE  YEAR              = #YEAR#
		AND    BSNS_SE           = #BSNS_SE#
		AND    BALC_SE           = #BALC_SE#
		AND    DETAIL_BSNS_CODE  = #DETAIL_BSNS_CODE#
		AND    BUDGET_SE         = #BUDGET_SE#
		AND    BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		AND    DEPT_CODE         = #DEPT_CODE#
		AND    EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		<isNotEmpty property="COMPUT_BSIS_CODE"   prepend="AND    ">COMPUT_BSIS_CODE  = #COMPUT_BSIS_CODE#</isNotEmpty>
	</delete>
	
	<update id="BDG030301DAO.updateExecutConfirmAt0" parameterClass="java.util.HashMap">
		UPDATE TBBDG_FRMTN_BUDGET SET EXECUT_CONFIRM_AT = 0
		WHERE YEAR = #YEAR#
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
		AND BUDGET_SE = #BUDGET_SE#
	</update>
	<!-- Execute -->


	<!-- 현재 검색조건에 부합하는 편성예산 모두 제거 -->
	<delete id="BDG030301DAO.deleteFrmtnComputBsisAll" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.deleteFrmtnComputBsisAll*/]]>
		DELETE
		FROM   TBBDG_FRMTN_COMPUT_BSIS
		WHERE  YEAR      = #YEAR#       /*연도*/
		AND    BUDGET_SE = #BUDGET_SE#  /*예산구분*/
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
	</delete>


	<!-- 현재 검색조건에 부합하는 편성예산 모두 제거 -->
	<delete id="BDG030301DAO.deleteFrmtnBudgetAll" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.deleteFrmtnBudgetAll*/]]>
		DELETE
		FROM   TBBDG_FRMTN_BUDGET
		WHERE  YEAR      = #YEAR#       /*연도*/
		AND    BUDGET_SE = #BUDGET_SE#  /*예산구분*/
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
	</delete>


	<!-- 현재 검색조건에 부합하는 요구예산 반영 -->
	<insert id="BDG030301DAO.insertDemandToFrmtn" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.insertDemandToFrmtn*/]]>
		INSERT INTO TBBDG_FRMTN_BUDGET (
		     YEAR
		    ,BSNS_SE
		    ,DETAIL_BSNS_CODE
		    ,BALC_SE
		    ,BUDGET_SE
		    ,DEPT_CODE
		    ,BUDGET_ACNT_CODE
		    ,EXPNDTR_UNIT_CODE
		    ,EXPNDTR_UNIT_NM
		    ,COMPUT_BSIS_DTLS
		    ,ELPD_EXCUT_AT
		    ,BUDGET_AM
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		SELECT YEAR
		      ,BSNS_SE
		      ,DETAIL_BSNS_CODE
		      ,BALC_SE
		      ,BUDGET_SE
		      ,DEPT_CODE
		      ,BUDGET_ACNT_CODE
		      ,EXPNDTR_UNIT_CODE
		      ,EXPNDTR_UNIT_NM
		      ,COMPUT_BSIS_DTLS
		      ,ELPD_EXCUT_AT
		      ,BUDGET_AM
		      ,REGISTER_ID
		      ,REGIST_DT
		      ,UPDUSR_ID
		      ,UPDT_DT
		FROM   TBBDG_DEMAND_BUDGET
		WHERE  YEAR      = #YEAR#       /*연도*/
		AND    BUDGET_SE = #BUDGET_SE#  /*예산구분*/
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
	</insert>


	<!-- 현재 검색조건에 부합하는 요구예산 반영 -->
	<insert id="BDG030301DAO.insertDemandToFrmtnComputBsis" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.insertDemandToFrmtnComputBsis*/]]>
		INSERT INTO TBBDG_FRMTN_COMPUT_BSIS (
		     YEAR
		    ,BSNS_SE
		    ,BALC_SE
		    ,BUDGET_SE
		    ,DETAIL_BSNS_CODE
		    ,DEPT_CODE
		    ,BUDGET_ACNT_CODE
		    ,EXPNDTR_UNIT_CODE
		    ,COMPUT_BSIS_CODE
		    ,COMPUT_BSIS_NM
		    ,COMPUT_BSIS_DTLS
		    ,COMPUT_BSIS_REFRN
		    ,BUDGET_AM
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		) 
		SELECT YEAR
		      ,BSNS_SE
		      ,BALC_SE
		      ,BUDGET_SE
		      ,DETAIL_BSNS_CODE
		      ,DEPT_CODE
		      ,BUDGET_ACNT_CODE
		      ,EXPNDTR_UNIT_CODE
		      ,COMPUT_BSIS_CODE
		      ,COMPUT_BSIS_NM
		      ,COMPUT_BSIS_DTLS
		      ,COMPUT_BSIS_REFRN
		      ,BUDGET_AM
		      ,REGISTER_ID
		      ,REGIST_DT
		      ,UPDUSR_ID
		      ,UPDT_DT
		FROM   TBBDG_DEMAND_COMPUT_BSIS
		WHERE  YEAR      = #YEAR#       /*연도*/
		AND    BUDGET_SE = #BUDGET_SE#  /*예산구분*/
		<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
	</insert>


	<!-- 현재 검색조건에 부합하는 실행예산 금액 0으로 변경(재편성 시, 중간에 요구예산을 지웠을 경우) -->
	<update id="BDG030301DAO.updateExecutBudgetZero" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.updateExecutBudgetZero*/]]>
		UPDATE TBBDG_EXECUT_BUDGET
		SET    UPDUSR_ID     = #S_USER_ID#
		      ,UPDT_DT       = SYSDATE
		       <isEqual property="BUDGET_SE" compareValue="0" prepend=",">ORIBDGT       = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="1" prepend=",">RVSPBGT_1_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="2" prepend=",">RVSPBGT_2_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="3" prepend=",">RVSPBGT_3_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="4" prepend=",">RVSPBGT_4_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="5" prepend=",">RVSPBGT_5_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="6" prepend=",">RVSPBGT_6_ODR = 0</isEqual>
		       <isEqual property="BUDGET_SE" compareValue="7" prepend=",">RVSPBGT_7_ODR = 0</isEqual>
		WHERE  YEAR      = #YEAR#       /*연도*/
		<!-- <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty> -->
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
	</update>


	<!-- 편성금액으로 덮어쓰기 -->
	<insert id="BDG030301DAO.insertFrmtnToExecut" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.insertFrmtnToExecut*/]]>
		MERGE INTO TBBDG_EXECUT_BUDGET t1
		USING (
		      SELECT YEAR
		             ,BSNS_SE
		             ,BALC_SE
		             ,DETAIL_BSNS_CODE
		             ,#BUDGET_SE# AS BUDGET_SE
		             ,DEPT_CODE
		             ,BUDGET_ACNT_CODE
		             ,EXPNDTR_UNIT_CODE
		             ,EXPNDTR_UNIT_NM
		             ,ELPD_EXCUT_AT
		             ,SE_ACCNUT_ACNT_CODE
		             ,SUM(DECODE(BUDGET_SE,'0', BUDGET_AM, 0)) AS BUDGET_0_AM
                     ,SUM(DECODE(BUDGET_SE,'1', BUDGET_AM, 0)) AS BUDGET_1_AM
                     ,SUM(DECODE(BUDGET_SE,'2', BUDGET_AM, 0)) AS BUDGET_2_AM
                     ,SUM(DECODE(BUDGET_SE,'3', BUDGET_AM, 0)) AS BUDGET_3_AM
                     ,SUM(DECODE(BUDGET_SE,'4', BUDGET_AM, 0)) AS BUDGET_4_AM
		       FROM  TBBDG_FRMTN_BUDGET
		       WHERE YEAR      = #YEAR#       /*연도*/
		       <!-- <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty> -->
		       <isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		       <isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
		       GROUP BY YEAR
                     ,BSNS_SE
                     ,BALC_SE
                     ,DETAIL_BSNS_CODE
                	 ,DEPT_CODE
                     ,BUDGET_ACNT_CODE
                     ,EXPNDTR_UNIT_CODE
                     ,EXPNDTR_UNIT_NM
                     ,ELPD_EXCUT_AT
            		 ,SE_ACCNUT_ACNT_CODE
		      ) t2
		      ON (
		              t1.YEAR = t2.YEAR
		          AND t1.BSNS_SE = t2.BSNS_SE
		          AND t1.BALC_SE = t2.BALC_SE
		          AND t1.DETAIL_BSNS_CODE = t2.DETAIL_BSNS_CODE
		          AND t1.DEPT_CODE = t2.DEPT_CODE
		          AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		          AND t1.EXPNDTR_UNIT_CODE = t2.EXPNDTR_UNIT_CODE
		         )
		    WHEN MATCHED THEN
		        UPDATE
		        SET    t1.SE_ACCNUT_ACNT_CODE  = DECODE(t2.BUDGET_SE, '0', t2.SE_ACCNUT_ACNT_CODE,NULL)
		              ,t1.ORIBDGT              = DECODE(t2.BUDGET_SE, '0', t2.BUDGET_0_AM, t1.ORIBDGT)
		              ,t1.RVSPBGT_1_ODR        = DECODE(t2.BUDGET_SE, '1', t2.BUDGET_1_AM - t2.BUDGET_0_AM, t1.RVSPBGT_1_ODR)
		              ,t1.RVSPBGT_2_ODR        = DECODE(t2.BUDGET_SE, '2', t2.BUDGET_2_AM - t2.BUDGET_1_AM, t1.RVSPBGT_2_ODR)
		              ,t1.RVSPBGT_3_ODR        = DECODE(t2.BUDGET_SE, '3', t2.BUDGET_3_AM - t2.BUDGET_2_AM, t1.RVSPBGT_3_ODR)
		              ,t1.RVSPBGT_4_ODR        = DECODE(t2.BUDGET_SE, '4', t2.BUDGET_4_AM - t2.BUDGET_3_AM, t1.RVSPBGT_4_ODR)
		              ,t1.RVSPBGT_5_ODR        = DECODE(t2.BUDGET_SE, '5', t2.BUDGET_5_AM - t2.BUDGET_4_AM, t1.RVSPBGT_5_ODR)
		              ,t1.RVSPBGT_6_ODR        = DECODE(t2.BUDGET_SE, '6', t2.BUDGET_6_AM - t2.BUDGET_5_AM, t1.RVSPBGT_6_ODR)
		              ,t1.RVSPBGT_7_ODR        = DECODE(t2.BUDGET_SE, '7', t2.BUDGET_7_AM - t2.BUDGET_6_AM, t1.RVSPBGT_7_ODR)
		              <isEqual property="BUDGET_SE" compareValue="1">
		              ,t1.RVSPBGT_1_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="2">
		              ,t1.RVSPBGT_2_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="3">
		              ,t1.RVSPBGT_3_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="4">
		              ,t1.RVSPBGT_4_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="5">
		              ,t1.RVSPBGT_5_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="6">
		              ,t1.RVSPBGT_6_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		              <isEqual property="BUDGET_SE" compareValue="7">
		              ,t1.RVSPBGT_7_YM		   = #YEAR#||#RVSPBGT_YM#
		              </isEqual>
		    WHEN NOT MATCHED THEN
		    
		        INSERT (
		             t1.YEAR
		            ,t1.BSNS_SE
		            ,t1.BALC_SE
		            ,t1.DETAIL_BSNS_CODE
		            ,t1.DEPT_CODE
		            ,t1.BUDGET_ACNT_CODE
		            ,t1.EXPNDTR_UNIT_CODE
		            ,t1.EXPNDTR_UNIT_NM
		            ,t1.ELPD_EXCUT_AT
		            ,t1.SE_ACCNUT_ACNT_CODE
		            ,t1.ORIBDGT
		            ,t1.RVSPBGT_1_ODR
		            ,t1.RVSPBGT_2_ODR
		            ,t1.RVSPBGT_3_ODR
		            ,t1.RVSPBGT_4_ODR
		            ,t1.RVSPBGT_5_ODR
		            ,t1.RVSPBGT_6_ODR
		            ,t1.RVSPBGT_7_ODR
		            <isEqual property="BUDGET_SE" compareValue="1">
		            ,t1.RVSPBGT_1_YM	
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="2">
		            ,t1.RVSPBGT_2_YM	
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="3">
		            ,t1.RVSPBGT_3_YM
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="4">
		            ,t1.RVSPBGT_4_YM
		              </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="5">
		            ,t1.RVSPBGT_5_YM	
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="6">
		            ,t1.RVSPBGT_6_YM
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="7">
		            ,t1.RVSPBGT_7_YM
		            </isEqual>
		            ,t1.REGISTER_ID
		            ,t1.REGIST_DT
		            ,t1.UPDUSR_ID
		            ,t1.UPDT_DT
		        )
		        VALUES (
		             t2.YEAR
		            ,t2.BSNS_SE
		            ,t2.BALC_SE
		            ,t2.DETAIL_BSNS_CODE
		            ,t2.DEPT_CODE
		            ,t2.BUDGET_ACNT_CODE
		            ,t2.EXPNDTR_UNIT_CODE
		            ,t2.EXPNDTR_UNIT_NM
		            ,t2.ELPD_EXCUT_AT
		            ,t2.SE_ACCNUT_ACNT_CODE
		            ,DECODE(t2.BUDGET_SE, '0', t2.BUDGET_0_AM, 0)
		            ,DECODE(t2.BUDGET_SE, '1', t2.BUDGET_1_AM - t2.BUDGET_0_AM, 0)
		            ,DECODE(t2.BUDGET_SE, '2', t2.BUDGET_2_AM - t2.BUDGET_1_AM, 0)
		            ,DECODE(t2.BUDGET_SE, '3', t2.BUDGET_3_AM - t2.BUDGET_2_AM, 0)
		            ,DECODE(t2.BUDGET_SE, '4', t2.BUDGET_4_AM - t2.BUDGET_3_AM, 0)
		            <isEqual property="BUDGET_SE" compareValue="1">
		            ,#YEAR#||#RVSPBGT_YM#
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="2">
		            ,#YEAR#||#RVSPBGT_YM#
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="3">
		            ,#YEAR#||#RVSPBGT_YM#
		            </isEqual>
		            <isEqual property="BUDGET_SE" compareValue="4">
		            ,#YEAR#||#RVSPBGT_YM#
		            </isEqual>
		            ,#S_USER_ID#
		            ,SYSDATE
		            ,#S_USER_ID#
		            ,SYSDATE
		        )
	</insert>
	<!--  -->
	<update id="BDG030301DAO.updateExecutConfirmAt1" parameterClass="java.util.HashMap">
		UPDATE TBBDG_FRMTN_BUDGET SET EXECUT_CONFIRM_AT = 1
		WHERE YEAR = #YEAR#
		<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE   = #BSNS_SE#</isNotEmpty>
		<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE   = #BALC_SE#</isNotEmpty>
		AND BUDGET_SE = #BUDGET_SE#
	</update>
	<!-- 사업별 증감 예산서 출력대상 조회 -->
	<select id="BDG030301DAO.selectBsnsPrint" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectBsnsPrint*/]]>
				
		WITH BUDGET_ACNT_TREE AS
			 ( SELECT ROWNUM AS RNUM ,
		              b1.YEAR ,
		              b1.BSNS_SE ,
		              b1.BALC_SE ,
		              b1.BUDGET_ACNT_CODE ,
		              b1.BUDGET_ACNT_NM ,
		              b1.BUDGET_ACNT_NM2 ,
		              b1.ACNT_LEVEL ,
		              b1.UPPER_ACNT_CODE ,
		              b1.TAXITM_CODE ,
		              DECODE(b1.TAXITM_CODE,NULL,NULL,'□ (')||b1.TAXITM_CODE||DECODE(b1.TAXITM_CODE,NULL,NULL,') ')||b1.TAXITM_NM AS TAXITM_NM ,
		              b1.DEPT_CODE ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'□ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,1,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.DETAIL_BSNS_NM AS DETAIL_BSNS_NM ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'○ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,3,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.DEPT_NM AS DEPT_NM ,
		              b1.EXPNDTR_UNIT_CODE ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'ㆍ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,5,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.EXPNDTR_UNIT_NM AS EXPNDTR_UNIT_NM ,
		              b1.COMPUT_BSIS_CODE ,
		              DECODE(b1.COMPUT_BSIS_NM,NULL,NULL,'- ')||b1.COMPUT_BSIS_NM AS COMPUT_BSIS_NM ,
		              CASE WHEN b1.COMPUT_BSIS IS NULL AND b2.COMPUT_BSIS IS NULL
		                   THEN '' 
		                   ELSE	DECODE(#BUDGET_SE#, '0', b1.COMPUT_BSIS ,'(경정)' || b1.COMPUT_BSIS|| ' -   (기정)'|| b2.COMPUT_BSIS || ' =')
		                   END AS COMPUT_BSIS ,
		              CASE WHEN b1.COMPUT_BSIS_DTLS IS NULL AND b2.COMPUT_BSIS_DTLS IS NULL 
		              	   THEN ''
		                   ELSE DECODE(#BUDGET_SE#, '0', b1.COMPUT_BSIS_DTLS, '(경정)' || b1.COMPUT_BSIS_DTLS) 
		                   END AS COMPUT_BSIS_DTLS_1 ,
		              CASE WHEN b1.COMPUT_BSIS_DTLS IS NULL AND b2.COMPUT_BSIS_DTLS IS NULL 
		              	   THEN ''
		                   ELSE DECODE(#BUDGET_SE#, '0', '', '-   (기정)' || b2.COMPUT_BSIS_DTLS || ' =' ) 
		                   END AS COMPUT_BSIS_DTLS_2 ,
		              b1.BUDGET_AM ,
		              b2.BUDGET_AM AS PRV_BUDGET_AM ,
		              b1.BSIS_BUDGET_AM ,
		              b2.PRV_BSIS_BUDGET_AM , 
		              b1.NOW_EXECUT_AM ,
		              b2.PRV_EXECUT_AM ,
		              SYS_CONNECT_BY_PATH(b1.BUDGET_ACNT_NM2,'|')||'|' AS ACNT_NM_PATH
		         FROM ( SELECT a1.YEAR ,
		                       a1.BSNS_SE ,
		                       a1.BALC_SE ,
		                       CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.BUDGET_ACNT_CODE,1,1) = '8' THEN A1.BUDGET_ACNT_CODE || '00' ELSE A1.BUDGET_ACNT_CODE END AS BUDGET_ACNT_CODE,
		                       a1.BUDGET_ACNT_NM ,
		    <![CDATA[          (CASE WHEN a1.ACNT_LEVEL < '4' 										]]>
		                             THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                             WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00'
		                             THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                             ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)
		                             END)||'.'|| a1.BUDGET_ACNT_NM AS BUDGET_ACNT_NM2 ,
		                       DECODE(a1.ACNT_LEVEL,'7','4',a1.ACNT_LEVEL) AS ACNT_LEVEL ,
		                       CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.UPPER_ACNT_CODE,1,1) = '8' THEN a1.UPPER_ACNT_CODE || '00' ELSE a1.UPPER_ACNT_CODE END AS UPPER_ACNT_CODE,
		                       a2.TAXITM_CODE ,
		                       a2.TAXITM_NM ,
		                       a2.DEPT_CODE ,
		                       a5.SE_ACCNUT_ACNT_NM AS DETAIL_BSNS_NM ,
		                       a2.DEPT_NM ,
		                       a3.EXPNDTR_UNIT_CODE ,
		                       a3.EXPNDTR_UNIT_NM ,
		                       a4.COMPUT_BSIS_CODE AS COMPUT_BSIS_CODE ,
		                       a4.COMPUT_BSIS_NM   AS COMPUT_BSIS_NM ,
		                       a3.COMPUT_BSIS_DTLS AS COMPUT_BSIS ,
		                       a4.COMPUT_BSIS_DTLS AS COMPUT_BSIS_DTLS ,
		                       NVL(a3.BUDGET_AM,0) AS BUDGET_AM ,
		                       NVL(a4.BUDGET_AM,0) AS BSIS_BUDGET_AM ,
		                       NVL(a4.BUDGET_AM,a3.BUDGET_AM) AS NOW_EXECUT_AM
		                  FROM TBBDG_BUDGET_ACNT_CODE a1
		                       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
		                            ON      a1.YEAR              = a2.YEAR
		                            AND     a1.BSNS_SE           = a2.BSNS_SE
		                            AND     a1.BALC_SE           = a2.BALC_SE
		                            AND     a1.BUDGET_ACNT_CODE  = a2.BUDGET_ACNT_CODE
		                 <isNotEmpty property="DEPT_CODE">
		                          <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
		                          	        a2.DEPT_CODE 		 = #DEPT_CODE#
		                          </isNotEqual>
		                 </isNotEmpty>
		                       LEFT OUTER JOIN TBBDG_FRMTN_BUDGET a3
		                            ON      a2.YEAR              = a3.YEAR
		                            AND     a2.BSNS_SE           = a3.BSNS_SE
		                            AND     a2.BALC_SE           = a3.BALC_SE
		                            AND     a2.DEPT_CODE         = a3.DEPT_CODE
		                            AND     a2.BUDGET_ACNT_CODE  = a3.BUDGET_ACNT_CODE
		                            AND     a2.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
			             <isNotEmpty property="BUDGET_SE">
			                        AND 	a3.BUDGET_SE         = #BUDGET_SE#
			             </isNotEmpty>
			             <isNotEmpty property="ACNT_CODE">
				                    AND 	a3.BUDGET_ACNT_CODE  = #ACNT_CODE#
				         </isNotEmpty>
			             <isNotEmpty property="BSNS_CODE">
									AND 	a3.DETAIL_BSNS_CODE  = #BSNS_CODE#
						 </isNotEmpty>
		                       LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS a4
		                            ON      a3.YEAR              = a4.YEAR
		                            AND     a3.BSNS_SE           = a4.BSNS_SE
		                            AND     a3.BALC_SE           = a4.BALC_SE
		                            AND     a3.BUDGET_SE         = a4.BUDGET_SE
		                            AND     a3.DETAIL_BSNS_CODE  = a4.DETAIL_BSNS_CODE
		                            AND     a3.DEPT_CODE         = a4.DEPT_CODE
		                            AND     a3.BUDGET_ACNT_CODE  = a4.BUDGET_ACNT_CODE
		                            AND     a3.EXPNDTR_UNIT_CODE = a4.EXPNDTR_UNIT_CODE
		                       LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_CODE a5
		                            ON		a3.YEAR              = a5.ACCNUT_YEAR
		                            AND     a3.DETAIL_BSNS_CODE  = a5.SE_ACCNUT_ACNT_CODE
		                WHERE   1                            =1
		                  AND    a1.YEAR    = #YEAR#
				       <isNotEmpty property="BSNS_SE">
				          AND    a1.BSNS_SE = #BSNS_SE#
				       </isNotEmpty>
				       <isNotEmpty property="BALC_SE">
				          AND    a1.BALC_SE = #BALC_SE#
				       </isNotEmpty>
		              ) b1
		              LEFT OUTER JOIN
		                   ( SELECT a1.YEAR ,
		                            a1.BSNS_SE ,
		                            a1.BALC_SE ,
		                            CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.BUDGET_ACNT_CODE,1,1) = '8' THEN A1.BUDGET_ACNT_CODE || '00' ELSE A1.BUDGET_ACNT_CODE END AS BUDGET_ACNT_CODE,
		                            a1.BUDGET_ACNT_NM ,(
		        <![CDATA[           CASE WHEN a1.ACNT_LEVEL < '4' 					]]>
		                                 THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                                 WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00'
		                                 THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                                 ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)
		                           		 END)||'.'|| a1.BUDGET_ACNT_NM AS BUDGET_ACNT_NM2 ,
		                            DECODE(a1.ACNT_LEVEL,'7','4',a1.ACNT_LEVEL) AS ACNT_LEVEL ,
		                            CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.UPPER_ACNT_CODE,1,1) = '8' THEN a1.UPPER_ACNT_CODE || '00' ELSE a1.UPPER_ACNT_CODE END AS UPPER_ACNT_CODE ,
		                            a2.TAXITM_CODE ,
		                            a2.TAXITM_NM ,
		                            a2.DEPT_CODE ,
		                            a2.DEPT_NM ,
		                            a3.EXPNDTR_UNIT_CODE ,
		                            a3.EXPNDTR_UNIT_NM ,
		                            a4.COMPUT_BSIS_CODE AS COMPUT_BSIS_CODE ,
		                            a4.COMPUT_BSIS_NM   AS COMPUT_BSIS_NM ,
		                            a3.COMPUT_BSIS_DTLS AS COMPUT_BSIS ,
		                            a4.COMPUT_BSIS_DTLS AS COMPUT_BSIS_DTLS ,
		                            NVL(a3.BUDGET_AM,0) AS BUDGET_AM ,
		                            NVL(a4.BUDGET_AM,0) AS PRV_BSIS_BUDGET_AM ,
		                            NVL(a4.BUDGET_AM,a3.BUDGET_AM) AS PRV_EXECUT_AM
		                       FROM TBBDG_BUDGET_ACNT_CODE a1
		                            LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
		                                 ON      a1.YEAR              = a2.YEAR
		                                 AND     a1.BSNS_SE           = a2.BSNS_SE
		                                 AND     a1.BALC_SE           = a2.BALC_SE
		                                 AND     a1.BUDGET_ACNT_CODE  = a2.BUDGET_ACNT_CODE
		                       <isNotEmpty property="DEPT_CODE">
		                          <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
		                          			     a2.DEPT_CODE 		  = #DEPT_CODE#
		                          </isNotEqual>
		                       </isNotEmpty>
		                            LEFT OUTER JOIN TBBDG_FRMTN_BUDGET a3
		                                 ON      a2.YEAR              = a3.YEAR
		                                 AND     a2.BSNS_SE           = a3.BSNS_SE
		                                 AND     a2.BALC_SE           = a3.BALC_SE
		                           		 AND     a2.DEPT_CODE         = a3.DEPT_CODE
		                           		 AND     a2.BUDGET_ACNT_CODE  = a3.BUDGET_ACNT_CODE
		                           		 AND     a2.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
		                       
				               <isNotEmpty property="BUDGET_SE">
				                         AND 	 a3.BUDGET_SE         = #BUDGET_SE# -1
				               </isNotEmpty>
				               <isNotEmpty property="ACNT_CODE">
				                         AND a3.BUDGET_ACNT_CODE  	  = #ACNT_CODE#
				               </isNotEmpty>
				               <isNotEmpty property="BSNS_CODE">
				                         AND a3.DETAIL_BSNS_CODE  	  = #BSNS_CODE#
				               </isNotEmpty>
		
		                            LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS a4
		                           	     ON      a3.YEAR              = a4.YEAR
		                           		 AND     a3.BSNS_SE           = a4.BSNS_SE
		                           		 AND     a3.BALC_SE           = a4.BALC_SE
		                           		 AND     a3.BUDGET_SE         = a4.BUDGET_SE
		                           		 AND     a3.DETAIL_BSNS_CODE  = a4.DETAIL_BSNS_CODE
		                           		 AND     a3.DEPT_CODE         = a4.DEPT_CODE
		                           		 AND     a3.BUDGET_ACNT_CODE  = a4.BUDGET_ACNT_CODE
		                           		 AND     a3.EXPNDTR_UNIT_CODE = a4.EXPNDTR_UNIT_CODE
		                   WHERE 1 =1
		                     AND a1.YEAR    = #YEAR#
				      <isNotEmpty property="BSNS_SE">
				             AND a1.BSNS_SE = #BSNS_SE#
				      </isNotEmpty>
				      <isNotEmpty property="BALC_SE">
				             AND a1.BALC_SE = #BALC_SE#
				      </isNotEmpty>
		              ) b2
		                   ON  b1.YEAR              = b2.YEAR
		                   AND b1.BSNS_SE           = b2.BSNS_SE
		                   AND b1.BALC_SE           = b2.BALC_SE
		                   AND b1.BUDGET_ACNT_CODE  = b2.BUDGET_ACNT_CODE
		                   AND b1.EXPNDTR_UNIT_CODE = b2.EXPNDTR_UNIT_CODE
		                   AND NVL(b1.COMPUT_BSIS_CODE,0)  = NVL(b2.COMPUT_BSIS_CODE,0)
		 	     WHERE 	1 =1
		         START WITH b1.UPPER_ACNT_CODE    IS NULL
		         CONNECT BY PRIOR b1.BUDGET_ACNT_CODE   = b1.UPPER_ACNT_CODE
		         ORDER SIBLINGS BY b1.YEAR ,
		                   		   b1.BSNS_SE ,
		                   		   b1.BALC_SE ,
		                   		   b1.BUDGET_ACNT_CODE ,
		                   		   b1.DEPT_CODE ,
		                   		   b1.EXPNDTR_UNIT_CODE ,
		                   		   b1.COMPUT_BSIS_CODE
		       )
			SELECT DISTINCT
				   YEAR ,
				   BSNS_SE ,
				   BALC_SE ,
				   #BUDGET_SE# AS BUDGET_SE ,
				   BUDGET_ACNT_CODE ,
				   BUDGET_ACNT_NM ,
				   BUDGET_ACNT_NM2 ,
				   ACNT_LEVEL ,
				   UPPER_ACNT_CODE  ,
				   GWAN ,
				   HANG ,
				   SEHANG ,
				   MOK ,
				   SEMOK ,
				   TAXITM_NM ,
				   DEPT_CODE ,
				   DETAIL_BSNS_NM,
				   DEPT_NM ,
				   EXPNDTR_UNIT_NM ,
				   COMPUT_BSIS_CODE ,
				   COMPUT_BSIS_NM ,
				   COMPUT_BSIS ,
				   COMPUT_BSIS_DTLS_1 ,
				   COMPUT_BSIS_DTLS_2 ,
				   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BUDGET_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(BUDGET_AM/1000)
                 	     ELSE 0 
                   END ) AS BUDGET_AM,
                   (CASE WHEN BALC_SE='1'
                         THEN TRUNC(PRV_BUDGET_AM/1000)
                         WHEN BALC_SE='2'
                         THEN CEIL(PRV_BUDGET_AM/1000)
                         ELSE 0
                   END ) AS PRV_BUDGET_AM,
                   (CASE WHEN BALC_SE='1'
                         THEN TRUNC(BUDGET_MIN_AM/1000)
                         WHEN BALC_SE='2'
                         THEN CEIL(BUDGET_MIN_AM/1000)
                         ELSE 0
                   END ) AS BUDGET_MIN_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BSIS_BUDGET_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(BSIS_BUDGET_AM/1000)
                 		 ELSE 0 
                   END ) AS BSIS_BUDGET_AM,
                   (CASE WHEN BALC_SE='1' 
                 	     THEN   TRUNC(PRV_BSIS_BUDGET_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN  CEIL(PRV_BSIS_BUDGET_AM/1000)
                 		 ELSE 0 
                   END )  AS PRV_BSIS_BUDGET_AM ,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BSIS_MIN_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(BSIS_MIN_AM/1000)
                 		 ELSE 0 
                   END ) AS BSIS_MIN_AM,
                 
                   (CASE WHEN BALC_SE='1' 
                		 THEN TRUNC(PRV_EXECUT_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(PRV_EXECUT_AM/1000)
                 		 ELSE 0 
                   END )  AS PRV_EXECUT_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(NOW_EXECUT_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(NOW_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) AS NOW_EXECUT_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(NOW_EXECUT_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(NOW_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) -
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(PRV_EXECUT_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(PRV_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) AS MIN_AM
		      FROM
				   ( 
					 SELECT s1.RNUM ,
					        s1.YEAR                                                                                                                                 AS YEAR ,
					        s1.BSNS_SE                                                                                                                              AS BSNS_SE ,
					        s1.BALC_SE                                                                                                                              AS BALC_SE ,
					        s1.BUDGET_ACNT_CODE                                                                                                                     AS BUDGET_ACNT_CODE ,
					        s1.BUDGET_ACNT_NM                                                                                                                       AS BUDGET_ACNT_NM ,
					        s1.BUDGET_ACNT_NM2 ,
					        s1.ACNT_LEVEL                                                                                                                           AS ACNT_LEVEL ,
					        s1.UPPER_ACNT_CODE                                                                                                                      AS UPPER_ACNT_CODE ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK ,
					        s1.TAXITM_NM ,
					        s1.DEPT_CODE ,
					        s1.DETAIL_BSNS_NM ,
					        s1.DEPT_NM ,
					        s1.EXPNDTR_UNIT_NM ,
					        s1.COMPUT_BSIS_CODE ,
					        s1.COMPUT_BSIS_NM ,
					        s1.COMPUT_BSIS ,
					        s1.COMPUT_BSIS_DTLS_1 ,
					        s1.COMPUT_BSIS_DTLS_2 ,
					        s1.BUDGET_AM ,
					        NVL(NVL(S1.PRV_BUDGET_AM,(SELECT MAX(NVL(A1.PRV_BUDGET_AM,0)) FROM BUDGET_ACNT_TREE A1 WHERE a1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE AND A1.EXPNDTR_UNIT_CODE =  S1.EXPNDTR_UNIT_CODE)),0)  AS PRV_BUDGET_AM,
                            s1.BUDGET_AM - NVL(NVL(S1.PRV_BUDGET_AM,(SELECT MAX(NVL(A1.PRV_BUDGET_AM,0)) FROM BUDGET_ACNT_TREE A1 WHERE a1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE AND A1.EXPNDTR_UNIT_CODE =  S1.EXPNDTR_UNIT_CODE)),0)   AS BUDGET_MIN_AM,
					        s1.BSIS_BUDGET_AM ,
					        NVL(S1.PRV_BSIS_BUDGET_AM,0) AS PRV_BSIS_BUDGET_AM,
					        s1.BSIS_BUDGET_AM -NVL(S1.PRV_BSIS_BUDGET_AM,0) AS BSIS_MIN_AM,
			<![CDATA[       CASE WHEN S1.ACNT_LEVEL <6 THEN						]]> 
						        NVL((SELECT SUM(NVL(a1.PRV_EXECUT_AM,0))
									   FROM BUDGET_ACNT_TREE a1
									  START WITH a1.BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
						                 CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE
						         ),0)
						         ELSE NVL(PRV_EXECUT_AM,0)
		                     END
		                     
					         AS PRV_EXECUT_AM ,
			<![CDATA[		 CASE WHEN S1.ACNT_LEVEL <6 THEN			]]>
					         NVL((SELECT SUM(NVL(a1.NOW_EXECUT_AM,0))
					         FROM    BUDGET_ACNT_TREE a1
					                 START WITH a1.BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
					                 CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE
					         ),0)
					         ELSE NVL(NOW_EXECUT_AM,0)
		                     END
					         AS NOW_EXECUT_AM
					FROM     BUDGET_ACNT_TREE s1
					         
					         <![CDATA[
					WHERE    (
					                  0 <>
					                   (SELECT SUM(NVL(A1.PRV_EXECUT_AM, 0))
					                   FROM    BUDGET_ACNT_TREE A1
					                           START WITH A1.BUDGET_ACNT_CODE       = S1.BUDGET_ACNT_CODE
					                           CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE
					                   )
					         OR       0 <>
					                  (SELECT SUM(NVL(A1.NOW_EXECUT_AM, 0))
					                  FROM    BUDGET_ACNT_TREE A1
					                          START WITH A1.BUDGET_ACNT_CODE       = S1.BUDGET_ACNT_CODE
					                          CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE
					                  )
								
					
					         )
					         
					 AND ((  NVL(s1.BSIS_BUDGET_AM,0) =  0  AND NVL(S1.PRV_BSIS_BUDGET_AM,0) = 0 ) OR   NVL(s1.BSIS_BUDGET_AM,0) <> NVL(S1.PRV_BSIS_BUDGET_AM,0)  )     
					ORDER BY RNUM         
					)
					
					WHERE NOW_EXECUT_AM <> PRV_EXECUT_AM
					AND     ( ACNT_LEVEL <= '4'  OR ( ACNT_LEVEL = '5' AND  BSIS_MIN_AM <> 0 )) 
					ORDER BY  YEAR,
 						      BSNS_SE,
					          BALC_SE,
					          BUDGET_SE,
					          BUDGET_ACNT_CODE,
			                  DETAIL_BSNS_NM,
			                  DEPT_NM,
			                  EXPNDTR_UNIT_NM,
			                  COMPUT_BSIS_CODE
					]]>
	</select>
	
	<!-- 사업별 전체 예산서 출력대상 조회 -->
	<select id="BDG030301DAO.selectAllBsnsPrint" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectBsnsPrint*/]]>
				
		WITH BUDGET_ACNT_TREE AS
			 ( SELECT ROWNUM AS RNUM ,
		              b1.YEAR ,
		              b1.BSNS_SE ,
		              b1.BALC_SE ,
		              b1.BUDGET_ACNT_CODE ,
		              b1.BUDGET_ACNT_NM ,
		              b1.BUDGET_ACNT_NM2 ,
		              b1.ACNT_LEVEL ,
		              b1.UPPER_ACNT_CODE ,
		              b1.TAXITM_CODE ,
		              DECODE(b1.TAXITM_CODE,NULL,NULL,'□ (')||b1.TAXITM_CODE||DECODE(b1.TAXITM_CODE,NULL,NULL,') ')||b1.TAXITM_NM AS TAXITM_NM ,
		              b1.DEPT_CODE ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'□ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,1,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.DETAIL_BSNS_NM AS DETAIL_BSNS_NM ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'○ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,3,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.DEPT_NM AS DEPT_NM ,
		              b1.EXPNDTR_UNIT_CODE ,
		              DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'ㆍ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,5,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.EXPNDTR_UNIT_NM AS EXPNDTR_UNIT_NM ,
		              b1.COMPUT_BSIS_CODE ,
		              DECODE(b1.COMPUT_BSIS_NM,NULL,NULL,'- ')||b1.COMPUT_BSIS_NM AS COMPUT_BSIS_NM ,
		              CASE WHEN b1.COMPUT_BSIS IS NULL AND b2.COMPUT_BSIS IS NULL
		                   THEN '' 
		                   ELSE	DECODE(#BUDGET_SE#, '0', b1.COMPUT_BSIS ,'(경정)' || b1.COMPUT_BSIS|| ' -   (기정)'|| b2.COMPUT_BSIS || ' =')
		                   END AS COMPUT_BSIS ,
		              CASE WHEN b1.COMPUT_BSIS_DTLS IS NULL AND b2.COMPUT_BSIS_DTLS IS NULL 
		              	   THEN ''
		                   ELSE DECODE(#BUDGET_SE#, '0', b1.COMPUT_BSIS_DTLS, '(경정)' || b1.COMPUT_BSIS_DTLS) 
		                   END AS COMPUT_BSIS_DTLS_1 ,
		              CASE WHEN b1.COMPUT_BSIS_DTLS IS NULL AND b2.COMPUT_BSIS_DTLS IS NULL 
		              	   THEN ''
		                   ELSE DECODE(#BUDGET_SE#, '0', '', '-   (기정)' || b2.COMPUT_BSIS_DTLS || ' =' ) 
		                   END AS COMPUT_BSIS_DTLS_2 ,
		              b1.BUDGET_AM ,
		              b2.BUDGET_AM AS PRV_BUDGET_AM ,
		              b1.BSIS_BUDGET_AM ,
		              b2.PRV_BSIS_BUDGET_AM , 
		              b1.NOW_EXECUT_AM ,
		              b2.PRV_EXECUT_AM ,
		              SYS_CONNECT_BY_PATH(b1.BUDGET_ACNT_NM2,'|')||'|' AS ACNT_NM_PATH
		         FROM ( SELECT a1.YEAR ,
		                       a1.BSNS_SE ,
		                       a1.BALC_SE ,
		                       CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.BUDGET_ACNT_CODE,1,1) = '8' THEN A1.BUDGET_ACNT_CODE || '00' ELSE A1.BUDGET_ACNT_CODE END AS BUDGET_ACNT_CODE,
		                       a1.BUDGET_ACNT_NM ,
		    <![CDATA[          (CASE WHEN a1.ACNT_LEVEL < '4' 										]]>
		                             THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                             WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00'
		                             THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                             ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)
		                             END)||'.'|| a1.BUDGET_ACNT_NM AS BUDGET_ACNT_NM2 ,
		                       DECODE(a1.ACNT_LEVEL,'7','4',a1.ACNT_LEVEL) AS ACNT_LEVEL ,
		                       CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.UPPER_ACNT_CODE,1,1) = '8' THEN a1.UPPER_ACNT_CODE || '00' ELSE a1.UPPER_ACNT_CODE END AS UPPER_ACNT_CODE,
		                       a2.TAXITM_CODE ,
		                       a2.TAXITM_NM ,
		                       a2.DEPT_CODE ,
		                       a5.SE_ACCNUT_ACNT_NM AS DETAIL_BSNS_NM ,
		                       a2.DEPT_NM ,
		                       a3.EXPNDTR_UNIT_CODE ,
		                       a3.EXPNDTR_UNIT_NM ,
		                       a4.COMPUT_BSIS_CODE AS COMPUT_BSIS_CODE ,
		                       a4.COMPUT_BSIS_NM   AS COMPUT_BSIS_NM ,
		                       a3.COMPUT_BSIS_DTLS AS COMPUT_BSIS ,
		                       a4.COMPUT_BSIS_DTLS AS COMPUT_BSIS_DTLS ,
		                       NVL(a3.BUDGET_AM,0) AS BUDGET_AM ,
		                       NVL(a4.BUDGET_AM,0) AS BSIS_BUDGET_AM ,
		                       NVL(a4.BUDGET_AM,a3.BUDGET_AM) AS NOW_EXECUT_AM
		                  FROM TBBDG_BUDGET_ACNT_CODE a1
		                       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
		                            ON      a1.YEAR              = a2.YEAR
		                            AND     a1.BSNS_SE           = a2.BSNS_SE
		                            AND     a1.BALC_SE           = a2.BALC_SE
		                            AND     a1.BUDGET_ACNT_CODE  = a2.BUDGET_ACNT_CODE
		                 <isNotEmpty property="DEPT_CODE">
		                          <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
		                          	        a2.DEPT_CODE 		 = #DEPT_CODE#
		                          </isNotEqual>
		                 </isNotEmpty>
		                       LEFT OUTER JOIN TBBDG_FRMTN_BUDGET a3
		                            ON      a2.YEAR              = a3.YEAR
		                            AND     a2.BSNS_SE           = a3.BSNS_SE
		                            AND     a2.BALC_SE           = a3.BALC_SE
		                            AND     a2.DEPT_CODE         = a3.DEPT_CODE
		                            AND     a2.BUDGET_ACNT_CODE  = a3.BUDGET_ACNT_CODE
		                            AND     a2.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
			             <isNotEmpty property="BUDGET_SE">
			                        AND 	a3.BUDGET_SE         = #BUDGET_SE#
			             </isNotEmpty>
			             <isNotEmpty property="ACNT_CODE">
				                    AND 	a3.BUDGET_ACNT_CODE  = #ACNT_CODE#
				         </isNotEmpty>
			             <isNotEmpty property="BSNS_CODE">
									AND 	a3.DETAIL_BSNS_CODE  = #BSNS_CODE#
						 </isNotEmpty>
		                       LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS a4
		                            ON      a3.YEAR              = a4.YEAR
		                            AND     a3.BSNS_SE           = a4.BSNS_SE
		                            AND     a3.BALC_SE           = a4.BALC_SE
		                            AND     a3.BUDGET_SE         = a4.BUDGET_SE
		                            AND     a3.DETAIL_BSNS_CODE  = a4.DETAIL_BSNS_CODE
		                            AND     a3.DEPT_CODE         = a4.DEPT_CODE
		                            AND     a3.BUDGET_ACNT_CODE  = a4.BUDGET_ACNT_CODE
		                            AND     a3.EXPNDTR_UNIT_CODE = a4.EXPNDTR_UNIT_CODE
		                       LEFT OUTER JOIN TBACC_SE_ACCNUT_ACNT_CODE a5
		                            ON		a3.YEAR              = a5.ACCNUT_YEAR
		                            AND     a3.DETAIL_BSNS_CODE  = a5.SE_ACCNUT_ACNT_CODE
		                WHERE   1                            =1
		                  AND    a1.YEAR    = #YEAR#
				       <isNotEmpty property="BSNS_SE">
				          AND    a1.BSNS_SE = #BSNS_SE#
				       </isNotEmpty>
				       <isNotEmpty property="BALC_SE">
				          AND    a1.BALC_SE = #BALC_SE#
				       </isNotEmpty>
		              ) b1
		              LEFT OUTER JOIN
		                   ( SELECT a1.YEAR ,
		                            a1.BSNS_SE ,
		                            a1.BALC_SE ,
		                            CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.BUDGET_ACNT_CODE,1,1) = '8' THEN A1.BUDGET_ACNT_CODE || '00' ELSE A1.BUDGET_ACNT_CODE END AS BUDGET_ACNT_CODE,
		                            a1.BUDGET_ACNT_NM ,(
		        <![CDATA[           CASE WHEN a1.ACNT_LEVEL < '4' 					]]>
		                                 THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                                 WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00'
		                                 THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                                 ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)
		                           		 END)||'.'|| a1.BUDGET_ACNT_NM AS BUDGET_ACNT_NM2 ,
		                            DECODE(a1.ACNT_LEVEL,'7','4',a1.ACNT_LEVEL) AS ACNT_LEVEL ,
		                            CASE WHEN A1.BSNS_SE = '1' AND SUBSTR(A1.UPPER_ACNT_CODE,1,1) = '8' THEN a1.UPPER_ACNT_CODE || '00' ELSE a1.UPPER_ACNT_CODE END AS UPPER_ACNT_CODE ,
		                            a2.TAXITM_CODE ,
		                            a2.TAXITM_NM ,
		                            a2.DEPT_CODE ,
		                            a2.DEPT_NM ,
		                            a3.EXPNDTR_UNIT_CODE ,
		                            a3.EXPNDTR_UNIT_NM ,
		                            a4.COMPUT_BSIS_CODE AS COMPUT_BSIS_CODE ,
		                            a4.COMPUT_BSIS_NM   AS COMPUT_BSIS_NM ,
		                            a3.COMPUT_BSIS_DTLS AS COMPUT_BSIS ,
		                            a4.COMPUT_BSIS_DTLS AS COMPUT_BSIS_DTLS ,
		                            NVL(a3.BUDGET_AM,0) AS BUDGET_AM ,
		                            NVL(a4.BUDGET_AM,0) AS PRV_BSIS_BUDGET_AM ,
		                            NVL(a4.BUDGET_AM,a3.BUDGET_AM) AS PRV_EXECUT_AM
		                       FROM TBBDG_BUDGET_ACNT_CODE a1
		                            LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
		                                 ON      a1.YEAR              = a2.YEAR
		                                 AND     a1.BSNS_SE           = a2.BSNS_SE
		                                 AND     a1.BALC_SE           = a2.BALC_SE
		                                 AND     a1.BUDGET_ACNT_CODE  = a2.BUDGET_ACNT_CODE
		                       <isNotEmpty property="DEPT_CODE">
		                          <isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">
		                          			     a2.DEPT_CODE 		  = #DEPT_CODE#
		                          </isNotEqual>
		                       </isNotEmpty>
		                            LEFT OUTER JOIN TBBDG_FRMTN_BUDGET a3
		                                 ON      a2.YEAR              = a3.YEAR
		                                 AND     a2.BSNS_SE           = a3.BSNS_SE
		                                 AND     a2.BALC_SE           = a3.BALC_SE
		                           		 AND     a2.DEPT_CODE         = a3.DEPT_CODE
		                           		 AND     a2.BUDGET_ACNT_CODE  = a3.BUDGET_ACNT_CODE
		                           		 AND     a2.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
		                       
				               <isNotEmpty property="BUDGET_SE">
				                         AND 	 a3.BUDGET_SE         = #BUDGET_SE# -1
				               </isNotEmpty>
				               <isNotEmpty property="ACNT_CODE">
				                         AND a3.BUDGET_ACNT_CODE  	  = #ACNT_CODE#
				               </isNotEmpty>
				               <isNotEmpty property="BSNS_CODE">
				                         AND a3.DETAIL_BSNS_CODE  	  = #BSNS_CODE#
				               </isNotEmpty>
		
		                            LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS a4
		                           	     ON      a3.YEAR              = a4.YEAR
		                           		 AND     a3.BSNS_SE           = a4.BSNS_SE
		                           		 AND     a3.BALC_SE           = a4.BALC_SE
		                           		 AND     a3.BUDGET_SE         = a4.BUDGET_SE
		                           		 AND     a3.DETAIL_BSNS_CODE  = a4.DETAIL_BSNS_CODE
		                           		 AND     a3.DEPT_CODE         = a4.DEPT_CODE
		                           		 AND     a3.BUDGET_ACNT_CODE  = a4.BUDGET_ACNT_CODE
		                           		 AND     a3.EXPNDTR_UNIT_CODE = a4.EXPNDTR_UNIT_CODE
		                   WHERE 1 =1
		                     AND a1.YEAR    = #YEAR#
				      <isNotEmpty property="BSNS_SE">
				             AND a1.BSNS_SE = #BSNS_SE#
				      </isNotEmpty>
				      <isNotEmpty property="BALC_SE">
				             AND a1.BALC_SE = #BALC_SE#
				      </isNotEmpty>
		              ) b2
		                   ON  b1.YEAR              = b2.YEAR
		                   AND b1.BSNS_SE           = b2.BSNS_SE
		                   AND b1.BALC_SE           = b2.BALC_SE
		                   AND b1.BUDGET_ACNT_CODE  = b2.BUDGET_ACNT_CODE
		                   AND b1.EXPNDTR_UNIT_CODE = b2.EXPNDTR_UNIT_CODE
		                   AND NVL(b1.COMPUT_BSIS_CODE,0)  = NVL(b2.COMPUT_BSIS_CODE,0)
		 	     WHERE 	1 =1
		         START WITH b1.UPPER_ACNT_CODE    IS NULL
		         CONNECT BY PRIOR b1.BUDGET_ACNT_CODE   = b1.UPPER_ACNT_CODE
		         ORDER SIBLINGS BY b1.YEAR ,
		                   		   b1.BSNS_SE ,
		                   		   b1.BALC_SE ,
		                   		   b1.BUDGET_ACNT_CODE ,
		                   		   b1.DEPT_CODE ,
		                   		   b1.EXPNDTR_UNIT_CODE ,
		                   		   b1.COMPUT_BSIS_CODE
		       )
			SELECT DISTINCT
				   YEAR ,
				   BSNS_SE ,
				   BALC_SE ,
				   #BUDGET_SE# AS BUDGET_SE ,
				   BUDGET_ACNT_CODE ,
				   BUDGET_ACNT_NM ,
				   BUDGET_ACNT_NM2 ,
				   ACNT_LEVEL ,
				   UPPER_ACNT_CODE  ,
				   GWAN ,
				   HANG ,
				   SEHANG ,
				   MOK ,
				   SEMOK ,
				   TAXITM_NM ,
				   DEPT_CODE ,
				   DETAIL_BSNS_NM,
				   DEPT_NM ,
				   EXPNDTR_UNIT_NM ,
				   COMPUT_BSIS_CODE ,
				   COMPUT_BSIS_NM ,
				   COMPUT_BSIS ,
				   COMPUT_BSIS_DTLS_1 ,
				   COMPUT_BSIS_DTLS_2 ,
				   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BUDGET_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(BUDGET_AM/1000)
                 	     ELSE 0 
                   END ) AS BUDGET_AM,
                   (CASE WHEN BALC_SE='1'
                         THEN TRUNC(PRV_BUDGET_AM/1000)
                         WHEN BALC_SE='2'
                         THEN CEIL(PRV_BUDGET_AM/1000)
                         ELSE 0
                   END ) AS PRV_BUDGET_AM,
                   (CASE WHEN BALC_SE='1'
                         THEN TRUNC(BUDGET_MIN_AM/1000)
                         WHEN BALC_SE='2'
                         THEN CEIL(BUDGET_MIN_AM/1000)
                         ELSE 0
                   END ) AS BUDGET_MIN_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BSIS_BUDGET_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(BSIS_BUDGET_AM/1000)
                 		 ELSE 0 
                   END ) AS BSIS_BUDGET_AM,
                   (CASE WHEN BALC_SE='1' 
                 	     THEN   TRUNC(PRV_BSIS_BUDGET_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN  CEIL(PRV_BSIS_BUDGET_AM/1000)
                 		 ELSE 0 
                   END )  AS PRV_BSIS_BUDGET_AM ,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(BSIS_MIN_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(BSIS_MIN_AM/1000)
                 		 ELSE 0 
                   END ) AS BSIS_MIN_AM,
                 
                   (CASE WHEN BALC_SE='1' 
                		 THEN TRUNC(PRV_EXECUT_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(PRV_EXECUT_AM/1000)
                 		 ELSE 0 
                   END )  AS PRV_EXECUT_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(NOW_EXECUT_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(NOW_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) AS NOW_EXECUT_AM,
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(NOW_EXECUT_AM/1000)
                 		 WHEN BALC_SE='2' 
                         THEN CEIL(NOW_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) -
                   (CASE WHEN BALC_SE='1' 
                 		 THEN TRUNC(PRV_EXECUT_AM/1000)
                 	     WHEN BALC_SE='2' 
                         THEN CEIL(PRV_EXECUT_AM/1000)
                 		 ELSE 0 
                   END ) AS MIN_AM
		      FROM
				   ( 
					 SELECT s1.RNUM ,
					        s1.YEAR                                                                                                                                 AS YEAR ,
					        s1.BSNS_SE                                                                                                                              AS BSNS_SE ,
					        s1.BALC_SE                                                                                                                              AS BALC_SE ,
					        s1.BUDGET_ACNT_CODE                                                                                                                     AS BUDGET_ACNT_CODE ,
					        s1.BUDGET_ACNT_NM                                                                                                                       AS BUDGET_ACNT_NM ,
					        s1.BUDGET_ACNT_NM2 ,
					        s1.ACNT_LEVEL                                                                                                                           AS ACNT_LEVEL ,
					        s1.UPPER_ACNT_CODE                                                                                                                      AS UPPER_ACNT_CODE ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK ,
					        SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK ,
					        s1.TAXITM_NM ,
					        s1.DEPT_CODE ,
					        s1.DETAIL_BSNS_NM ,
					        s1.DEPT_NM ,
					        s1.EXPNDTR_UNIT_NM ,
					        s1.COMPUT_BSIS_CODE ,
					        s1.COMPUT_BSIS_NM ,
					        s1.COMPUT_BSIS ,
					        s1.COMPUT_BSIS_DTLS_1 ,
					        s1.COMPUT_BSIS_DTLS_2 ,
					        s1.BUDGET_AM ,
					        NVL(NVL(S1.PRV_BUDGET_AM,(SELECT MAX(NVL(A1.PRV_BUDGET_AM,0)) FROM BUDGET_ACNT_TREE A1 WHERE a1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE AND A1.EXPNDTR_UNIT_CODE =  S1.EXPNDTR_UNIT_CODE)),0)  AS PRV_BUDGET_AM,
                            s1.BUDGET_AM - NVL(NVL(S1.PRV_BUDGET_AM,(SELECT MAX(NVL(A1.PRV_BUDGET_AM,0)) FROM BUDGET_ACNT_TREE A1 WHERE a1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE AND A1.EXPNDTR_UNIT_CODE =  S1.EXPNDTR_UNIT_CODE)),0)   AS BUDGET_MIN_AM,
					        s1.BSIS_BUDGET_AM ,
					        NVL(S1.PRV_BSIS_BUDGET_AM,0) AS PRV_BSIS_BUDGET_AM,
					        s1.BSIS_BUDGET_AM -NVL(S1.PRV_BSIS_BUDGET_AM,0) AS BSIS_MIN_AM,
			<![CDATA[       CASE WHEN S1.ACNT_LEVEL <6 THEN						]]> 
						        NVL((SELECT SUM(NVL(a1.PRV_EXECUT_AM,0))
									   FROM BUDGET_ACNT_TREE a1
									  START WITH a1.BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
						                 CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE
						         ),0)
						         ELSE NVL(PRV_EXECUT_AM,0)
		                     END
		                     
					         AS PRV_EXECUT_AM ,
			<![CDATA[		 CASE WHEN S1.ACNT_LEVEL <6 THEN			]]>
					         NVL((SELECT SUM(NVL(a1.NOW_EXECUT_AM,0))
					         FROM    BUDGET_ACNT_TREE a1
					                 START WITH a1.BUDGET_ACNT_CODE       = s1.BUDGET_ACNT_CODE
					                 CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE
					         ),0)
					         ELSE NVL(NOW_EXECUT_AM,0)
		                     END
					         AS NOW_EXECUT_AM
					FROM     BUDGET_ACNT_TREE s1
					        
					         <![CDATA[
					  WHERE    (
                                  0 <>
                                  (SELECT SUM(NVL(A1.PRV_EXECUT_AM, 0))
                                  FROM    BUDGET_ACNT_TREE A1 START WITH A1.BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE
                                  )
                         OR       0 <>
                                  (SELECT SUM(NVL(A1.NOW_EXECUT_AM, 0))
                                  FROM    BUDGET_ACNT_TREE A1 START WITH A1.BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE
                                  )
                         )
					ORDER BY RNUM         
					)
					
					WHERE ( ACNT_LEVEL <= '4'  OR ( ACNT_LEVEL = '5')) 
					 AND ( ACNT_LEVEL <= '4' OR ((ACNT_LEVEL > '4' AND COMPUT_BSIS_DTLS_1 IS NOT NULL ) OR  (ACNT_LEVEL > '4' AND COMPUT_BSIS_DTLS_2 IS NOT NULL)))
					ORDER BY  YEAR,
 						      BSNS_SE,
					          BALC_SE,
					          BUDGET_SE,
					          BUDGET_ACNT_CODE,
			                  DETAIL_BSNS_NM,
			                  DEPT_NM,
			                  EXPNDTR_UNIT_NM,
			                  COMPUT_BSIS_CODE
					]]>
	</select>
	<!-- 사업별 전체 예산서 출력대상 조회 -->
	<select id="BDG030301DAO.selectAcntClassPrint" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectAcntClassPrint*/]]>
			SELECT   SUBSTR(A.BUDGET_ACNT_CODE,1,3) || '-' ||
							 SUBSTR(A.BUDGET_ACNT_CODE,4,4) AS BUDGET_ACNT_CODE ,
			         SUBSTR(A.EXPNDTR_UNIT_CODE,1,2) || '-' ||
			         SUBSTR(A.EXPNDTR_UNIT_CODE,3,2) || '-' ||
			         SUBSTR(A.EXPNDTR_UNIT_CODE,5,2) || '-' ||
			         SUBSTR(A.EXPNDTR_UNIT_CODE,7,2) AS EXPNDTR_UNIT_CODE,
			         B.EXPNDTR_UNIT_NM || '('||
			         A.COMPUT_BSIS_NM ||')' AS EXPNDTR_COMPUT_NM,
			         A.BUDGET_AM
			FROM TBBDG_FRMTN_BUDGET C
			LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS A
			ON A.YEAR = C.YEAR
			AND A.BSNS_SE = C.BSNS_SE
			AND A.BALC_SE = C.BALC_SE
			AND A.BUDGET_SE = C.BUDGET_SE
			AND A.BUDGET_ACNT_CODE = C.BUDGET_ACNT_CODE
			AND A.EXPNDTR_UNIT_CODE = C.EXPNDTR_UNIT_CODE
			LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE B
			ON A.YEAR = B.YEAR
			AND A.BSNS_SE = B.BSNS_SE
			AND A.BALC_SE = B.BALC_SE
			AND A.BUDGET_ACNT_CODE = B.BUDGET_ACNT_CODE
			AND A.EXPNDTR_UNIT_CODE = B.EXPNDTR_UNIT_CODE
			WHERE    A.YEAR      = #YEAR#
			<isNotEmpty property="BSNS_SE">
			AND      A.BSNS_SE   = #BSNS_SE#
			</isNotEmpty>
			<isNotEmpty property="BALC_SE">
			AND      A.BALC_SE   = #BALC_SE#
			</isNotEmpty>
			AND      A.BUDGET_SE = #BUDGET_SE#
			ORDER BY A.BUDGET_ACNT_CODE,
			         A.EXPNDTR_UNIT_CODE,
			         A.COMPUT_BSIS_CODE	
	</select>
	<!-- 계정별 예산서 출력대상 조회 -->
	<select id="BDG030301DAO.selectAcntPrint" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG030301DAO.selectAcntPrint*/]]>
		WITH BUDGET_ACNT_TREE AS (
		    SELECT ROWNUM       AS RNUM
		          ,b1.YEAR
		          ,b1.BSNS_SE
		          ,b1.BALC_SE
		          ,b1.BUDGET_ACNT_CODE
		          ,b1.BUDGET_ACNT_NM
		          ,b1.ACNT_LEVEL
		          ,b1.UPPER_ACNT_CODE
		          ,b1.TAXITM_CODE
		          ,DECODE(b1.TAXITM_CODE,NULL,NULL,'□ (')||b1.TAXITM_CODE||DECODE(b1.TAXITM_CODE,NULL,NULL,') ')||b1.TAXITM_NM                                          AS TAXITM_NM
		          ,b1.DEPT_CODE
		          ,DECODE(b1.DEPT_CODE,NULL,NULL,'○ (')||SUBSTR(b1.DEPT_CODE,3,2)||DECODE(b1.DEPT_CODE,NULL,NULL,') ')||b1.DEPT_NM                                     AS DEPT_NM
		          ,b1.EXPNDTR_UNIT_CODE
		          ,DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,'ㆍ (')||SUBSTR(b1.EXPNDTR_UNIT_CODE,5,2)||DECODE(b1.EXPNDTR_UNIT_CODE,NULL,NULL,') ')||b1.EXPNDTR_UNIT_NM    AS EXPNDTR_UNIT_NM
		          ,b1.COMPUT_BSIS_CODE
		          ,DECODE(b1.COMPUT_BSIS_NM,NULL,NULL,'- ')||b1.COMPUT_BSIS_NM                                                                                         AS COMPUT_BSIS_NM
		          ,b1.COMPUT_BSIS
		          ,b1.COMPUT_BSIS_DTLS                                                                                                                                 AS COMPUT_BSIS_DTLS
		          ,b1.BUDGET_AM
		          ,b1.BSIS_BUDGET_AM
		          ,b1.NOW_EXECUT_AM
		          ,b2.PRV_EXECUT_AM
		          ,SYS_CONNECT_BY_PATH(b1.BUDGET_ACNT_NM2,'|')||'|'                                                                                                    AS ACNT_NM_PATH
		    FROM   (
		            SELECT a1.YEAR
		                  ,a1.BSNS_SE
		                  ,a1.BALC_SE
		                  ,a1.BUDGET_ACNT_CODE
		                  ,a1.BUDGET_ACNT_NM
		                  ,(CASE WHEN a1.ACNT_LEVEL &lt; '4' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)
		                         WHEN SUBSTR(a1.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4, 2)
		                         ELSE SUBSTR(a1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(a1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| a1.BUDGET_ACNT_NM     AS BUDGET_ACNT_NM2
		                  ,DECODE(a1.ACNT_LEVEL,'7', '4',a1.ACNT_LEVEL)                                                 AS ACNT_LEVEL
		                  ,a1.UPPER_ACNT_CODE
		                  ,a2.TAXITM_CODE
		                  ,a2.TAXITM_NM
		                  ,a2.DEPT_CODE
		                  ,a2.DEPT_NM
		                  ,a3.EXPNDTR_UNIT_CODE
		                  ,a3.EXPNDTR_UNIT_NM
		                  ,a4.COMPUT_BSIS_CODE                                                                          AS COMPUT_BSIS_CODE
		                  ,a4.COMPUT_BSIS_NM                                                                            AS COMPUT_BSIS_NM
		                  ,a3.COMPUT_BSIS_DTLS                                                                          AS COMPUT_BSIS
		                  ,a4.COMPUT_BSIS_DTLS                                                                          AS COMPUT_BSIS_DTLS
		                  ,(CASE WHEN a1.BALC_SE='1' THEN TRUNC(NVL(a3.BUDGET_AM,0)/1000)
		                         WHEN a1.BALC_SE='2' THEN CEIL( NVL(a3.BUDGET_AM,0)/1000)               ELSE 0 END)     AS BUDGET_AM
		                  ,(CASE WHEN a1.BALC_SE='1' THEN TRUNC(NVL(a4.BUDGET_AM,0)/1000)
		                         WHEN a1.BALC_SE='2' THEN CEIL( NVL(a4.BUDGET_AM,0)/1000)               ELSE 0 END)     AS BSIS_BUDGET_AM
		                  ,(CASE WHEN a1.BALC_SE='1' THEN TRUNC(NVL(a4.BUDGET_AM,a3.BUDGET_AM)/1000)
		                         WHEN a1.BALC_SE='2' THEN CEIL( NVL(a4.BUDGET_AM,a3.BUDGET_AM)/1000)    ELSE 0 END)     AS NOW_EXECUT_AM
		            FROM   TBBDG_BUDGET_ACNT_CODE a1
		                   LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a2
		                        ON a1.YEAR = a2.YEAR
		                       AND a1.BSNS_SE = a2.BSNS_SE
		                       AND a1.BALC_SE = a2.BALC_SE
		                       AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
		                       <!-- AND a2.DEPT_CODE NOT IN (SELECT DEPT_CODE FROM VWHRM_DEPT WHERE USE_AT = '1' AND BPLC_SE NOT IN ('01','02')) -->
		                   LEFT OUTER JOIN TBBDG_FRMTN_BUDGET a3
		                        ON a2.YEAR              = a3.YEAR
		                       AND a2.BSNS_SE           = a3.BSNS_SE
		                       AND a2.BALC_SE           = a3.BALC_SE
		                       AND a2.DEPT_CODE         = a3.DEPT_CODE
		                       AND a2.BUDGET_ACNT_CODE  = a3.BUDGET_ACNT_CODE
		                       AND a2.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
		                       <isNotEmpty property="BUDGET_SE">
		                       AND a3.BUDGET_SE         = #BUDGET_SE#
		                       </isNotEmpty>
		                       <isNotEmpty property="ACNT_CODE">
		                       AND a3.BUDGET_ACNT_CODE  = #ACNT_CODE#
		                       </isNotEmpty>
		                       <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">a3.DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                   LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS a4
		                        ON a3.YEAR              = a4.YEAR
		                       AND a3.BSNS_SE           = a4.BSNS_SE
		                       AND a3.BALC_SE           = a4.BALC_SE
		                       AND a3.BUDGET_SE         = a4.BUDGET_SE
		                       AND a3.DETAIL_BSNS_CODE  = a4.DETAIL_BSNS_CODE
		                       AND a3.DEPT_CODE         = a4.DEPT_CODE
		                       AND a3.BUDGET_ACNT_CODE  = a4.BUDGET_ACNT_CODE
		                       AND a3.EXPNDTR_UNIT_CODE = a4.EXPNDTR_UNIT_CODE
		            WHERE  1=1
		            AND    a1.YEAR    = #YEAR#
		            <isNotEmpty property="BSNS_SE">
		            AND    a1.BSNS_SE = #BSNS_SE#
		            </isNotEmpty>
		            <isNotEmpty property="BALC_SE">
		            AND    a1.BALC_SE = #BALC_SE#
		            </isNotEmpty>
		           ) b1
		           LEFT OUTER JOIN (
		                            SELECT c1.YEAR
		                                  ,c1.BSNS_SE
		                                  ,c1.BALC_SE
		                                  ,c1.BUDGET_ACNT_CODE
		                                  ,c1.EXPNDTR_UNIT_CODE
		                                  ,c2.COMPUT_BSIS_CODE
		                                  ,(CASE WHEN c1.BALC_SE='1' THEN TRUNC(SUM(c1.BUDGET_AM)/1000)
		                                         WHEN c1.BALC_SE='2' THEN CEIL( SUM(c1.BUDGET_AM)/1000)    ELSE 0 END)     AS PRV_EXECUT_AM
		                            FROM   TBBDG_FRMTN_BUDGET c1
		                                   LEFT OUTER JOIN TBBDG_FRMTN_COMPUT_BSIS c2
		                                        ON c1.YEAR              = c2.YEAR
		                                       AND c1.BSNS_SE           = c2.BSNS_SE
		                                       AND c1.BALC_SE           = c2.BALC_SE
		                                       AND c1.BUDGET_SE         = c2.BUDGET_SE
		                                       AND c1.DETAIL_BSNS_CODE  = c2.DETAIL_BSNS_CODE
		                                       AND c1.DEPT_CODE         = c2.DEPT_CODE
		                                       AND c1.BUDGET_ACNT_CODE  = c2.BUDGET_ACNT_CODE
		                                       AND c1.EXPNDTR_UNIT_CODE = c2.EXPNDTR_UNIT_CODE
		                            WHERE  1=1
		                            	   <isNotEmpty property="BUDGET_SE">
		                            	   AND c1.BUDGET_SE = #BUDGET_SE#
		                            	   </isNotEmpty>
		                                   <isNotEmpty property="ACNT_CODE">
		                                   AND c1.BUDGET_ACNT_CODE  = #ACNT_CODE#
		                                   </isNotEmpty>
		                                   <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">c1.DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                            GROUP BY c1.YEAR
		                                    ,c1.BSNS_SE
		                                    ,c1.BALC_SE
		                                    ,c1.BUDGET_ACNT_CODE
		                                    ,c1.EXPNDTR_UNIT_CODE
		                                    ,c2.COMPUT_BSIS_CODE
		                           ) b2
		                ON b1.YEAR              = (b2.YEAR+1)
		               AND b1.BSNS_SE           = b2.BSNS_SE
		               AND b1.BALC_SE           = b2.BALC_SE
		               AND b1.BUDGET_ACNT_CODE  = b2.BUDGET_ACNT_CODE
		               AND b1.EXPNDTR_UNIT_CODE = b2.EXPNDTR_UNIT_CODE
		               AND b1.COMPUT_BSIS_CODE  = b2.COMPUT_BSIS_CODE
		    WHERE  1=1
		    START WITH b1.UPPER_ACNT_CODE IS NULL
		    CONNECT BY PRIOR b1.BUDGET_ACNT_CODE = b1.UPPER_ACNT_CODE
		    ORDER SIBLINGS BY b1.YEAR
		                     ,b1.BSNS_SE
		                     ,b1.BALC_SE
		                     ,b1.BUDGET_ACNT_CODE
		                     ,b1.DEPT_CODE
		                     ,b1.EXPNDTR_UNIT_CODE
		                     ,b1.COMPUT_BSIS_CODE
		)
		SELECT s1.YEAR                              AS YEAR
		      ,s1.BSNS_SE                           AS BSNS_SE
		      ,s1.BALC_SE                           AS BALC_SE
		      ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
		      ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
		      ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
		      ,s1.UPPER_ACNT_CODE                   AS UPPER_ACNT_CODE
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
		      ,s1.TAXITM_NM
		      ,s1.DEPT_CODE
		      ,s1.DEPT_NM
		      ,s1.EXPNDTR_UNIT_NM
		      ,s1.COMPUT_BSIS_CODE
		      ,s1.COMPUT_BSIS_NM
		      ,s1.COMPUT_BSIS
		      ,s1.COMPUT_BSIS_DTLS
		      ,s1.BUDGET_AM
		      ,s1.BSIS_BUDGET_AM
		      ,(SELECT SUM(NVL(a1.PRV_BUDGET_AM,0))
		        FROM   PRV_BUDGET_AM a1
		        START WITH a1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE   )        AS PRV_EXECUT_AM
		      ,(SELECT SUM(NVL(a1.NOW_EXECUT_AM,0))
		        FROM   BUDGET_ACNT_TREE a1
		        START WITH a1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		        CONNECT BY PRIOR a1.BUDGET_ACNT_CODE = a1.UPPER_ACNT_CODE   )        AS NOW_EXECUT_AM
		FROM   BUDGET_ACNT_TREE s1
		      
		WHERE  (
		        0 &lt;&gt; (SELECT SUM(NVL(A1.PRV_BUDGET_AM, 0))
		                    FROM   PRV_BUDGET_AM A1
		                    START WITH A1.BUDGET_ACNT_CODE = S2.BUDGET_ACNT_CODE
		                    CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE)
		        OR
		        0 &lt;&gt; (SELECT SUM(NVL(A1.NOW_EXECUT_AM, 0))
		                    FROM   BUDGET_ACNT_TREE A1
		                    START WITH A1.BUDGET_ACNT_CODE = S1.BUDGET_ACNT_CODE
		                    CONNECT BY PRIOR A1.BUDGET_ACNT_CODE = A1.UPPER_ACNT_CODE)
		       )
		ORDER BY s1.RNUM
	</select>
	<!-- 사업지구팝업 조회 -->
	<select id="BDG030301DAO.businessDistrictList"  resultClass="java.util.HashMap">
		SELECT A.BSNS_CODE AS FULLCODE, 
		       SUBSTR(A.BSNS_CODE,2) AS CODE, 
		       A.BSNS_NM AS CODE_NM, 
		       A.BSNS_TY AS TYPE,
		       CASE A.BSNS_CODE 
		           WHEN B.BSNS_AREA_CODE 
		           THEN '1' 
		           ELSE '0' 
		       END AS REG_YN 
		  FROM TBPRJ_BSNS_CODE A 
		   LEFT OUTER JOIN TBCMP_REWARD_BSNS_DSTRC B 
		       ON B.BSNS_AREA_CODE = A.BSNS_CODE 		  
		 WHERE 1=1
		 AND A.USE_AT = '1' 
		<isNotEmpty property="bsnsNm">
		       AND A.BSNS_NM  LIKE '%' || #bsnsNm# || '%'
		</isNotEmpty>
		<isNotEmpty property="bsnsTy">
		       AND A.BSNS_TY = #bsnsTy# 
		</isNotEmpty>
		ORDER BY A.BSNS_NM
	</select>

</sqlMap>