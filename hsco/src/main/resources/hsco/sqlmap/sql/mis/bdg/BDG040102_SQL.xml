<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG040102_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 레포츠센터수입 조회 -->
	<select id="BDG040102DAO.selectOperIncme" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.selectOperIncme*/]]>
		SELECT t1.YEAR                                     AS YEAR
		      ,t1.BSNS_SE                                  AS BSNS_SE
		      ,t1.BALC_SE                                  AS BALC_SE
		      ,t1.INCME_DT                                 AS INCME_DT
		      ,t1.DETAIL_BSNS_CODE                         AS DETAIL_BSNS_CODE
		      ,t1.DEPT_CODE                                AS DEPT_CODE
		      ,t5.DEPT_NM                                  AS DEPT_NM
		      ,t1.BUDGET_ACNT_CODE                         AS BUDGET_ACNT_CODE
		      ,t3.BUDGET_ACNT_NM                           AS BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE                        AS EXPNDTR_UNIT_CODE
		      ,t4.EXPNDTR_UNIT_NM                          AS EXPNDTR_UNIT_NM
		      ,NVL(t1.SE_ACCNUT_ACNT_CODE, '1281521')      AS SE_ACCNUT_ACNT_CODE /*구분회계코드(레포츠센터)*/
		      ,t1.ATMC_JRNLZ_TY_CODE                       AS ATMC_JRNLZ_TY_CODE
		      ,NVL(t1.LVDC_AM,0)                           AS LVDC_AM
		      ,NVL(t2.ACCMLT_LVDC_AM,0)                    AS ACCMLT_LVDC_AM
		      ,NVL(t1.INCME_AM,0)                          AS INCME_AM
		      ,NVL(t2.ACCMLT_INCME_AM,0)                   AS ACCMLT_INCME_AM
		      ,NVL(t1.DECME_AM,0)        				   AS DECME_AM 
	          ,NVL(t2.ACCMLT_DECME_AM,0) 				   AS ACCMLT_DECME_AM 
	          ,NVL(t1.PSTYR_ATMPT_AM,0)  				   AS PSTYR_ATMPT_AM 
	          ,NVL(t1.LEV_CHIT_NO,0)            		   AS LEV_CHIT_NO 
	          ,NVL(t1.INCME_CHIT_NO,0)          		   AS INCME_CHIT_NO 
	          ,NVL(t1.DECME_CHIT_NO,0)          		   AS DECME_CHIT_NO 
		      ,t1.SUMRY                                    AS SUMRY
		      ,t1.LVDC_SUMRY                               AS LVDC_SUMRY
		      ,t1.INCME_SUMRY                              AS INCME_SUMRY
		      ,t1.DECME_SUMRY                              AS DECME_SUMRY
		      ,(CASE SFCOM_GET_IN_SANCTNSTS('MIS' /*SYS_SE_CODE*/,'BDG' /*JOB_SE*/,t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE /*JOB_KEY*/, t1.REGIST_DT) WHEN 'S01' THEN '1' ELSE '0' END) AS CHK_ORG
		      ,(CASE SFCOM_GET_IN_SANCTNSTS('MIS' /*SYS_SE_CODE*/,'BDG' /*JOB_SE*/,t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE /*JOB_KEY*/, t1.REGIST_DT) WHEN 'S01' THEN '1' ELSE '0' END) AS CHK
		      /*,(CASE WHEN t1.LEV_CHIT_NO IS NULL OR t1.LEV_CHIT_NO = 0 THEN '1' ELSE '0' END) AS CHK*/
		      ,SFCOM_GET_IN_SANCTNSTS    ('MIS' /*SYS_SE_CODE*/,'BDG' /*JOB_SE*/,t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE /*JOB_KEY*/, t1.REGIST_DT) AS LAST_SANCTN_STTUS
		      ,SFCOM_GET_IN_SANCTNSTS_IMG('MIS' /*SYS_SE_CODE*/,'BDG' /*JOB_SE*/,t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE /*JOB_KEY*/, t1.REGIST_DT) AS LAST_SANCTNSTS_IMG
		      ,t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE AS JOB_KEY
		      ,t1.REGIST_DT
		      ,t1.FILE_SN
		FROM   TBBDG_OPER_INCME t1
		       LEFT OUTER JOIN (
		                        SELECT s1.YEAR
		                              ,s1.BSNS_SE
		                              ,s1.BALC_SE
		                              ,s1.BUDGET_ACNT_CODE
		                              ,s1.INCME_DT
		                              ,SUM(NVL(s2.LVDC_AM,0))      AS ACCMLT_LVDC_AM
		                              ,SUM(NVL(s2.INCME_AM,0))     AS ACCMLT_INCME_AM
		                              ,SUM(NVL(s2.DECME_AM,0)) 	   AS ACCMLT_DECME_AM
		                        FROM   TBBDG_OPER_INCME s1
		                               LEFT OUTER JOIN TBBDG_OPER_INCME s2
		                                    ON s1.YEAR = s2.YEAR
		                                   AND s1.BSNS_SE = s2.BSNS_SE
		                                   AND s1.BALC_SE = s2.BALC_SE
		                                   AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		                                   AND s1.INCME_DT >= s2.INCME_DT
		                        GROUP BY s1.YEAR
		                                ,s1.BSNS_SE
		                                ,s1.BALC_SE
		                                ,s1.BUDGET_ACNT_CODE
		                                ,s1.INCME_DT
		                       ) t2
		            ON t1.YEAR              = t2.YEAR
		           AND t1.BSNS_SE           = t2.BSNS_SE
		           AND t1.BALC_SE           = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		           AND t1.INCME_DT          = t2.INCME_DT
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t3
		            ON t1.YEAR              = t3.YEAR
		           AND t1.BSNS_SE           = t3.BSNS_SE
		           AND t1.BALC_SE           = t3.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE t4
		            ON t1.YEAR              = t4.YEAR
		           AND t1.BSNS_SE           = t4.BSNS_SE
		           AND t1.BALC_SE           = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t4.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t4.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		WHERE  t1.YEAR    = #YEAR#
		  AND  t1.BSNS_SE = #BSNS_SE#
		  AND  t1.BALC_SE = #BALC_SE#
		<isNotEmpty property="ST_DT">
			<isNotEmpty property="ED_DT" prepend="AND ">
				t1.INCME_DT BETWEEN #ST_DT# AND #ED_DT#
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.INCME_DT DESC
		        ,t1.BUDGET_ACNT_CODE
	</select>


	<!-- 레포츠센터수입 조회 -->
	<select id="BDG040102DAO.sanSelectOperIncme" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.sanSelectOperIncme*/]]>
		WITH BUDGET_ACNT_TREE AS 
		       (SELECT YEAR , 
		              BSNS_SE , 
		              BALC_SE , 
		              BUDGET_ACNT_CODE , 
		              BUDGET_ACNT_NM , 
		              ACNT_LEVEL , 
		              UPPER_ACNT_CODE , 
		              ELPD_EXCUT_RT , 
		              ELPD_EXCUT_AT , 
		              PLAN_REGIST_AT , 
		              CHIT_PROCESS_AT , 
		              JRNLZ_CNT , 
		              SYS_CONNECT_BY_PATH(BUDGET_ACNT_NM,'|')||'|' AS ACNT_NM_PATH 
		         FROM 
		              (SELECT a1.YEAR , 
		                     a1.BSNS_SE , 
		                     a1.BALC_SE , 
		                     a1.BUDGET_ACNT_CODE , 
		                     a1.BUDGET_ACNT_NM , 
		                     DECODE(a1.ACNT_LEVEL,'7', '4',a1.ACNT_LEVEL) AS ACNT_LEVEL , 
		                     a1.UPPER_ACNT_CODE , 
		                     a1.ELPD_EXCUT_RT , 
		                     a1.ELPD_EXCUT_AT , 
		                     a1.PLAN_REGIST_AT , 
		                     a1.CHIT_PROCESS_AT , 
		                     a2.JRNLZ_CNT 
		                FROM TBBDG_BUDGET_ACNT_CODE a1 
		                 LEFT OUTER JOIN 
		                     (SELECT BUDGET_YEAR , 
		                            BSNS_SE , 
		                            BALC_SE , 
		                            BUDGET_ACNT_CODE , 
		                            COUNT(1) AS JRNLZ_CNT 
		                       FROM TBACC_ATMC_JRNLZ_TY 
		                      GROUP BY BUDGET_YEAR , 
		                            BSNS_SE , 
		                            BALC_SE , 
		                            BUDGET_ACNT_CODE 
		                     ) a2 
		                     ON a1.YEAR = a2.BUDGET_YEAR 
		                     AND a1.BSNS_SE = a2.BSNS_SE 
		                     AND a1.BALC_SE = a2.BALC_SE 
		                     AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE 
					   WHERE a1.YEAR    = #YEAR#
						 AND a1.BSNS_SE = #BSNS_SE#
						 AND a1.BALC_SE = #BALC_SE#
		              ) START 
		       WITH UPPER_ACNT_CODE IS NULL CONNECT BY PRIOR BUDGET_ACNT_CODE = UPPER_ACNT_CODE 
		       ORDER SIBLINGS BY YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE 
		        ) 
		SELECT t1.YEAR                                     AS YEAR
		      ,t1.BSNS_SE                                  AS BSNS_SE
		      ,t1.BALC_SE                                  AS BALC_SE
		      ,t1.INCME_DT                                 AS INCME_DT
		      ,t1.DETAIL_BSNS_CODE                         AS DETAIL_BSNS_CODE
		      ,t1.DEPT_CODE                                AS DEPT_CODE
		      ,t5.DEPT_NM                                  AS DEPT_NM
		      ,t1.BUDGET_ACNT_CODE                         AS BUDGET_ACNT_CODE
		      ,t3.BUDGET_ACNT_NM                           AS BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE                        AS EXPNDTR_UNIT_CODE
		      ,t4.EXPNDTR_UNIT_NM                          AS EXPNDTR_UNIT_NM
		      ,NVL(t1.SE_ACCNUT_ACNT_CODE, '1281521')  AS SE_ACCNUT_ACNT_CODE /*구분회계코드(레포츠센터)*/
		      ,t1.ATMC_JRNLZ_TY_CODE                       AS ATMC_JRNLZ_TY_CODE
		      ,NVL(t1.LVDC_AM,0)                           AS LVDC_AM
		      ,NVL(t2.ACCMLT_LVDC_AM,0)                    AS ACCMLT_LVDC_AM
		      ,NVL(t1.INCME_AM,0)                          AS INCME_AM
		      ,NVL(t2.ACCMLT_INCME_AM,0)                   AS ACCMLT_INCME_AM
		      ,NVL(t1.DECME_AM,0)                          AS DECME_AM
		      ,NVL(t2.ACCMLT_DECME_AM,0)                   AS ACCMLT_DECME_AM
		      ,NVL(t1.PSTYR_ATMPT_AM,0)                    AS PSTYR_ATMPT_AM
		      ,t1.LEV_CHIT_NO                              AS LEV_CHIT_NO
		      ,t1.INCME_CHIT_NO                            AS INCME_CHIT_NO
		      ,t1.SUMRY                                    AS SUMRY
		      ,t1.LVDC_SUMRY                               AS LVDC_SUMRY
		      ,t1.INCME_SUMRY                              AS INCME_SUMRY
		      ,t1.DECME_SUMRY                              AS DECME_SUMRY
	          ,SUBSTR(t3.ACNT_NM_PATH, INSTR(t3.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(t3.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(t3.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN 
	          ,SUBSTR(t3.ACNT_NM_PATH, INSTR(t3.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(t3.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(t3.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG 
	          ,SUBSTR(t3.ACNT_NM_PATH, INSTR(t3.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(t3.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(t3.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG 
	          ,SUBSTR(t3.ACNT_NM_PATH, INSTR(t3.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(t3.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(t3.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK 
		      ,t1.REGIST_DT
		FROM   TBBDG_OPER_INCME t1
		       LEFT OUTER JOIN (
		                        SELECT s1.YEAR
		                              ,s1.BSNS_SE
		                              ,s1.BALC_SE
		                              ,s1.BUDGET_ACNT_CODE
		                              ,s1.INCME_DT
		                              ,SUM(NVL(s2.LVDC_AM,0))      AS ACCMLT_LVDC_AM
		                              ,SUM(NVL(s2.INCME_AM,0))     AS ACCMLT_INCME_AM
		                              ,SUM(NVL(s2.DECME_AM,0)) 	   AS ACCMLT_DECME_AM
		                        FROM   TBBDG_OPER_INCME s1
		                               LEFT OUTER JOIN TBBDG_OPER_INCME s2
		                                    ON s1.YEAR = s2.YEAR
		                                   AND s1.BSNS_SE = s2.BSNS_SE
		                                   AND s1.BALC_SE = s2.BALC_SE
		                                   AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		                                   AND s1.INCME_DT >= s2.INCME_DT
		                        GROUP BY s1.YEAR
		                                ,s1.BSNS_SE
		                                ,s1.BALC_SE
		                                ,s1.BUDGET_ACNT_CODE
		                                ,s1.INCME_DT
		                       ) t2
		            ON t1.YEAR              = t2.YEAR
		           AND t1.BSNS_SE           = t2.BSNS_SE
		           AND t1.BALC_SE           = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		           AND t1.INCME_DT          = t2.INCME_DT
		       LEFT OUTER JOIN BUDGET_ACNT_TREE t3
		            ON t1.YEAR              = t3.YEAR
		           AND t1.BSNS_SE           = t3.BSNS_SE
		           AND t1.BALC_SE           = t3.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t3.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE t4
		            ON t1.YEAR              = t4.YEAR
		           AND t1.BSNS_SE           = t4.BSNS_SE
		           AND t1.BALC_SE           = t4.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t4.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t4.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN VWHRM_DEPT t5
		            ON t1.DEPT_CODE = t5.DEPT_CODE
		WHERE  t1.YEAR    = #YEAR#
		  AND  t1.BSNS_SE = #BSNS_SE#
		  AND  t1.BALC_SE = #BALC_SE#
		  AND  t1.BALC_SE||'^'||t1.DETAIL_BSNS_CODE||'^'||t1.DEPT_CODE||'^'||t1.BUDGET_ACNT_CODE||'^'||t1.EXPNDTR_UNIT_CODE||'^'||t1.INCME_DT||'^'||t1.YEAR||'^'||t1.BSNS_SE = #JOB_KEY#
	</select>


	<!-- 레포츠센터수입 일괄제거 -->
	<delete id="BDG040102DAO.deleteOperIncme" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.deleteOperIncme*/]]>
		DELETE
		FROM   TBBDG_OPER_INCME
		WHERE  YEAR          = #YEAR#
		AND    BSNS_SE       = #BSNS_SE#
		AND    BALC_SE       = #BALC_SE#
		AND    INCME_DT      = #INP_DT#
		AND    LEV_CHIT_NO   IS NULL
		AND    INCME_CHIT_NO IS NULL
	</delete>

	
	<!-- 레포츠센터수입 일괄생성 -->
	<insert id="BDG040102DAO.insertOperIncme" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.insertOperIncme*/]]>
		INSERT INTO TBBDG_OPER_INCME (
               YEAR
               ,BSNS_SE
               ,BALC_SE
               ,DETAIL_BSNS_CODE
               ,ATMC_JRNLZ_TY_CODE
               ,DEPT_CODE
               ,BUDGET_ACNT_CODE
               ,EXPNDTR_UNIT_CODE
               ,INCME_DT
               ,LVDC_AM
               ,INCME_AM
               ,DECME_AM
               ,PSTYR_ATMPT_AM
               ,REGISTER_ID
               ,REGIST_DT
               ,UPDUSR_ID
               ,UPDT_DT
               )
               SELECT t1.YEAR
                     ,t1.BSNS_SE
                     ,t1.BALC_SE
                     ,t1.DETAIL_BSNS_CODE
                     ,(SELECT MAX(SN) FROM TBACC_ATMC_JRNLZ_TY
                        WHERE 1=1
                          AND BUDGET_YEAR = t1.YEAR
                          AND BSNS_SE          = t1.BSNS_SE
                          AND BALC_SE          = t1.BALC_SE
                          AND BUDGET_ACNT_CODE = t1.BUDGET_ACNT_CODE
                     ) AS ATMC_JGNLZ_TY_CODE
                     ,t1.DEPT_CODE
                     ,t1.BUDGET_ACNT_CODE
                     ,t1.EXPNDTR_UNIT_CODE
                     ,#INP_DT#                                                 AS INCME_DT
                     ,0                                                        AS LVDC_AM
                     ,0                                                        AS INCME_AM
                     ,0                                                        AS DECME_AM
                     ,(SELECT SUM(NVL(LVDC_AM,0) - NVL(INCME_AM,0))
                      FROM   TBBDG_OPER_INCME
                      WHERE  YEAR              = t1.YEAR-1
                      AND    BSNS_SE           = t1.BSNS_SE
                      AND    BALC_SE           = t1.BALC_SE
                      AND    BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
                     )                                                        AS PSTYR_ATMPT_AM
                     ,#S_USER_ID#
                     ,SYSDATE
                     ,#S_USER_ID#
                     ,SYSDATE
                <isEqual property="BSNS_SE" compareValue="3" >
                 FROM TBBDG_EXPNDTR_UNIT_CODE t1
                </isEqual>
                <isNotEqual property="BSNS_SE" compareValue="3">
                 FROM TBBDG_EXECUT_BUDGET t1
                </isNotEqual>
                     INNER JOIN VWHRM_DEPT t2
                        ON t1.DEPT_CODE = t2.DEPT_CODE
                       AND t2.BPLC_SE   = '03'
               WHERE t1.YEAR    = #YEAR#
                 AND t1.BSNS_SE = #BSNS_SE#
                 AND t1.BALC_SE = #BALC_SE#
                 AND NOT EXISTS (SELECT *
				                   FROM TBBDG_OPER_INCME
				                  WHERE YEAR              = t1.YEAR
				                    AND BSNS_SE           = t1.BSNS_SE
				                    AND BALC_SE           = t1.BALC_SE
				                    AND DETAIL_BSNS_CODE  = t1.DETAIL_BSNS_CODE
				                    AND DEPT_CODE         = t1.DEPT_CODE
				                    AND BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
				                    AND EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
				                    AND INCME_DT          = #INP_DT#
					              )
	</insert>


	<!-- 레포츠센터수입 수정 -->
	<update id="BDG040102DAO.updateOperIncme" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.updateOperIncme*/]]>
		UPDATE TBBDG_OPER_INCME
		SET    SE_ACCNUT_ACNT_CODE = #SE_ACCNUT_ACNT_CODE#
		      ,ATMC_JRNLZ_TY_CODE  = #ATMC_JRNLZ_TY_CODE#
		      ,LVDC_AM             = NVL(#LVDC_AM#,0)
		      ,INCME_AM            = NVL(#INCME_AM#,0)
		      ,DECME_AM            = NVL(#DECME_AM#,0)
		      ,LEV_CHIT_NO         = #LEV_CHIT_NO#
		      ,INCME_CHIT_NO       = #INCME_CHIT_NO#
		      ,DECME_CHIT_NO       = #DECME_CHIT_NO#
		      ,SUMRY               = #SUMRY#
		      ,LVDC_SUMRY          = #LVDC_SUMRY#
		      ,INCME_SUMRY         = #INCME_SUMRY#
		      ,DECME_SUMRY         = #DECME_SUMRY#
		      ,UPDUSR_ID           = #S_USER_ID#
		      ,UPDT_DT             = SYSDATE
		WHERE  YEAR                = #YEAR#
		AND    BSNS_SE             = #BSNS_SE#
		AND    BALC_SE             = #BALC_SE#
		AND    DETAIL_BSNS_CODE    = #DETAIL_BSNS_CODE#
		AND    DEPT_CODE           = #DEPT_CODE#
		AND    BUDGET_ACNT_CODE    = #BUDGET_ACNT_CODE#
		AND    EXPNDTR_UNIT_CODE   = #EXPNDTR_UNIT_CODE#
		AND    INCME_DT            = #INCME_DT#
	</update>
	
	<!-- 레포츠센터수입 제거 -->
	<delete id="BDG040102DAO.deleteOperIncmeEa" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.deleteOperIncmeEa*/]]>
		DELETE
		FROM   TBBDG_OPER_INCME
		WHERE  YEAR          = #YEAR#
		AND    BSNS_SE       = #BSNS_SE#
		AND    BALC_SE       = #BALC_SE#
		AND    INCME_DT      = #INCME_DT#
		AND	   BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#
		AND    EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#	
		AND    (LEV_CHIT_NO   IS NULL OR LEV_CHIT_NO = 0)
		AND    (INCME_CHIT_NO IS NULL OR INCME_CHIT_NO = 0)
	</delete>
	
	<!-- 과년도미수금 수정 -->
	<update id="BDG040102DAO.updatePstyrAtmptAm" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.updatePstyrAtmptAm*/]]>
		UPDATE TBBDG_OPER_INCME t1
		SET    PSTYR_ATMPT_AM = (
		                         SELECT NVL(SUM( NVL(LVDC_AM,0) - NVL(INCME_AM,0) ), 0)
		                         FROM   TBBDG_OPER_INCME
		                         WHERE  YEAR              = t1.YEAR - 1
		                         AND    BSNS_SE           = t1.BSNS_SE
		                         AND    BALC_SE           = t1.BALC_SE
		                         AND    BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
		                        )
		WHERE  1 = 1
		<!--  2016.07.07
		AND    t1.YEAR              = TO_NUMBER(#YEAR#)+1
		-->
		AND    t1.YEAR              = #YEAR#
		AND    t1.BSNS_SE           = #BSNS_SE#
		AND    t1.BALC_SE           = #BALC_SE#
		AND    t1.BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
	</update>
	
	<parameterMap id="cnterIncmeSlipIParam" class="java.util.HashMap">
		<parameter property="IN_YEAR"             jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="IN_BSNS_SE"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="IN_BALC_SE"          jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="IN_BUDGET_ACNT_CODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="IN_INCME_DT"         jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="IN_REGISTER_ID"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="OUT_SLIP_NO"         jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="OUT_RESULT_MSG"      jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
	</parameterMap>
	
	<!-- 자동 전표 생성 -->
	<procedure id="BDG040102DAO.callSpaccCnterIncmeSlipI" parameterMap="cnterIncmeSlipIParam">
		{ call SPACC_CNTER_INCME_SLIP_I(?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>
	
	
	<!-- 레포츠센터 전표번호 확인 -->
	<update id="BDG040102DAO.updateChitNo" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040102DAO.updateChitNo*/]]>
		UPDATE TBBDG_OPER_INCME A 
		       SET LEV_CHIT_NO = (SELECT NVL(MAX(B.CHIT_NO), 0) AS LEV_CHIT_NO 
		                           FROM TBACC_CHIT_MASTR B 
		                          WHERE ACCNUT_YEAR = A.YEAR 
		                                AND B.CHIT_NO = A.LEV_CHIT_NO 
		                         ) 
		       , INCME_CHIT_NO = (SELECT NVL(MAX(B.CHIT_NO), 0) AS INCME_CHIT_NO 
		                           FROM TBACC_CHIT_MASTR B 
		                          WHERE ACCNUT_YEAR = A.YEAR 
		                                AND B.CHIT_NO = A.INCME_CHIT_NO 
		                         ) 
		       , DECME_CHIT_NO = (SELECT NVL(MAX(B.CHIT_NO), 0) AS DECME_CHIT_NO 
		                           FROM TBACC_CHIT_MASTR B 
		                          WHERE ACCNUT_YEAR = A.YEAR 
		                                AND B.CHIT_NO = A.DECME_CHIT_NO 
		                         ) 
		 WHERE A.YEAR = #YEAR#
		       AND (NVL(LEV_CHIT_NO,1) != 0 OR NVL(INCME_CHIT_NO,1) != 0 OR NVL(DECME_CHIT_NO,1) != 0)
			<isNotEmpty property="ST_DT">
			   AND INCME_DT <![CDATA[>=]]> #ST_DT#
			</isNotEmpty>
			<isNotEmpty property="ED_DT">
			   AND INCME_DT <![CDATA[<=]]> #ED_DT#
			</isNotEmpty>
	</update>
	<select id="BDG040102DAO.selectAtchFile" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT   A.FILE_SN					 /*  파일일련번호 */
		         ,A.FILE_ORDR         	 	 /*  파일순차 */
		         ,A.FILE_STRE_COURS          /*  파일저장경로 */
		         ,A.STRE_FILE_NM        	 /*  저장파일명 */
		         ,A.ORGINL_FILE_NM           /*  원본파일명 */
		         ,A.FILE_EXTSN       	 	 /*  파일확장자 */
		         ,A.FILE_CN         		 /*  파일내용   */
		         ,A.FILE_MG         		 /*  파일크기   */
		         ,A.USE_AT         			 /*  사용여부   */
		         ,A.FILE_ID         		 /*       */
		         ,B.SYS_SE_CODE         	 /*  시스템구분코드 */
		         ,B.JOB_SE_CODE AS JOB_SE    /*  업무구분코드 */
		         ,ROW_NUMBER() OVER (PARTITION BY A.FILE_SN ORDER BY A.FILE_ORDR ASC) AS SN 
		         ,A.FILE_TY 
		         ,'theme://images/fileUpDownload/file_icon_'
		                  || DECODE(LOWER(A.FILE_EXTSN), 'zip', 'ZIP','rar', 'ZIP','7z', 'ZIP', 'jpg', 'IMG', 'jpeg', 'IMG', 'gif', 'IMG', 'png', 'IMG', 'bmp', 'IMG', 'txt', 'TXT', 'xml', 'TXT', 'doc', 'DOC', 'docx', 'DOC', 'xls', 'XLS', 'xlsx', 'XLS', 'ppt', 'PPT', 'pptx', 'PPT', 'pdf', 'PDF', 'hwp', 'HWP', 'hwt', 'HWP', 'ETC' )
		                  || '.png'                   AS FILE_IMAGE 
		         ,100                                  AS PROGRS 
		         ,NULL                                 AS TRNSMIS_FILE_SIZE 
		         ,'theme://images/img_WF_ConfirmE.png' AS DELETE_IMAGE 
		         ,NULL                                 AS STTUS
		FROM     TBCOM_CMMN_ATCHMNFL A         /* 공통첨부파일 */
		         ,TBCOM_CMMN_ATCHMNFL_MASTR B         /* 공통첨부파일마스터 */
		WHERE    1         =1
		AND      A.FILE_SN = B.FILE_SN         /* AND A.USE_AT='1' */
		AND      B.FILE_SN = #FILE_SN#         /* 파일일련번호 */
		AND		 A.CHRCTR_PREPAR_VALUE_0 = #FILE_VALUE_0#
		ORDER BY 1,2,3
	</select>

	<update id="BDG040102DAO.updateFileValue" parameterClass="java.util.HashMap">
		UPDATE TBCOM_CMMN_ATCHMNFL 
		   SET CHRCTR_PREPAR_VALUE_0 = #FILE_VALUE_0#
         WHERE FILE_SN = #FILE_SN# AND FILE_ORDR =  (SELECT  MAX(FILE_ORDR) FROM TBCOM_CMMN_ATCHMNFL WHERE FILE_SN = #FILE_SN#)
		
	</update>
</sqlMap>