<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM060502_SQL">

	<select id="HRM060502DAO.checkOfcps" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  HR_CLSF_SE 
		FROM  TBHRM_HR_MASTR 
		WHERE EMPNO = #APRSR_EMPNO#
	</select>
	
	<select id="HRM060502DAO.selectMlssClsfList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 a1.EVL_YEAR
			,a1.HT_SE
			,a1.APRSR_EMPNO
			,a1.HR_CLSF_SE
			,NVL(a2.CODE_NM,'전체') ||'('|| a1.APRSEE_CNT ||'명)' AS HR_CLSF_NM
		FROM (
		        SELECT t1.EVL_YEAR
		             , t1.HT_SE
		             , t2.APRSR_EMPNO
		             , CASE WHEN t3.OFCPS_SE IN ('01','02','35','03','04','35','36','37','38','31','14','39')
		                        THEN CASE WHEN t1.OFCPS_SE IN ('38','39') THEN '201' /*실처장직무대행->2급*/
		                                  WHEN t1.OFCPS_SE = '08' THEN '202' /*팀장직무대리->3급*/
		                                  WHEN t1.HR_CLSF_SE = '402' THEN '202' /*나급->3급*/
		                                  WHEN t1.HR_CLSF_SE = '403' THEN '203' /*다급->4급*/
		                                  WHEN t1.HR_CLSF_SE = '404' THEN '204' /*라급->5급*/
		                                  WHEN t1.HR_CLSF_SE = '405' THEN '205' /*마급->6급*/
		                                  WHEN t1.HR_CLSF_SE = '401' THEN '201' /*가급->2급*/
		                                  ELSE t1.HR_CLSF_SE
		                             END
		                    ELSE '%'
		               END AS HR_CLSF_SE
		             , COUNT(*) AS APRSEE_CNT
		        FROM TBHRM_MLSS_APRSEE t1
		             INNER JOIN TBHRM_MLSS_APRSR t2
		             ON  t1.EVL_YEAR = t2.EVL_YEAR
		             AND t1.HT_SE    = t2.HT_SE
		             AND t1.EMPNO    = t2.EMPNO
		             INNER JOIN TBHRM_HR_MASTR t3
		             ON  t2.APRSR_EMPNO = t3.EMPNO
		        WHERE t1.EVL_YEAR    = #EVL_YEAR#
		          AND t1.HT_SE       = #HT_SE#
		          AND t2.APRSR_EMPNO = #APRSR_EMPNO#
		        GROUP BY t1.EVL_YEAR
		               , t1.HT_SE
		               , t2.APRSR_EMPNO
		               , CASE WHEN t3.OFCPS_SE IN ('01','02','35','03','04','35','36','37','38','31','14','39')
		                          THEN CASE WHEN t1.OFCPS_SE IN ('38','39') THEN '201' /*실처장직무대행->2급*/
		                                    WHEN t1.OFCPS_SE = '08' THEN '202' /*팀장직무대리->3급*/
		                                    WHEN t1.HR_CLSF_SE = '402' THEN '202' /*나급->3급*/
		                                    WHEN t1.HR_CLSF_SE = '403' THEN '203' /*다급->4급*/
		                                    WHEN t1.HR_CLSF_SE = '404' THEN '204' /*라급->5급*/
		                                    WHEN t1.HR_CLSF_SE = '405' THEN '205' /*마급->6급*/
		                                    WHEN t1.HR_CLSF_SE = '401' THEN '201' /*가급->2급*/
		                                    ELSE t1.HR_CLSF_SE
		                               END
		                      ELSE '%'
		                 END
		     ) a1
		     LEFT OUTER JOIN TBCOM_CMMN_CODE a2
		     ON  a1.HR_CLSF_SE = a2.CODE
		     AND a2.GRP_CODE = 'HRM002'
		ORDER BY a2.CODE_ORDR
	</select>
	
	<!-- 쿼리명 : 다면평가 대상자 별 평가표 작성
	설명 : 다면평가 대상자를 조회하고 해당 대상자 별로 평가표를 작성한다.
	수정일  수정자  수정내용
	
	작성자 : 신지성
	최초작성일 : 2019.09.17
	-->
	<select id="HRM060502DAO.selectMlssAprsrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT T1.EVL_YEAR
		     , T1.HT_SE
		     , T1.EMPNO
		     , T2.EMPNM
		     , T1.DEPT_CODE
		     , CASE WHEN T2.OFCPS_SE IN ('38','39') THEN '201' /*실처장직무대행->2급*/
		            WHEN T2.OFCPS_SE = '08' THEN '202' /*팀장직무대리->3급*/
		            WHEN T1.HR_CLSF_SE = '401' THEN '201'
		            WHEN T1.HR_CLSF_SE = '402' THEN '202'
		            WHEN T1.HR_CLSF_SE = '403' THEN '203'
		            WHEN T1.HR_CLSF_SE = '404' THEN '204'
		            WHEN T1.HR_CLSF_SE = '405' THEN '205'
		            ELSE T1.HR_CLSF_SE
		       END AS HR_CLSF_SE
		     , SFHRM_GET_DEPTNM(T1.DEPT_CODE, NULL) AS DEPT_NM
		     , T3.APRSR_NO
		     , NVL(T4.SCORE, 0) AS SCORE
		     , T5.EVL_GRAD
		     , T3.PRSEN_AT
		     , T7.CODE_NM AS JSSFC_NM
		     , T8.CODE_NM AS HR_CLSF_NM
		FROM TBHRM_MLSS_APRSEE T1
	   INNER JOIN TBHRM_MLSS_APRSR T3
	         ON T1.EVL_YEAR = T3.EVL_YEAR
	         AND T1.HT_SE = T3.HT_SE
	         AND T1.EMPNO = T3.EMPNO
	   INNER JOIN TBHRM_HR_MASTR T2
	         ON T1.EMPNO = T2.EMPNO
	    LEFT OUTER JOIN (
	         	SELECT EVL_YEAR
	         	     , HT_SE
	         	     , EMPNO
	         	     , APRSR_NO
	         	     , SUM(SCORE) AS SCORE
	         	  FROM TBHRM_MLSS_SCORE
	         	 GROUP BY EVL_YEAR, HT_SE, EMPNO, APRSR_NO
	         ) T4
	         ON T1.EVL_YEAR = T4.EVL_YEAR
	         AND T1.HT_SE = T4.HT_SE
	         AND T1.EMPNO = T4.EMPNO
	         AND T3.APRSR_NO = T4.APRSR_NO
	    LEFT OUTER JOIN TBHRM_MLSS_GRAD T5
	         ON T4.EVL_YEAR = T5.EVL_YEAR
	         AND T4.HT_SE = T5.HT_SE
	         AND T5.MIN_SCR_ABOVE <![CDATA[<=]]> T4.SCORE
	         AND T5.MAX_SCR_BELO <![CDATA[>]]> T4.SCORE
         INNER JOIN TBHRM_MLSS_BSIS T6
             ON T1.EVL_YEAR = T6.EVL_YEAR
             AND T1.HT_SE   = T6.HT_SE
             AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN T6.EVL_BGNDE AND T6.EVL_ENDDE
        LEFT OUTER JOIN TBCOM_CMMN_CODE T7
		     ON  T1.JSSFC_SE = T7.CODE
		     AND T7.GRP_CODE = 'HRM001'
		LEFT OUTER JOIN TBCOM_CMMN_CODE T8
		     ON  CASE WHEN T2.OFCPS_SE IN ('38','39') THEN '201'
		              WHEN T2.OFCPS_SE = '08' THEN '202'
		              WHEN T1.HR_CLSF_SE = '401' THEN '201'
		              WHEN T1.HR_CLSF_SE = '402' THEN '202'
		              WHEN T1.HR_CLSF_SE = '403' THEN '203'
		              WHEN T1.HR_CLSF_SE = '404' THEN '204'
		              WHEN T1.HR_CLSF_SE = '405' THEN '205'
		              ELSE T1.HR_CLSF_SE
		         END = T8.CODE
		     AND T8.GRP_CODE = 'HRM002'
	   WHERE T1.EVL_YEAR 	= #EVL_YEAR#
	     AND T1.HT_SE 		= #HT_SE#
	     AND T3.APRSR_EMPNO = #APRSR_EMPNO#
	<isEqual property="HR_CLSF_SE" compareValue="201">
	     AND (T1.HR_CLSF_SE = #HR_CLSF_SE# OR T1.HR_CLSF_SE = '401' OR (T2.OFCPS_SE IN('38','39') AND T1.HR_CLSF_SE = '202'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="202">
	     AND (   (T1.HR_CLSF_SE = #HR_CLSF_SE# AND T2.OFCPS_SE NOT IN('38','39'))
	          OR (T1.HR_CLSF_SE = '402' AND T2.OFCPS_SE NOT IN('38','39'))
	          OR (T1.HR_CLSF_SE = '203' AND T2.OFCPS_SE = '08'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="203">
	     AND (   (T1.HR_CLSF_SE = #HR_CLSF_SE# AND T2.OFCPS_SE NOT IN('08'))
	          OR (T1.HR_CLSF_SE = '403' AND T2.OFCPS_SE NOT IN('08')))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="204">
	     AND (T1.HR_CLSF_SE = #HR_CLSF_SE# OR T1.HR_CLSF_SE = '404')
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="205">
	     AND (T1.HR_CLSF_SE = #HR_CLSF_SE# OR T1.HR_CLSF_SE = '405')
	</isEqual>
	<isNotEqual property="HR_CLSF_SE" compareValue="201">
		<isNotEqual property="HR_CLSF_SE" compareValue="202">
			<isNotEqual property="HR_CLSF_SE" compareValue="203">
				<isNotEqual property="HR_CLSF_SE" compareValue="204">
					<isNotEqual property="HR_CLSF_SE" compareValue="205">
	     AND T1.HR_CLSF_SE 	LIKE #HR_CLSF_SE#
					</isNotEqual>
				</isNotEqual>
			</isNotEqual>
		</isNotEqual>
	</isNotEqual>
	   ORDER BY T7.CODE_ORDR, T8.CODE_ORDR, T1.EMPNO
    </select>
    

	<select id="HRM060502DAO.selectEvlTableList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT T1.EVL_YEAR
		     , T1.HT_SE
		     , #EMPNO# AS EMPNO
		     , #APRSR_NO# AS APRSR_NO
		     , T1.QESITM_NO
		     , T1.HR_CLSF_SE
		     , T1.EVL_SE
		     , T1.EVL_IEM
		     , T1.GHVR_IX
		     , T1.ALLOT
		     , NVL(T2.SCORE, 0) AS SCORE 
		  FROM TBHRM_MLSS_EVL_TABLE T1
		  LEFT OUTER JOIN TBHRM_MLSS_SCORE T2
			   ON T1.EVL_YEAR     = T2.EVL_YEAR
			   AND T1.HT_SE       = T2.HT_SE
			   AND T1.QESITM_NO   = T2.QESITM_NO
			   AND T2.EMPNO = #EMPNO#
			   AND T2.APRSR_NO = #APRSR_NO#
          INNER JOIN TBHRM_MLSS_BSIS T3
               ON T1.EVL_YEAR = T3.EVL_YEAR
               AND T1.HT_SE   = T3.HT_SE
               AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN T3.EVL_BGNDE AND T3.EVL_ENDDE
          INNER JOIN TBHRM_HR_MASTR T4
               ON T4.EMPNO = #EMPNO#
		 WHERE T1.EVL_YEAR = #EVL_YEAR#
		   AND T1.HT_SE = #HT_SE#
		   AND T1.HR_CLSF_SE LIKE #HR_CLSF_SE#
    </select>
    
    <select id="HRM060502DAO.selectMlssGradDistrbList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	WITH TEMP_T AS (
    		SELECT t1.EVL_YEAR, t1.HT_SE, t2.APRSR_EMPNO, COUNT(*) AS APRSEE_CNT
			FROM TBHRM_MLSS_APRSEE t1
			     INNER JOIN TBHRM_MLSS_APRSR t2
			     ON  t1.EVL_YEAR = t2.EVL_YEAR
			     AND t1.HT_SE    = t2.HT_SE
			     AND t1.EMPNO    = t2.EMPNO
			     INNER JOIN TBHRM_HR_MASTR t3
			     ON  t1.EMPNO = t3.EMPNO
			WHERE t1.EVL_YEAR    = #EVL_YEAR#
			  AND t1.HT_SE       = #HT_SE#
	<isEqual property="HR_CLSF_SE" compareValue="201">
			  AND (t1.HR_CLSF_SE = #HR_CLSF_SE# OR t1.HR_CLSF_SE = '401' OR (t3.OFCPS_SE IN('38','39') AND t1.HR_CLSF_SE = '202'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="202">
			  AND (   (t1.HR_CLSF_SE = #HR_CLSF_SE# AND t3.OFCPS_SE NOT IN('38','39'))
			       OR (t1.HR_CLSF_SE = '402' AND t3.OFCPS_SE NOT IN('38','39'))
			       OR (t1.HR_CLSF_SE = '203' AND t3.OFCPS_SE = '08'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="203">
			  AND (   (t1.HR_CLSF_SE = #HR_CLSF_SE# AND t3.OFCPS_SE NOT IN('08'))
			       OR (t1.HR_CLSF_SE = '403' AND t3.OFCPS_SE NOT IN('08')))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="204">
			  AND (t1.HR_CLSF_SE = #HR_CLSF_SE# OR t1.HR_CLSF_SE = '404')
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="205">
			  AND (t1.HR_CLSF_SE = #HR_CLSF_SE# OR t1.HR_CLSF_SE = '405')
	</isEqual>
	<isNotEqual property="HR_CLSF_SE" compareValue="201">
		<isNotEqual property="HR_CLSF_SE" compareValue="202">
			<isNotEqual property="HR_CLSF_SE" compareValue="203">
				<isNotEqual property="HR_CLSF_SE" compareValue="204">
					<isNotEqual property="HR_CLSF_SE" compareValue="205">
			  AND t1.HR_CLSF_SE 	LIKE #HR_CLSF_SE#
					</isNotEqual>
				</isNotEqual>
			</isNotEqual>
		</isNotEqual>
	</isNotEqual>
			  AND t2.APRSR_EMPNO = #APRSR_EMPNO#
			GROUP BY t1.EVL_YEAR, t1.HT_SE, t2.APRSR_EMPNO
		),
		GRAD_DISTRB_T AS (
		    SELECT EVL_YEAR, HT_SE, APRSR_EMPNO, APRSEE_CNT, 'S' AS EVL_GRAD, '(90점이상)' AS EVL_GRAD_NM, CEIL(APRSEE_CNT*0.2) AS MAX_NMPR_CNT, FLOOR(APRSEE_CNT*0.2) AS MIN_NMPR_CNT FROM TEMP_T
		    UNION ALL
		    SELECT EVL_YEAR, HT_SE, APRSR_EMPNO, APRSEE_CNT, 'A' AS EVL_GRAD, '(80~89점)' AS EVL_GRAD_NM,  CEIL(APRSEE_CNT*0.3) AS MAX_NMPR_CNT, FLOOR(APRSEE_CNT*0.3) AS MIN_NMPR_CNT FROM TEMP_T
		    UNION ALL
		    SELECT EVL_YEAR, HT_SE, APRSR_EMPNO, APRSEE_CNT, 'B' AS EVL_GRAD, '(70~79점)' AS EVL_GRAD_NM, CEIL(APRSEE_CNT*0.3) AS MAX_NMPR_CNT, FLOOR(APRSEE_CNT*0.3) AS MIN_NMPR_CNT FROM TEMP_T
		    UNION ALL
		    SELECT EVL_YEAR, HT_SE, APRSR_EMPNO, APRSEE_CNT, 'C' AS EVL_GRAD, '(60~69점)' AS EVL_GRAD_NM, CEIL(APRSEE_CNT*0.2) AS MAX_NMPR_CNT, FLOOR(APRSEE_CNT*0.2) AS MIN_NMPR_CNT FROM TEMP_T
		    UNION ALL
		    SELECT EVL_YEAR, HT_SE, APRSR_EMPNO, APRSEE_CNT, 'D' AS EVL_GRAD, '(60점미만)' AS EVL_GRAD_NM, CEIL(APRSEE_CNT*0.1) AS MAX_NMPR_CNT, 0 AS MIN_NMPR_CNT FROM TEMP_T
		)
		SELECT t1.EVL_GRAD 
		     , t1.EVL_GRAD_NM
			 , t1.MAX_NMPR_CNT
			 , t1.MIN_NMPR_CNT
			 , NVL(t2.GRAD_CNT, 0) AS GRAD_CNT
		  FROM GRAD_DISTRB_T T1
		  LEFT OUTER JOIN (
		    		SELECT EVL_YEAR
		    		     , HT_SE
		    		     , EVL_GRAD
                         , APRSR_EMPNO
		    		     , COUNT(*) AS GRAD_CNT
		    		  FROM (
				    		SELECT T1.EVL_YEAR
						         , T1.HT_SE
                                 , T1.APRSR_EMPNO
						         , T2.EVL_GRAD
				    		  FROM (
						         	SELECT T1.EVL_YEAR
						         	     , T1.HT_SE
						         	     , T1.EMPNO
						         	     , T1.APRSR_NO
                                         , T2.APRSR_EMPNO
						         	     , SUM(T1.SCORE) AS SCORE
						         	  FROM TBHRM_MLSS_SCORE T1
                                    INNER JOIN TBHRM_MLSS_APRSR T2
                                          ON T1.EVL_YEAR = T2.EVL_YEAR
                                          AND T1.HT_SE = T2.HT_SE
                                          AND T1.EMPNO = T2.EMPNO
                                          AND T1.APRSR_NO = T2.APRSR_NO
						         	 GROUP BY T1.EVL_YEAR, T1.HT_SE, T1.EMPNO, T1.APRSR_NO, T2.APRSR_EMPNO
						           ) T1
						      LEFT OUTER JOIN TBHRM_MLSS_GRAD T2
							       ON T1.EVL_YEAR = T2.EVL_YEAR
							       AND T1.HT_SE = T2.HT_SE
							       AND T2.MIN_SCR_ABOVE <![CDATA[<=]]> T1.SCORE
							       AND T2.MAX_SCR_BELO <![CDATA[>]]> T1.SCORE
							  INNER JOIN TBHRM_HR_MASTR T3
							       ON T1.EMPNO = T3.EMPNO
							 WHERE 1=1
	<isEqual property="HR_CLSF_SE" compareValue="201">
							   AND (T3.HR_CLSF_SE = #HR_CLSF_SE# OR T3.HR_CLSF_SE = '401' OR (T3.OFCPS_SE IN('38','39') AND T3.HR_CLSF_SE = '202'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="202">
							   AND (   (T3.HR_CLSF_SE = #HR_CLSF_SE# AND T3.OFCPS_SE NOT IN('38','39'))
							        OR (T3.HR_CLSF_SE = '402' AND T3.OFCPS_SE NOT IN('38','39'))
							        OR (T3.HR_CLSF_SE = '203' AND T3.OFCPS_SE = '08'))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="203">
							   AND (   (T3.HR_CLSF_SE = #HR_CLSF_SE# AND T3.OFCPS_SE NOT IN('08'))
							        OR (T3.HR_CLSF_SE = '403' AND T3.OFCPS_SE NOT IN('08')))
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="204">
							   AND (T3.HR_CLSF_SE = #HR_CLSF_SE# OR T3.HR_CLSF_SE = '404')
	</isEqual>
	<isEqual property="HR_CLSF_SE" compareValue="205">
							   AND (T3.HR_CLSF_SE = #HR_CLSF_SE# OR T3.HR_CLSF_SE = '405')
	</isEqual>
	<isNotEqual property="HR_CLSF_SE" compareValue="201">
		<isNotEqual property="HR_CLSF_SE" compareValue="202">
			<isNotEqual property="HR_CLSF_SE" compareValue="203">
				<isNotEqual property="HR_CLSF_SE" compareValue="204">
					<isNotEqual property="HR_CLSF_SE" compareValue="205">
							   AND T3.HR_CLSF_SE 	LIKE #HR_CLSF_SE#
					</isNotEqual>
				</isNotEqual>
			</isNotEqual>
		</isNotEqual>
	</isNotEqual>
					        )
					  GROUP BY EVL_YEAR, HT_SE, APRSR_EMPNO, EVL_GRAD
		        ) t2
		        ON  t1.EVL_YEAR 	= t2.EVL_YEAR
		        AND t1.HT_SE 		= t2.HT_SE
		        AND t1.APRSR_EMPNO 	= t2.APRSR_EMPNO
		        AND t1.EVL_GRAD 	= t2.EVL_GRAD
		  WHERE EXISTS (
		  	SELECT 1
		  	FROM TBHRM_MLSS_BSIS t3
		  	WHERE t1.EVL_YEAR 	= t3.EVL_YEAR
		  	  AND t1.HT_SE		= t3.HT_SE
		  	  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN t3.EVL_BGNDE AND t3.EVL_ENDDE
		  )
	      ORDER BY DECODE(t1.EVL_GRAD, 'S', 1, 'A', 2, 'B', 3, 'C', 4, 'D', 5)
    </select>
    
    <insert id="HRM060502DAO.insertMlssScore" parameterClass="java.util.HashMap">
		MERGE INTO TBHRM_MLSS_SCORE S
		    USING DUAL
		    ON (    S.EVL_YEAR = #EVL_YEAR#
		        AND S.HT_SE = #HT_SE#
		        AND S.EMPNO = #EMPNO#
		        AND S.APRSR_NO = #APRSR_NO#
		        AND S.QESITM_NO = #QESITM_NO#
		    )
		 WHEN MATCHED THEN
		     UPDATE SET S.SCORE = #SCORE#
		 WHEN NOT MATCHED THEN
		     INSERT (
		         S.EVL_YEAR 
		       , S.HT_SE
		       , S.EMPNO
		       , S.APRSR_NO
		       , S.QESITM_NO
		       , S.SCORE
		       , S.REGISTER_ID
		       , S.REGIST_DT
		       , S.UPDUSR_ID
		       , S.UPDT_DT
		     ) VALUES (
		         #EVL_YEAR#
		       , #HT_SE#
		       , #EMPNO#
		       , #APRSR_NO#
		       , #QESITM_NO#
		       , #SCORE# 
		       , #S_USER_ID#
		       , SYSDATE
		       , #S_USER_ID#
		       , SYSDATE
		     )
    </insert>
    
    <!-- 제출여부 업데이트(제출) -->
    <insert id="HRM060502DAO.updateMlssAprsr" parameterClass="java.util.HashMap">
		UPDATE TBHRM_MLSS_APRSR
		SET	  PRSEN_AT    = '1'
		    , UPDUSR_ID   = #S_USER_ID#
		    , UPDT_DT     = SYSDATE
		WHERE EVL_YEAR  = #EVL_YEAR#
		  AND HT_SE     = #HT_SE#
		  AND EMPNO     = #EMPNO#
		  AND APRSR_NO  = #APRSR_NO#
    </insert>
    
    <!-- 제출여부 업데이트(제출취소) -->
    <insert id="HRM060502DAO.updateMlssAprsrCancle" parameterClass="java.util.HashMap">
		UPDATE TBHRM_MLSS_APRSR
		SET   PRSEN_AT    = '0'
		    , UPDUSR_ID   = #S_USER_ID#
		    , UPDT_DT     = SYSDATE
		WHERE EVL_YEAR  = #EVL_YEAR#
		  AND HT_SE     = #HT_SE#
		  AND EMPNO     = #EMPNO#
		  AND APRSR_NO  = #APRSR_NO#
    </insert>
    
    
</sqlMap>