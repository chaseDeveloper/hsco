<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM020307_SQL">

	<!-- 대상자 목록 조회 -->
	<select id="HRM020307DAO.selectIntrvwEvl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH TB_INTRVW_SCRPRO_SCORE AS (
		    SELECT s2.EMPMN_YEAR
		          ,s2.ODR_SE
		          ,s2.APYEXM_NO
		         ,SUM(CASE WHEN s1.CODE_ETC_1 = '1' THEN EVL_SCORE ELSE 0 END)/s3.MFCMM_CNT AS EVL_SCORE
		         ,SUM(CASE WHEN s1.CODE_ETC_1 = '2' THEN EVL_SCORE ELSE 0 END)/s3.MFCMM_CNT AS EVL_ADD_SCORE
		    FROM TBCOM_CMMN_CODE s1
		        /*면접평가항목*/
		        LEFT OUTER JOIN (   SELECT t1.EMPMN_YEAR
		                                  ,t1.ODR_SE
		                                  ,t1.MFCMM_NO
		                                  ,t2.APYEXM_NO
		                                  ,t2.EVL_IEM_SE
		                                  ,NVL(t2.EVL_SCORE, 0) AS EVL_SCORE
		                            FROM TBHRM_SCRPRO_EVL_MFCMM t1
		                            LEFT OUTER JOIN TBHRM_INTRVW_SCRPRO t2
		                            ON  t1.EMPMN_YEAR = t2.EMPMN_YEAR
		                            AND t1.ODR_SE     = t2.ODR_SE
		                            AND t1.MFCMM_NO   = t2.EVL_MFCMM_NO
		                        ) s2    /*평가항목점수*/
		          ON s1.CODE   = s2.EVL_IEM_SE
		        LEFT OUTER JOIN (   SELECT EMPMN_YEAR
		                                  ,ODR_SE
		                                  ,COUNT(MFCMM_NO) AS MFCMM_CNT
		                            FROM TBHRM_SCRPRO_EVL_MFCMM
		                            GROUP BY EMPMN_YEAR, ODR_SE ) s3    /*평가위원수*/
		         ON s2.EMPMN_YEAR = s3.EMPMN_YEAR
		        AND s2.ODR_SE     = s3.ODR_SE
		    WHERE 1               =1
		    AND s1.GRP_CODE       = 'HRM074'
		    AND s2.EMPMN_YEAR     = #EMPMN_YEAR#
		    AND s2.ODR_SE         = #ODR_SE#
		    GROUP BY s2.EMPMN_YEAR, s2.ODR_SE, s2.APYEXM_NO, s3.MFCMM_CNT
		)		

	
		SELECT 
			 RANK() OVER (PARTITION BY t3.CMPET_SE, t3.EMPMN_SE, t3.APYEXM_CLSF_SE, t3.APYEXM_REALM_SE ORDER BY t2.TOT_SCORE DESC NULLS LAST) AS EVL_RANK
		    ,t1.EMPMN_YEAR                  /*채용연도*/
			,t1.ODR_SE                      /*차수구분*/
			,t1.APYEXM_NO                   /*응시번호*/
			,t1.NM_KOREAN                   /*성명한글*/
			,t1.SPORT_DE
		    ,ROUND(NVL(t2.TOT_SCORE, 0), 2)			AS TOT_SCORE 
		    ,ROUND(NVL(t5.EVL_SCORE, 0), 2) 		AS EVL_SCORE		/*채점평균점수*/
		    ,NVL(t5.EVL_ADD_SCORE, 0)								 	AS EVL_ADD_SCORE	/*가점평균점수*/
		    ,t2.EVL_RESULT_SE
		    ,t3.CMPET_SE
		    ,t3.EMPMN_SE
		    ,t3.APYEXM_CLSF_SE
		    ,t3.APYEXM_REALM_SE
		    ,t1.RL_APYEXM_NO
		FROM TBHRM_ECNY_SPORT_GNRL t1
			LEFT OUTER JOIN TBHRM_INTRVW_EVL t2
			  ON t1.EMPMN_YEAR   = t2.EMPMN_YEAR
			 AND t1.ODR_SE       = t2.ODR_SE
			 AND t1.RL_APYEXM_NO = t2.APYEXM_NO
			LEFT OUTER JOIN TBHRM_EMPMN_RCRIT_REALM t3
			  ON t1.EMPMN_YEAR     = t3.EMPMN_YEAR
			 AND t1.ODR_SE         = t3.ODR_SE
			 AND t1.RCRIT_REALM_SN = t3.SN
			LEFT OUTER JOIN TBHRM_NCS_SCRPRO t4
			  ON t1.EMPMN_YEAR    = t4.EMPMN_YEAR
			 AND t1.ODR_SE        = t4.ODR_SE
			 AND t1.RL_APYEXM_NO  = t4.APYEXM_NO	
			LEFT OUTER JOIN TB_INTRVW_SCRPRO_SCORE t5
			  ON t1.EMPMN_YEAR   = t5.EMPMN_YEAR
			 AND t1.ODR_SE       = t5.ODR_SE
			 AND t1.RL_APYEXM_NO = t5.APYEXM_NO
		WHERE 1 = 1
		  AND t1.EMPMN_YEAR = #EMPMN_YEAR#
		  AND t1.ODR_SE     = #ODR_SE#
		  AND t1.PROPER_AT = '1'	 /*적격여부*/
		  AND t4.PSEXAM_AT = '1'	 /*인적성합격자*/
		<isNotEmpty property="CMPET_SE">
			AND t3.CMPET_SE = #CMPET_SE#
		</isNotEmpty>
		<isNotEmpty property="EMPMN_SE">
			AND t3.EMPMN_SE = #EMPMN_SE#
		</isNotEmpty>
		<isNotEmpty property="APYEXM_CLSF_SE">
			AND t3.APYEXM_CLSF_SE  = #APYEXM_CLSF_SE#
		</isNotEmpty>
		<isNotEmpty property="APYEXM_REALM_SE">
			AND t3.APYEXM_REALM_SE  = #APYEXM_REALM_SE#
		</isNotEmpty>
		<isNotEmpty property="NM_KOREAN"> 
			AND t1.NM_KOREAN LIKE '%' || #NM_KOREAN# || '%'
		</isNotEmpty>
		ORDER BY CMPET_SE, EMPMN_SE, APYEXM_CLSF_SE, APYEXM_REALM_SE, EVL_RANK ASC
	</select> 
	
 	<!-- 평가집계 조회 -->
	<select id="HRM020307DAO.selectIntrvwEvlDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">	
		SELECT 
			s1.*
		   ,s2.NM
		   ,s2.PSITN
		FROM
		    (SELECT 
		       t1.EMPMN_YEAR
		      ,t1.ODR_SE
		      ,t1.MFCMM_NO
     		  ,SUM(CASE WHEN t2.EVL_IEM_SE IN
			                (SELECT CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'HRM074')
			            THEN t2.EVL_SCORE
			            ELSE 0
			        END) AS TOT_SCORE
		   <iterate property="intrvwEvlIemList" >
				,SUM(DECODE(t2.EVL_IEM_SE, #intrvwEvlIemList[].CODE#, t2.EVL_SCORE, 0)) AS EVL_IEM_$intrvwEvlIemList[].CODE$
				,SUM(DECODE(t2.EVL_IEM_SE, #intrvwEvlIemList[].CODE#, t2.EVL_CODE , 0)) AS EVL_IEM_CODE_$intrvwEvlIemList[].CODE$
		   </iterate>
		    FROM TBHRM_SCRPRO_EVL_MFCMM t1
		    LEFT OUTER JOIN TBHRM_INTRVW_SCRPRO t2
		      ON t1.EMPMN_YEAR  = t2.EMPMN_YEAR
		     AND t1.ODR_SE      = t2.ODR_SE
		     AND t1.MFCMM_NO    = t2.EVL_MFCMM_NO
		     AND t2.APYEXM_NO   = #APYEXM_NO#
		    WHERE 1=1
		        AND t1.EMPMN_YEAR = #EMPMN_YEAR#
		        AND t1.ODR_SE     = #ODR_SE#
		    GROUP BY t1.EMPMN_YEAR, t1.ODR_SE, t1.MFCMM_NO
		    ) s1
		INNER JOIN TBHRM_SCRPRO_EVL_MFCMM s2
		   ON s1.EMPMN_YEAR = s2.EMPMN_YEAR
		  AND s1.ODR_SE     = s2.ODR_SE
		  AND s1.MFCMM_NO   = s2.MFCMM_NO
		ORDER BY s1.MFCMM_NO
	</select>   
	
	<!-- 대상자 목록 저장 -->
	<update id="HRM020307DAO.intrvwEvlCU" parameterClass="java.util.HashMap">
		MERGE INTO TBHRM_INTRVW_EVL 
		USING DUAL
		 ON (EMPMN_YEAR    = #EMPMN_YEAR#
		AND ODR_SE         = #ODR_SE#
		AND APYEXM_NO      = #RL_APYEXM_NO#)
		WHEN MATCHED THEN
		  UPDATE
		  SET TOT_SCORE      = #TOT_SCORE#
			 ,EVL_RANK       = #EVL_RANK#
			 ,EVL_RESULT_SE  = #EVL_RESULT_SE#
			 ,EVL_MAN_CO     = #EVL_MAN_CO#
		     ,UPDUSR_ID      = #S_USER_ID#
		     ,UPDT_DT        = SYSDATE
		  WHEN NOT MATCHED THEN
		  INSERT (
			 EMPMN_YEAR
			,ODR_SE
			,APYEXM_NO
			,TOT_SCORE
			,EVL_RANK
			,EVL_RESULT_SE
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
			,EVL_MAN_CO
		) 
		VALUES 
		(
			 #EMPMN_YEAR#
			,#ODR_SE#
			,#RL_APYEXM_NO#
			,#TOT_SCORE#
			,#EVL_RANK#
			,#EVL_RESULT_SE#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
			,#EVL_MAN_CO#
		 )
	</update>

  </sqlMap>