<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SAL010113_SQL">
	
	<!-- 산출내역관리 목록 조회(개인별) -->
	<select id="SAL010115DAO.selectIndiComputDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			t1.EMPNM		/*사원명*/
		   ,t1.IRNCF		/*고지*/
		   ,t1.BRTHDY		/*생년월일*/
		   ,NVL(t2.DEPT_NM, t3.SALARY_DEPT_NM)		AS DEPT_NM
		   ,NVL(t2.DEPT_CODE, t3.SALARY_DEPT_CODE)	AS DEPT_CODE
		FROM TBSAL_NPN_COMPUT_DTLS_MANAGE t1
		LEFT OUTER JOIN (
		                SELECT s1.EMPNO, s1.DEPT_NM, s1.DEPT_CODE, s2.PYMNT_YM,  s1.SN, s3.EMPNM, s3.BRTHDY
		                FROM TBSAL_MT_SALARY_PYMNT s1
		                INNER JOIN (
		                            SELECT EMPNO, MAX(PYMNT_YM) AS PYMNT_YM
		                            FROM TBSAL_MT_SALARY_PYMNT
		                            WHERE PYMNT_YM <![CDATA[ <= ]]>#PYMNT_YM#
		                            GROUP BY EMPNO
		                            ) s2
		                   ON s1.PYMNT_YM = s2.PYMNT_YM
		                  AND S1.EMPNO = s2.EMPNO
		                LEFT OUTER JOIN TBHRM_HR_MASTR s3
						  ON s1.EMPNO = s3.EMPNO
		                ) t2
		   ON t1.PYMNT_YM <![CDATA[ >= ]]> t2.PYMNT_YM
		  AND t2.SN = '1' /*1로 고정*/
		  AND t1.EMPNM = t2.EMPNM
		  AND t1.BRTHDY = t2.BRTHDY
		LEFT OUTER JOIN (
		                SELECT 
		                    T1.BCNC_CODE
		                  , T1.RPRSNTV
		                  , H_DECRYPT(T1.RPRSNTV_IHIDNUM)   AS RPRSNTV_IHIDNUM
		                  , T1.SALARY_DEPT_CODE
		                  , T2.SALARY_DEPT_NM
		                FROM TBCTR_BCNC_MASTR T1
		                LEFT OUTER JOIN TBSAL_SALARY_DEPT T2
		                ON  T1.SALARY_DEPT_CODE = T2.SALARY_DEPT_CODE
		                WHERE T1.BCNC_SE          = 'Z'
		                ) t3
		 ON t1.EMPNM = t3.RPRSNTV
		AND SUBSTR(t1.BRTHDY, 3, 6) = SUBSTR(t3.RPRSNTV_IHIDNUM, 0, 6)
		WHERE t1.PYMNT_YM = #PYMNT_YM#
		ORDER BY DEPT_CODE, t1.EMPNM
	</select>
	
	
	<!-- 산출내역관리 목록 조회(부서별) -->
	<select id="SAL010115DAO.selectDeptComputDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		   MAX(NVL(t2.DEPT_NM, t3.SALARY_DEPT_NM))	AS DEPT_NM
		  ,NVL(t2.DEPT_CODE, t3.SALARY_DEPT_CODE)	AS DEPT_CODE
		  ,SUM(t1.IRNCF) 							AS TOT_IRNCF	/*고지*/
		FROM TBSAL_NPN_COMPUT_DTLS_MANAGE t1
		LEFT OUTER JOIN (
		                SELECT s1.EMPNO, s1.DEPT_NM, s1.DEPT_CODE, s2.PYMNT_YM,  s1.SN, s3.EMPNM, s3.BRTHDY
		                FROM TBSAL_MT_SALARY_PYMNT s1
		                INNER JOIN (
		                            SELECT EMPNO, MAX(PYMNT_YM) AS PYMNT_YM
		                            FROM TBSAL_MT_SALARY_PYMNT
		                            WHERE PYMNT_YM <![CDATA[ <= ]]>#PYMNT_YM#
		                            GROUP BY EMPNO
		                            ) s2
		                   ON s1.PYMNT_YM = s2.PYMNT_YM
		                  AND S1.EMPNO = s2.EMPNO
		                LEFT OUTER JOIN TBHRM_HR_MASTR s3
						  ON s1.EMPNO = s3.EMPNO
		                ) t2
		   ON t1.PYMNT_YM <![CDATA[ >= ]]> t2.PYMNT_YM
		  AND t2.SN = '1' /*1로 고정*/
		  AND t1.EMPNM = t2.EMPNM
		  AND t1.BRTHDY = t2.BRTHDY
		LEFT OUTER JOIN (
		                SELECT 
		                    T1.BCNC_CODE
		                  , T1.RPRSNTV
		                  , H_DECRYPT(T1.RPRSNTV_IHIDNUM)  AS RPRSNTV_IHIDNUM
		                  , T1.SALARY_DEPT_CODE
		                  , T2.SALARY_DEPT_NM
		                FROM TBCTR_BCNC_MASTR T1
		                LEFT OUTER JOIN TBSAL_SALARY_DEPT T2
		                ON  T1.SALARY_DEPT_CODE = T2.SALARY_DEPT_CODE
		                WHERE T1.BCNC_SE          = 'Z'
		                ) t3
		  ON t1.EMPNM = t3.RPRSNTV
		 AND SUBSTR(t1.BRTHDY, 3, 6) = SUBSTR(t3.RPRSNTV_IHIDNUM, 0, 6)
		WHERE t1.PYMNT_YM           = #PYMNT_YM#
		GROUP BY NVL(t2.DEPT_CODE, t3.SALARY_DEPT_CODE)
		ORDER BY DEPT_CODE
	</select>
	

	<!-- 산출내역관리 생성 -->
	<insert id="SAL010115DAO.computDtlsCU" parameterClass="java.util.HashMap">
		MERGE INTO TBSAL_NPN_COMPUT_DTLS_MANAGE
		USING DUAL
		   ON (PYMNT_YM = #PYMNT_YM#
		  AND EMPNM     = #EMPNM#
		  AND BRTHDY    = #BRTHDY#)
		WHEN MATCHED THEN
		  UPDATE SET IRNCF        = (#IRNCF#/2)
					,UPDUSR_ID    = #S_USER_ID# 
					,UPDT_DT      = SYSDATE     
		WHEN NOT MATCHED THEN
		INSERT 		(
			 PYMNT_YM
			,EMPNM
			,BRTHDY
			,IRNCF
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #PYMNT_YM#
			,#EMPNM#
			,#BRTHDY#
			,(#IRNCF#/2)
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>

	<!-- 산출내역관리 삭제 -->
	<delete id="SAL010115DAO.computDtlsD" parameterClass="java.util.HashMap" >
		DELETE FROM TBSAL_NPN_COMPUT_DTLS_MANAGE
		WHERE PYMNT_YM = #PYMNT_YM#
	</delete>


</sqlMap>