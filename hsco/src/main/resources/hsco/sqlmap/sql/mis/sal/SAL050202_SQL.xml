<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SAL050202_SQL">	
	
	<!-- 연말정산입력정보 목록조회 -->
	<select id="SAL050202DAO.selectYndExcclInputList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
		      SELECT 
			             A.EXCCLC_YEAR          /* 정산년도 */
						,A.EXCCLC_SE            /* 정산구분 */
						,A.EMPNO                /* 사번 */
						,A.EMPNM                /* 사원명 */
						,A.EXCCLC_BGNDE         /* 정산시작일자 */
						,A.EXCCLC_ENDDE         /* 정산종료일자 */
						,A.DEPT_CODE            /* 부서코드 */
						,A.DEPT_NM              /* 부서명 */
						,A.CLSF_CODE            /* 직급코드 */
						,A.SRCLS                /* 호봉 */
						,A.OFCPS_CODE           /* 직위코드 */
						,A.ECNY_SE              /* 입사구분 */
						,A.ECNY_DE              /* 입사일자 */
						,A.RETIRE_DE            /* 퇴사일자 */
						,A.DSPSN_GRAD           /* 장애자등급 */
						,A.RWDMRT_GRAD          /* 보훈등급 */
						,A.EMPL_SE              /* 사원구분 */
						
						,A.FYER_LABOR_INCOME    /* 연간근로소득 */
						,A.TAXXMPT_INCOME       /* 비과세소득 */
						,A.TOT_SALARY_AMOUNT    /* 총급여금액 */						
						,A.ERNM_DDC             /* 근로소득공제 */
						,A.ERNM_AMOUNT          /* 근로소득금액 */
						
						,A.HSHLDR_AT            /* 세대주여부 */
						,A.SPOUSE_AT            /* 배우자여부 */
						,A.LADY_HSHLDR          /* 부녀자세대주 */
						,A.SUPORTR_20           /* 부양자20세이하 */
						,A.SUPORTR_60           /* 부양자60세이상 */
						,A.COURS_PVLTRT_65      /* 경로우대65 */
						,A.COURS_PVLTRT_70      /* 경로우대70 */
						,A.DSPSN_CO             /* 장애인수 */
						,A.CHLDRN_6_BELOW       /* 자녀6세이하 */
						,A.CHLDBRTH_ADP_CHLDRN  /* 출산입양자녀 */
						,A.MNYCH                /* 다자녀 */
						,A.PARNTS_1             /* 한부모 */
						,A.NPN                  /* 국민연금 */
						,A.INDVDL_ANNTY_SVINGS_BEFORE   /* 개인연금저축이전 */
						,A.INDVDL_ANNTY_SVINGS_AFTER    /* 개인연금저축이후 */
						,A.ANNTY_SVINGS_DDC             /* 연금저축공제금 */
						,A.HLTHINS                      /* 건강보험 */
						,A.EMPLYMINSRNC                 /* 고용보험 */
						,A.GRNT_INSRNC                  /* 보장성보험 */
						,A.DSPSN_DVR_INSRNC             /* 장애인전용보험 */
						,A.GNRL_MCP                     /* 일반의료비 */
						,A.SELF_COURS_TROBL_MCP         /* 본인경로장애의료 */
						,A.ERNM_3                       /* 근로소득3프로 */
						,A.DDC_MCP                      /* 공제의료비 */
						,A.SELF_EDCCT                   /* 본인교육비 */
						,A.ESHL_BFE_EDCCT               /* 취학전교육비 */
						,A.GNRL_EDCCT                   /* 초중고교육비 */
						,A.UNIV_EDCCT                   /* 대학생교육비 */
						,A.DSPSN_EDCCT                  /* 장애인교육비 */
						,A.INVSTMNT_INVT                /* 출자투자 */
						,A.INVT_MXTR                    /* 투자조합 */
						,A.SUBSCRPT_SVINGS              /* 청약저축 */
						,A.HOUSE_SUBSCRPT_GNRLZ         /* 주택청약종합 */
						,A.LABRR_HOUSE_PREPRTN          /* 근로자주택마련 */
						,A.LFSTS_INTR                   /* 목돈안드는전세이자 */
						,A.PNINT_RPAY_FNNC              /* 원리금상환액금융 */
						,A.HOUSE_HIRE_INTR_RPAY         /* 주택임차이자상환 */
						,A.MTHT_AM                      /* 월세액 */
						,A.HOUSE_MRTG_BRRW_INSTT_NM     /* 주택저당차입기관명 */
						,A.HOUSE_MRTG_BRRW_DE           /* 주택저당차입일자 */
						,A.HOUSE_MRTG_BRRW_INTR_14      /* 주택저당차입이자14 */
						,A.HOUSE_MRTG_BRRW_INTR_29      /* 주택저당차입이자29 */
						,A.HOUSE_MRTG_BRRW_INTR_30      /* 주택저당차입이자30 */
						,A.HOUSE_MRTG_BRRW_INTR_FIXING  /* 주택저당차입이자고정 */
						,A.HOUSE_MRTG_BRRW_INTR_ETC     /* 주택저당차입이자기타 */
						,A.HOUSE_MRTG_BRRW_INTR_15Y_15_1	/* 주택저당차입이자15.1.1이후_15년이상&비거치식&고정금리 */
						,A.HOUSE_MRTG_BRRW_INTR_15Y_15_2	/* 주택저당차입이자15.1.1이후_15년이상&(비거치식or고정금리) */
						,A.HOUSE_MRTG_BRRW_INTR_15Y_15_3	/* 주택저당차입이자15.1.1이후_15년이상&기타 */
						,A.HOUSE_MRTG_BRRW_INTR_15Y_10		/* 주택저당차입이자15.1.1이후_10년이상&(비거치식or고정금리) */
						,A.LEGAL_CNTR                   /* 법정기부 */
						,A.EXCPT_CNTR                   /* 특례기부 */
						,A.EXCPT_CNTR_LMT               /* 특례기부한도 */
						,A.APPN_CNTR                    /* 지정기부금액 */
						,A.LABOR_MXTR                   /* 노동조합비 */
						,A.APPN_CNTR_LMT_PRVYY          /* 지정기부한도전년 */
						,A.END_CNTR                     /* 종교기부금 */
						,A.APPN_TXCLCTPT_LMT_THSYR      /* 지정기부한도금년 */
						,A.LEGAL_CNTR_CYFD              /* 법정기부이월 */
						,A.APPN_CNTR_CYFD               /* 지정기부이월 */
						,A.RELGN_CNTR_CYFD              /* 종교기부이월 */
						,A.APPN_CNTR_LMT_UNITY          /* 지정기부한도통합 */
						,A.MRRG_HMV_FNRL                /* 혼인이사장례비 */
						,A.SPT_TCHNLGY_HNF              /* 현장기술인력 */
						,A.CNWK_SDYTRN                  /* 근속연수 */
						,A.CREDTCARD                    /* 신용카드 */
						,A.DBCD                         /* 직불카드 */
						,A.PBTRNSP_USE                  /* 대중교통이용 */
						,A.CASH_RCIPT                   /* 현금영수증 */
						,A.TRDIT_MRKT_USE               /* 전통시장사용 */
						,A.ERNM_25                      /* 근로소득25 */
						,A.ERNM_20                      /* 근로소득20 */
						,A.CREDTCARD_DDC                /* 신용카드공제 */
						,A.OUTNATN_WORK_NM              /* 국외근무지명 */
						,A.OUTNATN_WORK_RSPOFC          /* 국외근무직책 */
						,A.OUTNATN_WORK_PD              /* 국외근무기간 */
						,A.OUTNATN_WORK_TOT_SALARY      /* 국외근무총급여 */
						,A.OUTNATN_WORK_TAXPAY_YEAST    /* 국외근무납세국명 */
						,A.OUTNATN_WORK_TAXPAY_WON      /* 국외근무납세액원화 */
						,A.OUTNATN_WORK_TAXPAY_FGCRY    /* 국외근무납세액외화 */
						,A.OUTNATN_WORK_TAXAMT_DDC      /* 국외근무세액공제 */
						,A.FUND_1                       /* 펀드1 */
						,A.FUND_2                       /* 펀드2 */
						,A.FUND_3                       /* 펀드3 */
						,A.INORG_SCRITS_SVINGS          /* 장기증권저축 */
						,A.SVINGS_SM                    /* 저축계 */
						,A.POLITC_CPTAL_CNTR            /* 정치자금기부 */
						,A.HOUSE_INTR_RPAY_AMOUNT       /* 주택이자상환금 */
						
						,A.SELF_CREDTCARD               /* 본인신용카드 */
						,A.CREDTCARD_ADIT_USE_AMOUNT    /* 신용카드추가사용금액 */
						,A.CREDTCARD_ADIT_USE_AMOUNT_2  /* 신용카드추가사용금액2 */
						,A.SMALL_CRNTY_DDC              /* 소상공인공제부금 */
						,A.INVT_MXTR_2                  /* 투자조합2 */
						,A.INVT_MXTR_3                  /* 투자조합3 */
						,A.RETIRE_ANNTY                 /* 퇴직연금 */
						,A.PNINT_RPAY_RESIDNT           /* 원리금상환거주자 */
						,A.RM
						,B.SEXDSTN						/* 성별 */
						,(SELECT CASE COUNT(EMPNO) WHEN 1 THEN '1' ELSE '0' END FROM TBHRM_HR_FAMILY WHERE FAMILY_RELATE_SE IN ('005','006') AND EMPNO = A.EMPNO) AS HR_SPOUSE_AT
						,CLOS_AT
						,FRST_CLOS_ID
						,TO_CHAR(FRST_CLOS_DT, 'YYYY-MM-DD HH24:MI:SS') AS FRST_CLOS_DT
						,LAST_CLOS_ID
						,TO_CHAR(LAST_CLOS_DT, 'YYYY-MM-DD HH24:MI:SS') AS LAST_CLOS_DT
						,A.SUBSCRPT_SVINGS_14	/* 청약저축_14년 이전 */
						,A.HOUSE_SUBSCRPT_GNRLZ_14	/* 주택청약종합_14년 이전 */
				FROM TBSAL_YND_EXCCLC_BSIS A
				LEFT OUTER JOIN TBHRM_HR_MASTR B
				     ON    A.EMPNO = B.EMPNO
				WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
				AND A.EXCCLC_SE = #EXCCLC_SE#
				AND A.EMPNO = #EMPNO#
		]]>	
    </select>  
    
    <!-- 연말정산입력정보 목록조회 -->
	<select id="SAL050202DAO.selectYndExcclempList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
		      SELECT 
	      				'0' AS CHK
			            ,#EXCCLC_YEAR#  AS   EXCCLC_YEAR       /* 정산년도 */
						,#EXCCLC_SE#    AS    EXCCLC_SE         /* 정산구분 */
						,A.EMPNO                  /* 사번 */
						,A.EMPNM                  /* 사원명 */						
						,A.DEPT_NM  AS DEPT_NAME  /* 부서명 */
						,DECODE(A.CLOS_AT, '1', 'Y', 'N')	AS CLOS_AT
				FROM TBSAL_YND_EXCCLC_BSIS A
				    ,TBHRM_HR_MASTR B
			        ,VWHRM_DEPT C
			WHERE B.DEPT_CODE = C.DEPT_CODE
			AND A.EMPNO = B.EMPNO
			AND C.DEPT_LEVEL_SE IN('1','2')
			AND A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			ORDER BY NVL(C.OUTPT_ORDR,0), B.RSPOFC_SE, SFHRM_GET_OFCPSCD(B.EMPNO,B.JSSFC_SE,B.HR_CLSF_SE,B.ECNY_DE), B.PAY_CLSF_SE,  B.EMPNO, B.JSSFC_SE
		]]>	
    </select>  
    
   
    <!-- 가족사항 조회 -->
	<select id="SAL050202DAO.selectYndhnddcList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			SELECT   
			         B.EMPNO    AS  EMPNO
					,0          AS  SEQ
					,B.EMPNM    AS  FAMILY_NM
					,'000'      AS  FAMILY_RELATE_SE
					,B.SEXDSTN  AS  SEXDSTN_SE
					,B.BRTHDY   AS  BRTHDY
					,''         AS  OCCP_NM
					,''         AS  ACDMCR_SE
					,''         AS  TROBL_AT
					,''         AS  SUPORT_AT
					,''         AS  ALLWNC_PYMNT_AT
					,''         AS  ALLWNC_REQST_DE
					,''         AS  CNFIRM_AT
					,NVL(H_DECRYPT(B.IHIDNUM_ENCPT),'1501011000000')  AS  IHIDNUM_ENCPT
			FROM TBHRM_HR_MASTR B
			WHERE B.EMPNO  =  #EMPNO#	
            UNION ALL
			SELECT   
			         A.EMPNO               AS  EMPNO
					,A.SEQ                 AS  SEQ
					,A.FAMILY_NM           AS  FAMILY_NM
					,A.FAMILY_RELATE_SE    AS  FAMILY_RELATE_SE
					,A.SEXDSTN_SE          AS  SEXDSTN_SE
					,A.BRTHDY              AS  BRTHDY
					,A.OCCP_NM             AS  OCCP_NM
					,A.ACDMCR_SE           AS  ACDMCR_SE
					,A.TROBL_AT            AS  TROBL_AT
					,A.SUPORT_AT           AS  SUPORT_AT
					,A.ALLWNC_PYMNT_AT     AS  ALLWNC_PYMNT_AT
					,A.ALLWNC_REQST_DE     AS  ALLWNC_REQST_DE
					,A.CNFIRM_AT           AS  CNFIRM_AT
					,NVL(H_DECRYPT(A.IHIDNUM_ENCPT),'1501011000000')     AS  IHIDNUM_ENCPT
			FROM TBHRM_HR_FAMILY A
			WHERE A.EMPNO  =  #EMPNO#
		    AND A.SUPORT_AT = '1'
		]]>	
    </select>     
    
    
    <!-- 인적공제 조회 -->
	<select id="SAL050202DAO.selectYndhnddc2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			  SELECT     
			             EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,FAMILY_NM
						,SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT) AS FAMILY_IHIDNUM_ENCPT
						,EMPNM
						,FAMILY_RELATE
						,DDC_AT
						,ISE_FRGNR_SE
						,TROBL_AT
						,BELOW_6_AT
						,LADY_AT
						,COURS_PVLTRT_AT
						,CHLDBRTH_ADP_AT
						,PARNTS_1_AT
						,GRNT_INSRNC
                        ,GRNT_INSRNC_ETC
						,EDCCT_SE_DTA
						,EDCCT_DTA
						,CTBNY_DTA
						,MCP_SE_DTA
						,MCP_DTA
						,CREDTCARD_DTA
						,DBCD_PRPAY_DTA
						,CASH_RCIPT_DTA
						,TRDIT_MRKT_DTA
						,PBTRNSP_TRNSPORT_USE_DTA
						,DSPSN_INSRNC
                        ,DSPSN_INSRNC_ETC
						,EDCCT_SE_ETC
						,EDCCT_ETC
						,CTBNY_ETC
						,MCP_SE_ETC
						,MCP_ETC
						,CREDTCARD_ETC
						,DBCD_PRPAY_ETC
						,TRDIT_MRKT_ETC
						,PBTRNSP_USE_ETC
						,GLASSES_BUY
						,GLASSES_BUY_ETC
						,CBPR_TREAT
						,CBPR_TREAT_ETC
						,EDCCT_DTA1
						,EDCCT_ETC1
						,EDCCT_DTA2
						,EDCCT_ETC2
						,EDCCT_DTA3
						,EDCCT_ETC3
						,EDCCT_DTA4
						,EDCCT_ETC4
						,EDCCT_DTA5
						,EDCCT_ETC5
						,CASH_RCIPT_ETC
			FROM TBSAL_YND_EXCCLC_HN_DDC A
			WHERE A.EMPNO   =   #EMPNO#
		    AND A.EXCCLC_YEAR =  #EXCCLC_YEAR#
		    AND A.EXCCLC_SE = #EXCCLC_SE#
		    ORDER BY A.FAMILY_RELATE
		]]>	
    </select>   

      
    
    <!-- 월세월리금 조회 -->
	<select id="SAL050202DAO.selectYndpnintList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			  SELECT     
			             A.SN
			            ,A.EXCCLC_YEAR
						,A.EXCCLC_SE
						,A.EMPNO
						,A.EMPNM
						,A.RNTAGNT_NM
						,SFCOM_DEC_ALL(A.RNTAGNT_NO) AS RNTAGNT_NO
						,A.CTRTC_ADRES
						,A.CNTRCT_BGNDE
						,A.CNTRCT_ENDDE
						,TO_CHAR(A.MTHT_AM) AS MTHT_AM
						,TO_CHAR(A.DDC_AMOUNT) AS DDC_AMOUNT
						,A.LENDR_NM
						,SFCOM_DEC_ALL(A.LENDR_IHIDNUM_ENCPT) AS LENDR_IHIDNUM_ENCPT
						,A.BRRW_INTR_RT
						,TO_CHAR(A.PNINT_RPAY_AMOUNT) AS PNINT_RPAY_AMOUNT
						,TO_CHAR(A.PRNCPAL) AS PRNCPAL
						,TO_CHAR(A.INTR_AMOUNT) AS INTR_AMOUNT
						,TO_CHAR(A.DDC_AMOUNT_2) AS DDC_AMOUNT_2
						,A.RNTAGNT_NM_2
						,SFCOM_DEC_ALL(A.RNTAGNT_IHIDNUM_ENCPT_2) AS RNTAGNT_IHIDNUM_ENCPT_2
						,A.CTRTC_ADRES_2
						,A.CNTRCT_BGNDE_2
						,A.CNTRCT_ENDDE_2
						,A.LFSTS_GTN
						,A.CRRNCY_CNSMP_HOUSE_TY
						,A.CRRNCY_CNSMP_HOUSE_AR
						,A.LS_HOUSE_TY
						,A.LS_HOUSE_AR
						,A.CRRNCY_CNSMP_BEGIN_DE
						,A.CRRNCY_CNSMP_END_DE						
			FROM TBSAL_YND_EXCCLC_PNINT_RPAY A
			WHERE A.EMPNO   =   #EMPNO#
		    AND A.EXCCLC_YEAR =  #EXCCLC_YEAR#
		    AND A.EXCCLC_SE = #EXCCLC_SE#
		    ORDER BY SN
		]]>	
    </select>     
     
    <!-- 내역 조회 -->
	<select id="SAL050202DAO.selectYndNtsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			  SELECT     
		             A.SN
					,A.EXCCLC_YEAR
					,A.EXCCLC_SE
					,A.EMPNO
					,A.DTA_SE
					,A.FORMAT_CODE
					,A.IEM_CODE
					,SFCOM_DEC_ALL(A.IHIDNUM) AS IHIDNUM
					,A.NM
					,A.RELATE_SE
					,A.BIZRNO
					,A.MTLTY
					,A.DETAIL_KND
					,A.DETAIL_KND_2
					,A.ESNTL_NO
					,A.GOODS_NM
					,A.STDR_DE
					,A.BEGIN_DE
					,A.END_DE
					,A.GNRL_2
					,A.TRDIT_MRKT_2
					,A.MASS_TRNSPORT_2
					,A.GNRL_1
					,A.TRDIT_MRKT_1
					,A.MASS_TRNSPORT_1
					,A.FRHFYR_CARD
					,A.SHYY_CARD
					,A.RPAY_PD
					,A.BRRW_AMOUNT
					,A.FIXING_BRRW_AMOUNT
					,A.NTHG_DFR_BRRW_AMOUNT
					,A.PRTINT_PRNCPAL_RPAY
					,A.PAY_AMOUNT
					,A.RM	
					,A.CTBNY_CNT
					,A.CTBNY_AMOUNT
					,A.CTBNY_ICNT_AMOUNT
					,A.DDC_AMOUNT
					,A.CBPR_TREAT_AT
			FROM TBSAL_YND_EXCCLC_NTS A
			WHERE A.EMPNO =     #EMPNO#
		    AND A.EXCCLC_YEAR = #EXCCLC_YEAR#
		    AND A.EXCCLC_SE =   #EXCCLC_SE#
		]]>
		<isEqual property="FORMAT_CODE" compareValue="L101Y" >		
		    AND A.FORMAT_CODE = 'L101Y'
		    AND A.IEM_CODE = 'G0020'
		</isEqual>	
		<isEqual property="FORMAT_CODE" compareValue="L102Y" >		
		    AND A.FORMAT_CODE = 'L102Y'
		    AND A.IEM_CODE = 'G0020'
		</isEqual>
		<isEqual property="FORMAT_CODE" compareValue="B101Y" >		
		    AND A.FORMAT_CODE = 'B101Y'
		</isEqual>	
		<isEqual property="FORMAT_CODE" compareValue="E102Y" >		
		    AND A.FORMAT_CODE IN ('F102Y','D101Y','E102Y','J301Y','N101Y')
		</isEqual>	
		    ORDER BY A.FORMAT_CODE, A.IEM_CODE, A.NM, A.MTLTY, A.GOODS_NM
    </select>     
    
    
    <!-- 내역 조회 -->
	<select id="SAL050202DAO.selectYndNtsList2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[	
			  SELECT     
		             A.SN
					,A.EXCCLC_YEAR
					,A.EXCCLC_SE
					,A.EMPNO
					,A.DTA_SE
					,A.FORMAT_CODE
					,A.IEM_CODE
					,SFCOM_DEC_ALL(A.IHIDNUM) AS IHIDNUM
					,A.NM
					,A.RELATE_SE
					,A.BIZRNO
					,A.MTLTY
					,A.DETAIL_KND
					,A.DETAIL_KND_2
					,A.ESNTL_NO
					,A.GOODS_NM
					,A.STDR_DE
					,A.BEGIN_DE
					,A.END_DE
					,A.GNRL_2
					,A.TRDIT_MRKT_2
					,A.MASS_TRNSPORT_2
					,A.GNRL_1
					,A.TRDIT_MRKT_1
					,A.MASS_TRNSPORT_1
					,A.FRHFYR_CARD
					,A.SHYY_CARD
					,A.RPAY_PD
					,A.BRRW_AMOUNT
					,A.FIXING_BRRW_AMOUNT
					,A.NTHG_DFR_BRRW_AMOUNT
					,A.PRTINT_PRNCPAL_RPAY
					,TO_CHAR(A.PAY_AMOUNT) AS PAY_AMOUNT
					,A.RM	
					,A.CTBNY_CNT
					,A.CTBNY_AMOUNT
					,A.CTBNY_ICNT_AMOUNT
					,A.DDC_AMOUNT
					,A.CBPR_TREAT_AT
			FROM TBSAL_YND_EXCCLC_NTS A
			WHERE A.EMPNO =     #EMPNO#
		    AND A.EXCCLC_YEAR = #EXCCLC_YEAR#
		    AND A.EXCCLC_SE =   #EXCCLC_SE#
		]]>
			<isNotEmpty property="FORMAT_CODE">
		    AND A.FORMAT_CODE = #FORMAT_CODE#
		    </isNotEmpty>
		    <isNotEmpty property="IEM_CODE">
		    AND A.IEM_CODE = #IEM_CODE#
		    </isNotEmpty>
		    <isNotEmpty property="DETAIL_KND_2">
		    AND A.DETAIL_KND_2 = #DETAIL_KND_2#
		    </isNotEmpty>
		    <isNotEmpty property="DETAIL_KND_2">
		    <![CDATA[
		    AND TO_DATE(STDR_DE, 'YYYYMMDD') < TO_DATE('20150101', 'YYYYMMDD')
		    ]]>
		    </isNotEmpty>
		    ORDER BY A.FORMAT_CODE, A.IEM_CODE, A.NM, A.MTLTY, A.GOODS_NM
    </select>     
    
    <update id="SAL050202DAO.initYndNtsDdcAmount" parameterClass="java.util.HashMap">
		<![CDATA[	
			UPDATE TBSAL_YND_EXCCLC_NTS A
			SET DDC_AMOUNT = 0
			WHERE A.EMPNO =     #EMPNO#
		    AND A.EXCCLC_YEAR = #EXCCLC_YEAR#
		    AND A.EXCCLC_SE =   #EXCCLC_SE#
		    AND A.FORMAT_CODE IN ('F102Y','D101Y','E102Y','J301Y','N101Y')
		    ]]>
    </update>     


    <!-- 연말정산입력정보 수정 -->
    <update id="SAL050202DAO.YndExcclInputU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_BSIS  SET
                         FYER_LABOR_INCOME  = #FYER_LABOR_INCOME#   /* 연간근로소득 */
						,TAXXMPT_INCOME  = #TAXXMPT_INCOME#       /* 비과세소득 */
						,TOT_SALARY_AMOUNT  = #TOT_SALARY_AMOUNT#    /* 총급여금액 */						
						,ERNM_DDC  = #ERNM_DDC#             /* 근로소득공제 */
						,ERNM_AMOUNT  = #ERNM_AMOUNT#          /* 근로소득금액 */
						
						,HSHLDR_AT  = #HSHLDR_AT#            /* 세대주여부 */
						,SPOUSE_AT  = #SPOUSE_AT#            /* 배우자여부 */
						,LADY_HSHLDR  = #LADY_HSHLDR#          /* 부녀자세대주 */
						,SUPORTR_20  = #SUPORTR_20#           /* 부양자20세이하 */
						,SUPORTR_60  = #SUPORTR_60#           /* 부양자60세이상 */
						,COURS_PVLTRT_65  = #COURS_PVLTRT_65#      /* 경로우대65 */
						,COURS_PVLTRT_70  = #COURS_PVLTRT_70#      /* 경로우대70 */
						,DSPSN_CO  = #DSPSN_CO#             /* 장애인수 */
						,CHLDRN_6_BELOW  = #CHLDRN_6_BELOW#       /* 자녀6세이하 */
						,CHLDBRTH_ADP_CHLDRN  = #CHLDBRTH_ADP_CHLDRN#  /* 출산입양자녀 */
						,MNYCH  = #MNYCH#                /* 다자녀 */
						,PARNTS_1  = #PARNTS_1#             /* 한부모 */
						,NPN  = #NPN#                  /* 국민연금 */
						,INDVDL_ANNTY_SVINGS_BEFORE  = #INDVDL_ANNTY_SVINGS_BEFORE#   /* 개인연금저축이전 */
						,INDVDL_ANNTY_SVINGS_AFTER  = #INDVDL_ANNTY_SVINGS_AFTER#    /* 개인연금저축이후 */
						,ANNTY_SVINGS_DDC  = #ANNTY_SVINGS_DDC#             /* 연금저축공제금 */
						,HLTHINS  = #HLTHINS#                      /* 건강보험 */
						,EMPLYMINSRNC  = #EMPLYMINSRNC#                 /* 고용보험 */
						,GRNT_INSRNC  = #GRNT_INSRNC#                  /* 보장성보험 */
						,DSPSN_DVR_INSRNC  = #DSPSN_DVR_INSRNC#             /* 장애인전용보험 */
						,GNRL_MCP  = #GNRL_MCP#                     /* 일반의료비 */
						,SELF_COURS_TROBL_MCP  = #SELF_COURS_TROBL_MCP#         /* 본인경로장애의료 */
						,ERNM_3  = #ERNM_3#                       /* 근로소득3프로 */
						,DDC_MCP  = #DDC_MCP#                      /* 공제의료비 */
						,SELF_EDCCT  = #SELF_EDCCT#                   /* 본인교육비 */
						,ESHL_BFE_EDCCT  = #ESHL_BFE_EDCCT#               /* 취학전교육비 */
						,GNRL_EDCCT  = #GNRL_EDCCT#                   /* 초중고교육비 */
						,UNIV_EDCCT  = #UNIV_EDCCT#                   /* 대학생교육비 */
						,DSPSN_EDCCT  = #DSPSN_EDCCT#                  /* 장애인교육비 */
						,INVSTMNT_INVT  = #INVSTMNT_INVT#                /* 출자투자 */
						,INVT_MXTR  = #INVT_MXTR#                    /* 투자조합 */
						,SUBSCRPT_SVINGS  = #SUBSCRPT_SVINGS#              /* 청약저축 */
						,HOUSE_SUBSCRPT_GNRLZ  = #HOUSE_SUBSCRPT_GNRLZ#         /* 주택청약종합 */
						,LABRR_HOUSE_PREPRTN  = #LABRR_HOUSE_PREPRTN#          /* 근로자주택마련 */
						,LFSTS_INTR  = #LFSTS_INTR#                   /* 목돈안드는전세이자 */
						,PNINT_RPAY_FNNC  = #PNINT_RPAY_FNNC#              /* 원리금상환액금융 */
						,HOUSE_HIRE_INTR_RPAY   =  #HOUSE_HIRE_INTR_RPAY#      /* 주택임차이자상환 */
						,MTHT_AM  = #MTHT_AM#                      /* 월세액 */
						,HOUSE_MRTG_BRRW_INSTT_NM  = #HOUSE_MRTG_BRRW_INSTT_NM#     /* 주택저당차입기관명 */
						,HOUSE_MRTG_BRRW_DE  = #HOUSE_MRTG_BRRW_DE#           /* 주택저당차입일자 */
						,HOUSE_MRTG_BRRW_INTR_14  = #HOUSE_MRTG_BRRW_INTR_14#      /* 주택저당차입이자14 */
						,HOUSE_MRTG_BRRW_INTR_29  = #HOUSE_MRTG_BRRW_INTR_29#      /* 주택저당차입이자29 */
						,HOUSE_MRTG_BRRW_INTR_30  = #HOUSE_MRTG_BRRW_INTR_30#      /* 주택저당차입이자30 */
						,HOUSE_MRTG_BRRW_INTR_FIXING  = #HOUSE_MRTG_BRRW_INTR_FIXING#  /* 주택저당차입이자고정 */
						,HOUSE_MRTG_BRRW_INTR_ETC  = #HOUSE_MRTG_BRRW_INTR_ETC#     /* 주택저당차입이자기타 */
						,HOUSE_MRTG_BRRW_INTR_15Y_15_1 = #HOUSE_MRTG_BRRW_INTR_15Y_15_1#
						,HOUSE_MRTG_BRRW_INTR_15Y_15_2 = #HOUSE_MRTG_BRRW_INTR_15Y_15_2#
						,HOUSE_MRTG_BRRW_INTR_15Y_15_3 = #HOUSE_MRTG_BRRW_INTR_15Y_15_3#
						,HOUSE_MRTG_BRRW_INTR_15Y_10 = #HOUSE_MRTG_BRRW_INTR_15Y_10#
						,LEGAL_CNTR  = #LEGAL_CNTR#                   /* 법정기부 */
						,EXCPT_CNTR  = #EXCPT_CNTR#                   /* 특례기부 */
						,EXCPT_CNTR_LMT  = #EXCPT_CNTR_LMT#               /* 특례기부한도 */
						,APPN_CNTR  = #APPN_CNTR#                    /* 지정기부금액 */
						,LABOR_MXTR  = #LABOR_MXTR#                   /* 노동조합비 */
						,APPN_CNTR_LMT_PRVYY  = #APPN_CNTR_LMT_PRVYY#          /* 지정기부한도전년 */
						,END_CNTR  = #END_CNTR#                     /* 종교기부금 */
						,APPN_TXCLCTPT_LMT_THSYR  = #APPN_TXCLCTPT_LMT_THSYR#      /* 지정기부한도금년 */
						,LEGAL_CNTR_CYFD  = #LEGAL_CNTR_CYFD#              /* 법정기부이월 */
						,APPN_CNTR_CYFD  = #APPN_CNTR_CYFD#               /* 지정기부이월 */
						,RELGN_CNTR_CYFD  = #RELGN_CNTR_CYFD#              /* 종교기부이월 */
						,APPN_CNTR_LMT_UNITY  = #APPN_CNTR_LMT_UNITY#          /* 지정기부한도통합 */
						,MRRG_HMV_FNRL  = #MRRG_HMV_FNRL#                /* 혼인이사장례비 */
						,SPT_TCHNLGY_HNF  = #SPT_TCHNLGY_HNF#              /* 현장기술인력 */
						,CNWK_SDYTRN  = #CNWK_SDYTRN#                  /* 근속연수 */
						,CREDTCARD  = #CREDTCARD#                    /* 신용카드 */
						,DBCD  = #DBCD#                         /* 직불카드 */
						,PBTRNSP_USE  = #PBTRNSP_USE#                  /* 대중교통이용 */
						,CASH_RCIPT  = #CASH_RCIPT#                   /* 현금영수증 */
						,TRDIT_MRKT_USE  = #TRDIT_MRKT_USE#               /* 전통시장사용 */
						,ERNM_25  = #ERNM_25#                      /* 근로소득25 */
						,ERNM_20  = #ERNM_20#                      /* 근로소득20 */
						,CREDTCARD_DDC  = #CREDTCARD_DDC#                /* 신용카드공제 */
						,OUTNATN_WORK_NM  = #OUTNATN_WORK_NM#              /* 국외근무지명 */
						,OUTNATN_WORK_RSPOFC  = #OUTNATN_WORK_RSPOFC#          /* 국외근무직책 */
						,OUTNATN_WORK_PD  = #OUTNATN_WORK_PD#              /* 국외근무기간 */
						,OUTNATN_WORK_TOT_SALARY  = #OUTNATN_WORK_TOT_SALARY#      /* 국외근무총급여 */
						,OUTNATN_WORK_TAXPAY_YEAST  = #OUTNATN_WORK_TAXPAY_YEAST#    /* 국외근무납세국명 */
						,OUTNATN_WORK_TAXPAY_WON  = #OUTNATN_WORK_TAXPAY_WON#      /* 국외근무납세액원화 */
						,OUTNATN_WORK_TAXPAY_FGCRY  = #OUTNATN_WORK_TAXPAY_FGCRY#    /* 국외근무납세액외화 */
						,OUTNATN_WORK_TAXAMT_DDC  = #OUTNATN_WORK_TAXAMT_DDC#      /* 국외근무세액공제 */
						,FUND_1  = #FUND_1#                       /* 펀드1 */
						,FUND_2  = #FUND_2#                       /* 펀드2 */
						,FUND_3  = #FUND_3#                       /* 펀드3 */
						,INORG_SCRITS_SVINGS  = #INORG_SCRITS_SVINGS#          /* 장기증권저축 */
						,SVINGS_SM  = #SVINGS_SM#                    /* 저축계 */
						,POLITC_CPTAL_CNTR  = #POLITC_CPTAL_CNTR#            /* 정치자금기부 */
						,HOUSE_INTR_RPAY_AMOUNT  = #HOUSE_INTR_RPAY_AMOUNT#       /* 주택이자상환금 */
						
						,SELF_CREDTCARD    = #SELF_CREDTCARD#              /* 본인신용카드 */
						,CREDTCARD_ADIT_USE_AMOUNT   = #CREDTCARD_ADIT_USE_AMOUNT#     /* 신용카드추가사용금액 */
						,CREDTCARD_ADIT_USE_AMOUNT_2  =  #CREDTCARD_ADIT_USE_AMOUNT_2#   /* 신용카드추가사용금액2 */
						,SMALL_CRNTY_DDC   =  #SMALL_CRNTY_DDC#           /* 소상공인공제부금 */
						,INVT_MXTR_2   = #INVT_MXTR_2#               /* 투자조합2 */
						,INVT_MXTR_3   = #INVT_MXTR_3#               /* 투자조합3 */
						,RETIRE_ANNTY  = #RETIRE_ANNTY#              /* 퇴직연금 */
						,RM = #RM#
						,SUBSCRPT_SVINGS_14 = #SUBSCRPT_SVINGS_14#				/* 청약저축_14년 이전 */
						,HOUSE_SUBSCRPT_GNRLZ_14 = #HOUSE_SUBSCRPT_GNRLZ_14#	/* 주택청약종합_14년 이전 */
            WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
			AND EXCCLC_SE = #EXCCLC_SE#
			AND EMPNO = #EMPNO#
			AND	CLOS_AT = '0'	/* 마감 안된 내역만 수정가능 */
        ]]>    
    </update>


    <!-- 연말정산입력정보 삭제 -->
    <delete id="SAL050202DAO.YndExcclInputD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_BSIS
            WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			AND A.EMPNO = #EMPNO#
        ]]>    
    </delete>  
    
    
    <!-- 인적공제정보 입력 -->
    <insert id="SAL050202DAO.YndExcclcHnDdcC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBSAL_YND_EXCCLC_HN_DDC (
                         EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,FAMILY_NM
						,FAMILY_IHIDNUM_ENCPT
						,EMPNM
						,FAMILY_RELATE
						,DDC_AT
						,ISE_FRGNR_SE
						,TROBL_AT
						,BELOW_6_AT
						,LADY_AT
						,COURS_PVLTRT_AT
						,CHLDBRTH_ADP_AT
						,PARNTS_1_AT
						,GRNT_INSRNC
						,GRNT_INSRNC_ETC
						,EDCCT_SE_DTA
						,EDCCT_DTA
						,CTBNY_DTA
						,MCP_SE_DTA
						,MCP_DTA
						,CREDTCARD_DTA
						,DBCD_PRPAY_DTA
						,CASH_RCIPT_DTA
						,TRDIT_MRKT_DTA
						,PBTRNSP_TRNSPORT_USE_DTA
						,DSPSN_INSRNC
                        ,DSPSN_INSRNC_ETC
						,EDCCT_SE_ETC
						,EDCCT_ETC
						,CTBNY_ETC
						,MCP_SE_ETC
						,MCP_ETC
						,CREDTCARD_ETC
						,DBCD_PRPAY_ETC
						,TRDIT_MRKT_ETC
						,PBTRNSP_USE_ETC
                        ,REGISTER_ID
                        ,REGIST_DT
                        ,UPDUSR_ID
                        ,UPDT_DT
                        ,GLASSES_BUY
						,GLASSES_BUY_ETC
						,CBPR_TREAT
						,CBPR_TREAT_ETC
						,EDCCT_DTA1
						,EDCCT_ETC1
						,EDCCT_DTA2
						,EDCCT_ETC2
						,EDCCT_DTA3
						,EDCCT_ETC3
						,EDCCT_DTA4
						,EDCCT_ETC4
						,EDCCT_DTA5
						,EDCCT_ETC5
						,CASH_RCIPT_ETC
             ) VALUES (
	                     #EXCCLC_YEAR#
						,#EXCCLC_SE#
						,#EMPNO#
						,#FAMILY_NM#
						,SFCOM_ENC_ALL(#FAMILY_IHIDNUM_ENCPT#)
						,#EMPNM#
						,#FAMILY_RELATE#
						,#DDC_AT#
						,#ISE_FRGNR_SE#
						,#TROBL_AT#
						,CASE WHEN FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(#FAMILY_IHIDNUM_ENCPT#,7,1) WHEN '1' THEN '19' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6) END
			                                                         , 'YYYYMMDD' ) )/12) <= 6 THEN '1' ELSE '' END BELOW_6_AT
						,#LADY_AT#
						,CASE WHEN FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(#FAMILY_IHIDNUM_ENCPT#,7,1) WHEN '1' THEN '19' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(#FAMILY_IHIDNUM_ENCPT#,1,6) END
			                                                         , 'YYYYMMDD' ) )/12) >= 70 THEN '1' ELSE '' END COURS_PVLTRT_AT
						,#CHLDBRTH_ADP_AT#
						,#PARNTS_1_AT#
						,#GRNT_INSRNC#
						,#GRNT_INSRNC_ETC#
						,#EDCCT_SE_DTA#
						,#EDCCT_DTA#
						,#CTBNY_DTA#
						,#MCP_SE_DTA#
						,#MCP_DTA#
						,#CREDTCARD_DTA#
						,#DBCD_PRPAY_DTA#
						,#CASH_RCIPT_DTA#
						,#TRDIT_MRKT_DTA#
						,#PBTRNSP_TRNSPORT_USE_DTA#
						,#DSPSN_INSRNC#
						,#DSPSN_INSRNC_ETC#
						,#EDCCT_SE_ETC#
						,#EDCCT_ETC#
						,#CTBNY_ETC#
						,#MCP_SE_ETC#
						,#MCP_ETC#
						,#CREDTCARD_ETC#
						,#DBCD_PRPAY_ETC#
						,#TRDIT_MRKT_ETC#
						,#PBTRNSP_USE_ETC#        
	                    ,#S_USER_ID#
	                    ,SYSDATE
	                    ,#S_USER_ID#               
	                    ,SYSDATE
	                    ,#GLASSES_BUY#
						,#GLASSES_BUY_ETC#
						,#CBPR_TREAT#
						,#CBPR_TREAT_ETC#
						,#EDCCT_DTA1#
						,#EDCCT_ETC1#
						,#EDCCT_DTA2#
						,#EDCCT_ETC2#
						,#EDCCT_DTA3#
						,#EDCCT_ETC3#
						,#EDCCT_DTA4#
						,#EDCCT_ETC4#
						,#EDCCT_DTA5#
						,#EDCCT_ETC5#
						,#CASH_RCIPT_ETC#
             )
        ]]>
    </insert>
    
    
    <!-- 인적공제정보 수정 -->
    <update id="SAL050202DAO.YndExcclcHnDdcU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_HN_DDC A SET
                 FAMILY_RELATE       = #FAMILY_RELATE#
				,DDC_AT              = #DDC_AT#
				,ISE_FRGNR_SE        = #ISE_FRGNR_SE#
				,TROBL_AT            = #TROBL_AT#
				,BELOW_6_AT          = #BELOW_6_AT#
				,LADY_AT             = #LADY_AT#
				,COURS_PVLTRT_AT     = #COURS_PVLTRT_AT#
				,CHLDBRTH_ADP_AT     = #CHLDBRTH_ADP_AT#
				,PARNTS_1_AT         = #PARNTS_1_AT#				
				,GRNT_INSRNC         = #GRNT_INSRNC#
				,GRNT_INSRNC_ETC     = #GRNT_INSRNC_ETC#
				,DSPSN_INSRNC        = #DSPSN_INSRNC#
				,DSPSN_INSRNC_ETC    = #DSPSN_INSRNC_ETC#
				,EDCCT_SE_DTA        = #EDCCT_SE_DTA#
				,EDCCT_DTA           = #EDCCT_DTA#
				,CTBNY_DTA           = #CTBNY_DTA#
				,MCP_SE_DTA          = #MCP_SE_DTA#
				,MCP_DTA             = #MCP_DTA#
				,CREDTCARD_DTA       = #CREDTCARD_DTA#
				,DBCD_PRPAY_DTA      = #DBCD_PRPAY_DTA#
				,CASH_RCIPT_DTA      = #CASH_RCIPT_DTA#
				,TRDIT_MRKT_DTA      = #TRDIT_MRKT_DTA#
				,PBTRNSP_TRNSPORT_USE_DTA   = #PBTRNSP_TRNSPORT_USE_DTA#
				,EDCCT_SE_ETC        = #EDCCT_SE_ETC#
				,EDCCT_ETC           = #EDCCT_ETC#
				,CTBNY_ETC           = #CTBNY_ETC#
				,MCP_SE_ETC          = #MCP_SE_ETC#
				,MCP_ETC             = #MCP_ETC#
				,CREDTCARD_ETC       = #CREDTCARD_ETC#
				,DBCD_PRPAY_ETC      = #DBCD_PRPAY_ETC#
				,TRDIT_MRKT_ETC      = #TRDIT_MRKT_ETC#
				,PBTRNSP_USE_ETC     = #PBTRNSP_USE_ETC#
                ,UPDUSR_ID		     = #S_USER_ID#
                ,UPDT_DT		     = SYSDATE
                ,GLASSES_BUY		 = #GLASSES_BUY#
				,GLASSES_BUY_ETC	 = #GLASSES_BUY_ETC#
				,CBPR_TREAT	 		 = #CBPR_TREAT#
				,CBPR_TREAT_ETC		 = #CBPR_TREAT_ETC#
				,EDCCT_DTA1			= #EDCCT_DTA1#
				,EDCCT_ETC1			= #EDCCT_ETC1#
				,EDCCT_DTA2			= #EDCCT_DTA2#
				,EDCCT_ETC2			= #EDCCT_ETC2#
				,EDCCT_DTA3			= #EDCCT_DTA3#
				,EDCCT_ETC3			= #EDCCT_ETC3#
				,EDCCT_DTA4			= #EDCCT_DTA4#
				,EDCCT_ETC4			= #EDCCT_ETC4#
				,EDCCT_DTA5			= #EDCCT_DTA5#
				,EDCCT_ETC5			= #EDCCT_ETC5#
				,CASH_RCIPT_ETC		= #CASH_RCIPT_ETC#
            WHERE EXCCLC_YEAR = #EXCCLC_YEAR#            
            AND EXCCLC_SE = #EXCCLC_SE#           
            AND EMPNO = #EMPNO#
            AND FAMILY_NM = #FAMILY_NM#
            AND FAMILY_IHIDNUM_ENCPT = SFCOM_ENC_ALL(#FAMILY_IHIDNUM_ENCPT#)
        ]]>    
    </update>


    <!-- 인적공제정보 삭제 -->
    <delete id="SAL050202DAO.YndExcclcHnDdcD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_HN_DDC A
            WHERE EXCCLC_YEAR = #EXCCLC_YEAR#            
            AND EXCCLC_SE = #EXCCLC_SE#           
            AND EMPNO = #EMPNO#
            AND FAMILY_NM = #FAMILY_NM#
            AND FAMILY_IHIDNUM_ENCPT = SFCOM_ENC_ALL(#FAMILY_IHIDNUM_ENCPT#)
        ]]>    
    </delete>  
  
  
   
   <!-- 연말정산자료정보 입력 -->
    <insert id="SAL050202DAO.YndNTS_C" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBSAL_YND_EXCCLC_NTS (
                         SN
						,EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,DTA_SE
						,FORMAT_CODE
						,IEM_CODE
						,IHIDNUM
						,NM
						,RELATE_SE
						,BIZRNO
						,MTLTY
						,DETAIL_KND
						,DETAIL_KND_2
						,ESNTL_NO
						,GOODS_NM
						,STDR_DE
						,BEGIN_DE
						,END_DE
						,GNRL_2
						,TRDIT_MRKT_2
						,MASS_TRNSPORT_2
						,GNRL_1
						,TRDIT_MRKT_1
						,MASS_TRNSPORT_1
						,FRHFYR_CARD
						,SHYY_CARD
						,RPAY_PD
						,BRRW_AMOUNT
						,FIXING_BRRW_AMOUNT
						,NTHG_DFR_BRRW_AMOUNT
						,PRTINT_PRNCPAL_RPAY
						,PAY_AMOUNT
						,RM
						,REGISTER_ID
						,REGIST_DT
						,UPDUSR_ID
						,UPDT_DT
						,CTBNY_CNT
						,CTBNY_AMOUNT
						,CTBNY_ICNT_AMOUNT
						,CBPR_TREAT_AT
             ) VALUES (
	                     SQ_TBSAL_3.NEXTVAL
	                    ,#EXCCLC_YEAR#
						,#EXCCLC_SE#
						,#EMPNO#
						,''
						,#FORMAT_CODE#
						,DECODE(#FORMAT_CODE#, 'D101Y', 'G0009', 'E102Y', 'G0010', 'F102Y', 'G0011', 'N101Y', 'G0029', 'J301Y', 'G0018', #IEM_CODE#)
						,SFCOM_ENC_ALL(#IHIDNUM#)
						,#NM#
						,#RELATE_SE#
						,#BIZRNO#
						,#MTLTY#
						,#DETAIL_KND#
						,#DETAIL_KND_2#
						,#ESNTL_NO#
						,#GOODS_NM#
						,#STDR_DE#
						,#BEGIN_DE#
						,#END_DE#
						,#GNRL_2#
						,#TRDIT_MRKT_2#
						,#MASS_TRNSPORT_2#
						,#GNRL_1#
						,#TRDIT_MRKT_1#
						,#MASS_TRNSPORT_1#
						,#FRHFYR_CARD#
						,#SHYY_CARD#
						,#RPAY_PD#
						,#BRRW_AMOUNT#
						,#FIXING_BRRW_AMOUNT#
						,#NTHG_DFR_BRRW_AMOUNT#
						,#PRTINT_PRNCPAL_RPAY#
						,#PAY_AMOUNT#
						,#RM#
						,#S_USER_ID#
	                    ,SYSDATE
	                    ,#S_USER_ID#               
	                    ,SYSDATE
	                    ,#CTBNY_CNT#
						,#CTBNY_AMOUNT#
						,#CTBNY_ICNT_AMOUNT#
						,#CBPR_TREAT_AT#
             )
        ]]>
    </insert>
    
    
    <!-- 연말정산자료정보 수정 -->
    <update id="SAL050202DAO.YndNTS_U" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_NTS SET
                 NM          = #NM#
                ,RELATE_SE   = #RELATE_SE# 
                ,FORMAT_CODE = #FORMAT_CODE#
                ,IEM_CODE    = DECODE(#FORMAT_CODE#, 'D101Y', 'G0009', 'E102Y', 'G0010', 'F102Y', 'G0011', 'N101Y', 'G0029', 'J301Y', 'G0018', #IEM_CODE#)
				,BIZRNO      = #BIZRNO#
				,MTLTY       = #MTLTY#
				,DETAIL_KND  = #DETAIL_KND#
				,DETAIL_KND_2 = #DETAIL_KND_2#
				,ESNTL_NO    = #ESNTL_NO#
				,GOODS_NM    = #GOODS_NM#
				,STDR_DE     = #STDR_DE#
				,BEGIN_DE    = #BEGIN_DE#
				,END_DE      = #END_DE# 
				,PAY_AMOUNT  = #PAY_AMOUNT#
                ,UPDUSR_ID	 = #S_USER_ID#
                ,UPDT_DT	 = SYSDATE
                ,CTBNY_CNT	= #CTBNY_CNT#
				,CTBNY_AMOUNT	= #CTBNY_AMOUNT#
				,CTBNY_ICNT_AMOUNT	= #CTBNY_ICNT_AMOUNT#
				,DDC_AMOUNT = #DDC_AMOUNT#
				,CBPR_TREAT_AT = #CBPR_TREAT_AT#
				,RM = #RM#
            WHERE SN = #SN#
        ]]>    
    </update>


    <!-- 연말정산자료정보 삭제 -->
    <delete id="SAL050202DAO.YndNTS_D" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_NTS
            WHERE SN = #SN#
        ]]>    
    </delete>          
   
   <!-- 월세월리금정보 입력 -->
    <insert id="SAL050202DAO.YndpnintC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBSAL_YND_EXCCLC_PNINT_RPAY (
                         SN
                        ,EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,EMPNM
						,RNTAGNT_NM
						,RNTAGNT_NO
						,CTRTC_ADRES
						,CNTRCT_BGNDE
						,CNTRCT_ENDDE
						,MTHT_AM
						,DDC_AMOUNT
						,LENDR_NM
						,LENDR_IHIDNUM_ENCPT
						,BRRW_INTR_RT
						,PNINT_RPAY_AMOUNT
						,PRNCPAL
						,INTR_AMOUNT
						,DDC_AMOUNT_2
						,RNTAGNT_NM_2
						,RNTAGNT_IHIDNUM_ENCPT_2
						,CTRTC_ADRES_2
						,CNTRCT_BGNDE_2
						,CNTRCT_ENDDE_2
						,LFSTS_GTN
						,CRRNCY_CNSMP_HOUSE_TY
						,CRRNCY_CNSMP_HOUSE_AR
						,LS_HOUSE_TY
						,LS_HOUSE_AR
						,CRRNCY_CNSMP_BEGIN_DE
						,CRRNCY_CNSMP_END_DE
						,REGISTER_ID
						,REGIST_DT
						,UPDUSR_ID
						,UPDT_DT
             ) VALUES (
	                     SQ_TBSAL_6.NEXTVAL
                        ,#EXCCLC_YEAR#
						,#EXCCLC_SE#
						,#EMPNO#
						,#EMPNM#
						,#RNTAGNT_NM#
						,SFCOM_ENC_ALL(#RNTAGNT_NO#)
						,#CTRTC_ADRES#
						,#CNTRCT_BGNDE#
						,#CNTRCT_ENDDE#
						,#MTHT_AM#
						,#DDC_AMOUNT#
						,#LENDR_NM#
						,SFCOM_ENC_ALL(#LENDR_IHIDNUM_ENCPT#)
						,#BRRW_INTR_RT#
						,#PNINT_RPAY_AMOUNT#
						,#PRNCPAL#
						,#INTR_AMOUNT#
						,#DDC_AMOUNT_2#
						,#RNTAGNT_NM_2#
						,SFCOM_ENC_ALL(#RNTAGNT_IHIDNUM_ENCPT_2#)
						,#CTRTC_ADRES_2#
						,#CNTRCT_BGNDE_2#
						,#CNTRCT_ENDDE_2#
						,#LFSTS_GTN#
						,#CRRNCY_CNSMP_HOUSE_TY#
						,#CRRNCY_CNSMP_HOUSE_AR#
						,#LS_HOUSE_TY#
						,#LS_HOUSE_AR#
						,#CRRNCY_CNSMP_BEGIN_DE#
						,#CRRNCY_CNSMP_END_DE#
	                    ,#S_USER_ID#
	                    ,SYSDATE
	                    ,#S_USER_ID#               
	                    ,SYSDATE
             )
        ]]>
    </insert>
    
    
    <!-- 월세월리금정보 수정 -->
    <update id="SAL050202DAO.YndpnintU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_PNINT_RPAY  SET
                 RNTAGNT_NM              = #RNTAGNT_NM#
				,RNTAGNT_NO              = SFCOM_ENC_ALL(#RNTAGNT_NO#)
				,CTRTC_ADRES             = #CTRTC_ADRES#
				,CNTRCT_BGNDE            = #CNTRCT_BGNDE#
				,CNTRCT_ENDDE            = #CNTRCT_ENDDE#
				,MTHT_AM                 = #MTHT_AM#
				,DDC_AMOUNT              = #DDC_AMOUNT#
				,LENDR_NM                = #LENDR_NM#
				,LENDR_IHIDNUM_ENCPT     = SFCOM_ENC_ALL(#LENDR_IHIDNUM_ENCPT#)
				,BRRW_INTR_RT            = #BRRW_INTR_RT#
				,PNINT_RPAY_AMOUNT       = #PNINT_RPAY_AMOUNT#
				,PRNCPAL                 = #PRNCPAL#
				,INTR_AMOUNT             = #INTR_AMOUNT#
				,DDC_AMOUNT_2            = #DDC_AMOUNT_2#
				,RNTAGNT_NM_2            = #RNTAGNT_NM_2#
				,RNTAGNT_IHIDNUM_ENCPT_2 = SFCOM_ENC_ALL(#RNTAGNT_IHIDNUM_ENCPT_2#)
				,CTRTC_ADRES_2           = #CTRTC_ADRES_2#
				,CNTRCT_BGNDE_2          = #CNTRCT_BGNDE_2#
				,CNTRCT_ENDDE_2          = #CNTRCT_ENDDE_2#
				,LFSTS_GTN               = #LFSTS_GTN#
				,CRRNCY_CNSMP_HOUSE_TY   = #CRRNCY_CNSMP_HOUSE_TY#
				,CRRNCY_CNSMP_HOUSE_AR   = #CRRNCY_CNSMP_HOUSE_AR#
				,LS_HOUSE_TY             = #LS_HOUSE_TY#
				,LS_HOUSE_AR             = #LS_HOUSE_AR#
				,CRRNCY_CNSMP_BEGIN_DE   = #CRRNCY_CNSMP_BEGIN_DE#
				,CRRNCY_CNSMP_END_DE     = #CRRNCY_CNSMP_END_DE#
                ,UPDUSR_ID	             = #S_USER_ID#
                ,UPDT_DT	             = SYSDATE
            WHERE SN  =  #SN#
        ]]>    
    </update>


    <!-- 월세월리금정보 삭제 -->
    <delete id="SAL050202DAO.YndpnintD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_PNINT_RPAY
            WHERE SN  =  #SN#
        ]]>    
    </delete>  
    
    
    <!-- 연말정산기초정보 수정 -->
    <update id="SAL050202DAO.updateYndExcclInput2" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_BSIS A SET
                /* 공제대상 자녀 */
                MNYCH      = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                     AND B.FAMILY_RELATE = '007' AND DDC_AT = '1')
                 
              /* 부양자20세이하 */
				,SUPORTR_20 = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                               AND B.FAMILY_RELATE NOT IN('000', '004') AND DDC_AT = '1'
                               AND FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) <= 20)
				
				 /* 부양자60세이상 */
				,SUPORTR_60 = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                               AND B.FAMILY_RELATE NOT IN('000', '004') AND DDC_AT = '1'
                               AND FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) >= 60)
				
				/* 경로우대70  */
				,COURS_PVLTRT_70  = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                               AND B.FAMILY_RELATE NOT IN('000') AND DDC_AT = '1'
                               AND FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) >= 70)
				
				/* 장애인수 */ 
				,DSPSN_CO        = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                    AND TROBL_AT != '0' AND DDC_AT = '1')
				
				/* 자녀6세이하 */ 
				,CHLDRN_6_BELOW  = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                               AND B.FAMILY_RELATE NOT IN('000') AND DDC_AT = '1'
                               AND FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) <= 6)
				
				/* 출산입양자녀 */ 
				,CHLDBRTH_ADP_CHLDRN   = (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                          AND CHLDBRTH_ADP_AT = '1' AND DDC_AT = '1')
                                 
                /* 보장성보험 */
                ,GRNT_INSRNC   =  (SELECT 
									  NVL((SELECT SUM(B.GRNT_INSRNC) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	   AND B.DDC_AT = '1'),0) +
									  NVL((SELECT SUM(B.GRNT_INSRNC_ETC) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	   AND B.DDC_AT = '1'),0)
								   FROM DUAL)                   
				/* 장애인전용보험 */
				,DSPSN_DVR_INSRNC  = (SELECT 
									     NVL((SELECT SUM(B.DSPSN_INSRNC) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	      AND B.DDC_AT = '1'),0) +
									     NVL((SELECT SUM(B.DSPSN_INSRNC_ETC) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	      AND B.DDC_AT = '1'),0)
								      FROM DUAL)
								      
				/* 의료비 본인경로장애+난임 */
				,SELF_COURS_TROBL_MCP	= (SELECT 
									          NVL(
									          	(SELECT NVL(SUM(B.MCP_DTA), 0) + NVL(SUM(B.MCP_ETC), 0)
									          	        + CASE WHEN NVL(SUM(B.GLASSES_BUY), 0) + NVL(SUM(B.GLASSES_BUY_ETC), 0) > 500000 THEN 500000 
									          	          ELSE NVL(SUM(B.GLASSES_BUY), 0) + NVL(SUM(B.GLASSES_BUY_ETC), 0) END	/* 안경구입비 인당 50만원 한도 */ 
									          	   FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	            AND B.DDC_AT = '1'
									  	            AND (
									  	            	FAMILY_RELATE = '000'
									  	            	OR NVL(TROBL_AT, '0') != '0'
									  	            	OR FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) >= 65
			                                             )
			                                     )
			                                    + (SELECT NVL(SUM(B.CBPR_TREAT), 0) + NVL(SUM(B.CBPR_TREAT_ETC), 0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	            AND B.DDC_AT = '1')
									  	       ,0)
								           FROM DUAL)
				
				/* 의료비 본인경로장애+난임 제외 부양가족 */
				,GNRL_MCP	            = (SELECT 
									          NVL(
									          	(SELECT NVL(SUM(B.MCP_DTA), 0) + NVL(SUM(B.MCP_ETC), 0) 
									          	        + CASE WHEN NVL(SUM(B.GLASSES_BUY), 0) + NVL(SUM(B.GLASSES_BUY_ETC), 0) > 500000 THEN 500000 
									          	          ELSE NVL(SUM(B.GLASSES_BUY), 0) + NVL(SUM(B.GLASSES_BUY_ETC), 0) END	/* 안경구입비 인당 50만원 한도 */
									          	  FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
									  	            AND B.DDC_AT = '1'
									  	            AND FAMILY_RELATE != '000'
									  	            AND NVL(TROBL_AT, '0') = '0'
									  	            AND FLOOR( MONTHS_BETWEEN( TO_DATE(#EXCCLC_YEAR#||'0101', 'YYYYMMDD')
                                                          , TO_DATE( CASE SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),7,1) WHEN '1' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) 
			                                                         WHEN '2' THEN '19' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '3' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6)
			                                                         WHEN '4' THEN '20' || SUBSTR(SFCOM_DEC_ALL(FAMILY_IHIDNUM_ENCPT),1,6) END
			                                                         , 'YYYYMMDD' ) )/12) < 65
			                                             )
									  	       ,0)
								           FROM DUAL)
				
				/* 본인교육비 */ 
				,SELF_EDCCT    =  (SELECT NVL(SUM(B.EDCCT_DTA),0) + NVL(SUM(B.EDCCT_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                /* 취학전교육비 인당 300만 한도 */ 
				,ESHL_BFE_EDCCT    =  (SELECT	SUM(	CASE WHEN NVL(B.EDCCT_DTA1,0) + NVL(B.EDCCT_ETC1,0) > 3000000 THEN 3000000 
														ELSE NVL(B.EDCCT_DTA1,0) + NVL(B.EDCCT_ETC1,0) END	) 
										FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                /* 초중고교육비 인당 300만 (교복구입비 50만 한도) */ 
				,GNRL_EDCCT    =  (SELECT	SUM(	CASE WHEN NVL(B.EDCCT_DTA2,0) + NVL(B.EDCCT_ETC2,0) + (CASE WHEN NVL(B.EDCCT_DTA3,0) + NVL(B.EDCCT_ETC3,0) > 500000 THEN 500000 ELSE NVL(B.EDCCT_DTA3,0) + NVL(B.EDCCT_ETC3,0) END) > 3000000 THEN 3000000 
														ELSE NVL(B.EDCCT_DTA2,0) + NVL(B.EDCCT_ETC2,0) + (CASE WHEN NVL(B.EDCCT_DTA3,0) + NVL(B.EDCCT_ETC3,0) > 500000 THEN 500000 ELSE NVL(B.EDCCT_DTA3,0) + NVL(B.EDCCT_ETC3,0) END) END	)
										FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                /* 대학생교육비 */ 
				,UNIV_EDCCT    =  (SELECT	SUM(	CASE WHEN NVL(B.EDCCT_DTA4,0) + NVL(B.EDCCT_ETC4,0) > 9000000 THEN 9000000 
														ELSE NVL(B.EDCCT_DTA4,0) + NVL(B.EDCCT_ETC4,0) END	) 
										FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                 /* 장애인교육비 */ 
				,DSPSN_EDCCT    =  (SELECT NVL(SUM(B.EDCCT_DTA5),0) + NVL(SUM(B.EDCCT_ETC5),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                                 
				/* 신용카드 */ 
				,CREDTCARD    =  (SELECT NVL(SUM(B.CREDTCARD_DTA),0) + NVL(SUM(B.CREDTCARD_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')
                                 				           
                /* 직불카드 */ 
				,DBCD    =  (SELECT NVL(SUM(B.DBCD_PRPAY_DTA),0) + NVL(SUM(B.DBCD_PRPAY_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1')  
                                 
                /* 대중교통이용 */ 
				,PBTRNSP_USE    =  (SELECT NVL(SUM(B.PBTRNSP_TRNSPORT_USE_DTA),0) + NVL(SUM(B.PBTRNSP_USE_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1') 
                                 
                /* 현금영수증 */ 
				,CASH_RCIPT    =  (SELECT NVL(SUM(B.CASH_RCIPT_DTA),0) + NVL(SUM(B.CASH_RCIPT_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1') 
                                 
                /* 전통시장사용분 */ 
				,TRDIT_MRKT_USE    =  (SELECT NVL(SUM(B.TRDIT_MRKT_DTA),0) + NVL(SUM(B.TRDIT_MRKT_ETC),0) FROM TBSAL_YND_EXCCLC_HN_DDC B WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO 
                                 AND B.DDC_AT = '1') 
                                                                                                     				           
				
				,UPDUSR_ID	             = #S_USER_ID#
                ,UPDT_DT	             = SYSDATE
           WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
		   AND A.EXCCLC_SE = #EXCCLC_SE#
		   AND A.EMPNO = #EMPNO#
		   AND A.CLOS_AT = '0'	/* 마감 안된 내역만 수정가능 */
        ]]>    
    </update>   
    
    <!-- 연말정산 pdf 자료입력전 기존자료 삭제 -->
    
    <!-- 국세청PDF 정보 삭제 -->
    <delete id="SAL050202DAO.NTS2015_D" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_NTS
            WHERE EMPNO = #EMPNO#
            AND EXCCLC_YEAR = #EXCCLC_YEAR#
            AND EXCCLC_SE = #EXCCLC_SE#
            AND DTA_SE ='Y'
        ]]>    
    </delete>  
    
    
    <!-- 연말정산 pdf 자료입력 --> 
    
    <!-- 국세청PDF 정보 입력 -->
    <insert id="SAL050202DAO.NTS2015_C" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBSAL_YND_EXCCLC_NTS (
                         SN
						,EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,DTA_SE
						,FORMAT_CODE
						,IEM_CODE
						,IHIDNUM
						,NM
						,RELATE_SE
						,BIZRNO
						,MTLTY
						,DETAIL_KND
						,DETAIL_KND_2
						,ESNTL_NO
						,GOODS_NM
						,STDR_DE
						,BEGIN_DE
						,END_DE
						,GNRL_2
						,TRDIT_MRKT_2
						,MASS_TRNSPORT_2
						,GNRL_1
						,TRDIT_MRKT_1
						,MASS_TRNSPORT_1
						,FRHFYR_CARD
						,SHYY_CARD
						,RPAY_PD
						,BRRW_AMOUNT
						,FIXING_BRRW_AMOUNT
						,NTHG_DFR_BRRW_AMOUNT
						,PRTINT_PRNCPAL_RPAY
						,PAY_AMOUNT
						,RM
						,REGISTER_ID
						,REGIST_DT
						,UPDUSR_ID
						,UPDT_DT
						,CTBNY_CNT
						,CTBNY_AMOUNT
						,CTBNY_ICNT_AMOUNT
             ) VALUES (
	                     SQ_TBSAL_3.NEXTVAL
	                    ,#EXCCLC_YEAR#
						,#EXCCLC_SE#
						,#EMPNO#
						,#DTA_SE#
						,#FORMAT_CODE#
						,#IEM_CODE#
						,SFCOM_ENC_ALL(#IHIDNUM#)
						,#NM#
						,#RELATE_SE#
						,#BIZRNO#
						,#MTLTY#
						,#DETAIL_KND#
						,#DETAIL_KND_2#
						,#ESNTL_NO#
						,#GOODS_NM#
						,#STDR_DE#
						,#BEGIN_DE#
						,#END_DE#
						,#GNRL_2#
						,#TRDIT_MRKT_2#
						,#MASS_TRNSPORT_2#
						,#GNRL_1#
						,#TRDIT_MRKT_1#
						,#MASS_TRNSPORT_1#
						,#FRHFYR_CARD#
						,#SHYY_CARD#
						,#RPAY_PD#
						,#BRRW_AMOUNT#
						,#FIXING_BRRW_AMOUNT#
						,#NTHG_DFR_BRRW_AMOUNT#
						,#PRTINT_PRNCPAL_RPAY#
						,#PAY_AMOUNT#
						,#RM#
						,#S_USER_ID#
	                    ,SYSDATE
	                    ,#S_USER_ID#               
	                    ,SYSDATE
	                    ,#CTBNY_CNT#
						,#CTBNY_AMOUNT#
						,#CTBNY_ICNT_AMOUNT#
             )
        ]]>
    </insert>
 
    
    <!-- 연말정산 pdf 자료합계 입력 -->  
    
    <!-- 연말정산인적공제기타정보 수정  -->
    <update id="SAL050202DAO.NTS2015H_U" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_HN_DDC A
			SET GRNT_INSRNC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE ='A102Y'
				             AND IEM_CODE = 'G0001'), 0)     /*  보장성보험  */
				,DSPSN_INSRNC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE ='A102Y'
				             AND IEM_CODE = 'G0002'), 0)     /*  장애인보장성보험  */   
				,MCP_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE != 'G0026'
				             AND CBPR_TREAT_AT IS NULL), 0)   /*  의료비  */  
				,CBPR_TREAT = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE != 'G0026'
				             AND CBPR_TREAT_AT = '1'), 0)   /*  의료비 난임시술비  */  
				,GLASSES_BUY = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE = 'G0026'), 0)   /*  의료비(안경구입비)  */
				,MCP_ETC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND NVL(DTA_SE, 'N') ='N'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE != 'G0026'), 0)   /*  의료비_기타  */  
				,CBPR_TREAT_ETC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND NVL(DTA_SE, 'N') ='N'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE != 'G0026'
				             AND CBPR_TREAT_AT = '1'), 0)   /*  의료비_기타 난임시술비  */  
				,GLASSES_BUY_ETC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND NVL(DTA_SE, 'N') ='N'
				             AND FORMAT_CODE ='B101Y'
				             AND IEM_CODE = 'G0026'), 0)   /*  의료비_기타(안경구입비)  */
				/*  ,EDCCT_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS 
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN('C101Y','C202Y','C301Y')), 0)   교육비  */  
				/* 본인교육비 */ 
                ,EDCCT_DTA   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
                                 AND A.FAMILY_RELATE = '000'
				                 AND B.FORMAT_CODE IN('C101Y')
				                 AND B.IEM_CODE IN('G0006','G0007')
				                 AND B.DETAIL_KND IN('C','D','E')),0)  +
				                 NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
                                 AND A.FAMILY_RELATE = '000'
				                 AND B.FORMAT_CODE IN('C202Y')
				                 AND B.IEM_CODE IN('G0005')),0)  
				/* 취학전교육비 */ 
                ,EDCCT_DTA1   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				                 AND B.FORMAT_CODE IN('C101Y')
				                 AND B.IEM_CODE IN('G0004','G0007')
				                 AND B.DETAIL_KND IN('1','F','G','8')),0)   
				/* 초중고교육비 */ 
                ,EDCCT_DTA2   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				                 AND B.FORMAT_CODE IN('C101Y')
				                 AND B.IEM_CODE IN('G0004','G0007')
				                 AND B.DETAIL_KND IN('2','3','4')),0)
				/* 교육비(교복비) */ 
                ,EDCCT_DTA3   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				                 AND B.FORMAT_CODE IN('C301Y')
				                 AND B.IEM_CODE IN('G0024')) ,0) 
				/* 대학생교육비 */ 
                ,EDCCT_DTA4   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				                 AND B.FORMAT_CODE IN('C101Y')
				                 AND B.IEM_CODE IN('G0006','G0007')
				                 AND B.DETAIL_KND IN('5','6','7')),0)  
				/* 장애인교육비 */ 
                ,EDCCT_DTA5   =   NVL((SELECT SUM(B.PAY_AMOUNT) 
                                 FROM TBSAL_YND_EXCCLC_NTS B 
                                 WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
                                 AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				                 AND B.FORMAT_CODE IN('C101Y')
				                 AND B.IEM_CODE IN('G0007')
				                 AND B.DETAIL_KND IN('H','J','K')),0)
				                 
				,CREDTCARD_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN ('G103Y', 'G104Y')  /* 2016년 코드 신규 */
				             AND IEM_CODE = 'G0012'
				             AND DETAIL_KND = '1'), 0)   
				 ,CASH_RCIPT_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN ('G204M', 'G205M')  /* 2016년 코드 신규 */ 
				             AND IEM_CODE = 'G0013'
				             AND DETAIL_KND = '1'), 0)    
				 ,DBCD_PRPAY_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN ('G303Y', 'G304Y')  /* 2016년 코드 신규 */ 
				             AND IEM_CODE = 'G0014'
				             AND DETAIL_KND = '1'), 0)    
				 ,TRDIT_MRKT_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN('G103Y', 'G104Y', 'G204M', 'G205M', 'G303Y', 'G304Y') 
				             AND DETAIL_KND = '2'), 0)  
				  ,PBTRNSP_TRNSPORT_USE_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN('G103Y', 'G104Y', 'G204M', 'G205M', 'G303Y', 'G304Y') 
				             AND DETAIL_KND = '3'), 0)                                                                                                          
				  ,CTBNY_DTA = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND DTA_SE ='Y'
				             AND FORMAT_CODE IN ('L101Y','L102Y') 
				             AND IEM_CODE = 'G0020'
				             ), 0)
				   ,CTBNY_ETC = NVL((SELECT SUM(PAY_AMOUNT) 
				             FROM TBSAL_YND_EXCCLC_NTS
				             WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
				             AND EXCCLC_SE = A.EXCCLC_SE
				             AND EMPNO = A.EMPNO
				             AND IHIDNUM = A.FAMILY_IHIDNUM_ENCPT
				             AND NVL(DTA_SE, 'N') ='N'
				             AND FORMAT_CODE IN ('L101Y','L102Y') 
				             AND IEM_CODE = 'G0020'
				             ), 0)
			WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
			AND EXCCLC_SE = #EXCCLC_SE#
			AND EMPNO = #EMPNO#
			AND (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_NTS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
			      AND EXCCLC_SE = A.EXCCLC_SE
			      AND EMPNO = A.EMPNO
			      ) > 0
        ]]>    
    </update>   
   
    
    <!-- 연말정산기초정보 수정 주택자금, 기부금  -->
    <update id="SAL050202DAO.NTS2015B_U" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_BSIS A
			SET PNINT_RPAY_FNNC = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J101Y'
					               AND IEM_CODE = 'G0016'),0)                  /*  원리금상환금융  */ 
				,HOUSE_MRTG_BRRW_INTR_14  = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND STDR_DE < '20120101'
                                   AND RPAY_PD BETWEEN 10 AND 14),0)           
				,HOUSE_MRTG_BRRW_INTR_29  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND STDR_DE < '20120101'
                                   AND RPAY_PD BETWEEN 15 AND 29),0)  
                ,HOUSE_MRTG_BRRW_INTR_30  =   NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND STDR_DE < '20120101'
                                   AND RPAY_PD > 29),0)   
                ,HOUSE_MRTG_BRRW_INTR_FIXING  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') BETWEEN TO_DATE('20120101', 'YYYYMMDD') AND TO_DATE('20141231', 'YYYYMMDD')
							       AND (NVL(FIXING_BRRW_AMOUNT, 0) + NVL(NTHG_DFR_BRRW_AMOUNT, 0)) > 0
							       ),0)
				,HOUSE_MRTG_BRRW_INTR_ETC  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') BETWEEN TO_DATE('20120101', 'YYYYMMDD') AND TO_DATE('20141231', 'YYYYMMDD')
							       AND (NVL(FIXING_BRRW_AMOUNT, 0) + NVL(NTHG_DFR_BRRW_AMOUNT, 0)) = 0
							       ),0)
				,HOUSE_MRTG_BRRW_INTR_15Y_15_1 = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') >= TO_DATE('20150101', 'YYYYMMDD')
							       AND NVL(FIXING_BRRW_AMOUNT, 0) > 0
							       AND NVL(NTHG_DFR_BRRW_AMOUNT, 0) > 0
							       AND RPAY_PD > 14
							       ),0)
				,HOUSE_MRTG_BRRW_INTR_15Y_15_2 = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') >= TO_DATE('20150101', 'YYYYMMDD')
							       AND (
							       		(NVL(FIXING_BRRW_AMOUNT, 0) = 0 AND NVL(NTHG_DFR_BRRW_AMOUNT, 0) > 0)
							       		OR 
							       		(NVL(FIXING_BRRW_AMOUNT, 0) > 0 AND NVL(NTHG_DFR_BRRW_AMOUNT, 0) = 0)
							       		)
							       AND RPAY_PD > 14
							       ),0)
				,HOUSE_MRTG_BRRW_INTR_15Y_15_3 = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') >= TO_DATE('20150101', 'YYYYMMDD')
							       AND (NVL(FIXING_BRRW_AMOUNT, 0) + NVL(NTHG_DFR_BRRW_AMOUNT, 0)) = 0
							       AND RPAY_PD > 14
							       ),0)
				,HOUSE_MRTG_BRRW_INTR_15Y_10 = NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J203Y'
					               AND IEM_CODE = 'G0017'
							       AND TO_DATE(STDR_DE, 'YYYYMMDD') >= TO_DATE('20150101', 'YYYYMMDD')
							       AND (NVL(FIXING_BRRW_AMOUNT, 0) + NVL(NTHG_DFR_BRRW_AMOUNT, 0)) > 0
							       AND RPAY_PD BETWEEN 10 AND 14
							       ),0)
				,SUBSCRPT_SVINGS  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J301Y'
					               AND DETAIL_KND_2 = '1'),0)
				,SUBSCRPT_SVINGS_14  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J301Y'
					               AND DETAIL_KND_2 = '1'
					               AND STDR_DE < '20150101'),0)
				,HOUSE_SUBSCRPT_GNRLZ  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J301Y'
					               AND DETAIL_KND_2 = '2'),0)			               			             
				,HOUSE_SUBSCRPT_GNRLZ_14  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J301Y'
					               AND DETAIL_KND_2 = '2'
					               AND STDR_DE < '20150101'),0)
				,LABRR_HOUSE_PREPRTN  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J301Y'
					               AND DETAIL_KND_2 = '4'),0)
				/* 퇴직연금 */
				,RETIRE_ANNTY  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='F102Y'
					               AND IEM_CODE = 'G0011'),0)		
				/* 개인연금저축 */
				,INDVDL_ANNTY_SVINGS_BEFORE  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='D101Y'
					               AND IEM_CODE = 'G0009'),0)	
				/* 연금저축 */
				,ANNTY_SVINGS_DDC  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='E102Y'
					               AND IEM_CODE = 'G0010'),0)		               		                              
				,LFSTS_INTR  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='J401Y'
					               AND IEM_CODE = 'G0023'),0)	
				,SMALL_CRNTY_DDC  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='K101M'
					               AND IEM_CODE = 'G0019'),0)		
				,INORG_SCRITS_SVINGS  =  NVL((SELECT SUM(PAY_AMOUNT) 
					               FROM TBSAL_YND_EXCCLC_NTS 
					               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
					               AND EXCCLC_SE = A.EXCCLC_SE
					               AND EMPNO = A.EMPNO
					               AND FORMAT_CODE ='N101Y'
					               AND IEM_CODE = 'G0029'),0)
				
				/* 교육비 셋팅 삭제 */
				 
				 /* 월세액 */ 
                ,MTHT_AM   =  NVL((SELECT SUM(MTHT_AM) 
                               FROM TBSAL_YND_EXCCLC_PNINT_RPAY 
                               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO),0)
                /* 이자상환액 */ 
                /*,HOUSE_HIRE_INTR_RPAY   =  NVL((SELECT SUM(INTR_AMOUNT) 
                               FROM TBSAL_YND_EXCCLC_PNINT_RPAY
                               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO),0)
                */  
                /* 주택임차원리금상환액_거주자 */ 
                ,PNINT_RPAY_RESIDNT   =  NVL((SELECT SUM(PNINT_RPAY_AMOUNT) 
                               FROM TBSAL_YND_EXCCLC_PNINT_RPAY
                               WHERE EXCCLC_YEAR = A.EXCCLC_YEAR AND EXCCLC_SE = A.EXCCLC_SE AND EMPNO = A.EMPNO),0)
                
                /* 의료비 셋팅 삭제 */
                
				,CREDTCARD_ADIT_USE_AMOUNT = NVL((
									SELECT CASE WHEN SUM(YEAR_2) > SUM(YEAR_1) THEN 0		/* 전전년도가 전년도 보다 크면 0 */
												WHEN SUM(YEAR_FRHFYR) - SUM(YEAR_2_TARGET) > 0 THEN SUM(YEAR_FRHFYR) - SUM(YEAR_2_TARGET)	/* 금년도 상반기 - 전전년도 사용금액(전통시장 대종교통, 직불카드, 현금영수증) */
												ELSE 0 END
									FROM (
											SELECT IEM_CODE
													, SUM(CASE WHEN ST1.IEM_CODE = 'G0012' AND ST1.DETAIL_KND = '1' THEN 0 ELSE FRHFYR_CARD END) AS YEAR_FRHFYR
													, MAX(GNRL_1) AS YEAR_1
													, MAX(GNRL_2) AS YEAR_2
													, DECODE(IEM_CODE, 'G0012', MAX(TRDIT_MRKT_2)+MAX(MASS_TRNSPORT_2), MAX(GNRL_2)+MAX(TRDIT_MRKT_2)+MAX(MASS_TRNSPORT_2)) / 2 AS YEAR_2_TARGET
											FROM TBSAL_YND_EXCCLC_NTS ST1
											WHERE ST1.EXCCLC_YEAR = #EXCCLC_YEAR#
											AND ST1.EMPNO = #EMPNO#
											AND ST1.IHIDNUM = (SELECT IHIDNUM_ENCPT FROM TBHRM_HR_MASTR ST2 WHERE ST1.EMPNO = ST2.EMPNO)
											AND ST1.FORMAT_CODE IN ( 'G204M', 'G205M', 'G303Y', 'G304Y', 'G103Y', 'G104Y')
											GROUP BY IEM_CODE
									)
									),0)
			WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
			AND EXCCLC_SE = #EXCCLC_SE#
			AND EMPNO = #EMPNO#
			AND (SELECT COUNT(*) FROM TBSAL_YND_EXCCLC_NTS WHERE EXCCLC_YEAR = A.EXCCLC_YEAR
			      AND EXCCLC_SE = A.EXCCLC_SE
			      AND EMPNO = A.EMPNO) > 0
			AND A.CLOS_AT = '0'	/* 마감 안된 내역만 수정가능 */
        ]]>    
    </update>
    
    <!-- 연말정산기초정보 수정 기부금 이월 내역 -->
    <update id="SAL050202DAO.CNTR_MDAT_B_U" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_BSIS A
            SET		LEGAL_CNTR_CYFD = 	NVL((	SELECT SUM(DDC_TRGET)
												FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
												WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
												AND   AA.EXCCLC_SE = A.EXCCLC_SE
												AND   AA.EMPNO = A.EMPNO
												AND   CNTR_YEAR <= '2013'
												AND   CNTR_TY = '10'
										), 0)
					, APPN_CNTR_CYFD = 	NVL((	SELECT SUM(DDC_TRGET)
											FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
											WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
											AND   AA.EXCCLC_SE = A.EXCCLC_SE
											AND   AA.EMPNO = A.EMPNO
											AND   CNTR_YEAR <= '2013'
											AND   CNTR_TY = '40'
										), 0)
					, RELGN_CNTR_CYFD = NVL((	SELECT SUM(DDC_TRGET)
											FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
											WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
											AND   AA.EXCCLC_SE = A.EXCCLC_SE
											AND   AA.EMPNO = A.EMPNO
											AND   CNTR_YEAR <= '2013'
											AND   CNTR_TY = '41'
										), 0)
					/* 법정기부금 */
					,LEGAL_CNTR =			NVL((SELECT SUM(B.PAY_AMOUNT) 
												FROM TBSAL_YND_EXCCLC_NTS B 
												WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
												AND B.FORMAT_CODE IN ('L101Y','L102Y')
												AND B.IEM_CODE = 'G0020'
												AND B.DETAIL_KND IN('10','010')
												AND B.IHIDNUM IN (SELECT AA.FAMILY_IHIDNUM_ENCPT FROM TBSAL_YND_EXCCLC_HN_DDC AA WHERE AA.EMPNO = A.EMPNO AND AA.EXCCLC_YEAR = A.EXCCLC_YEAR AND AA.EXCCLC_SE = A.EXCCLC_SE AND DDC_AT = '1')
												),0)
										+	NVL((	SELECT SUM(DDC_TRGET)
												FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
												WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
												AND   AA.EXCCLC_SE = A.EXCCLC_SE
												AND   AA.EMPNO = A.EMPNO
												AND   CNTR_YEAR > '2013'
												AND   CNTR_YEAR < EXCCLC_YEAR
												AND   CNTR_TY = '10'
											), 0)
					/* 지정기부금 */
					,APPN_CNTR =			NVL((SELECT SUM(B.PAY_AMOUNT) 
												FROM TBSAL_YND_EXCCLC_NTS B 
												WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
												AND B.FORMAT_CODE IN ('L101Y','L102Y')
												AND B.IEM_CODE = 'G0020'
												AND B.DETAIL_KND IN('40','040')
												AND B.IHIDNUM IN (SELECT AA.FAMILY_IHIDNUM_ENCPT FROM TBSAL_YND_EXCCLC_HN_DDC AA WHERE AA.EMPNO = A.EMPNO AND AA.EXCCLC_YEAR = A.EXCCLC_YEAR AND AA.EXCCLC_SE = A.EXCCLC_SE AND DDC_AT = '1')
												),0)
										+	NVL((	SELECT SUM(DDC_TRGET)
												FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
												WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
												AND   AA.EXCCLC_SE = A.EXCCLC_SE
												AND   AA.EMPNO = A.EMPNO
												AND   CNTR_YEAR > '2013'
												AND   CNTR_YEAR < EXCCLC_YEAR
												AND   CNTR_TY = '40'
											), 0)                                                                              				           
					/* 종교단체기부금 */
					,END_CNTR=				NVL((SELECT SUM(B.PAY_AMOUNT) 
												FROM TBSAL_YND_EXCCLC_NTS B 
												WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
												AND B.FORMAT_CODE IN ('L101Y','L102Y')
												AND B.IEM_CODE = 'G0020'
												AND B.DETAIL_KND IN('41','041')
												AND B.IHIDNUM IN (SELECT AA.FAMILY_IHIDNUM_ENCPT FROM TBSAL_YND_EXCCLC_HN_DDC AA WHERE AA.EMPNO = A.EMPNO AND AA.EXCCLC_YEAR = A.EXCCLC_YEAR AND AA.EXCCLC_SE = A.EXCCLC_SE AND DDC_AT = '1')
												),0)
										+	NVL((	SELECT SUM(DDC_TRGET)
												FROM TBSAL_YND_EXCCLC_CNTR_MDAT AA
												WHERE AA.EXCCLC_YEAR = A.EXCCLC_YEAR
												AND   AA.EXCCLC_SE = A.EXCCLC_SE
												AND   AA.EMPNO = A.EMPNO
												AND   CNTR_YEAR > '2013'
												AND   CNTR_YEAR < EXCCLC_YEAR
												AND   CNTR_TY = '41'
											), 0)
					/* 정치자금기부금 본인것만 공제가능 */ 
					,POLITC_CPTAL_CNTR =	NVL((SELECT SUM(B.PAY_AMOUNT) 
												FROM TBSAL_YND_EXCCLC_NTS B 
												WHERE B.EXCCLC_YEAR = A.EXCCLC_YEAR AND B.EXCCLC_SE = A.EXCCLC_SE AND B.EMPNO = A.EMPNO
												AND B.FORMAT_CODE IN ('L101Y','L102Y')
												AND B.IEM_CODE = 'G0020'
												AND B.DETAIL_KND IN('20','020')
												AND B.IHIDNUM = (SELECT AA.IHIDNUM_ENCPT FROM TBHRM_HR_MASTR AA WHERE AA.EMPNO = A.EMPNO)
												),0)   
					WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
					AND EXCCLC_SE = #EXCCLC_SE#
					AND EMPNO = #EMPNO#
					AND A.CLOS_AT = '0'	/* 마감 안된 내역만 수정가능 */
        ]]>    
    </update>   
    
    <!-- 기부조정정보 수정 -->
    <update id="SAL050202DAO.YndExcclcHnDdcU_000" parameterClass="java.util.HashMap">
        <![CDATA[
			UPDATE TBSAL_YND_EXCCLC_HN_DDC A 
			SET	LADY_AT	= #LADY_HSHLDR#
				, PARNTS_1_AT = #PARNTS_1#
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			AND A.EMPNO = #EMPNO#
			AND A.FAMILY_RELATE = '000'
        ]]>    
    </update>
         
	<!-- 마감 -->
    <update id="SAL050202DAO.yndExcclcClos" parameterClass="java.util.HashMap">
        <![CDATA[
			UPDATE	TBSAL_YND_EXCCLC_BSIS A  
			SET		CLOS_AT = '1'
					,FRST_CLOS_ID = NVL(FRST_CLOS_ID,#S_USER_ID#) 
					,FRST_CLOS_DT = NVL(FRST_CLOS_DT,SYSDATE)
					,LAST_CLOS_ID = #S_USER_ID#
					,LAST_CLOS_DT = SYSDATE
			WHERE	EXCCLC_YEAR = #EXCCLC_YEAR#
			AND		EXCCLC_SE = #EXCCLC_SE#
			AND		EMPNO = #EMPNO#
			AND		CLOS_AT = '0'
        ]]>
    </update>
    
    <!-- 마감취소 -->
    <update id="SAL050202DAO.yndExcclcClosCancle" parameterClass="java.util.HashMap">
		UPDATE	TBSAL_YND_EXCCLC_BSIS A  
		SET		CLOS_AT = '0'
				,LAST_CLOS_ID = #S_USER_ID#
				,LAST_CLOS_DT = SYSDATE
		WHERE	EXCCLC_YEAR = #EXCCLC_YEAR#
		AND		EXCCLC_SE = #EXCCLC_SE#
		AND		EMPNO = #EMPNO#
		AND		CLOS_AT = '1'
    </update>



	<!-- 기부조정정보 목록조회 -->
	<select id="SAL050202DAO.selectYndcntrmdatList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[		 
	        SELECT 
					 A.EXCCLC_YEAR
					,A.EXCCLC_SE
					,A.EMPNO
					,A.CNTR_YEAR
					,A.CNTR_TY
					,SFSAL_GETEMPNO_01(A.EMPNO)  AS EMPNM  
					,A.CNTR_AMOUNT		/* 기부금액 */
					,A.PRVYY_DDC		/* 전년공제 */
					,A.DDC_TRGET		/* 공제대상 */
					,A.CRRSPND_DDC		/* 해당공제 */
					,A.EXTSH_AMOUNT		/* 소멸금액 */
					,A.CYFD_AMOUNT		/* 이월금액 */
					,A.END_YEAR			/* 종료년도 */
					,A.CLOS_AT			/* 마감여부 */
			FROM TBSAL_YND_EXCCLC_CNTR_MDAT  A			
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
		]]>	  
		<isNotEmpty property="EMPNO">
	 	    AND A.EMPNO = #EMPNO#
		</isNotEmpty>
		ORDER BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.CNTR_YEAR DESC, A.CNTR_TY
    </select>
    
    <!-- 기부조정정보 목록조회 -->
	<select id="SAL050202DAO.selectYndcntrmdatList2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[		 
	        SELECT 
					 A.EXCCLC_YEAR
					,A.EXCCLC_SE
					,A.EMPNO
					,A.CNTR_YEAR
					,A.CNTR_TY
					,SFSAL_GETEMPNO_01(A.EMPNO)  AS EMPNM  
					,TO_CHAR(A.CNTR_AMOUNT) AS CNTR_AMOUNT		/* 기부금액 */
					,TO_CHAR(A.PRVYY_DDC) AS PRVYY_DDC		/* 전년공제 */
					,TO_CHAR(A.DDC_TRGET) AS DDC_TRGET		/* 공제대상 */
			FROM TBSAL_YND_EXCCLC_CNTR_MDAT  A			
			WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
		]]>	  
	 	    AND A.EMPNO = #EMPNO#
	 	    AND A.CNTR_TY = #CNTR_TY#
		<isEqual property="CYFD_AT" compareValue="1">
		<![CDATA[
	 	    AND A.CNTR_YEAR <= '2013'
	 	]]>
		</isEqual>
		<isEqual property="CYFD_AT" compareValue="0">
		<![CDATA[
	 	    AND A.CNTR_YEAR > '2013'
	 	]]>
		</isEqual>
		ORDER BY A.EXCCLC_YEAR, A.EXCCLC_SE, A.EMPNO, A.CNTR_YEAR
    </select>  
    
    
    <!-- 기부조정정보 입력 -->
    <insert id="SAL050202DAO.YndcntrmdatC_1" parameterClass="java.util.HashMap">
            INSERT INTO TBSAL_YND_EXCCLC_CNTR_MDAT (
                         EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,CNTR_YEAR
						,CNTR_TY
						,EMPNM
						,CNTR_AMOUNT
						,PRVYY_DDC
						,DDC_TRGET
						,CRRSPND_DDC
						,EXTSH_AMOUNT
						,CYFD_AMOUNT
						,END_YEAR
						,CLOS_AT
						,REGISTER_ID
						,REGIST_DT
						,UPDUSR_ID
						,UPDT_DT
             )
             SELECT EXCCLC_YEAR
					, EXCCLC_SE
					, EMPNO
					, EXCCLC_YEAR
					, DETAIL_KND
					, (SELECT EMPNM FROM TBHRM_HR_MASTR AA WHERE A.EMPNO = AA.EMPNO) AS EMPNM
					, SUM(DECODE(DETAIL_KND, '20', DECODE(A.IHIDNUM, (SELECT B.IHIDNUM_ENCPT FROM TBHRM_HR_MASTR B WHERE B.EMPNO = A.EMPNO), PAY_AMOUNT, 0), PAY_AMOUNT )) AS CNTR_AMOUNT	/* 정치자금 기부금은 본인것만 계산 */
					, 0
					, SUM(DECODE(DETAIL_KND, '20', DECODE(A.IHIDNUM, (SELECT B.IHIDNUM_ENCPT FROM TBHRM_HR_MASTR B WHERE B.EMPNO = A.EMPNO), PAY_AMOUNT, 0), PAY_AMOUNT )) AS DDC_TRGET	/* 정치자금 기부금은 본인것만 계산 */
					, 0
					, 0
					, 0
					, NULL
					, 0
					,#S_USER_ID#
                    ,SYSDATE
                    ,#S_USER_ID#               
                    ,SYSDATE
			FROM TBSAL_YND_EXCCLC_NTS A
			WHERE EXCCLC_YEAR = #EXCCLC_YEAR#
			AND EXCCLC_SE = #EXCCLC_SE#
			AND FORMAT_CODE = 'L102Y'
			AND IEM_CODE = 'G0020'
			AND IHIDNUM IN (SELECT AA.FAMILY_IHIDNUM_ENCPT FROM TBSAL_YND_EXCCLC_HN_DDC AA WHERE AA.EMPNO = A.EMPNO AND AA.EXCCLC_YEAR = A.EXCCLC_YEAR AND AA.EXCCLC_SE = A.EXCCLC_SE AND DDC_AT = '1')
			<isNotEmpty property="EMPNO">
		 	    AND A.EMPNO = #EMPNO#
			</isNotEmpty> 
			GROUP BY EXCCLC_YEAR, EXCCLC_SE, FORMAT_CODE, IEM_CODE, EMPNO, DETAIL_KND
    </insert>
    
    <!-- 기부조정정보 삭제 -->
    <delete id="SAL050202DAO.YndcntrmdatD_1" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_CNTR_MDAT A
            WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			AND A.EMPNO = #EMPNO#
			AND A.CNTR_YEAR = #EXCCLC_YEAR#
        ]]>    
    </delete>    
    
    <!-- 기부조정정보 입력 -->
    <insert id="SAL050202DAO.YndcntrmdatC" parameterClass="java.util.HashMap">
        <![CDATA[
            INSERT INTO TBSAL_YND_EXCCLC_CNTR_MDAT (
                         EXCCLC_YEAR
						,EXCCLC_SE
						,EMPNO
						,CNTR_YEAR
						,CNTR_TY
						,EMPNM
						,CNTR_AMOUNT
						,PRVYY_DDC
						,DDC_TRGET
						,CRRSPND_DDC
						,EXTSH_AMOUNT
						,CYFD_AMOUNT
						,END_YEAR
						,CLOS_AT
						,REGISTER_ID
						,REGIST_DT
						,UPDUSR_ID
						,UPDT_DT
             ) VALUES (
	                     #EXCCLC_YEAR#
						,#EXCCLC_SE#
						,#EMPNO#
						,#CNTR_YEAR#
						,#CNTR_TY#
						,#EMPNM#
						,NVL(#CNTR_AMOUNT#, 0)
						,NVL(#PRVYY_DDC#, 0)
						,NVL(#DDC_TRGET#, 0)
						,NVL(#CRRSPND_DDC#, 0)
						,NVL(#EXTSH_AMOUNT#, 0)
						,NVL(#CYFD_AMOUNT#, 0)
						,#END_YEAR#
						,#CLOS_AT#               
	                    ,#S_USER_ID#
	                    ,SYSDATE
	                    ,#S_USER_ID#               
	                    ,SYSDATE
             )
        ]]>
    </insert>


    <!-- 기부조정정보 수정 -->
    <update id="SAL050202DAO.YndcntrmdatU" parameterClass="java.util.HashMap">
        <![CDATA[
            UPDATE TBSAL_YND_EXCCLC_CNTR_MDAT A SET
                 CNTR_AMOUNT           = NVL(#CNTR_AMOUNT#, 0)
                ,PRVYY_DDC             = NVL(#PRVYY_DDC# , 0)
                ,DDC_TRGET             = NVL(#DDC_TRGET#, 0)
                ,CRRSPND_DDC           = NVL(#CRRSPND_DDC#, 0)
                ,EXTSH_AMOUNT          = NVL(#EXTSH_AMOUNT# , 0)
                ,CYFD_AMOUNT           = NVL(#CYFD_AMOUNT#, 0)
                ,END_YEAR              = #END_YEAR#
                ,UPDUSR_ID		       = #S_USER_ID#
                ,UPDT_DT		       = SYSDATE
            WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			AND A.EMPNO = #EMPNO#
			AND A.CNTR_YEAR = #CNTR_YEAR#
			AND A.CNTR_TY = #CNTR_TY# 
        ]]>    
    </update>


    <!-- 기부조정정보 삭제 -->
    <delete id="SAL050202DAO.YndcntrmdatD" parameterClass="java.util.HashMap">
        <![CDATA[
            DELETE FROM TBSAL_YND_EXCCLC_CNTR_MDAT A
            WHERE A.EXCCLC_YEAR = #EXCCLC_YEAR#
			AND A.EXCCLC_SE = #EXCCLC_SE#
			AND A.EMPNO = #EMPNO#
			AND A.CNTR_YEAR = #CNTR_YEAR#
			AND A.CNTR_TY = #CNTR_TY# 
        ]]>    
    </delete>    
</sqlMap>