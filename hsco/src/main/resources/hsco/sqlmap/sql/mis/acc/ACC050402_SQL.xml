<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC050402_SQL">	

	<!--사업지구별 원가항목명세서 리스트조회 -->
	<select id="ACC050402DAO.ChitMassterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC050402DAO.ChitMassterList*/ ]]>
		WITH BSNS_PRMPC_T AS (
		    SELECT t2.BSNS_CODE
		         , MAX(t4.BSNS_NM) AS BSNS_NM
		         , '2' AS LVL
		         , t2.ACCNUT_ACNT_CODE
		         , NVL(t5.ACCNUT_ACNT_NM, NVL(t2.PRMPC_CODE, '[원가미등록]')) AS PRMPC_NM
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '01', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT01
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '02', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT02
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '03', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT03
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '04', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT04
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '05', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT05
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '06', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT06
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '07', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT07
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '08', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT08
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '09', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT09
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '10', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT10
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '11', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT11
		         , NVL(SUM(DECODE(SUBSTR(t1.CHIT_DE, 5, 2), '12', DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0), 0)),0) AS AMT12
		         , NVL(SUM(DECODE(t3.DBRT_SE, 'D', t2.DEBTOR_AMOUNT - t2.CRDIT_AMOUNT, 'C', t2.CRDIT_AMOUNT - t2.DEBTOR_AMOUNT, 0)),0) AS SUM_AMT
		    FROM TBACC_CHIT_MASTR t1
		      INNER JOIN TBACC_CHIT_DETAIL t2
		      ON  t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		      AND t1.CHIT_NO     = t2.CHIT_NO
		      <isNotEmpty property="BSNS_CODE">
		      AND t2.BSNS_CODE   = #BSNS_CODE#
		      </isNotEmpty>
		      INNER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		      ON  t2.ACCNUT_YEAR      = t3.ACCNUT_YEAR
		      AND (CASE WHEN SUBSTR(#ACCNUT_YM_ED#,1,4) <![CDATA[<]]> '2016' THEN t2.PRMPC_CODE ELSE t2.ACCNUT_ACNT_CODE end) = t3.ACCNUT_ACNT_CODE
		      LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		      ON  t2.BSNS_CODE   = t4.BSNS_CODE
		      LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t5
		      ON  t2.ACCNUT_YEAR = t5.ACCNUT_YEAR
		      AND t2.ACCNUT_ACNT_CODE   = t5.ACCNUT_ACNT_CODE
		    WHERE t1.ACCNUT_YEAR = #ACCNUT_YEAR#
		    AND   t1.CHIT_DE BETWEEN  #ACCNUT_YM_ST#||'01' AND #ACCNUT_YM_ED#||'31'
		    <isNotEqual property="CHK_NON_PRMPC" compareValue="0">
		    AND   t3.PRMPC_AT = '1'
		    </isNotEqual>
		    AND   t1.CHIT_CONFM_AT = '1'  /*승인*/
		    AND   t2.PRMPC_CODE IS NOT NULL
		    GROUP BY t2.BSNS_CODE, t2.ACCNUT_ACNT_CODE, NVL(t5.ACCNUT_ACNT_NM, NVL(t2.PRMPC_CODE, '[원가미등록]'))
		    ORDER BY t2.BSNS_CODE, t2.ACCNUT_ACNT_CODE
		)
		, BSNS_PRMPC_OWNER_T AS (
		  SELECT BSNS_CODE
		       , BSNS_NM
		       , '1' AS LVL
		       , '0' AS ACCNUT_ACNT_CODE
		       , BSNS_NM AS PRMPC_NM
		       , SUM(AMT01) AS AMT01
		       , SUM(AMT02) AS AMT02
		       , SUM(AMT03) AS AMT03
		       , SUM(AMT04) AS AMT04
		       , SUM(AMT05) AS AMT05
		       , SUM(AMT06) AS AMT06
		       , SUM(AMT07) AS AMT07
		       , SUM(AMT08) AS AMT08
		       , SUM(AMT09) AS AMT09
		       , SUM(AMT10) AS AMT10
		       , SUM(AMT11) AS AMT11
		       , SUM(AMT12) AS AMT12
		       , SUM(AMT01) + SUM(AMT02) + SUM(AMT03) + SUM(AMT04) + SUM(AMT05) + SUM(AMT06) 
		         + SUM(AMT07) + SUM(AMT08) + SUM(AMT09) + SUM(AMT10) + SUM(AMT11) + SUM(AMT12) AS SUM_AMT
		  FROM BSNS_PRMPC_T
		  GROUP BY BSNS_CODE, BSNS_NM
		)
		SELECT t1.* 
		  FROM 
		       (SELECT BSNS_CODE,
		              BSNS_NM,
		              LVL,
		              ACCNUT_ACNT_CODE,
		              PRMPC_NM,
		              SUM(AMT01) AS AMT01,
		              SUM(AMT02) AS AMT02,
		              SUM(AMT03) AS AMT03,
		              SUM(AMT04) AS AMT04,
		              SUM(AMT05) AS AMT05,
		              SUM(AMT06) AS AMT06,
		              SUM(AMT07) AS AMT07,
		              SUM(AMT08) AS AMT08,
		              SUM(AMT09) AS AMT09,
		              SUM(AMT10) AS AMT10,
		              SUM(AMT11) AS AMT11,
		              SUM(AMT12) AS AMT12,
		              SUM(SUM_AMT) AS SUM_AMT
		         FROM BSNS_PRMPC_OWNER_T A
		        GROUP BY BSNS_CODE, BSNS_NM, LVL, ACCNUT_ACNT_CODE, PRMPC_NM
		           UNION ALL
		       SELECT BSNS_CODE,
		              BSNS_NM,
		              LVL,
		              ACCNUT_ACNT_CODE,
		              PRMPC_NM,
		              SUM(AMT01) AS AMT01,
		              SUM(AMT02) AS AMT02,
		              SUM(AMT03) AS AMT03,
		              SUM(AMT04) AS AMT04,
		              SUM(AMT05) AS AMT05,
		              SUM(AMT06) AS AMT06,
		              SUM(AMT07) AS AMT07,
		              SUM(AMT08) AS AMT08,
		              SUM(AMT09) AS AMT09,
		              SUM(AMT10) AS AMT10,
		              SUM(AMT11) AS AMT11,
		              SUM(AMT12) AS AMT12,
		              SUM(SUM_AMT) AS SUM_AMT
		         FROM BSNS_PRMPC_T
		        GROUP BY BSNS_CODE, BSNS_NM, LVL, ACCNUT_ACNT_CODE, PRMPC_NM
		       ) t1
		ORDER BY t1.BSNS_CODE,
		       t1.LVL,
		       t1.ACCNUT_ACNT_CODE		
    </select>
 </sqlMap>