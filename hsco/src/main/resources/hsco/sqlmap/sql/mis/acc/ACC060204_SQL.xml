<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC060204_SQL">	
	
	<!-- 전표리스트 -->
	<select id="ACC060204DAO.chitList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		WITH t3 AS(SELECT ACCNUT_YEAR ,
	    CHIT_NO ,
	    MAX(ACCNUT_ACNT_NM) AS ACCNUT_ACNT_LIST
	  FROM
	    ( SELECT DISTINCT b1.ACCNUT_YEAR ,
	      b1.CHIT_NO ,
	      b2.ACCNUT_ACNT_NM
	    FROM TBACC_CHIT_DETAIL b1
	    LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT b2
	    ON b1.ACCNUT_YEAR       = b2.ACCNUT_YEAR
	    AND b1.ACCNUT_ACNT_CODE = b2.ACCNUT_ACNT_CODE
	    WHERE 1=1
	    )
	  GROUP BY ACCNUT_YEAR,
	    CHIT_NO
	  )
		SELECT
     		 t1.CHIT_CONFM_AT   	/* 전표승인여부 */
		    ,t1.CHIT_DE         	/* 전표일자 */
		    ,t1.ACCNUT_YEAR			/* 회계년도	*/
		    ,t1.CHIT_NO         	/* 전표번호 */
		    ,t2.BUDGET_ACNT_LIST  	/* 예산계정목록 */
		    ,t3.ACCNUT_ACNT_LIST ||' 외 ' ||(t4.CNT -1) || '건' AS   ACCNUT_ACNT_LIST    /* 회계계정목록 */
		    ,t1.DECSN_YEAR      	/* 결의년도 */
		    ,t1.DECSN_NO        	/* 결의번호 */
		    ,t1.CHIT_SE				/* 전표구분 */
		    ,t1.CHIT_KND			/* 전표종류 */
		    ,t1.CHIT_TY				/* 전표유형 */
		    ,NVL(t1.CPTAL_EXPNDTR_DE, t5.CPTAL_EXPNDTR_ACNTBK_DE) AS CPTAL_EXPNDTR_DE	/* 자금지출일자 */
		    ,t4.DEBTOR_AMOUNT   	/* 차변 */
		    ,t4.CRDIT_AMOUNT    	/* 대변 */
		    ,t1.SUMRY_1         	/* 적요1 */
		    ,t1.SUMRY_2         	/* 적요2 */
		    ,t2.BUDGET_YEAR			/* 예산년도 */      
		    ,t2.BSNS_SE          	/* 사업구분 */
		    ,t2.BALC_SE          	/* 수지구분 */
		    ,t2.BUDGET_ACNT_CODE 	/* 예산코드 */
		    ,t2.BUDGET_ACNT_NM   	/* 예산명 */
		    ,t2.EXPNDTR_UNIT_CODE	/* 지출단위코드 */
		    ,t2.EXPNDTR_UNIT_NM  	/* 지출단위명 */
		    ,t2.DEPT_CODE			/* 부서코드 */
		    ,t5.ITNC_DE				/* 발의일자 */
		    ,t5.DET_DCSN_DE			/* 채무확정일자 */
		    ,DECODE(t1.CHIT_SE,'1','VAL0','2','VAL1',NULL) AS CHIT_TY_DATACOL /* 전표유형 datacolumn */
		FROM TBACC_CHIT_MASTR t1
		     LEFT OUTER JOIN
		     (SELECT 
		           ACCNUT_YEAR
		          ,CHIT_NO
		          ,LISTAGG(BUDGET_ACNT_NM,',') WITHIN GROUP(ORDER BY NULL) 		AS BUDGET_ACNT_LIST
		          ,MAX(BUDGET_YEAR) KEEP(DENSE_RANK FIRST ORDER BY NULL) 		AS BUDGET_YEAR
		          ,MAX(BSNS_SE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS BSNS_SE
		          ,MAX(BALC_SE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS BALC_SE
		          ,MAX(BUDGET_ACNT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS BUDGET_ACNT_CODE
              	  ,MAX(BUDGET_ACNT_NM) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS BUDGET_ACNT_NM
		          ,MAX(EXPNDTR_UNIT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS EXPNDTR_UNIT_CODE
              	  ,MAX(EXPNDTR_UNIT_NM) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS EXPNDTR_UNIT_NM
              	  ,MAX(DEPT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS DEPT_CODE
		      FROM (
		      SELECT
		            DISTINCT
		           a1.ACCNUT_YEAR
		          ,a1.CHIT_NO
		          ,a2.BUDGET_ACNT_NM
		          ,a1.BUDGET_YEAR
		          ,a1.BSNS_SE
		          ,a1.BALC_SE
		          ,a1.BUDGET_ACNT_CODE
		          ,a1.EXPNDTR_UNIT_CODE
              	  ,a3.EXPNDTR_UNIT_NM
              	  ,a1.DEPT_CODE
		      FROM TBACC_CHIT_DETAIL a1
		           LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE a2
		           ON  a1.BUDGET_YEAR = a2.YEAR
		           AND a1.BSNS_SE = a2.BSNS_SE
		           AND a1.BALC_SE = a2.BALC_SE
		           AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
		           LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a3
		           ON  a1.BUDGET_YEAR = a3.YEAR
		           AND a1.BSNS_SE = a3.BSNS_SE
		           AND a1.BALC_SE = a3.BALC_SE
		           AND a1.BUDGET_ACNT_CODE = a3.BUDGET_ACNT_CODE
		           AND a1.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
		      WHERE 1=1
		      )
		      GROUP BY ACCNUT_YEAR, CHIT_NO
		     ) t2
		     ON t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		     AND t1.CHIT_NO = t2.CHIT_NO
		     LEFT OUTER JOIN t3
		     ON t1.ACCNUT_YEAR = t3.ACCNUT_YEAR
		     AND t1.CHIT_NO = t3.CHIT_NO
		    LEFT OUTER JOIN
		    (SELECT 
		         ACCNUT_YEAR
		        ,CHIT_NO
		        ,COUNT(*) AS CNT
		        ,NVL(SUM(DEBTOR_AMOUNT),0) AS DEBTOR_AMOUNT
		        ,NVL(SUM(CRDIT_AMOUNT),0) AS CRDIT_AMOUNT
		     FROM TBACC_CHIT_DETAIL
		     GROUP BY ACCNUT_YEAR, CHIT_NO
		    ) t4
		    ON t1.ACCNUT_YEAR = t4.ACCNUT_YEAR
		    AND t1.CHIT_NO = t4.CHIT_NO
		    LEFT OUTER JOIN TBACC_EXP_DSN_MASTR t5
		    ON t1.DECSN_YEAR = t5.DECSN_YEAR
			AND t1.DECSN_NO = t5.DECSN_NO
		WHERE 1=1
		  AND t1.CHIT_DE BETWEEN #CHIT_FROM_DE# AND #CHIT_TO_DE#
		<isNotEmpty property="CHIT_SE">
		  AND t1.CHIT_SE = #CHIT_SE#
		</isNotEmpty>
		<isNotEmpty property="CHIT_KND">
		  AND t1.CHIT_KND = #CHIT_KND#
		</isNotEmpty>
		  AND EXISTS (
		  	SELECT 1
		  	FROM TBACC_CHIT_DETAIL t6
		<isNotEmpty property="ACCNUT_ACNT_CODE">
			LEFT OUTER JOIN t3
			ON t3.CHIT_NO = t6.CHIT_NO
		</isNotEmpty>
		  	WHERE t1.ACCNUT_YEAR = t6.ACCNUT_YEAR
		  	  AND t1.CHIT_NO = t6.CHIT_NO
		<isNotEmpty property="ACCNUT_ACNT_CODE">
			  AND t3.ACCNUT_ACNT_LIST LIKE '%' || #ACCNUT_ACNT_NM# || '%'
		</isNotEmpty>
		<isNotEmpty property="BSNS_CODE">
		 	  AND t6.BSNS_CODE			= #BSNS_CODE#
		</isNotEmpty>
		<isNotEmpty property="PRMPC_CODE">
			  AND t6.PRMPC_YEAR			= #PRMPC_YEAR#
			  AND t6.PRMPC_CODE			= #PRMPC_CODE#
		</isNotEmpty>
		  )
	</select>
	
	<!-- 전표상세 목록 -->
	<select id="ACC060204DAO.chitDetailList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT DISTINCT
			 t1.ACCNUT_YEAR
			,t1.CHIT_NO
			,t1.SEQ
			,t1.ACCNUT_ACNT_CODE
			,t2.ACCNUT_ACNT_NM
			,t1.BUDGET_YEAR
			,t1.BSNS_SE
			,t1.BALC_SE
			,t1.BUDGET_ACNT_CODE
			,t1.DEPT_CODE
			,t1.EXPNDTR_UNIT_CODE
			,t1.BSNS_CODE
			,t3.BSNS_NM
			,t1.PRMPC_YEAR
			,t1.PRMPC_CODE
			,t4.ACCNUT_ACNT_NM	AS PRMPC_NM
			,t1.DEBTOR_AMOUNT
			,t1.CRDIT_AMOUNT
			,t5.CHIT_DE
			,t5.SUMRY_1
		FROM TBACC_CHIT_DETAIL t1
			 LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t2
			 ON t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
			 AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
			 LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
			 ON t1.BSNS_CODE = t3.BSNS_CODE
			 LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t4
			 ON t1.PRMPC_YEAR = t4.ACCNUT_YEAR
			 AND t1.PRMPC_CODE = t4.ACCNUT_ACNT_CODE
			 INNER JOIN TBACC_CHIT_MASTR t5
			 ON t1.ACCNUT_YEAR = t5.ACCNUT_YEAR
			 AND t1.CHIT_NO = t5.CHIT_NO
		WHERE t1.ACCNUT_YEAR 	= #ACCNUT_YEAR#
		  AND t1.CHIT_NO		= #CHIT_NO#
		ORDER BY t1.SEQ
	</select>
	
	<!-- 전표번호 채번 -->
	<select id="ACC060204DAO.chitNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT SFACC_CHIT_NO(#CHIT_DE#, #S_USER_ID#) AS CHIT_NO
		FROM DUAL
	</select>
	
	<!-- 전표마스터 등록 -->
	<insert id="ACC060204DAO.chitMastrC" parameterClass="java.util.HashMap">
		INSERT INTO TBACC_CHIT_MASTR
		(
			 ACCNUT_YEAR
			,CHIT_NO
			,DECSN_YEAR
			,DECSN_NO
			,CHIT_DE
			,CHIT_SE
			,CHIT_KND
			,CPTAL_EXPNDTR_DE
			,SUMRY_1
			,SUMRY_2
			,CHIT_CONFM_AT
			,CHIT_TY
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #ACCNUT_YEAR#
			,#CHIT_NO#
			,#DECSN_YEAR#
			,#DECSN_NO#
			,#CHIT_DE#
			,#CHIT_SE#
			,'98'						/* 수기전표(역분개포함) 전표 종류 : 98 */
			,#CPTAL_EXPNDTR_DE#
			,#SUMRY_1#
			,#SUMRY_2#
			,#CHIT_CONFM_AT#
			,#CHIT_TY#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 전표마스터 수정 -->
	<update id="ACC060204DAO.chitMastrU" parameterClass="java.util.HashMap">
		UPDATE TBACC_CHIT_MASTR
		SET
			 DECSN_YEAR             = #DECSN_YEAR#      
			,DECSN_NO               = #DECSN_NO#
			,CHIT_DE                = #CHIT_DE#         
			,CHIT_SE                = #CHIT_SE#         
			,CHIT_KND               = #CHIT_KND#        
			,CPTAL_EXPNDTR_DE       = #CPTAL_EXPNDTR_DE#
			,SUMRY_1                = #SUMRY_1#         
			,SUMRY_2                = #SUMRY_2#         
			,CHIT_CONFM_AT          = #CHIT_CONFM_AT#   
			,CHIT_TY                = #CHIT_TY#         
			,UPDUSR_ID              = #S_USER_ID#       
			,UPDT_DT                = SYSDATE           
		WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
		  AND CHIT_NO				= #CHIT_NO#
	</update>
	
	<!-- 전표마스터 삭제 -->
	<delete id="ACC060204DAO.chitMastrD" parameterClass="java.util.HashMap">
		DECLARE
		BEGIN
		
			DELETE FROM TBACC_CHIT_DETAIL
			WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
			  AND CHIT_NO				= #CHIT_NO#
			;
			
			DELETE FROM TBACC_CHIT_MASTR
			WHERE ACCNUT_YEAR 			= #ACCNUT_YEAR#
			  AND CHIT_NO				= #CHIT_NO#
		   	;
		   	
		END;	
	</delete>
	
	<!-- 전표상세 등록 -->
	<insert id="ACC060204DAO.chitDetailC" parameterClass="java.util.HashMap">
		INSERT INTO TBACC_CHIT_DETAIL
		(
			 ACCNUT_YEAR
			,CHIT_NO
			,SEQ
			,ACCNUT_ACNT_CODE
			,BUDGET_YEAR
			,BSNS_SE
			,BALC_SE
			,BUDGET_ACNT_CODE
			,DEPT_CODE
			,EXPNDTR_UNIT_CODE
			,BSNS_CODE
			,PRMPC_YEAR
			,PRMPC_CODE
			,DEBTOR_AMOUNT
			,CRDIT_AMOUNT
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #ACCNUT_YEAR#
			,#CHIT_NO#
			,(SELECT NVL(MAX(SEQ),0)+1 FROM TBACC_CHIT_DETAIL WHERE ACCNUT_YEAR = #ACCNUT_YEAR# AND CHIT_NO = #CHIT_NO#)
			,#ACCNUT_ACNT_CODE#
			,#BUDGET_YEAR#
			,#BSNS_SE#
			,#BALC_SE#
			,#BUDGET_ACNT_CODE#
			,#DEPT_CODE#
			,#EXPNDTR_UNIT_CODE#
			,#BSNS_CODE#
			,#PRMPC_YEAR#
			,#PRMPC_CODE#
			,NVL(#DEBTOR_AMOUNT#,0)
			,NVL(#CRDIT_AMOUNT#,0)
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 전표상세 수정 -->
	<update id="ACC060204DAO.chitDetailU" parameterClass="java.util.HashMap">
		UPDATE TBACC_CHIT_DETAIL
		SET
			 ACCNUT_ACNT_CODE		= #ACCNUT_ACNT_CODE# 
			,BUDGET_YEAR            = #BUDGET_YEAR#      
			,BSNS_SE                = #BSNS_SE#          
			,BALC_SE                = #BALC_SE#          
			,BUDGET_ACNT_CODE       = #BUDGET_ACNT_CODE# 
			,DEPT_CODE              = #DEPT_CODE#        
			,EXPNDTR_UNIT_CODE      = #EXPNDTR_UNIT_CODE#
			,BSNS_CODE              = #BSNS_CODE#
			,PRMPC_YEAR				= #PRMPC_YEAR#        
			,PRMPC_CODE             = #PRMPC_CODE#       
			,DEBTOR_AMOUNT          = #DEBTOR_AMOUNT#    
			,CRDIT_AMOUNT           = #CRDIT_AMOUNT#     
			,UPDUSR_ID              = #S_USER_ID#        
			,UPDT_DT                = SYSDATE            
		WHERE ACCNUT_YEAR			= #ACCNUT_YEAR#
		  AND CHIT_NO				= #CHIT_NO#
		  AND SEQ					= #SEQ#
	</update>
	
	<!-- 전표상세 삭제 -->
	<delete id="ACC060204DAO.chitDetailD" parameterClass="java.util.HashMap">
		DELETE FROM TBACC_CHIT_DETAIL
		WHERE ACCNUT_YEAR			= #ACCNUT_YEAR#
		  AND CHIT_NO				= #CHIT_NO#
		  <isNotNull property="SEQ">
		  AND SEQ					= #SEQ#
		  </isNotNull>
	</delete>
	 
	 <parameterMap id="ACC060204DAO.slipToSeSlipMap" class="java.util.HashMap">
		<parameter property="CHIT_FROM_DE"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="CHIT_TO_DE"       	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="S_USER_ID"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="OUT_SLIP_CNT"      jdbcType="VARCHAR" javaType="java.lang.Integer" mode="OUT" />
		<parameter property="OUT_RESULT_MSG"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	
	<!-- 구분회계 전표 생성 -->
	<procedure id="ACC060204DAO.spaccSlipToSeSlipAi" parameterMap="ACC060204DAO.slipToSeSlipMap">
		{ CALL SPACC_SLIP_TO_SE_SLIP_AI(?, ?, ?, ?, ?) }
	</procedure>
	
	
	<parameterMap id="ACC060204DAO.reSlipToSeSlipMap" class="java.util.HashMap">
		<parameter property="ACCNUT_YEAR"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="CHIT_NO"       	jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="S_USER_ID"         jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="OUT_SLIP_CNT"      jdbcType="VARCHAR" javaType="java.lang.Integer" mode="OUT" />
		<parameter property="OUT_RESULT_MSG"    jdbcType="VARCHAR" javaType="java.lang.String"  mode="OUT" />
	</parameterMap>
	<!-- 역분개 전표 생성 -->
	<procedure id="ACC060204DAO.spaccReSlipToSeSlipAi" parameterMap="ACC060204DAO.reSlipToSeSlipMap">
		{ CALL SPACC_RE_SLIP_TO_SE_SLIP_I(?, ?, ?, ?, ?) }
	</procedure>
	
	
</sqlMap>