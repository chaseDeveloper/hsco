<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC050104_SQL">	

	<!--계정별 리스트조회 -->
	<select id="ACC050104DAO.accNutStacntList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC050104DAO.accNutStacntList*/ ]]>
		SELECT
		     t1.ACCNUT_YEAR
		    ,t1.ACCNUT_ACNT_CODE
		    ,NVL(t1.OUTPT_ACNT_NM, t1.ACCNUT_ACNT_NM) AS ACCNUT_ACNT_NM
		    ,NVL(t2.ACMTL_DEBTOR_AMOUNT,0)  AS ACMTL_DEBTOR_AMOUNT 
		    ,NVL(t2.ACMTL_CRDIT_AMOUNT,0)   AS ACMTL_CRDIT_AMOUNT  
		    ,NVL(t3.DEBTOR_AMOUNT,0)        AS DEBTOR_AMOUNT       
		    ,NVL(t3.CRDIT_AMOUNT,0)         AS CRDIT_AMOUNT        
		FROM TBACC_ACCNUT_ACNT_SBJECT t1
		     LEFT OUTER JOIN
		     (SELECT 
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,SUM(DEBTOR_AMOUNT) AS ACMTL_DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT) AS ACMTL_CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT BETWEEN '00' AND SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE
		      UNION ALL
		      SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,SUM(DEBTOR_AMOUNT) AS DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT) AS CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNTSUM
		      WHERE ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT BETWEEN '00' AND SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE
		     ) t2
		     ON  t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
		     LEFT OUTER JOIN
		     (SELECT 
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,SUM(DEBTOR_AMOUNT) AS DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT) AS CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT = SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE
		      UNION ALL
		      SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,SUM(DEBTOR_AMOUNT) AS ACMTL_DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT) AS ACMTL_CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNTSUM
		      WHERE ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT = SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE
		     ) t3
		     ON  t1.ACCNUT_YEAR = t3.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		WHERE t1.ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		  /* AND SUBSTR(t1.ACCNUT_ACNT_CODE,1,1) IN ('1','2','3') */
		ORDER BY t1.ACCNUT_ACNT_CODE
    </select>

	<!--사업별 리스트조회 -->
	<select id="ACC050104DAO.accNutStacntBsnsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC050104DAO.accNutStacntBsnsList*/ ]]>
		SELECT
		     t1.BSNS_CODE
		    ,t4.BSNS_NM
		    ,t1.ACCNUT_YEAR
		    ,t1.ACCNUT_ACNT_CODE
		    ,NVL(t3.OUTPT_ACNT_NM, t3.ACCNUT_ACNT_NM) AS ACCNUT_ACNT_NM
		    ,NVL(t1.ACMTL_DEBTOR_AMOUNT,0) AS ACMTL_DEBTOR_AMOUNT
		    ,NVL(t1.ACMTL_CRDIT_AMOUNT,0)  AS ACMTL_CRDIT_AMOUNT
		    ,NVL(t2.DEBTOR_AMOUNT, 0)      AS DEBTOR_AMOUNT
		    ,NVL(t2.CRDIT_AMOUNT, 0)       AS CRDIT_AMOUNT
		FROM (SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,BSNS_CODE
		          ,SUM(DEBTOR_AMOUNT) AS ACMTL_DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT)  AS ACMTL_CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE BSNS_CODE <![CDATA[<>]]> '-'
		        AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT BETWEEN '00' AND SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE, BSNS_CODE
		     ) t1
		     LEFT OUTER JOIN
		     (SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,BSNS_CODE
		          ,DEBTOR_AMOUNT
		          ,CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE BSNS_CODE <![CDATA[<>]]> '-'
		        AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT = SUBSTR(#ACCNUT_YM#,5,2)
		     ) t2
		     ON  t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
		     AND t1.BSNS_CODE = t2.BSNS_CODE
		     LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		     ON  t1.ACCNUT_YEAR = t3.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		     LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		     ON  t1.BSNS_CODE = t4.BSNS_CODE
		ORDER BY t1.BSNS_CODE, t1.ACCNUT_ACNT_CODE
    </select>

	<!--원가별 리스트조회 -->
	<select id="ACC050104DAO.accNutStacntPrmpcList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC050104DAO.accNutStacntPrmpcList*/ ]]>
		SELECT
		     t1.PRMPC_CODE
		    ,t4.ACCNUT_ACNT_NM AS PRMPC_NM
		    ,t1.ACCNUT_YEAR
		    ,t1.ACCNUT_ACNT_CODE
		    ,NVL(t3.OUTPT_ACNT_NM, t3.ACCNUT_ACNT_NM) AS ACCNUT_ACNT_NM
		    ,NVL(t1.ACMTL_DEBTOR_AMOUNT,0)   AS ACMTL_DEBTOR_AMOUNT 
		    ,NVL(t1.ACMTL_CRDIT_AMOUNT,0)    AS ACMTL_CRDIT_AMOUNT  
		    ,NVL(t2.DEBTOR_AMOUNT, 0)        AS DEBTOR_AMOUNT       
		    ,NVL(t2.CRDIT_AMOUNT, 0)         AS CRDIT_AMOUNT        
		FROM (SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,PRMPC_CODE
		          ,SUM(DEBTOR_AMOUNT) AS ACMTL_DEBTOR_AMOUNT
		          ,SUM(CRDIT_AMOUNT)  AS ACMTL_CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE PRMPC_CODE <![CDATA[<>]]> '-'
		        AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT BETWEEN '00' AND SUBSTR(#ACCNUT_YM#,5,2)
		      GROUP BY ACCNUT_YEAR, ACCNUT_ACNT_CODE, PRMPC_CODE
		     ) t1
		     LEFT OUTER JOIN
		     (SELECT
		           ACCNUT_YEAR
		          ,ACCNUT_ACNT_CODE
		          ,PRMPC_CODE
		          ,DEBTOR_AMOUNT
		          ,CRDIT_AMOUNT
		      FROM TBACC_ACCNUT_STACNT
		      WHERE PRMPC_CODE <![CDATA[<>]]> '-'
		        AND ACCNUT_YEAR = SUBSTR(#ACCNUT_YM#,1,4)
		        AND ACCNUT_MT = SUBSTR(#ACCNUT_YM#,5,2)
		     ) t2
		     ON  t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE
		     AND t1.PRMPC_CODE = t2.PRMPC_CODE
		     LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t3
		     ON  t1.ACCNUT_YEAR = t3.ACCNUT_YEAR
		     AND t1.ACCNUT_ACNT_CODE = t3.ACCNUT_ACNT_CODE
		     LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t4
		     ON  (CASE WHEN t1.ACCNUT_YEAR <![CDATA[<]]> '2016' THEN '2016' ELSE t1.ACCNUT_YEAR END) = t4.ACCNUT_YEAR
		     AND t1.PRMPC_CODE = t4.ACCNUT_ACNT_CODE
		ORDER BY t1.PRMPC_CODE, t1.ACCNUT_ACNT_CODE
    </select>
    
    <!-- 회계결산 처리 -->
	<procedure id="ACC050104DAO.spaccStacntProcTr" parameterClass="java.util.HashMap">
		{ CALL SPACC_STACNT_PROC_TR(#ACCNUT_YM_FROM#, #ACCNUT_YM_TO#, #S_USER_ID#) }
	</procedure>
 </sqlMap>