<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030201_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 계량지표 목록조회 -->
	<select id="ACH030201DAO.selectListMst" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  		
			     AA.EVL_YEAR 								AS EVL_YEAR
			   , AA.ODR_SE 									AS ODR_SE
			   , AA.V_IX_CODE 								AS V_IX_CODE
			   , AA.S_IX_CODE 								AS S_IX_CODE
			   , SFACH_GET_IXNM(AA.EVL_YEAR, AA.ODR_SE,AA.S_IX_CODE )       AS S_IX_NM
		  	   , AA.C_IX_CODE 								AS C_IX_CODE    
			   , SFACH_GET_IXNM(AA.EVL_YEAR, AA.ODR_SE,AA.C_IX_CODE )       AS C_IX_NM     
			   , AA.IX_CDNM 								AS IX_CDNM	
		 	   , AA.IX_CODE 								AS IX_CODE
			   , AA.APPLC_SCOPE_SE							AS APPLC_SCOPE_SE
               , AA.ACMSLT_INPUT_TY							AS ACMSLT_INPUT_TY	
               , AA.MESURE_CYCLE		            		AS MESURE_CYCLE	
               , AA.MESURE_UNIT		            		    AS MESURE_UNIT	
		  FROM ( 
		  		SELECT 
				         A.EVL_YEAR 							AS EVL_YEAR
				       , A.ODR_SE 								AS ODR_SE
				       , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'001') AS V_IX_CODE
				       , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'002') AS S_IX_CODE
				       , SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'003') AS C_IX_CODE         
				       , '[ ' || A.IX_CODE || ' ] ' || B.IX_NM 	AS IX_CDNM	
				       , A.IX_CODE 								AS IX_CODE
				       , MAX(B.APPLC_SCOPE_SE)					AS APPLC_SCOPE_SE
                       , MAX(B.ACMSLT_INPUT_TY)					AS ACMSLT_INPUT_TY	
                       , MAX(B.MESURE_CYCLE) 		            AS MESURE_CYCLE
                       , MAX(B.MESURE_UNIT) 		            AS MESURE_UNIT                       
				  FROM TBACH_QYEVAL_RESULT A, TBACH_KPI B
				 WHERE 1=1
				   AND A.EVL_YEAR = B.EVL_YEAR
				   AND A.ODR_SE = B.ODR_SE
				   AND A.IX_CODE = B.IX_CODE
				   AND B.USE_AT = '1'
				   AND B.IX_CHARCT = '000' <!-- 계량 -->
				   AND B.IX_SE = '004'     <!-- KPI -->
				   AND A.EVL_YEAR = #EVL_YEAR#
				   AND A.ODR_SE = #ODR_SE#
				  <isNotEmpty property="ORGNZT_CODE">			  
				  AND A.ORGNZT_CODE = #ORGNZT_CODE#
				  </isNotEmpty>    			  
				  <isNotEmpty property="APPLC_SCOPE_SE">			  
				  AND B.APPLC_SCOPE_SE = #APPLC_SCOPE_SE#
				  </isNotEmpty>
				GROUP BY A.EVL_YEAR, A.ODR_SE, A.IX_CODE, B.IX_NM ) AA
		ORDER BY AA.V_IX_CODE
	            ,AA.S_IX_CODE
	            ,AA.C_IX_CODE
	            ,AA.IX_CODE	     		  
    </select>
    
    <!-- 지표/조직별  배정목표 정보  조회 -->
	<select id="ACH030201DAO.selectListDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			  AA.EVL_YEAR                      AS EVL_YEAR             
			  ,AA.ODR_SE                        AS ODR_SE               
			  ,AA.IX_CODE                       AS IX_CODE              
			  ,AA.ORGNZT_CODE                   AS ORGNZT_CODE
			  ,SFACH_GET_ORGNZTNM(AA.EVL_YEAR ,AA.ODR_SE,AA.ORGNZT_CODE) AS ORGNZT_NM     
			  ,AA.WGHTVAL                       AS WGHTVAL              
			  ,AA.W_GOALVAL                     AS W_GOALVAL            
			  ,AA.LAST_RSLTS                    AS LAST_RSLTS           
		 	  ,AA.R_GOALVAL                     AS R_GOALVAL            
			  ,AA.EVL_WGHTVAL                   AS EVL_WGHTVAL          
			  ,AA.LAST_ACMSLTVAL                AS LAST_ACMSLTVAL       
			  ,AA.SM_ACMSLTVAL                  AS SM_ACMSLTVAL         
			  ,AA.LAST_RESULT_SCORE             AS LAST_RESULT_SCORE    
			  ,AA.GOAL_ASIGN_AT                 AS GOAL_ASIGN_AT        
			  ,BB.GOAL_YY                       AS GOAL_YY              
			  ,BB.GOAL_MT                       AS GOAL_MT              
			  ,BB.GOAL_DE                       AS GOAL_DE              
			  ,BB.GOAL_WEEK                     AS GOAL_WEEK            
			  ,BB.GOALVAL                       AS MT_GOALVAL
			  ,CC.MESURE_CYCLE                  AS MESURE_CYCLE
              ,CC.ACMSLT_INPUT_TY 				AS ACMSLT_INPUT_TY <!--실적등록방식 -->
		      ,CASE CC.ACMSLT_INPUT_TY 
		           WHEN '001'   <!-- 누계합산 -->
		           THEN 
		               (SELECT SUM(k.GOALVAL) 
		                 FROM TBACH_QYEVAL_DSTB_GOAL k 
		                WHERE 1=1
		                      AND AA.IX_CODE = k.IX_CODE 
		                      AND AA.EVL_YEAR = k.EVL_YEAR 
		                      AND AA.ODR_SE = k.ODR_SE 
		                      AND AA.ORGNZT_CODE = k.ORGNZT_CODE 
							  <![CDATA[		                      
		                      AND TO_NUMBER(k.GOAL_MT) <= TO_NUMBER(#GOAL_MT#)
		                      ]]> 
		               ) 
		           WHEN '002' <!-- 누계평균 -->
		           THEN 
		               (SELECT AVG(k.GOALVAL) 
		                 FROM TBACH_QYEVAL_DSTB_GOAL k 
		                WHERE 1=1
		                      AND AA.IX_CODE = k.IX_CODE 
		                      AND AA.EVL_YEAR = k.EVL_YEAR 
		                      AND AA.ODR_SE = k.ODR_SE 
		                      AND AA.ORGNZT_CODE = k.ORGNZT_CODE 
							  <![CDATA[			                      
		                      AND TO_NUMBER(k.GOAL_MT) <= TO_NUMBER(#GOAL_MT#)
		                      ]]>
		                      AND k.GOALVAL IS NOT NULL
		               ) 
		           ELSE   <!--  누계실적치 -->
		               (SELECT k.GOALVAL 
		                 FROM TBACH_QYEVAL_DSTB_GOAL k 
		                WHERE 1=1
		                      AND AA.IX_CODE = k.IX_CODE 
		                      AND AA.EVL_YEAR = k.EVL_YEAR 
		                      AND AA.ODR_SE = k.ODR_SE 
		                      AND AA.ORGNZT_CODE = k.ORGNZT_CODE 
		                      AND k.GOAL_MT = #GOAL_MT#
		               )                
		       END AS FINAL_GOAL		           
		 FROM (
				SELECT 
					   A.EVL_YEAR
					  ,A.ODR_SE
					  ,A.IX_CODE
					  ,A.ORGNZT_CODE
					  ,A.WGHTVAL
					  ,A.GOALVAL  AS W_GOALVAL
					  ,A.LAST_RSLTS
					  ,B.GOALVAL AS R_GOALVAL
					  ,B.EVL_WGHTVAL
				 	  ,B.LAST_ACMSLTVAL
					  ,B.SM_ACMSLTVAL
					  ,B.LAST_RESULT_SCORE
					  ,B.GOAL_ASIGN_AT
				 FROM TBACH_WGHTVAL A,TBACH_QYEVAL_RESULT B
				WHERE 1=1
				  AND A.EVL_YEAR = B.EVL_YEAR
				  AND A.ODR_SE = B.ODR_SE
				  AND A.IX_CODE = B.IX_CODE
				  AND A.ORGNZT_CODE = B.ORGNZT_CODE
				  AND A.EVL_YEAR = #EVL_YEAR#
				  AND A.ODR_SE = #ODR_SE#
				  AND A.IX_CODE = #IX_CODE#  
				  <isNotEmpty property="ORGNZT_CODE">					  
				  AND A.ORGNZT_CODE = #ORGNZT_CODE#
				  </isNotEmpty>
				) AA, TBACH_QYEVAL_DSTB_GOAL BB, TBACH_KPI CC
			WHERE 1=1
			  AND AA.EVL_YEAR = BB.EVL_YEAR(+)
			  AND AA.ODR_SE = BB.ODR_SE(+)
			  AND AA.IX_CODE = BB.IX_CODE(+)
			  AND AA.ORGNZT_CODE = BB.ORGNZT_CODE(+)
			  AND AA.EVL_YEAR = BB.GOAL_YY(+) 
			  AND BB.GOAL_MT(+) = #GOAL_MT#
			  AND AA.EVL_YEAR = CC.EVL_YEAR
			  AND AA.ODR_SE = CC.ODR_SE
			  AND AA.IX_CODE = CC.IX_CODE
    </select>
    
     <!-- 비계량평가자 등록 -->
    <insert id="ACH030201DAO.dtlC" parameterClass="java.util.HashMap" >
		<!--INSERT INTO TBACH_QLE_EVL_MAN_CNNC (
					  EVL_YEAR
					, ODR_SE
					, EVL_MAN_EMPNO
					, IX_CODE
					, REGISTER_ID
					, REGIST_DT
					, UPDUSR_ID
					, UPDT_DT
				   )
			  VALUES
				   (
					  #EVL_YEAR#
					, #ODR_SE#
					, #M_EVL_MAN_EMPNO#
					, #IX_CODE#
				    , #S_USER_ID#
				    , SYSDATE
				    , #S_USER_ID#
				    , SYSDATE
					)
					-->
    </insert>
    
    <!-- 지표/조직별 배정목표치  정보  수정/신규 -->
    <update id="ACH030201DAO.dtlU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_DSTB_GOAL
		USING DUAL ON (  
		                  EVL_YEAR = #EVL_YEAR#
				      AND ODR_SE = #ODR_SE#
				      AND IX_CODE = #IX_CODE#
				      AND ORGNZT_CODE = #ORGNZT_CODE#
				      AND GOAL_YY = #EVL_YEAR#
				      AND GOAL_MT = #GOAL_MT#
				      )
		WHEN MATCHED THEN
			UPDATE SET 
					  GOALVAL 	= #MT_GOALVAL#
					, UPDUSR_ID = #S_USER_ID#
					, UPDT_DT 	= SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (
				  EVL_YEAR
				, ODR_SE
				, IX_CODE
				, ORGNZT_CODE
				, GOAL_YY
				, GOAL_MT
				, GOALVAL
				, REGISTER_ID
				, REGIST_DT
				, UPDUSR_ID
				, UPDT_DT	
				)
			VALUES	(
				 #EVL_YEAR#
				, #ODR_SE#
				, #IX_CODE#
				, #ORGNZT_CODE#
				, #EVL_YEAR#
				, #GOAL_MT#
				, #MT_GOALVAL#
				, #S_USER_ID#
				, SYSDATE
				, #S_USER_ID#
				, SYSDATE
			)
    </update>
    
    <!-- 지표/조직별 배정목표치 정보 일괄 수정/신규 -->
    <update id="ACH030201DAO.dtlAllU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_DSTB_GOAL A
		USING ( WITH V_TEMP AS (
		            SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, A.ORGNZT_CODE, A.GOALVAL, B.MESURE_CYCLE
		            FROM TBACH_QYEVAL_RESULT A
		                ,TBACH_KPI B
		            WHERE 1=1
		            AND A.EVL_YEAR = B.EVL_YEAR
		            AND A.ODR_SE = B.ODR_SE
		            AND A.IX_CODE = B.IX_CODE
		            AND A.EVL_YEAR = #EVL_YEAR#
		            AND A.ODR_SE = #ODR_SE#
		          <isNotEmpty property="ORGNZT_CODE">
		            AND A.ORGNZT_CODE = #ORGNZT_CODE#
		          </isNotEmpty>
		        )
		        SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, A.ORGNZT_CODE, A.EVL_YEAR AS GOAL_YY, B.CODE AS GOAL_MT, A.GOALVAL
		        FROM V_TEMP A
		        LEFT OUTER JOIN
		                        ( SELECT '003' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024'
		                          UNION
		                          SELECT '004' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,3) = 0
		                          UNION
		                          SELECT '005' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,6) = 0
		                          UNION
		                          SELECT '006' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,12) = 0
		                        ) B
		                ON A.MESURE_CYCLE = B.MESURE_CYCLE
		      ) B
		   ON (     A.EVL_YEAR	= B.EVL_YEAR
		        AND A.ODR_SE	= B.ODR_SE
		        AND A.IX_CODE   = B.IX_CODE
		        AND A.ORGNZT_CODE = B.ORGNZT_CODE
		        AND A.GOAL_YY = B.GOAL_YY
		        AND A.GOAL_MT = B.GOAL_MT
		      )
		WHEN MATCHED THEN
		    UPDATE SET 
		               A.GOALVAL 	 = B.GOALVAL
		              ,A.UPDUSR_ID	 = #S_USER_ID#
		              ,A.UPDT_DT 	 = SYSDATE
		WHEN NOT MATCHED THEN
		    INSERT (
		          A.EVL_YEAR
		        , A.ODR_SE
		        , A.IX_CODE
		        , A.ORGNZT_CODE
		        , A.GOAL_YY
		        , A.GOAL_MT
		        , A.GOALVAL
		        , A.REGISTER_ID
		        , A.REGIST_DT
		        , A.UPDUSR_ID
		        , A.UPDT_DT
		        )
		    VALUES	(
		          B.EVL_YEAR
		        , B.ODR_SE
		        , B.IX_CODE
		        , B.ORGNZT_CODE
		        , B.GOAL_YY
		        , B.GOAL_MT
		        , B.GOALVAL
		        , #S_USER_ID#
		        , SYSDATE
		        , #S_USER_ID#
		        , SYSDATE
		    )
    </update>
    
    <!-- 비계량평가자  삭제 -->
    <delete id="ACH030201DAO.dtlD" parameterClass="java.util.HashMap" >
		<!--DELETE TBACH_QLE_EVL_MAN_CNNC		   
		 WHERE 1 = 1
		   AND EVL_YEAR = #EVL_YEAR#
		   AND ODR_SE = #ODR_SE#
		   AND EVL_MAN_EMPNO = #EVL_MAN_EMPNO#
		   AND IX_CODE = #IX_CODE#
		    -->
    </delete>    

</sqlMap>