<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030202P2_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 마일리지 실적 목록조회 -->
	<select id="ACH030202P2DAO.mainSearchList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT A.EVL_YEAR
              , A.ODR_SE
              , A.IX_CODE
              , A.ORGNZT_CODE
              , A.ACMSLT_MT
              , A.ADSBTR_SE
              , A.ADSBTR_CODE
              , A.DTL_CODE
              , A.DTL_NM
              , B.ADSBTR_SCORE
              , B.RM
        FROM  TBACH_KPI_ADDPNT_DMRTR_ACM A
              , TBACH_KPI_ADDPNT_DMRTR B
        WHERE 1=1
          AND A.EVL_YEAR    = B.EVL_YEAR
          AND A.ODR_SE      = B.ODR_SE
          AND A.IX_CODE     = B.IX_CODE
          AND A.ADSBTR_SE   = B.ADSBTR_SE
          AND A.ADSBTR_CODE = B.ADSBTR_CODE          
          AND A.EVL_YEAR    = #EVL_YEAR#
          AND A.ODR_SE      = #ODR_SE#
          AND A.IX_CODE     = #IX_CODE#
          AND A.ORGNZT_CODE = #ORGNZT_CODE#
          AND A.ACMSLT_MT   = #ACMSLT_MT#		  
    </select>
    
     <!-- 마일리지 실적 등록 -->
    <insert id="ACH030202P2DAO.saveC" parameterClass="java.util.HashMap" >
        INSERT INTO TBACH_KPI_ADDPNT_DMRTR_ACM(
                EVL_YEAR
              , ODR_SE
              , IX_CODE
              , ORGNZT_CODE
              , ACMSLT_MT
              , ADSBTR_SE
              , ADSBTR_CODE
              , DTL_CODE
              , DTL_NM
              , REGISTER_ID
              , REGIST_DT
              , UPDUSR_ID
              , UPDT_DT
        )VALUES (
                #EVL_YEAR#
              , #ODR_SE#
              , #IX_CODE#
              , #ORGNZT_CODE#
              , #ACMSLT_MT#
              , #ADSBTR_SE#
              , #ADSBTR_CODE#
              , (SELECT NVL(MAX(DTL_CODE),0)+1 
                 FROM  TBACH_KPI_ADDPNT_DMRTR_ACM 
                 WHERE EVL_YEAR = #EVL_YEAR# 
                   AND ODR_SE   = #ODR_SE# 
                   AND IX_CODE  = #IX_CODE# 
                   AND ORGNZT_CODE = #ORGNZT_CODE# 
                   AND ACMSLT_MT   = #ACMSLT_MT#
                )
              , #DTL_NM#
              , #S_USER_ID#
              , SYSDATE
              , #S_USER_ID#
              , SYSDATE      
        )
    </insert>
    
    <!-- 마일리지 실적 수정 -->
    <update id="ACH030202P2DAO.saveU" parameterClass="java.util.HashMap" >
        UPDATE TBACH_KPI_ADDPNT_DMRTR_ACM
        SET     ADSBTR_SE   = #ADSBTR_SE#
              , ADSBTR_CODE = #ADSBTR_CODE#
              , DTL_NM      = #DTL_NM#
              , UPDUSR_ID   = #S_USER_ID#
              , UPDT_DT     = SYSDATE
        WHERE 1=1
          AND EVL_YEAR    = #EVL_YEAR#
          AND ODR_SE      = #ODR_SE#
          AND IX_CODE     = #IX_CODE#
          AND ORGNZT_CODE = #ORGNZT_CODE#
          AND ACMSLT_MT   = #ACMSLT_MT#
          AND DTL_CODE    = #DTL_CODE#
    </update>       
    
    <!-- 마일리지 실적  삭제 -->
    <delete id="ACH030202P2DAO.saveD" parameterClass="java.util.HashMap" >
        DELETE FROM TBACH_KPI_ADDPNT_DMRTR_ACM
        WHERE 1=1
          AND EVL_YEAR    = #EVL_YEAR#
          AND ODR_SE      = #ODR_SE#
          AND IX_CODE     = #IX_CODE#
          AND ORGNZT_CODE = #ORGNZT_CODE#
          AND ACMSLT_MT   = #ACMSLT_MT#
          AND DTL_CODE    = #DTL_CODE#
    </delete>
    
    <!-- 계량지표배정실적 수정/신규 -->
    <update id="ACH030202P2DAO.qyevalDstbAcmsltU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_DSTB_ACMSLT
		USING DUAL ON (  
		                  EVL_YEAR = #EVL_YEAR#
				      AND ODR_SE = #ODR_SE#
				      AND IX_CODE = #IX_CODE#
				      AND ORGNZT_CODE = #ORGNZT_CODE#
				      AND ACMSLT_YY = #EVL_YEAR#
				      AND ACMSLT_MT = #ACMSLT_MT#
				      )
		WHEN MATCHED THEN
			UPDATE SET 
					  ACMSLT_VAL   = #MT_ACMSLT_VAL#     <!-- 월실적 -->
					, RESULT_SCORE = #MT_RESULT_SCORE#   <!-- 월설과점수 -->
					, UPDUSR_ID    = #S_USER_ID#
					, UPDT_DT 	   = SYSDATE
		WHEN NOT MATCHED THEN
			INSERT (
				  EVL_YEAR
				, ODR_SE
				, IX_CODE
				, ORGNZT_CODE
				, ACMSLT_YY
				, ACMSLT_MT
				, ACMSLT_VAL
				, RESULT_SCORE
				, REGISTER_ID
				, REGIST_DT
				, UPDUSR_ID
				, UPDT_DT	
				)
			VALUES	(
				 #EVL_YEAR#
				, #ODR_SE#
				, #IX_CODE#
				, #ORGNZT_CODE#
				, #EVL_YEAR#
				, #ACMSLT_MT#
				, #MT_ACMSLT_VAL#	<!-- 월실적 -->
				, #MT_RESULT_SCORE# <!-- 월설과점수 -->
				, #S_USER_ID#
				, SYSDATE
				, #S_USER_ID#
				, SYSDATE
			)
    </update>
    
    <!-- 계량지표 결과 수정 -->
    <update id="ACH030202P2DAO.qyevalResultU" parameterClass="java.util.HashMap" >
		UPDATE TBACH_QYEVAL_RESULT 
		   SET SM_ACMSLTVAL =  
		       <!-- 합계실적치 -->
               CASE #ACMSLT_INPUT_TY#
		           WHEN '001'   <!-- 누계합산 -->
		           THEN 
		               (SELECT SUM(k.ACMSLT_VAL) 
		                 FROM TBACH_QYEVAL_DSTB_ACMSLT k 
		                WHERE 1=1   
                          AND k.EVL_YEAR = #EVL_YEAR#
                          AND k.ODR_SE = #ODR_SE#
                          AND k.IX_CODE = #IX_CODE#                          
                          AND k.ORGNZT_CODE = #ORGNZT_CODE#
                        GROUP BY k.EVL_YEAR,k.ODR_SE,k.IX_CODE,k.ORGNZT_CODE
		               ) 
		           WHEN '002' <!-- 누계평균 -->
		           THEN 
		               (SELECT AVG(k.ACMSLT_VAL) 
		                 FROM TBACH_QYEVAL_DSTB_ACMSLT k 
		                WHERE 1=1
                          AND k.EVL_YEAR = #EVL_YEAR#
                          AND k.ODR_SE = #ODR_SE#
                          AND k.IX_CODE = #IX_CODE#                          
                          AND k.ORGNZT_CODE = #ORGNZT_CODE#
		                  AND k.ACMSLT_VAL IS NOT NULL
                     GROUP BY k.EVL_YEAR,k.ODR_SE,k.IX_CODE,k.ORGNZT_CODE                          
           	            )
		           WHEN '003' <!--  누계실적치 -->
		           THEN            	               
		               (SELECT * 
                          FROM (SELECT k.ACMSLT_VAL 
                                  FROM TBACH_QYEVAL_DSTB_ACMSLT k 
                                 WHERE 1=1
                                   AND k.EVL_YEAR = #EVL_YEAR#
                                   AND k.ODR_SE = #ODR_SE#
                                   AND k.IX_CODE = #IX_CODE#                          
                                   AND k.ORGNZT_CODE = #ORGNZT_CODE#
                                   AND k.ACMSLT_VAL IS NOT NULL
                                 ORDER BY k.ACMSLT_YY DESC,TO_NUMBER(k.ACMSLT_MT) DESC ) 
	                       <![CDATA[	
			                WHERE ROWNUM<=1 
			               ]]> 
                        )			                         	                
		           ELSE  0 END
		      , LAST_RESULT_SCORE =
				<!-- 최종결과점수 -->		      
                CASE #ACHIV_RT_CALC_FRMLA# 
		           WHEN '001' <!--  실적치/목표치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_GOAL#),0),0,0,
		                       TO_NUMBER(#FINAL_ACMSLT#) / TO_NUMBER(#FINAL_GOAL#) )
		                       * TO_NUMBER(#EVL_WGHTVAL#) 
		                  FROM DUAL
		                 WHERE 1=1 
		               ) 
		           WHEN '002' <!--  목표치/실적치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_ACMSLT#),0),0,1,TO_NUMBER(#FINAL_GOAL#) / TO_NUMBER(#FINAL_ACMSLT#) )
		                       * TO_NUMBER(#EVL_WGHTVAL#)   
		                  FROM DUAL
		                 WHERE 1=1
		               ) 
       			   ELSE 0 END
		      , ACMSLTVAL_RT =
				<!-- 달성율 -->		      
                CASE #ACHIV_RT_CALC_FRMLA# 
		           WHEN '001' <!--  실적치/목표치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_GOAL#),0),0,0,
		                       TO_NUMBER(#FINAL_ACMSLT#) / TO_NUMBER(#FINAL_GOAL#) * 100 )
		                  FROM DUAL
		                 WHERE 1=1 
		               ) 
		           WHEN '002' <!--  목표치/실적치 -->
		           THEN 
		               (SELECT DECODE(NVL(TO_NUMBER(#FINAL_ACMSLT#),0),0,1,
		                       TO_NUMBER(#FINAL_GOAL#) / TO_NUMBER(#FINAL_ACMSLT#) * 100)		                         
		                  FROM DUAL
		                 WHERE 1=1
		               ) 
       			   ELSE 0 END       			   
			  , UPDUSR_ID 	= #S_USER_ID#
			  , UPDT_DT 	= SYSDATE
	      WHERE 1=1
            AND EVL_YEAR = #EVL_YEAR#
	        AND ODR_SE = #ODR_SE#
	        AND IX_CODE = #IX_CODE#
	        AND ORGNZT_CODE = #ORGNZT_CODE#
    </update>       

</sqlMap>