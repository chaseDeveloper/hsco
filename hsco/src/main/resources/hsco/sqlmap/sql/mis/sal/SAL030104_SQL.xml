<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SAL030104_SQL">	
	
	<parameterMap id="SAL030104DAO.salaryCalcMap" class="java.util.HashMap">
		<parameter property="PYMNT_YM"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SN"          	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="JSSFC_SE"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="EMPNO"      	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="PYMNT_DE"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="S_USER_ID"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="CNT"        	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="ERROR"        	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
	</parameterMap>
	
	<!-- 급여 계산(개별사번) -->
	<procedure id="SAL030104DAO.salaryCalc" parameterMap="SAL030104DAO.salaryCalcMap">
		{ CALL PKG_SAL_급여계산.SPSAL_급여계산(?, ?, ?, '2', ?, ?, ?, ?, ?) }
	</procedure>
	
	<parameterMap id="SAL030104DAO.salaryCalcTaxMap" class="java.util.HashMap">
		<parameter property="PYMNT_YM"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SN"          	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="EMPNO"	        jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="S_USER_ID"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="ERROR"        	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
	</parameterMap>
	
	<!-- 세액재계산 -->
	<procedure id="SAL030104DAO.salaryCalcTax" parameterMap="SAL030104DAO.salaryCalcTaxMap">
		{ CALL PKG_SAL_급여계산.SPSAL_세액재계산(?, ?, ?, ?, ?) }
	</procedure>
	
	<!-- 우수리재계산 -->
	<procedure id="SAL030104DAO.salaryCalcFraction" parameterMap="SAL030104DAO.salaryCalcTaxMap">
		{ CALL PKG_SAL_급여계산.SPSAL_우수리재계산(?, ?, ?, ?, ?) }
	</procedure>
	
	<!-- 월급여기본자료정보 목록조회 -->
	<select id="SAL030104DAO.selectMtSalaryPymntList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT A.PYMNT_YM                                                    AS PYMNT_YM
				 , A.SN															 AS SN
			     , NULL                                                          AS SALARY_SE
				 , A.PYMNT_SE         											 AS PYMNT_SE
			     , A.PYMNT_DE                                                    AS PYMNT_DE
			     , A.EMPNO                                                       AS EMPNO
			     , C.EMPNM                                                       AS EMPNM
			     , A.EMPL_SE                                                     AS EMPL_SE
			     , E.CODE_NM                                                     AS ANSLRY_AT
			     , A.DEPT_CODE                                                   AS DEPT_CODE
			     , B.DEPT_NM					                                 AS DEPT_NM
			     , A.PRMPC_SE                                                    AS PRMPC_SE
			     , A.CLSF_CODE                                                   AS CLSF_CODE
                 , D.CODE_NM 		                                   		  	 AS OFCPS				/*직위*/
                 , G.CODE_NM 													 AS HR_CLSF  			/*직급*/
			     , A.RSPOFC_SE                                                   AS RSPOFC_SE
			     , DECODE(C.SALARY_SE,'002',A.SRCLS,NULL)						 AS SRCLS
			     , A.ECNY_DE                                                     AS ECNY_DE
			     , A.RETIRE_DE                                                   AS RETIRE_DE
			     , A.STDR_DE                                                     AS STDR_DE
                 , C.NOW_CLSF_EMPLMN_DE			                                 AS DCSN_DE				/*직급승진일자*/
			     , A.CLSF_PRMOT_DE                                               AS CLSF_PRMOT_DE
			     , A.DCLZ_SE                                                     AS DCLZ_SE
			     , A.BGNDE                                                       AS BGNDE
			     , A.ENDDE                                                       AS ENDDE
                 , A.LBUN_SBSCRB_SE                                              AS LBUN_SBSCRB_SE
			     , A.DSPSN_GRAD                                                  AS DSPSN_GRAD
			     , A.TRTMT_EMP_AT                                                AS TRTMT_EMP_AT
			     , F.CODE_NM                                                     AS WORK_STTUS			/*직원상태*/			     
			     , A.MT_DAYCNT                                                   AS MT_DAYCNT
			     , A.NTHG_PLAN_ABSENC_DAYCNT                                     AS NTHG_PLAN_ABSENC_DAYCNT
			     , A.ABSENC_DAYCNT                                               AS ABSENC_DAYCNT
			     , A.LATEN_DAYCNT                                                AS LATEN_DAYCNT
			     , A.SLYRD_RT                                                    AS SLYRD_RT
			     , A.LAYOFF_SALARY_RT                                            AS LAYOFF_SALARY_RT
			     , A.INDVDL_PRICEWAGE_PYMNT_RT                                   AS INDVDL_PRICEWAGE_PYMNT_RT
			     , A.SEIZR_AT                                                    AS SEIZR_AT
			     , A.HN_DDC_NMPR                                                 AS HN_DDC_NMPR
			     , A.HN_DDC_NMPR20                                               AS HN_DDC_NMPR20
			     , A.TIME__ELSE_TIME                                             AS TIME__ELSE_TIME
			     , A.NIGHT_LABOR_TIME                                            AS NIGHT_LABOR_TIME
			     , A.RESTDE_LABOR_TIME                                           AS RESTDE_LABOR_TIME
			     , A.YEAST_HLDY_RCOGN                                            AS YEAST_HLDY_RCOGN
			     , LPAD(A.SALARY_BANK_CODE, 3, '0')                              AS SALARY_BANK_CODE
			     , A.SALARY_BANK_ACNUT                                           AS SALARY_BANK_ACNUT
			     , LPAD(A.ALLWNC_BANK_CODE, 3, '0')                              AS ALLWNC_BANK_CODE
			     , A.ALLWNC_BANK_ACNUT                                           AS ALLWNC_BANK_ACNUT
			     , A.BSLRY  													 AS BSLRY
			     , A.ODYGS                                                       AS ODYGS
			     , A.CLOS_AT                                                     AS CLOS_AT
			  FROM TBSAL_MT_SALARY_PYMNT A
			       INNER JOIN TBHRM_HR_MASTR C
			       ON A.EMPNO     	= C.EMPNO
			       LEFT OUTER JOIN VWHRM_DEPT B
			       ON C.DEPT_CODE = B.DEPT_CODE 
                   LEFT OUTER JOIN TBCOM_CMMN_CODE   D 
                   ON C.OFCPS_SE	  = D.CODE					/*직위*/	
			   	   AND D.GRP_CODE	= 'HRM003'
                   LEFT OUTER JOIN TBCOM_CMMN_CODE   E 
                   ON C.SALARY_SE	  = E.CODE					/*연봉제여부*/
	               AND E.GRP_CODE	= 'SAL001'
        		   LEFT OUTER JOIN TBCOM_CMMN_CODE   F 
                   ON C.STTUS_SE   = F.CODE			/*직원상태*/
	               AND F.GRP_CODE	= 'HRM005'
                   LEFT OUTER JOIN TBCOM_CMMN_CODE   G 
                   ON C.HR_CLSF_SE = G.CODE		    /*직급*/
	               AND G.GRP_CODE	= 'HRM002'
			 WHERE 1           	= 1
			   AND A.PYMNT_YM 	= #PYMNT_YM#
			   AND A.SN			= #SN#
		<isNotEmpty property="EMPNO">
			   AND A.EMPNO = #EMPNO#
		</isNotEmpty>
		<isNotEmpty property="DEPT_CODE">
			   AND A.DEPT_CODE = #DEPT_CODE#
		</isNotEmpty>
		<isNotEmpty property="JSSFC_SE">
			   AND A.EMPL_SE = #JSSFC_SE#
		</isNotEmpty>
		
			ORDER BY A.PYMNT_YM ,
					 B.OUTPT_ORDR,
					 A.CLSF_CODE ,
					 A.EMPL_SE ,
					 C.HR_CLSF_SE ,
					 TO_NUMBER(A.SRCLS) DESC ,
					 A.EMPNO
    </select>
    
    <!-- 지급공제코드정보 목록조회 -->
	<select id="SAL030104DAO.selectPymntDdcStdrCodeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		     t1.PYMNT_DDC_CODE		 AS CODE
		    ,t2.PYMNT_DDC_CODE_NM	 AS CODE_NM
		FROM TBSAL_MT_SALARY_IEM t1
		     INNER JOIN TBSAL_PYMNT_DDC_STDR_CODE t2
		     ON t1.PYMNT_DDC_CODE = t2.PYMNT_DDC_CODE
		WHERE t1.PYMNT_YM 		= #PYMNT_YM#
		  AND t1.SN 			= #SN#
		  AND t1.JSSFC_SE 		= #JSSFC_SE#
		  AND t2.PYMNT_DDC_SE 	= #PYMNT_DDC_SE#
  		ORDER BY t2.OUTPT_ORDR
    </select>       
    
    <!-- 개인별지급정보 목록조회 -->
	<select id="SAL030104DAO.selectMtPymntDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 t1.PYMNT_YM
			,t1.SN
			,t1.EMPNO
			,t1.PYMNT_DDC_CODE
			,t2.PYMNT_DDC_CODE_NM
			,t1.AMOUNT
			,t1.TAXXMPT
			,t1.RM
		FROM TBSAL_MT_SALARY_DTLS t1
			 INNER JOIN TBSAL_PYMNT_DDC_STDR_CODE t2
			 ON  t1.PYMNT_DDC_CODE = t2.PYMNT_DDC_CODE
			 AND t2.PYMNT_DDC_SE = '0'
		WHERE t1.PYMNT_YM 	= #PYMNT_YM#
		  AND t1.SN			= #SN#
		  AND t1.EMPNO 		= #EMPNO#
		ORDER BY t2.OUTPT_ORDR
    </select> 
    
    <!-- 개인별공제정보 목록조회 -->
	<select id="SAL030104DAO.selectMtDdcDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  SELECT 
			 t1.PYMNT_YM
			,t1.SN
			,t1.EMPNO
			,t1.PYMNT_DDC_CODE
			,t2.PYMNT_DDC_CODE_NM
			,t1.AMOUNT
			,t1.TAXXMPT
			,t1.RM
		FROM TBSAL_MT_SALARY_DTLS t1
			 INNER JOIN TBSAL_PYMNT_DDC_STDR_CODE t2
			 ON  t1.PYMNT_DDC_CODE = t2.PYMNT_DDC_CODE
			 AND t2.PYMNT_DDC_SE = '1'
		WHERE t1.PYMNT_YM 	= #PYMNT_YM#
		  AND t1.SN			= #SN#
		  AND t1.EMPNO 		= #EMPNO#
		ORDER BY t2.OUTPT_ORDR
    </select>             
   
   	<!-- 개인별지급공제정보 입력 -->
    <insert id="SAL030104DAO.MtPymntDtlsC" parameterClass="java.util.HashMap">
    	INSERT INTO TBSAL_MT_SALARY_DTLS
    	(
			 PYMNT_YM
			,SN
			,EMPNO
			,PYMNT_DDC_CODE
			,AMOUNT
			,TAXXMPT
			,RM
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
    	) VALUES (
			 #PYMNT_YM#
			,#SN#
			,#EMPNO#
			,#PYMNT_DDC_CODE#
			,#AMOUNT#
			,#TAXXMPT#
			,#RM#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
    	)
    </insert>

    <!-- 개인별지급공제정보 코드별 수정 -->
    <update id="SAL030104DAO.MtPymntDtlsU" parameterClass="java.util.HashMap">
    	UPDATE TBSAL_MT_SALARY_DTLS
    	SET	 AMOUNT				= #AMOUNT#
    		,TAXXMPT			= #TAXXMPT#     	
			,RM             	= #RM#       
			,UPDUSR_ID      	= #S_USER_ID#
			,UPDT_DT        	= SYSDATE    
    	WHERE PYMNT_YM			= #PYMNT_YM#      
		  AND SN				= #SN#            
		  AND EMPNO				= #EMPNO#         
		  AND PYMNT_DDC_CODE	= #PYMNT_DDC_CODE#
    </update>

    <!-- 개인별지급공제정보 코드별 삭제 -->
    <delete id="SAL030104DAO.MtPymntDtlsD" parameterClass="java.util.HashMap">
    	DELETE FROM TBSAL_MT_SALARY_DTLS
    	WHERE PYMNT_YM			= #PYMNT_YM#      
		  AND SN				= #SN#            
		  AND EMPNO				= #EMPNO#         
		  AND PYMNT_DDC_CODE	= #PYMNT_DDC_CODE#
    </delete> 
    

   
	<!-- 월급여생성 내역 정보 건수 확인 (급여확정전) -->
	<select id="SAL030104DAO.selectMtSalaryPymntCreate" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT PYMNT_YM
			 , SALARY_SE
		     , PYMNT_DE
		     , PYMNT_SE
		     , DCSN_AT
		  FROM TBSAL_MT_SALARY_CREAT
		 WHERE PYMNT_YM  = #PYMNT_YM#
		   AND SALARY_SE = #SALARY_SE#
		   AND PYMNT_SE  = #PYMNT_SE#
    </select>  

	<!-- 월급여조정 추가 대상자 조회 -->
	<select id="SAL030104DAO.selectMtSalaryPymnt2List" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT #PYMNT_YM#              			AS PYMNT_YM			/* 지급년월  */
			     , #SALARY_SE#             			AS SALARY_SE		/* 급여구분  */
			     , #PYMNT_SE#              			AS PYMNT_SE			/* 지급구분 - 1일:1, 20일:2, 계약직:4 */
			     , #PYMNT_DE#              			AS PYMNT_DE			/* 지급일자 */
			     , A.EMPNO                 			AS EMPNO			/* 사번 */
			     , A.EMPNM                 			AS EMPNM			/* 사원명 */
			     , A.JSSFC_SE              			AS EMPL_SE			/* 사원구분 */
			     , (
			              SELECT
			                     CASE COUNT(I.EMPNO)
			                            WHEN 1
			                            THEN 'Y'
			                            ELSE ''
			                     END
			                FROM TBSAL_ANSLRY_INFO I
			               WHERE I.APPLC_DE =
			                     (
			                            SELECT MAX(APPLC_DE)
			                              FROM TBSAL_ANSLRY_INFO
			                             WHERE APPLC_DE <= #PYMNT_DE#
			                     )
			                 AND I.PYMNT_SE = '1'
			                 AND I.EMPNO    = A.EMPNO
			       )               					AS ANSLRY_AT		/* 연봉여부 */
			     , A.DEPT_CODE                 		AS DEPT_CODE 		/* 부서코드 */
			     , SFSAL_GETDEPTNM_01(A.DEPT_CODE)  AS DEPT_NM     		/* 부서명 */
			     , ''                               AS PRMPC_SE     	/* 원가구분 */
			     , A.PAY_CLSF_SE                    AS CLSF_CODE   		/* 직급코드 */
			     ,SFHRM_GET_OFCPSCD(A.EMPNO, A.JSSFC_SE, A.PAY_CLSF_SE, A.ECNY_DE)  AS OFCPS   /* 직위 */
			     , A.RSPOFC_SE                      AS RSPOFC_SE   		/* 직책구분 */
			     , NVL(A.SRCLS, '01')               AS SRCLS     		/* 호봉 */
			     , A.ECNY_DE                        AS ECNY_DE     		/* 입사일자 */
			     , A.RETIRE_DE                      AS RETIRE_DE    	/* 퇴사일자 */
			     , A.STDR_DE                        AS STDR_DE     		/* 기준일자 */
			     , (
			              SELECT MAX(AF.GNFD_DE)
			                FROM TBHRM_GNFD AF
			               WHERE AF.EMPNO = A.EMPNO
			                 AND AF.GNFD_SE IN ('005', '010')
			       )                          		AS CLSF_PRMOT_DE	/* 직급승진일 */
			     , (
			              SELECT AA.DCLZ_SE
			                FROM TBHRM_MNBY_DCLZ_DTLS AA
			               WHERE AA.DCLZ_SE                  = '216'
			                 AND TO_CHAR(AA.BGNDT, 'YYYYMM') = #PYMNT_YM#
			                 AND TO_CHAR(AA.ENDDT, 'YYYYMM') = #PYMNT_YM#
			                 AND AA.EMPNO                    = A.EMPNO
			       )
			       									AS DCLZ_SE       	/* 근태구분 */
			     , (
			              SELECT TO_CHAR(AB.BGNDT, 'YYYYMMDD')
			                FROM TBHRM_MNBY_DCLZ_DTLS AB
			               WHERE AB.DCLZ_SE                  = '216'
			                 AND TO_CHAR(AB.BGNDT, 'YYYYMM') = #PYMNT_YM#
			                 AND TO_CHAR(AB.ENDDT, 'YYYYMM') = #PYMNT_YM#
			                 AND AB.EMPNO                    = A.EMPNO
			       )
			       									AS BGNDE          	/* 시작일 */
			     , (
			              SELECT TO_CHAR(AC.ENDDT, 'YYYYMMDD')
			                FROM TBHRM_MNBY_DCLZ_DTLS AC
			               WHERE AC.DCLZ_SE                  = '216'
			                 AND TO_CHAR(AC.BGNDT, 'YYYYMM') = #PYMNT_YM#
			                 AND TO_CHAR(AC.ENDDT, 'YYYYMM') = #PYMNT_YM#
			                 AND AC.EMPNO                    = A.EMPNO
			       )
			       									AS ENDDE         	/* 종료일 */
			     , (
			              SELECT
			                     CASE COUNT(B.EMPNO)
			                            WHEN 1
			                            THEN 'Y'
			                            ELSE ''
			                     END
			                FROM TBHRM_HR_ETC B
			               WHERE B.EMPNO          = A.EMPNO
			                 AND B.LBUN_SBSCRB_AT = '1'
			       )        						AS LBUN_SBSCRB_SE	/* 노조가입구분 */
			     , (
			              SELECT C.TROBL_GRAD_SE
			                FROM TBHRM_HR_ETC C
			               WHERE C.EMPNO = A.EMPNO
			       )                        		AS DSPSN_GRAD		/* 장애자등급 */
			     , (
			              SELECT
			                     CASE COUNT(AD.EMPNO)
			                            WHEN 1
			                            THEN 'Y'
			                            ELSE ''
			                     END
			                FROM TBHRM_HR_MASTR AD
			               WHERE AD.TRTMT_EMP_AT               = '1'
			                 AND SUBSTR(AD.TRTMT_BGNDE, 1, 6) <= #PYMNT_YM#
			                 AND SUBSTR(AD.TRTMT_ENDDE, 1, 6) >= #PYMNT_YM#
			                 AND AD.EMPNO                      = A.EMPNO
			       )                         		AS TRTMT_EMP_AT		/* 대우직원구분 */
			     , A.STTUS_SE                       AS WORK_STTUS		/* 근무상태 */
			     , TO_CHAR(LAST_DAY(TO_DATE(#PYMNT_YM#, 'YYYYMM')), 'DD')	AS MT_DAYCNT	/* 월일수 */
			     , 0     							AS NTHG_PLAN_ABSENC_DAYCNT				/* 무계획결근일수 */
			     , 0     							AS ABSENC_DAYCNT	/* 결근일수 */
			     , 0     							AS LATEN_DAYCNT		/* 지각일수 */
			     , 0     							AS SLYRD_RT			/* 감봉율 */
			     , 0     							AS LAYOFF_SALARY_RT	/* 휴직급여율 */
			     , 0     							AS INDVDL_PRICEWAGE_PYMNT_RT			/* 개인성과급지급율 */
			     , (
			              SELECT
			                     CASE COUNT(DISTINCT D.EMPNO)
			                            WHEN 1
			                            THEN 'Y'
			                            ELSE ''
			                     END
			                FROM TBSAL_MENDNG_SEIZR_TKBAK D
			               WHERE D.TRMNAT_AT = '1'
			                 AND D.EMPNO     = A.EMPNO
			       )      							AS SEIZR_AT			/* 압류여부 */
			     , (
				       (
				              SELECT COUNT(E.EMPNO) AS PER_CNT1    		/* 배우자 공제수 */
				                FROM TBHRM_HR_FAMILY E
				               WHERE E.EMPNO     = A.EMPNO
				                 AND E.SUPORT_AT = '1'
				                 AND E.FAMILY_RELATE_SE IN ('005', '006')
				       )
				       +
				       (
				              SELECT COUNT(E.EMPNO) AS PER_CNT2    		/* 만20세 이하 공제수 */
				                FROM TBHRM_HR_FAMILY E
				               WHERE E.EMPNO     = A.EMPNO
				                 AND E.SUPORT_AT = '1'
				                 AND E.FAMILY_RELATE_SE IN ('007', '008', '009', '010', '011', '012', '015', '016', '037')
				                 AND TO_NUMBER(MONTHS_BETWEEN (LAST_DAY(SYSDATE), TO_DATE(E.BRTHDY, 'YYYYMMDD'))) / 12 < 21
				       )
				       +
				       (
				              SELECT COUNT(E.EMPNO) AS PER_CNT3    		/* 만60세 이상 공제수 */
				                FROM TBHRM_HR_FAMILY E
				               WHERE E.EMPNO     = A.EMPNO
				                 AND E.SUPORT_AT = '1'
				                 AND E.FAMILY_RELATE_SE IN ('001', '002', '003', '004', '013', '014', '017', '018', '035', '036')
				                 AND TO_NUMBER(MONTHS_BETWEEN (LAST_DAY(SYSDATE), TO_DATE(E.BRTHDY, 'YYYYMMDD'))) / 12 > 59
				       )
				       + 1         										/* 본인공제 */
				    )	  							AS HN_DDC_NMPR		/* 인적공제인원(기본공제(본인), 배우자공제(처/남편), 부양가족공제(20세이하 및 60세 이상) */
			     , (
			              SELECT NVL(COUNT(E2.EMPNO), 0)
			                FROM TBHRM_HR_FAMILY E2
			               WHERE E2.EMPNO     = A.EMPNO
			                 AND E2.SUPORT_AT = '1'
			                 AND E2.FAMILY_RELATE_SE IN ('007', '008', '009', '010', '011', '012', '015', '016', '037')
			                 AND TO_NUMBER(MONTHS_BETWEEN (LAST_DAY(SYSDATE), TO_DATE(E2.BRTHDY, 'YYYYMMDD'))) / 12 < 21
			       ) 	  							AS HN_DDC_NMPR20	/* 인적공제인원20세이하 */
			     , (
			              SELECT F.PYMNT_TIME
			                FROM TBSAL_EXCESS_WORK_DTLS F
			               WHERE F.EMPNO    = A.EMPNO
			                 AND F.PYMNT_YM = #PYMNT_YM#
			       )      							AS TIME__ELSE_TIME		/* 시간외시간 */
			     , 0      							AS NIGHT_LABOR_TIME		/* 야간근로시간 */
			     , 0      							AS RESTDE_LABOR_TIME	/* 휴일근로시간 */
			     , 0      							AS YEAST_HLDY_RCOGN		/* 국공휴일인정 */
			     , (
			              SELECT G.SALARY_BANK_CODE
			                FROM TBSAL_EMPL_BANK_ACNUT G
			               WHERE G.EMPNO = A.EMPNO
			       )  								AS SALARY_BANK_CODE		/* 급여은행코드 */
			     , (
			              SELECT G2.SALARY_BANK_ACNUT
			                FROM TBSAL_EMPL_BANK_ACNUT G2
			               WHERE G2.EMPNO = A.EMPNO
			       )        						AS SALARY_BANK_ACNUT	/* 급여은행계좌 */
			     , (
			              SELECT G3.ALLWNC_BANK_CODE
			                FROM TBSAL_EMPL_BANK_ACNUT G3
			               WHERE G3.EMPNO = A.EMPNO
			       )        						AS ALLWNC_BANK_CODE		/* 수당은행코드 */
			     , (
			              SELECT G4.ALLWNC_BANK_ACNUT
			                FROM TBSAL_EMPL_BANK_ACNUT G4
			               WHERE G4.EMPNO = A.EMPNO
			       )        						AS ALLWNC_BANK_ACNUT	/* 수당은행계좌 */
			     , (
			              SELECT H.BASS_AMOUNT
			                FROM TBSAL_SLARY_TABLE H
			               WHERE H.APPLC_DE =
			                     (
			                            SELECT MAX(APPLC_DE)
			                              FROM TBSAL_SLARY_TABLE
			                             WHERE APPLC_DE <= #PYMNT_DE#
			                     )
			                 AND H.EMPL_SE   = A.JSSFC_SE
			                 AND H.CLSF_CODE = A.PAY_CLSF_SE
			                 AND H.SRCLS     = A.SRCLS
			       )      							AS BSLRY				/* 기본급 */
	            , 0 								AS ODYGS                /* 통상임금 */
	            , ''								AS CLOS_AT              /* 마감여부 */
			  FROM TBHRM_HR_MASTR A
			 WHERE A.PAY_CLSF_SE IS NOT NULL
			   AND A.ECNY_DE <= #PYMNT_DE#	  /* 수정 : 20일이후 입사자 는 급여 처리안함 */
			   AND A.EMPNO = #EMPNO#
		]]>
		<isEqual property = "PYMNT_SE" compareValue = "1">	/* 복리후생비 */		
			   AND ( A.STTUS_SE = '000'
					 OR SUBSTR(A.RETIRE_DE,1,6) = TO_CHAR(ADD_MONTHS (TO_DATE(#PYMNT_YM#,'YYYYMM') , -1), 'YYYYMM')  ) /* 수정 : 퇴사자 1일자 지급시 전월 퇴사자도 포함 함 */
			   AND A.JSSFC_SE IN ('000','001','002','003','007')
		</isEqual>	
		<isEqual property = "PYMNT_SE" compareValue = "2"> /* 급여 */
			   AND ( A.STTUS_SE = '000'
			   		 OR SUBSTR(A.RETIRE_DE,1,6) = #PYMNT_YM# )		/* 20160827 수정 : 당월 퇴사자도 포함 */
			   AND A.JSSFC_SE IN ('000','001','002','003','007')
		</isEqual>	
		<isEqual property = "PYMNT_SE" compareValue = "4"> /* 계약직 */			
			   AND ( A.STTUS_SE = '000' 
			   		 OR SUBSTR(A.RETIRE_DE,1,6) = #PYMNT_YM# )		/* 20160827 수정 : 당월 퇴사자도 포함 */
			   AND A.JSSFC_SE IN ('004')
		</isEqual>		
			 ORDER BY A.JSSFC_SE, A.PAY_CLSF_SE, A.SRCLS
    </select>

   	<!-- 개인별 월급여지급정보 입력 -->
    <insert id="SAL030104DAO.MtSalaryPymntC" parameterClass="java.util.HashMap">
		INSERT
		  INTO TBSAL_MT_SALARY_PYMNT
		       (
		              PYMNT_YM      				/* 지급년월  */
		            , SALARY_SE                     /* 급여구분  */
		            , PYMNT_SE                      /* 지급구분 - 1일:1, 20일:2, 계약직:4 */
		            , PYMNT_DE                      /* 지급일자 */
		            , EMPNO                         /* 사번 */
		            , EMPNM                         /* 사원명 */
		            , EMPL_SE                       /* 사원구분 */
		            , ANSLRY_AT                     /* 연봉여부 */
		            , DEPT_CODE                     /* 부서코드 */
		            , DEPT_NM                       /* 부서명 */
		            , PRMPC_SE                      /* 원가구분 */
		            , CLSF_CODE                     /* 직급코드 */
		            , RSPOFC_SE                     /* 직책구분 */
		            , SRCLS                         /* 호봉 */
		            , ECNY_DE                       /* 입사일자 */
		            , RETIRE_DE                     /* 퇴사일자 */
		            , STDR_DE                       /* 기준일자 */
		            , CLSF_PRMOT_DE                 /* 직급승진일 */
		            , DCLZ_SE                       /* 근태구분 */
		            , BGNDE                         /* 시작일 */
		            , ENDDE                         /* 종료일 */
		            , LBUN_SBSCRB_SE                /* 노조가입구분 */
		            , DSPSN_GRAD                    /* 장애자등급 */
		            , TRTMT_EMP_AT                  /* 대우직원구분 */
		            , WORK_STTUS     				/* 근무상태 */
		            , MT_DAYCNT                     /* 월일수 */
		            , NTHG_PLAN_ABSENC_DAYCNT       /* 무계획결근일수 */
		            , ABSENC_DAYCNT                 /* 결근일수 */
		            , LATEN_DAYCNT                  /* 지각일수 */
		            , SLYRD_RT                      /* 감봉율 */
		            , LAYOFF_SALARY_RT              /* 휴직급여율 */
		            , INDVDL_PRICEWAGE_PYMNT_RT     /* 개인성과급지급율 */
		            , SEIZR_AT                      /* 압류여부 */
		            , HN_DDC_NMPR                   /* 인적공제인원(기본공제(본인), 배우자공제(처/남편), 부양가족공제(20세이하 및 60세 이상) */
		            , HN_DDC_NMPR20                 /* 인적공제인원20세이하 */
		            , TIME__ELSE_TIME               /* 시간외시간 */
		            , NIGHT_LABOR_TIME              /* 야간근로시간 */
		            , RESTDE_LABOR_TIME             /* 휴일근로시간 */
		            , YEAST_HLDY_RCOGN              /* 국공휴일인정 */
		            , SALARY_BANK_CODE              /* 급여은행코드 */
		            , SALARY_BANK_ACNUT             /* 급여은행계좌 */
		            , ALLWNC_BANK_CODE              /* 수당은행코드 */
		            , ALLWNC_BANK_ACNUT             /* 수당은행계좌 */
		            , BSLRY                         /* 기본급 */
		            , ODYGS                         /* 통상임금 */
		            , CLOS_AT                       /* 마감여부 */
		            , REGISTER_ID
		            , REGIST_DT
		            , UPDUSR_ID
		            , UPDT_DT
		       )
		       VALUES
		       (
		              #PYMNT_YM#
		            , #SALARY_SE#
		            , #PYMNT_SE#
		            , #PYMNT_DE#
		            , #EMPNO#
		            , #EMPNM#
		            , #EMPL_SE#
		            , #ANSLRY_AT#
		            , #DEPT_CODE#
		            , #DEPT_NM#
		            , #PRMPC_SE#
		            , #CLSF_CODE#
		            , #RSPOFC_SE#
		            , #SRCLS#
		            , #ECNY_DE#
		            , #RETIRE_DE#
		            , #STDR_DE#
		            , #CLSF_PRMOT_DE#
		            , #DCLZ_SE#
		            , #BGNDE#
		            , #ENDDE#
		            , #LBUN_SBSCRB_SE#
		            , #DSPSN_GRAD#
		            , #TRTMT_EMP_AT#
		            , #WORK_STTUS#
		            , #MT_DAYCNT#
		            , #NTHG_PLAN_ABSENC_DAYCNT#
		            , #ABSENC_DAYCNT#
		            , #LATEN_DAYCNT#
		            , #SLYRD_RT#
		            , #LAYOFF_SALARY_RT#
		            , #INDVDL_PRICEWAGE_PYMNT_RT#
		            , #SEIZR_AT#
		            , #HN_DDC_NMPR#
		            , #HN_DDC_NMPR20#
		            , #TIME__ELSE_TIME#
		            , #NIGHT_LABOR_TIME#
		            , #RESTDE_LABOR_TIME#
		            , #YEAST_HLDY_RCOGN#
		            , #SALARY_BANK_CODE#
		            , #SALARY_BANK_ACNUT#
		            , #ALLWNC_BANK_CODE#
		            , #ALLWNC_BANK_ACNUT#
		            , #BSLRY#
		            , #ODYGS#
		            , #CLOS_AT#
		            , #S_USER_ID#
		            , SYSDATE
		            , #S_USER_ID#
		            , SYSDATE
		       )
    </insert>

    <!-- 개인별 월급여지급정보 삭제 (마스터) -->
    <delete id="SAL030104DAO.MtSalaryPymntD" parameterClass="java.util.HashMap">
		DELETE
		  FROM TBSAL_MT_SALARY_PYMNT
		 WHERE PYMNT_YM       = #PYMNT_YM#
		   AND SALARY_SE      = #SALARY_SE#
		   AND PYMNT_DE       = #PYMNT_DE#
		   AND EMPNO          = #EMPNO#
		   AND PYMNT_SE       = #PYMNT_SE#
    </delete> 
    
    <!-- 개인별지급정보 삭제 -->
    <delete id="SAL030104DAO.MtPymntDtlsAllD" parameterClass="java.util.HashMap">
		DELETE
		  FROM TBSAL_MT_PYMNT_DTLS
		 WHERE PYMNT_YM		= #PYMNT_YM#
		   AND SALARY_SE	= #SALARY_SE#
		   AND PYMNT_DE		= #PYMNT_DE#
		   AND EMPNO        = #EMPNO#
    </delete>
    
    <!-- 개인별공제정보 삭제 -->
    <delete id="SAL030104DAO.MtDdcDtlsAllD" parameterClass="java.util.HashMap">
		DELETE
		  FROM TBSAL_MT_DDC_DTLS
		 WHERE PYMNT_YM		= #PYMNT_YM#
		   AND SALARY_SE	= #SALARY_SE#
		   AND PYMNT_DE		= #PYMNT_DE#
		   AND EMPNO		= #EMPNO#
		   AND PYMNT_SE		= #PYMNT_SE#
    </delete>
    
        <!-- 개인별공제정보 입력(미사용) -->
    <insert id="SAL030104DAO.MtDdcDtlsC" parameterClass="java.util.HashMap">
		INSERT
		  INTO TBSAL_MT_DDC_DTLS
		       (
		              SN                 /* 일련번호 */
		            , PYMNT_YM           /* 지급년월 */
		            , SALARY_SE          /* 급여구분 */
		            , PYMNT_DE           /* 지급일자 */
		            , EMPNO              /* 사번 */
		            , EMPNM              /* 사원명 */
		            , DEPT_CODE          /* 부서코드 */
		            , CLSF_CODE          /* 직급코드 */
		            , PYMNT_DDC_CODE     /* 지급공제코드 */
		            , DDC_DETAIL_CODE    /* 공제상세코드 */
		            , DDC_AMOUNT         /* 공제금액 */
		            , UPDT_DDC_AMOUNT    /* 수정공제금액 */
		            , CLOS_AT            /* 마감여부 */
		            , CLOS_DE            /* 마감일자 */
		            , RM                 /* 비고 */
		            , PYMNT_SE   		 /* 지급구분 */
		            , REGISTER_ID        /* 등록자ID */
		            , REGIST_DT          /* 등록일시 */
		            , UPDUSR_ID          /* 수정자ID */
		            , UPDT_DT            /* 수정일시 */
		       )
		       VALUES
		       (
		              SQ_TBSAL_2.NEXTVAL   /* 일련번호 */
		            , #PYMNT_YM#           /* 지급년월 */
		            , #SALARY_SE#          /* 급여구분 */
		            , #PYMNT_DE#           /* 지급일자 */
		            , #EMPNO#              /* 사번 */
		            , #EMPNM#              /* 사원명 */
		            , #DEPT_CODE#          /* 부서코드 */
		            , #CLSF_CODE#          /* 직급코드 */
		            , #PYMNT_DDC_CODE#     /* 지급공제코드 */
		            , #DDC_DETAIL_CODE#    /* 공제상세코드 */
		            , #DDC_AMOUNT#         /* 공제금액 */
		            , #UPDT_DDC_AMOUNT#    /* 수정공제금액 */
		            , #CLOS_AT#            /* 마감여부 */
		            , #CLOS_DE#            /* 마감일자 */
		            , #RM#                 /* 비고 */
		            , #PYMNT_SE#     	   /* 지급구분 */
		            , #S_USER_ID#          /* 등록자ID */
		            , SYSDATE              /* 등록일시 */
		            , #S_USER_ID#          /* 수정자ID */
		            , SYSDATE              /* 수정일시 */
		       )
    </insert>

    <!-- 개인별공제정보 코드별 수정(미사용) -->
    <update id="SAL030104DAO.MtDdcDtlsU" parameterClass="java.util.HashMap">
		UPDATE TBSAL_MT_DDC_DTLS
		   SET DDC_AMOUNT     = #DDC_AMOUNT#
		     , RM             = #RM#
		     , UPDUSR_ID      = #S_USER_ID#
		     , UPDT_DT        = SYSDATE
		 WHERE PYMNT_YM       = #PYMNT_YM#
		   AND SALARY_SE      = #SALARY_SE#
		   AND PYMNT_DE       = #PYMNT_DE#
		   AND EMPNO          = #EMPNO#
		   AND PYMNT_DDC_CODE = #PYMNT_DDC_CODE#
    </update>

    <!-- 개인별공제정보 코드별 삭제(미사용) -->
    <delete id="SAL030104DAO.MtDdcDtlsD" parameterClass="java.util.HashMap">
		DELETE
		  FROM TBSAL_MT_DDC_DTLS
		 WHERE PYMNT_YM       = #PYMNT_YM#
		   AND SALARY_SE      = #SALARY_SE#
		   AND PYMNT_DE       = #PYMNT_DE#
		   AND EMPNO          = #EMPNO#
		   AND PYMNT_DDC_CODE = #PYMNT_DDC_CODE#
    </delete>       

  	<!-- 설명  : 월급여 지급/공제 집계처리 프로시저(미사용) -->
	<parameterMap id="sp_sal_mt_salary_pymnt_param" class="java.util.HashMap">
		<parameter property="PYMNT_YM"     		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="SALARY_SE"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="PYMNT_DE"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="EMPNO"  			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="PYMNT_SE"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />

		<parameter property="S_USER_ID"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="OUT_RESULT_CD"		jdbcType="VARCHAR"	javaType="string"	mode="OUT" />
		<parameter property="OUT_RESULT_MSG"	jdbcType="VARCHAR"	javaType="string"	mode="OUT" />
	</parameterMap>
	<procedure id="SAL030104DAO.SPSAL_MT_SALARY_PYMNT_U" parameterMap="sp_sal_mt_salary_pymnt_param">
		{ call SPSAL_MT_SALARY_PYMNT_U(?,?,?,?,?,  ?,?,?) }
	</procedure>
	
	
	
</sqlMap>