<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC020204_SQL">	
	
	<!-- 조기집행실적 목록 -->
	<select id="ACC020204DAO.elpdExcutAcmsltList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
        <![CDATA[ /*ACC020204DAO.elpdExcutAcmsltList*/ ]]>
		WITH TM_BUDGET_ACNT_CODE AS (
		  SELECT s1.*, s2.BUKIP_CODE AS EXPNDTR_UNIT_CODE, s3.BUKIP_NM AS EXPNDTR_UNIT_NM
	      FROM TBBDG_BUDGET_ACNT_CODE s1
	           LEFT OUTER JOIN TBBDG_BUDGET_BUKIP_MAPPING s2
	           ON  s1.YEAR = s2.YEAR
	           AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
	           LEFT OUTER JOIN TBBDG_BUKIP_CODE s3
	           ON  s2.BUKIP_CODE = s3.BUKIP_CODE
	      WHERE s1.YEAR          = #BUDGET_YEAR#
	      AND   s1.BALC_SE       = '2' /*지출:고정*/
	      ORDER BY SUBSTR(s1.BUDGET_ACNT_CODE,0,1) DESC
	             , s1.BUDGET_ACNT_CODE ASC
	             , s2.BUKIP_CODE ASC
		)
		, TM_TODAY_CA_ACT_MASTR AS (
		  SELECT s1.BUDGET_YEAR
		       , s1.BSNS_SE
		       , s1.BALC_SE
		       , s1.BSNS_CODE
		       , s1.BUDGET_DEPT_CODE
		       , s1.BUDGET_ACNT_CODE
		       , s1.EXPNDTR_UNIT_CODE
		       , NVL(COUNT(s1.DECSN_AMOUNT),0) AS DECSN_CNT
		       , NVL(SUM(s1.DECSN_AMOUNT),0) AS DECSN_AMOUNT 
		  FROM TBACC_EXP_DSN_MASTR s1
		  WHERE s1.CYFD_SE           = '0' /*0:당해년도예산, 1:이월예산*/
		  AND   s1.EXPNDTR_CNFIRM_AT = '1' /*지출확인여부:고정*/
		  AND   s1.PYMNT_ITNC_DE     = #SRCH_ED_DT#
		<isNotEqual property="DEPT_CODE" compareValue="000000">
		  AND	s1.DEPT_CODE = #DEPT_CODE#
		</isNotEqual>
		  GROUP BY s1.BUDGET_YEAR
		         , s1.BSNS_SE
		         , s1.BALC_SE
		         , s1.BSNS_CODE
		         , s1.BUDGET_DEPT_CODE
		         , s1.BUDGET_ACNT_CODE
		         , s1.EXPNDTR_UNIT_CODE
		)
		, TM_SUM_CA_ACT_MASTR AS (
		  SELECT s1.BUDGET_YEAR
		       , s1.BSNS_SE
		       , s1.BALC_SE
		       , s1.BSNS_CODE
		       , s1.BUDGET_DEPT_CODE
		       , s1.BUDGET_ACNT_CODE
		       , s1.EXPNDTR_UNIT_CODE
		       , NVL(COUNT(s1.DECSN_AMOUNT),0) AS DECSN_CNT
		       , NVL(SUM(s1.DECSN_AMOUNT),0) AS DECSN_AMOUNT
		  FROM TBACC_EXP_DSN_MASTR s1
		  WHERE s1.CYFD_SE           = '0' /*0:당해년도예산, 1:이월예산*/
		  AND   s1.EXPNDTR_CNFIRM_AT = '1' /*지출확인여부:고정*/
		  AND   s1.PYMNT_ITNC_DE BETWEEN #SRCH_ST_DT# AND #SRCH_ED_DT#
		<isNotEqual property="DEPT_CODE" compareValue="000000">
		  AND	s1.DEPT_CODE = #DEPT_CODE#
		</isNotEqual>
		  GROUP BY s1.BUDGET_YEAR
		         , s1.BSNS_SE
		         , s1.BALC_SE
		         , s1.BSNS_CODE
		         , s1.BUDGET_DEPT_CODE
		         , s1.BUDGET_ACNT_CODE
		         , s1.EXPNDTR_UNIT_CODE
		)
		, TM_EXECUT_BUDGET AS (
		  SELECT s1.YEAR
		       , s1.BSNS_SE
		       , s1.BALC_SE
		       , s1.DETAIL_BSNS_CODE
			   , s1.DEPT_CODE
		       , s1.BUDGET_ACNT_CODE
		       , s1.EXPNDTR_UNIT_CODE
		       , NVL(SUM(s1.ORIBDGT),0)     AS ORIBDGT
		       , NVL(SUM(s1.CYFD_BUDGET),0) AS CYFD_BUDGET
		       , NVL(SUM(s2.DECSN_CNT),0)    AS TODAY_DECSN_CNT
		       , NVL(SUM(s2.DECSN_AMOUNT),0) AS TODAY_DECSN_AMOUNT
		       , NVL(SUM(s3.DECSN_CNT),0)    AS SUM_DECSN_CNT
		       , NVL(SUM(s3.DECSN_AMOUNT),0) AS SUM_DECSN_AMOUNT
		       , TRUNC((NVL(SUM(s1.ORIBDGT),0)
		         + NVL(SUM(s1.RVSPBGT_1_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_2_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_3_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_4_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_5_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_6_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_7_ODR),0)
		         + NVL(SUM(s1.TRSF_AM),0)
		         + NVL(SUM(s1.BUKIP_MVMN_AM),0)
		         + NVL(SUM(s1.MVMN_AM),0)
		         + NVL(SUM(s1.DVR_AM),0)
		         + NVL(SUM(s1.RSVFND_REQST_AM),0)) * DECODE(s1.BSNS_SE || s1.BALC_SE, '22', 1, '12', DECODE(s1.BUDGET_ACNT_CODE,'7532070', 1, '7292150', 1, 0.85)))
		         AS TRG_BDG_AMT
		       , TRUNC((NVL(SUM(s1.ORIBDGT),0)
		         + NVL(SUM(s1.RVSPBGT_1_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_2_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_3_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_4_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_5_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_6_ODR),0)
		         + NVL(SUM(s1.RVSPBGT_7_ODR),0)
		         + NVL(SUM(s1.TRSF_AM),0)
		         + NVL(SUM(s1.BUKIP_MVMN_AM),0)
		         + NVL(SUM(s1.MVMN_AM),0)
		         + NVL(SUM(s1.DVR_AM),0)
		         + NVL(SUM(s1.RSVFND_REQST_AM),0)) * DECODE(s1.BSNS_SE || s1.BALC_SE, '22', 1, '12', DECODE(s1.BUDGET_ACNT_CODE,'7532070', 1, '7292150', 1, 0.85)) * 0.52)
		         AS MOK_BDG_AMT
		  FROM TBBDG_EXECUT_BUDGET s1
		    LEFT OUTER JOIN TM_TODAY_CA_ACT_MASTR s2
		    ON  s1.YEAR    = s2.BUDGET_YEAR
		    AND s1.BSNS_SE = s2.BSNS_SE
		    AND s1.BALC_SE = s2.BALC_SE
		    AND s1.DETAIL_BSNS_CODE  = s2.BSNS_CODE
			AND s1.DEPT_CODE		 = s2.BUDGET_DEPT_CODE
		    AND s1.BUDGET_ACNT_CODE  = s2.BUDGET_ACNT_CODE
		    AND s1.EXPNDTR_UNIT_CODE = s2.EXPNDTR_UNIT_CODE
		    LEFT OUTER JOIN TM_SUM_CA_ACT_MASTR s3
		    ON  s1.YEAR    = s3.BUDGET_YEAR
		    AND s1.BSNS_SE = s3.BSNS_SE
		    AND s1.BALC_SE = s3.BALC_SE
		    AND s1.DETAIL_BSNS_CODE  = s3.BSNS_CODE
			AND s1.DEPT_CODE		 = s3.BUDGET_DEPT_CODE
		    AND s1.BUDGET_ACNT_CODE  = s3.BUDGET_ACNT_CODE
		    AND s1.EXPNDTR_UNIT_CODE = s3.EXPNDTR_UNIT_CODE
		  WHERE s1.YEAR = #BUDGET_YEAR#
		<isNotEqual property="DEPT_CODE" compareValue="000000">		  
		    AND	s1.DEPT_CODE = #DEPT_CODE#
		</isNotEqual>
		  GROUP BY s1.YEAR
		         , s1.BSNS_SE
		         , s1.BALC_SE
		         , s1.DETAIL_BSNS_CODE
			   	 , s1.DEPT_CODE
		         , s1.BUDGET_ACNT_CODE
		         , s1.EXPNDTR_UNIT_CODE
		)
		SELECT tb1.BUDGET_YEAR
		     , tb1.BSNS_SE
		     , tb1.BALC_SE
		     , tb1.DEPTH
		     , tb1.BUDGET_ACNT_CODE
		     , tb1.EXPNDTR_UNIT_CODE
		     , tb1.EXPNDTR_UNIT_NM
		     , tb1.ORIBDGT
		     , tb1.CYFD_BUDGET
		     , tb1.TRG_BDG_AMT
		     , tb1.MOK_BDG_AMT
		     , tb1.TODAY_DECSN_CNT
		     , tb1.TODAY_DECSN_AMOUNT
		     , tb1.SUM_DECSN_CNT
		     , tb1.SUM_DECSN_AMOUNT
		FROM (
		    SELECT '4' AS DEPTH
		         , t1.YEAR AS BUDGET_YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , t1.BUDGET_ACNT_CODE
		         , t1.EXPNDTR_UNIT_CODE
		         , '        ' || t1.EXPNDTR_UNIT_NM AS EXPNDTR_UNIT_NM
		         , t2.ORIBDGT
		         , t2.CYFD_BUDGET
		         , t2.TRG_BDG_AMT
		         , t2.MOK_BDG_AMT
		         , t2.TODAY_DECSN_CNT
		         , t2.TODAY_DECSN_AMOUNT
		         , t2.SUM_DECSN_CNT
		         , t2.SUM_DECSN_AMOUNT
		    FROM TM_BUDGET_ACNT_CODE t1
		      INNER JOIN TM_EXECUT_BUDGET t2
		      ON  t1.YEAR    = t2.YEAR
		      AND t1.BSNS_SE = t2.BSNS_SE
		      AND t1.BALC_SE = t2.BALC_SE
		      AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		      AND t1.EXPNDTR_UNIT_CODE = t2.EXPNDTR_UNIT_CODE
		    UNION ALL
		    SELECT '3' AS DEPTH
		         , t1.YEAR AS BUDGET_YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , t1.BUDGET_ACNT_CODE
		         , '0000' AS EXPNDTR_UNIT_CODE
		         , '    ' || MAX(t3.BUDGET_ACNT_NM) AS EXPNDTR_UNIT_NM
		         , NVL(SUM(t2.ORIBDGT),0)     AS ORIBDGT
		         , NVL(SUM(t2.CYFD_BUDGET),0) AS CYFD_BUDGET
		         , NVL(SUM(t2.TRG_BDG_AMT),0) AS TRG_BDG_AMT
		         , NVL(SUM(t2.MOK_BDG_AMT),0) AS MOK_BDG_AMT
		         , NVL(SUM(t2.TODAY_DECSN_CNT),0)    AS TODAY_DECSN_CNT
		         , NVL(SUM(t2.TODAY_DECSN_AMOUNT),0) AS TODAY_DECSN_AMOUNT
		         , NVL(SUM(t2.SUM_DECSN_CNT),0)      AS SUM_DECSN_CNT
		         , NVL(SUM(t2.SUM_DECSN_AMOUNT),0)   AS SUM_DECSN_AMOUNT
		    FROM TM_BUDGET_ACNT_CODE t1
		      INNER JOIN TM_EXECUT_BUDGET t2
		      ON  t1.YEAR    = t2.YEAR
		      AND t1.BSNS_SE = t2.BSNS_SE
		      AND t1.BALC_SE = t2.BALC_SE
		      AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		      AND t1.EXPNDTR_UNIT_CODE = t2.EXPNDTR_UNIT_CODE
		      LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t3
		      ON  t1.YEAR    = t3.YEAR
		      AND t1.BSNS_SE = t3.BSNS_SE
		      AND t1.BALC_SE = t3.BALC_SE
		      AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		    GROUP BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , t1.BUDGET_ACNT_CODE
		    UNION ALL
		    SELECT '2' AS DEPTH
		         , t1.YEAR AS BUDGET_YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , SUBSTR(t1.BUDGET_ACNT_CODE,1,3) || '00000' AS BUDGET_ACNT_CODE
		         , '0000' AS EXPNDTR_UNIT_CODE
		         , MAX(t3.BUDGET_ACNT_NM) AS EXPNDTR_UNIT_NM
		         , NVL(SUM(t2.ORIBDGT),0)     AS ORIBDGT
		         , NVL(SUM(t2.CYFD_BUDGET),0) AS CYFD_BUDGET
		         , NVL(SUM(t2.TRG_BDG_AMT),0) AS TRG_BDG_AMT
		         , NVL(SUM(t2.MOK_BDG_AMT),0) AS MOK_BDG_AMT
		         , NVL(SUM(t2.TODAY_DECSN_CNT),0)    AS TODAY_DECSN_CNT
		         , NVL(SUM(t2.TODAY_DECSN_AMOUNT),0) AS TODAY_DECSN_AMOUNT
		         , NVL(SUM(t2.SUM_DECSN_CNT),0)      AS SUM_DECSN_CNT
		         , NVL(SUM(t2.SUM_DECSN_AMOUNT),0)   AS SUM_DECSN_AMOUNT
		    FROM TM_BUDGET_ACNT_CODE t1
		      INNER JOIN TM_EXECUT_BUDGET t2
		      ON  t1.YEAR    = t2.YEAR
		      AND t1.BSNS_SE = t2.BSNS_SE
		      AND t1.BALC_SE = t2.BALC_SE
		      AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		      AND t1.EXPNDTR_UNIT_CODE = t2.EXPNDTR_UNIT_CODE
		      LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t3
		      ON  t1.YEAR    = t3.YEAR
		      AND t1.BSNS_SE = t3.BSNS_SE
		      AND t1.BALC_SE = t3.BALC_SE
		      AND SUBSTR(t1.BUDGET_ACNT_CODE,1,3) || '00000' = t3.BUDGET_ACNT_CODE
		    GROUP BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		    UNION ALL
		    SELECT '1' AS DEPTH
		         , t1.YEAR AS BUDGET_YEAR
		         , t1.BSNS_SE
		         , t1.BALC_SE
		         , SUBSTR(t1.BUDGET_ACNT_CODE,1,1) || '0000000' AS BUDGET_ACNT_CODE
		         , '0000' AS EXPNDTR_UNIT_CODE
		         , '[' || MAX(t3.BUDGET_ACNT_NM) || '소계]' AS EXPNDTR_UNIT_NM
		         , NVL(SUM(t2.ORIBDGT),0)     AS ORIBDGT
		         , NVL(SUM(t2.CYFD_BUDGET),0) AS CYFD_BUDGET
		         , NVL(SUM(t2.TRG_BDG_AMT),0) AS TRG_BDG_AMT
		         , NVL(SUM(t2.MOK_BDG_AMT),0) AS MOK_BDG_AMT
		         , NVL(SUM(t2.TODAY_DECSN_CNT),0)    AS TODAY_DECSN_CNT
		         , NVL(SUM(t2.TODAY_DECSN_AMOUNT),0) AS TODAY_DECSN_AMOUNT
		         , NVL(SUM(t2.SUM_DECSN_CNT),0)      AS SUM_DECSN_CNT
		         , NVL(SUM(t2.SUM_DECSN_AMOUNT),0)   AS SUM_DECSN_AMOUNT
		    FROM TM_BUDGET_ACNT_CODE t1
		      INNER JOIN TM_EXECUT_BUDGET t2
		      ON  t1.YEAR    = t2.YEAR
		      AND t1.BSNS_SE = t2.BSNS_SE
		      AND t1.BALC_SE = t2.BALC_SE
		      AND t1.BUDGET_ACNT_CODE  = t2.BUDGET_ACNT_CODE
		      AND t1.EXPNDTR_UNIT_CODE = t2.EXPNDTR_UNIT_CODE
		      LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t3
		      ON  t1.YEAR    = t3.YEAR
		      AND t1.BSNS_SE = t3.BSNS_SE
		      AND t1.BALC_SE = t3.BALC_SE
		      AND SUBSTR(t1.BUDGET_ACNT_CODE,1,1) || '0000000' = t3.BUDGET_ACNT_CODE
		    GROUP BY t1.YEAR
		           , t1.BSNS_SE
		           , t1.BALC_SE
		           , SUBSTR(t1.BUDGET_ACNT_CODE,1,1)
		) tb1
		ORDER BY SUBSTR(tb1.BUDGET_ACNT_CODE,1,1) DESC
		       , tb1.BUDGET_ACNT_CODE ASC
		       , tb1.DEPTH ASC
		       , tb1.EXPNDTR_UNIT_CODE ASC
	</select>
	
	<!-- 조기집행실적: 지출내역 -->
	<select id="ACC020204DAO.expndtrDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC020204DAO.expndtrDtlsList*/ ]]>
		SELECT t1.CAUSE_ACTION_DE
		     , t1.BUDGET_YEAR
		     , t1.BSNS_SE
		     , t1.BALC_SE
		     , t1.BUDGET_ACNT_CODE
		     , t1.SUMRY
		     , MAX(BCNC_NM) AS BCNC_NM
		     , SFACC_GET_EXECUT_BUDGET(t1.BUDGET_YEAR, t1.BSNS_SE, t1.BALC_SE, t1.BUDGET_ACNT_CODE, t1.EXPNDTR_UNIT_CODE, '2'/*현액*/) AS BUDGET_AMT
		     , NVL(SUM(t1.CAUSE_ACTION_AMOUNT),0)  AS CAUSE_ACTION_AMOUNT  /*원인행위금액*/
		     , NVL(SUM(t1.DEBT_AMT),0)                        AS DEBT_AMT             /*채무확정액*/
		     , NVL(SUM(t1.DECSN_AMOUNT),0)                AS DECSN_AMOUNT         /*결의금액(지출)*/
		FROM VHACC_EXP_DSN_MASTR t1
		WHERE t1.BUDGET_YEAR       = #BUDGET_YEAR#
		AND   t1.BSNS_SE           = #BSNS_SE#
		AND   t1.BALC_SE           = #BALC_SE#
		AND   t1.BUDGET_ACNT_CODE  = #BUDGET_ACNT_CODE#
		AND   t1.EXPNDTR_UNIT_CODE = #EXPNDTR_UNIT_CODE#
		AND   t1.CAUSE_ACTION_DE BETWEEN #SRCH_ST_DT# AND #SRCH_ED_DT#
		<isNotEqual property="DEPT_CODE" compareValue="000000">
		AND	  t1.DEPT_CODE		   = #DEPT_CODE#
		</isNotEqual>
		GROUP BY t1.CAUSE_ACTION_DE
		       , t1.BUDGET_YEAR
		       , t1.BSNS_SE
		       , t1.BALC_SE
		       , t1.BUDGET_ACNT_CODE
		       , t1.EXPNDTR_UNIT_CODE
		       , t1.SUMRY
		ORDER BY t1.CAUSE_ACTION_DE ASC
	</select>
   
</sqlMap>