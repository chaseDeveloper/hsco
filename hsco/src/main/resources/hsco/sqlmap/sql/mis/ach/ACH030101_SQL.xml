<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACH030101_SQL">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 지표가중치 목록조회 -->
	<select id="ACH030101DAO.selectList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[		
			SELECT                                                    
					 AA.V_IX_CODE                                               AS V_IX_CODE                                          
					,AA.S_IX_CODE                                               AS S_IX_CODE                                         
					, SFACH_GET_IXNM(AA.EVL_YEAR, AA.ODR_SE,AA.S_IX_CODE )      AS S_IX_NM
					,AA.C_IX_CODE                                               AS C_IX_CODE                                         
					, SFACH_GET_IXNM(AA.EVL_YEAR, AA.ODR_SE,AA.C_IX_CODE )      AS C_IX_NM
					,AA.IX_CDNM                                                 AS IX_CDNM                                           
					,AA.EVL_YEAR                                                AS EVL_YEAR                                          
					,AA.ODR_SE                                                  AS ODR_SE                                            
					,AA.VIEWPOINT_SE                                            AS VIEWPOINT_SE                                      
					,AA.STRCT_LEVEL                                             AS STRCT_LEVEL                                       
					,AA.IX_CODE                                                 AS IX_CODE                                           
					,AA.IX_NM                                                   AS IX_NM                                             
					,AA.ORGNZT_CODE                                             AS ORGNZT_CODE 
					,AA.IX_CHARCT                                               AS IX_CHARCT
					,AA.WGHTVAL                                                 AS WGHTVAL                                           
					,NVL(AA.Q_GOALVAL, AA.GOALVAL)                              AS GOALVAL                                           
					,AA.REFER_VAL                                               AS REFER_VAL                                         
					,AA.LPT_AT                                                  AS LPT_AT                                            
					,AA.STRCT_CODE                                              AS STRCT_CODE                                        
					,AA.IX_SE                                                   AS IX_SE                                             
					,AA.APPLC_SCOPE_SE                                          AS APPLC_SCOPE_SE                                    
					,AA.MESURE_UNIT                                             AS MESURE_UNIT                                       
					,AA.IX_ATRB                                                 AS IX_ATRB                                           
					,AA.Q_GOALVAL                                               AS Q_GOALVAL                                         
					,AA.Q_EVL_WGHTVAL                                           AS Q_EVL_WGHTVAL                                     
					,AA.Q_GOAL_ASIGN_AT                                         AS Q_GOAL_ASIGN_AT                                 
					,AA.D_EVL_WGHTVAL                                           AS D_EVL_WGHTVAL                                     
					,AA.D_GOAL_ASIGN_AT                                         AS D_GOAL_ASIGN_AT                                 
					,AA.MESURE_CYCLE                                            AS MESURE_CYCLE
					FROM (
				            SELECT 
				                  SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'001') AS V_IX_CODE
				                 ,SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'002') AS S_IX_CODE
				                 ,SFACH_GET_UPIXCD(A.EVL_YEAR,A.ODR_SE,A.IX_CODE,'003') AS C_IX_CODE             
								 ,'[ ' || A.IX_CODE || ' ] ' || B.IX_NM AS IX_CDNM			
								 ,A.EVL_YEAR        AS EVL_YEAR      
								 ,A.ODR_SE          AS ODR_SE        
								 ,A.VIEWPOINT_SE    AS VIEWPOINT_SE  
								 ,A.STRCT_LEVEL     AS STRCT_LEVEL   
							 	 ,A.IX_CODE         AS IX_CODE       
								 ,B.IX_NM           AS IX_NM    
								 ,A.ORGNZT_CODE     AS ORGNZT_CODE
								 ,B.IX_CHARCT       AS IX_CHARCT   
								 ,A.WGHTVAL         AS WGHTVAL       
								 ,A.GOALVAL         AS GOALVAL       
								 ,A.REFER_VAL       AS REFER_VAL     
								 ,A.LPT_AT          AS LPT_AT        
								 ,A.STRCT_CODE      AS STRCT_CODE    
								 ,B.IX_SE           AS IX_SE         
								 ,B.APPLC_SCOPE_SE  AS APPLC_SCOPE_SE
								 ,B.MESURE_UNIT     AS MESURE_UNIT 
								 ,B.IX_ATRB         AS IX_ATRB
				                 ,DECODE(B.IX_CHARCT,'000',C.GOALVAL,'001',100,'') 						AS Q_GOALVAL
				                 ,DECODE(B.IX_CHARCT,'000',C.EVL_WGHTVAL,'001',D.EVL_WGHTVAL) 			AS Q_EVL_WGHTVAL
				                 ,DECODE(B.IX_CHARCT,'000',C.GOAL_ASIGN_AT,'001',D.GOAL_ASIGN_AT) 	AS Q_GOAL_ASIGN_AT
				                 ,D.EVL_WGHTVAL		AS D_EVL_WGHTVAL
				                 ,D.GOAL_ASIGN_AT   AS D_GOAL_ASIGN_AT
				                 ,B.MESURE_CYCLE    AS MESURE_CYCLE
							FROM TBACH_WGHTVAL A
							    ,TBACH_KPI B               
							    ,TBACH_QYEVAL_RESULT C
							    ,TBACH_QLEVAL_RESULT D 
						   WHERE 1=1
							 AND A.EVL_YEAR = B.EVL_YEAR
							 AND A.ODR_SE = B.ODR_SE
							 AND A.IX_CODE = B.IX_CODE
				      		 AND A.EVL_YEAR = C.EVL_YEAR(+)
				      		 AND A.ODR_SE = C.ODR_SE(+) 
				             AND A.IX_CODE = C.IX_CODE(+)
				             AND A.ORGNZT_CODE = C.ORGNZT_CODE(+)
				      		 AND A.EVL_YEAR = D.EVL_YEAR(+)
				      		 AND A.ODR_SE = D.ODR_SE(+) 
				             AND A.IX_CODE = D.IX_CODE(+)
				             AND D.SEQ(+) = 0
				             AND A.ORGNZT_CODE = D.ORGNZT_CODE(+)                             
							 AND A.STRCT_LEVEL >= 5
							 AND A.EVL_YEAR = #EVL_YEAR#
							 AND A.ODR_SE = #ODR_SE#
	]]>
		                     <isNotEmpty property="ORGNZT_CODE">
				             AND A.ORGNZT_CODE = #ORGNZT_CODE#
				             </isNotEmpty>
		                     <isNotEmpty property="APPLC_SCOPE_SE">				             	
				             	AND B.APPLC_SCOPE_SE = #APPLC_SCOPE_SE#
				             </isNotEmpty>			             
				             ) AA
		           ORDER BY AA.V_IX_CODE
		                   ,AA.S_IX_CODE
		                   ,AA.C_IX_CODE
		                   ,AA.IX_CODE     	     
    </select>	
    
    <!-- 지표가중치 수정(계량지표) -->
    <update id="ACH030101DAO.mainQyevalU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_RESULT
		USING DUAL ON (  
		                  EVL_YEAR 	= #EVL_YEAR#
		              AND ODR_SE 	= #ODR_SE#
		              AND IX_CODE 	= #IX_CODE#
		              AND ORGNZT_CODE = #ORGNZT_CODE#
		              )
		WHEN MATCHED THEN
		    UPDATE SET 
		               GOALVAL       = #GOALVAL#
		              ,EVL_WGHTVAL 	 = #Q_EVL_WGHTVAL#
		              ,GOAL_ASIGN_AT = #Q_GOAL_ASIGN_AT#
		              ,UPDUSR_ID 	 = #S_USER_ID#
		              ,UPDT_DT 		 = SYSDATE
		WHEN NOT MATCHED THEN
		    INSERT (
		          EVL_YEAR
		        , ODR_SE
		        , IX_CODE
		        , ORGNZT_CODE        
		        , GOALVAL
		        , EVL_WGHTVAL
		        , LAST_ACMSLTVAL
		        , SM_ACMSLTVAL
		        , LAST_RESULT_SCORE
		        , GOAL_ASIGN_AT
		        , REGISTER_ID
		        , REGIST_DT
		        , UPDUSR_ID
		        , UPDT_DT	
		        )
		    VALUES	(
		          #EVL_YEAR#
		        , #ODR_SE#
		        , #IX_CODE#
		        , #ORGNZT_CODE#
		        , #GOALVAL#
		        , #Q_EVL_WGHTVAL#
		        , NULL
		        , NULL
		        , NULL
		        , #Q_GOAL_ASIGN_AT#
		        , #S_USER_ID#
		        , SYSDATE
		        , #S_USER_ID#
		        , SYSDATE
		    )
    </update>
    
    <!-- 지표가중치 수정(비계량지표) -->
    <update id="ACH030101DAO.mainQlevalU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QLEVAL_RESULT
		USING DUAL ON (  
		                  EVL_YEAR 	= #EVL_YEAR#
		              AND ODR_SE 	= #ODR_SE#
		              AND IX_CODE 	= #IX_CODE#
		              AND ORGNZT_CODE = #ORGNZT_CODE#
		              AND SEQ       = 0
		              )
		WHEN MATCHED THEN
		    UPDATE SET 
		               EVL_WGHTVAL 	 = #Q_EVL_WGHTVAL#
		              ,GOAL_ASIGN_AT = #Q_GOAL_ASIGN_AT#
		              ,UPDUSR_ID 	 = #S_USER_ID#
		              ,UPDT_DT 		 = SYSDATE
		WHEN NOT MATCHED THEN
		    INSERT (
		          EVL_YEAR
		        , ODR_SE
		        , IX_CODE
		        , ORGNZT_CODE  
		        , SEQ      
		        , VIEWPOINT_SE
		        , IX_CODE_S
		        , EVL_WGHTVAL
		        
		        , EVL_SCORE
		        , EVL_RANK
		        , RESULT_SCORE
		        , GOAL_ASIGN_AT
		        , REGISTER_ID
		        , REGIST_DT
		        , UPDUSR_ID
		        , UPDT_DT	
		        )
		    VALUES	(
		          #EVL_YEAR#
		        , #ODR_SE#
		        , #IX_CODE#
		        , #ORGNZT_CODE#
		        , 0
		        , #V_IX_CODE#
		        , #S_IX_CODE#
		        , #Q_EVL_WGHTVAL#
		        , 0
		        , 0
		        , 0
		        , #Q_GOAL_ASIGN_AT#
		        , #S_USER_ID#
		        , SYSDATE
		        , #S_USER_ID#
		        , SYSDATE
		    )	   
    </update>
    
    <!-- 지표/조직별 배정목표치 정보 일괄 수정/신규(계량지표) -->
    <update id="ACH030101DAO.QyevalGoalU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QYEVAL_DSTB_GOAL A
		USING ( WITH V_TEMP AS (
		            SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, #ORGNZT_CODE# AS ORGNZT_CODE, #GOALVAL# AS GOALVAL, A.MESURE_CYCLE
		            FROM TBACH_KPI A
		            WHERE 1=1
		            AND A.EVL_YEAR = #EVL_YEAR#
		            AND A.ODR_SE = #ODR_SE#
		            AND A.IX_CODE = #IX_CODE#
		        )
		        SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, A.ORGNZT_CODE, A.EVL_YEAR AS GOAL_YY, B.CODE AS GOAL_MT, A.GOALVAL
		        FROM V_TEMP A
		        LEFT OUTER JOIN
		                        ( SELECT '003' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024'
		                          UNION
		                          SELECT '004' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,3) = 0
		                          UNION
		                          SELECT '005' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,6) = 0
		                          UNION
		                          SELECT '006' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,12) = 0
		                        ) B
		                ON A.MESURE_CYCLE = B.MESURE_CYCLE
		      ) B
		   ON (     A.EVL_YEAR	  = B.EVL_YEAR
		        AND A.ODR_SE	  = B.ODR_SE
		        AND A.IX_CODE     = B.IX_CODE
		        AND A.ORGNZT_CODE = B.ORGNZT_CODE
		        AND A.GOAL_YY     = B.GOAL_YY
		        AND A.GOAL_MT     = B.GOAL_MT
		      )
		WHEN MATCHED THEN
		    UPDATE SET 
		               A.GOALVAL 	 = B.GOALVAL
		              ,A.UPDUSR_ID	 = #S_USER_ID#
		              ,A.UPDT_DT 	 = SYSDATE
		WHEN NOT MATCHED THEN
		    INSERT (
		          A.EVL_YEAR
		        , A.ODR_SE
		        , A.IX_CODE
		        , A.ORGNZT_CODE
		        , A.GOAL_YY
		        , A.GOAL_MT
		        , A.GOALVAL
		        , A.REGISTER_ID
		        , A.REGIST_DT
		        , A.UPDUSR_ID
		        , A.UPDT_DT
		        )
		    VALUES	(
		          B.EVL_YEAR
		        , B.ODR_SE
		        , B.IX_CODE
		        , B.ORGNZT_CODE
		        , B.GOAL_YY
		        , B.GOAL_MT
		        , B.GOALVAL
		        , #S_USER_ID#
		        , SYSDATE
		        , #S_USER_ID#
		        , SYSDATE
		    )
    </update>
    
    <!-- 지표/조직별 배정목표치 정보 일괄 수정/신규(비계량지표) -->
    <update id="ACH030101DAO.QlevalGoalU" parameterClass="java.util.HashMap" >
		MERGE INTO TBACH_QLEVAL_RESULT A
		USING ( WITH V_TEMP AS (
		            SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, #ORGNZT_CODE# AS ORGNZT_CODE, #V_IX_CODE# AS V_IX_CODE, #S_IX_CODE# AS S_IX_CODE, #Q_EVL_WGHTVAL# AS Q_EVL_WGHTVAL, A.MESURE_CYCLE
		            FROM TBACH_KPI A
		            WHERE 1=1
		            AND A.EVL_YEAR = #EVL_YEAR#
		            AND A.ODR_SE = #ODR_SE#
		            AND A.IX_CODE = #IX_CODE#
		        )
		        SELECT A.EVL_YEAR, A.ODR_SE, A.IX_CODE, A.ORGNZT_CODE, B.CODE AS SEQ, A.S_IX_CODE, A.V_IX_CODE, A.Q_EVL_WGHTVAL
		        FROM V_TEMP A
		        LEFT OUTER JOIN
		                        ( SELECT '003' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024'
		                          UNION
		                          SELECT '004' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,3) = 0
		                          UNION
		                          SELECT '005' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,6) = 0
		                          UNION
		                          SELECT '006' AS MESURE_CYCLE, CODE FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'ACH024' AND MOD(CODE,12) = 0
		                        ) B
		                ON A.MESURE_CYCLE = B.MESURE_CYCLE
		      ) B
		   ON (     A.EVL_YEAR     = B.EVL_YEAR 
		        AND A.ODR_SE       = B.ODR_SE
		        AND A.VIEWPOINT_SE = B.V_IX_CODE
		        AND A.IX_CODE_S    = B.S_IX_CODE
		        AND A.IX_CODE      = B.IX_CODE   
		        AND A.ORGNZT_CODE  = B.ORGNZT_CODE
		        AND A.SEQ          = B.SEQ
		      )
		WHEN MATCHED THEN
		    UPDATE SET 
		               A.EVL_WGHTVAL = B.Q_EVL_WGHTVAL
		              ,A.UPDUSR_ID	 = #S_USER_ID#
		              ,A.UPDT_DT 	 = SYSDATE
		WHEN NOT MATCHED THEN
		    INSERT (
				  EVL_YEAR    
				, ODR_SE      
				, IX_CODE
				, ORGNZT_CODE
				, SEQ
				, IX_CODE_S
				, VIEWPOINT_SE
				, EVL_WGHTVAL
				, REGISTER_ID
				, REGIST_DT
				, UPDUSR_ID
				, UPDT_DT
		        )
		    VALUES	(
		          B.EVL_YEAR
		        , B.ODR_SE
		        , B.IX_CODE
		        , B.ORGNZT_CODE
		        , B.SEQ
		        , B.S_IX_CODE
		        , B.V_IX_CODE
		        , B.Q_EVL_WGHTVAL
		        , #S_USER_ID#
		        , SYSDATE
		        , #S_USER_ID#
		        , SYSDATE
		    )
    </update>

</sqlMap>