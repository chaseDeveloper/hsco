<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="HRM060106_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<!-- 평정대상자 조회 -->
	<select id="HRM060106DAO.selectWorkEvlTrgter" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
		<![CDATA[/*HRM060106DAO.selectWorkEvlTrgter(평정대상자 조회)*/]]>
		<![CDATA[
		WITH DSCPL_DSPS_TM AS (
		    /*근평기간내징계처분*/
		    SELECT s2.EVL_YEAR
		          ,s2.HT_SE
		          ,s1.EMPNO
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '191'           THEN 1 ELSE 0 END)     AS DSCPL1   /*불문경고*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE IN ('130', '180') THEN 1 ELSE 0 END)     AS DSCPL2   /*경고,훈계*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '160'           THEN 1 ELSE 0 END)     AS DSCPL3   /*주의*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '210'           THEN ROUND(NVL(MONTHS_BETWEEN(TO_DATE(s1.DSPS_ENDDE, 'YYYYMMDD'), TO_DATE(s1.DSPS_BGNDE, 'YYYYMMDD')),0),0) END)     AS DSCPL4   /*직위해제*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '170'           THEN 1 ELSE 0 END)     AS DSCPL5   /*견책*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '150'           THEN 1 ELSE 0 END)     AS DSCPL6   /*감봉*/
		          ,SUM(CASE WHEN s1.DCSN_DSCPL_SE = '140'           THEN 1 ELSE 0 END)     AS DSCPL7   /*정직*/
		    FROM   TBHRM_DSCPL_DSPS s1
		           INNER JOIN TBHRM_WORK_EVL_PD s2
		                ON s1.DSCPL_DCSN_DE BETWEEN s2.HT_BGNDE AND s2.HT_ENDDE
		    WHERE  1=1
		    GROUP BY s2.EVL_YEAR, s2.HT_SE, s1.EMPNO
		), DTY_EXC_ATITD_DMRTR_TM AS (
		    /*직무수행태도감점*/
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,LATEN_SRVIC_CO           /*지각복무_건수*/
		          ,WTRMS_ABSENC_CO          /*무단결근_건수*/
		          ,WTRMS_LRLY_CO            /*무단조회_건수*/
		          ,WTRMS_GNOT_CO            /*무단외출_건수*/
		          ,TWDCVLN_KD_IMPRTY_CO     /*대민불친절_건수*/
		    FROM   TBHRM_DTY_EXC_ATITD_DMRTR
		), DSCPL_DSPS_DATA_TM AS (
		    /*징계처분및직무수행태도감점자료*/
		    SELECT t1.EVL_YEAR
		          ,t1.HT_SE
		          ,t1.EMPNO
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '001'), '1', NVL(t2.LATEN_SRVIC_CO,      0), DECODE(NVL(t2.LATEN_SRVIC_CO,      0),0,0,1)) * 0.1         AS DMRTR_001  /*지각*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_ABSENC_CO,     0), DECODE(NVL(t2.WTRMS_ABSENC_CO,     0),0,0,1)) * 0.2         AS DMRTR_002  /*무단결근*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_LRLY_CO,       0), DECODE(NVL(t2.WTRMS_LRLY_CO,       0),0,0,1)) * 0.1         AS DMRTR_003  /*무단조회*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.WTRMS_GNOT_CO,       0), DECODE(NVL(t2.WTRMS_GNOT_CO,       0),0,0,1)) * 0.1         AS DMRTR_004  /*무단외출 장시간무단이석*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t2.TWDCVLN_KD_IMPRTY_CO,0), DECODE(NVL(t2.TWDCVLN_KD_IMPRTY_CO,0),0,0,1)) * 0.5         AS DMRTR_005  /*대민불친절*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL1,              0), DECODE(NVL(t3.DSCPL1,              0),0,0,1)) * 1           AS DMRTR_006  /*불문경고*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL2,              0), DECODE(NVL(t3.DSCPL2,              0),0,0,1)) * 0.5         AS DMRTR_007  /*훈계_경고포함*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL3,              0), DECODE(NVL(t3.DSCPL3,              0),0,0,1)) * 0.3         AS DMRTR_008  /*주의*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL4,              0), DECODE(NVL(t3.DSCPL4,              0),0,0,1)) * 2           AS DMRTR_009  /*직위해제*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL5,              0), DECODE(NVL(t3.DSCPL5,              0),0,0,1)) * 2           AS DMRTR_010  /*견책*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL6,              0), DECODE(NVL(t3.DSCPL6,              0),0,0,1)) * 3           AS DMRTR_011  /*감봉*/
		          ,DECODE(SFHRM_DMRTR_STDR_RM_AT(t1.EVL_YEAR, '002'), '1', NVL(t3.DSCPL7,              0), DECODE(NVL(t3.DSCPL7,              0),0,0,1)) * 4           AS DMRTR_012  /*정직*/
		    FROM   TBHRM_WORK_EVL_TRGTER t1
		           LEFT OUTER JOIN DTY_EXC_ATITD_DMRTR_TM t2
		                ON t1.EVL_YEAR = t2.EVL_YEAR
		               AND t1.HT_SE = t2.HT_SE
		               AND t1.EMPNO = t2.EMPNO
		           LEFT OUTER JOIN DSCPL_DSPS_TM t3
		                ON t1.EVL_YEAR = t3.EVL_YEAR
		               AND t1.HT_SE = t3.HT_SE
		               AND t1.EMPNO = t3.EMPNO
		    WHERE  1=1
		    ORDER BY t1.OFCPS_SE
		           , t1.JSSFC_SE
		           , t1.CLSF_SE
		), TOT_DMRTR_T AS (
		    /*직무수행점수*/
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,(CASE WHEN NVL(TOT_DMRTR,0) > 10 THEN 10 ELSE NVL(TOT_DMRTR,0) END)      AS TOT_DMRTR
		    FROM   (
		            SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EMPNO
		                  ,10 - SUM(NVL(DMRTR_001,0) + NVL(DMRTR_002,0) + NVL(DMRTR_003,0) + NVL(DMRTR_004,0) + NVL(DMRTR_005,0) + NVL(DMRTR_006,0) + NVL(DMRTR_007,0) + NVL(DMRTR_008,0) + NVL(DMRTR_009,0) + NVL(DMRTR_010,0) + NVL(DMRTR_011,0) + NVL(DMRTR_012,0))    AS TOT_DMRTR
		            FROM   DSCPL_DSPS_DATA_TM
		            GROUP BY EVL_YEAR
		                    ,HT_SE
		                    ,EMPNO
		           )
		    WHERE  1=1
		), EVL_RANK_T AS (
		    /*평가순위*/
		]]>
		<isEqual property="YEAR_SE" compareValue="01">
		    SELECT s1.EVL_YEAR
		          ,s1.HT_SE
		          ,s2.EVL_STEP_SE
		          ,s2.JSSFC_SE
		          ,s2.CLSF_SE
		          ,s1.EMPNO
		          ,SFSAL_GETEMPNO_01(s1.EMPNO)                                              AS EMPNM
		          ,NVL(s1.EVL_SCORE,0)                                                      AS EVL_SCORE
		          ,NVL(s3.TOT_DMRTR,0)                                                      AS TOT_DMRTR
		          ,NVL(s2.ADIT_SCORE,0)                                                     AS ADIT_SCORE
		          ,(NVL(s1.EVL_SCORE,0) + NVL(s3.TOT_DMRTR,0) + NVL(s2.ADIT_SCORE,0))       AS TOT_EVL_SCORE
		          ,RANK()   OVER (PARTITION BY s1.EVL_YEAR, s1.HT_SE, s2.JSSFC_SE, s2.CLSF_SE ORDER BY (NVL(s1.EVL_SCORE,0) + NVL(s3.TOT_DMRTR,0) + NVL(s2.ADIT_SCORE,0)) DESC)    AS SCORE_RNK
		          ,COUNT(1) OVER (PARTITION BY s1.EVL_YEAR, s1.HT_SE, s2.JSSFC_SE, s2.CLSF_SE )                              AS SCORE_COUNT
		    FROM   (SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EMPNO
		                  ,SUM(EVL_SCORE) AS EVL_SCORE
		            FROM   TBHRM_WORK_SCRE_EVL_MANAGE
		            WHERE  EVL_MAN_SE IN ('01', '02', '03')
		            GROUP BY EVL_YEAR, HT_SE, EMPNO
		           ) s1
		           INNER JOIN TBHRM_WORK_EVL_TRGTER s2
		                ON s1.EVL_YEAR = s2.EVL_YEAR
		               AND s1.HT_SE = s2.HT_SE
		               AND s1.EMPNO = s2.EMPNO
		           LEFT OUTER JOIN TOT_DMRTR_T s3
		                ON s1.EVL_YEAR = s3.EVL_YEAR
		               AND s1.HT_SE = s3.HT_SE
		               AND s1.EMPNO = s3.EMPNO
		    WHERE  1=1
		    ORDER BY s1.EVL_YEAR
		            ,s1.HT_SE
		            ,s2.EVL_STEP_SE
		            ,s2.JSSFC_SE
		            ,s2.CLSF_SE
		            ,SCORE_RNK
		), GRAD_NMPR_T AS (
		    SELECT q1.EVL_YEAR
		          ,q1.HT_SE
		          ,q1.EVL_STEP_SE
		          ,q1.JSSFC_SE
		          ,q1.CLSF_SE
		          ,q1.TOT_NMPR
		          ,q1.GRAD_NM
		          ,q1.GRAD_NMPR
		          ,q2.EMPNO
		          ,q2.EMPNM
		          ,q2.EVL_SCORE
		          ,q2.TOT_DMRTR
		          ,q2.ADIT_SCORE
		          ,q2.TOT_EVL_SCORE
		          ,q2.SCORE_RNK
		          ,q2.SCORE_COUNT
		    FROM   (
		            SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EVL_STEP_SE
		                  ,JSSFC_SE
		                  ,CLSF_SE
		                  ,TOT_NMPR
		                  ,GRAD_SE
		                  ,DECODE(GRAD_SE, '1', '수', '2', '우', '3', '양', '4', '가')         AS GRAD_NM
		                  ,SFHRM_GET_EVL_NMPR(EVL_YEAR, HT_SE, TOT_NMPR, GRAD_SE)           AS GRAD_NMPR
		                  ,NVL(SUM(SFHRM_GET_EVL_NMPR(EVL_YEAR, HT_SE, TOT_NMPR, GRAD_SE-1)) OVER (PARTITION BY EVL_YEAR, HT_SE, EVL_STEP_SE, JSSFC_SE, CLSF_SE ORDER BY GRAD_SE),0)+1  AS GRAD_NMPR_ACMTL1
		                  ,NVL(SUM(SFHRM_GET_EVL_NMPR(EVL_YEAR, HT_SE, TOT_NMPR, GRAD_SE  )) OVER (PARTITION BY EVL_YEAR, HT_SE, EVL_STEP_SE, JSSFC_SE, CLSF_SE ORDER BY GRAD_SE),0)    AS GRAD_NMPR_ACMTL2
		            FROM   (
		                    SELECT s1.EVL_YEAR
		                          ,s1.HT_SE
		                          ,s1.EVL_STEP_SE
		                          ,s1.JSSFC_SE
		                          ,s1.CLSF_SE
		                          ,s1.SCORE_COUNT       AS TOT_NMPR
		                          ,s2.LVL               AS GRAD_SE
		                    FROM   (
		                            SELECT EVL_YEAR
		                                  ,HT_SE
		                                  ,EVL_STEP_SE
		                                  ,JSSFC_SE
		                                  ,CLSF_SE
		                                  ,NVL(MAX(SCORE_COUNT),0)     AS SCORE_COUNT
		                            FROM   EVL_RANK_T
		                            GROUP BY EVL_YEAR
		                                    ,HT_SE
		                                    ,EVL_STEP_SE
		                                    ,JSSFC_SE
		                                    ,CLSF_SE
		                           ) s1
		                           LEFT OUTER JOIN (
		                                            SELECT LEVEL    AS LVL
		                                            FROM   DUAL
		                                            CONNECT BY LEVEL <![CDATA[<=]]> 4
		                                           ) s2
		                                           ON 1=1
		                    WHERE  1=1
		                   )
		            WHERE  1=1
		           ) q1
		           LEFT OUTER JOIN EVL_RANK_T q2
		                ON q1.EVL_YEAR      = q2.EVL_YEAR
		               AND q1.HT_SE         = q2.HT_SE
		               AND q1.EVL_STEP_SE   = q2.EVL_STEP_SE
		               AND q1.JSSFC_SE      = q2.JSSFC_SE
		               AND q1.CLSF_SE       = q2.CLSF_SE
		               AND q2.SCORE_RNK BETWEEN q1.GRAD_NMPR_ACMTL1 AND GRAD_NMPR_ACMTL2
		    WHERE  1=1
		    ORDER BY q1.EVL_YEAR
		            ,q1.HT_SE
		            ,q1.EVL_STEP_SE
		            ,q1.JSSFC_SE
		            ,q1.CLSF_SE
		            ,q1.GRAD_SE
		            ,q2.SCORE_RNK
		            ,q2.EMPNO
		</isEqual>
		<isEqual property="YEAR_SE" compareValue="02">
		    SELECT s1.EVL_YEAR
		          ,s1.HT_SE
		          ,s2.EVL_STEP_SE
		          ,s2.JSSFC_SE
		          ,s2.CLSF_SE
		          ,s2.GROUP_SE
		          ,s1.EMPNO
		          ,SFSAL_GETEMPNO_01(s1.EMPNO)                                              AS EMPNM
		          ,NVL(s1.EVL_SCORE,0)                                                      AS EVL_SCORE
		          ,NVL(s3.TOT_DMRTR,0)                                                      AS TOT_DMRTR
		          ,NVL(s2.ADIT_SCORE,0)                                                     AS ADIT_SCORE
		          ,(NVL(s1.EVL_SCORE,0) + NVL(s3.TOT_DMRTR,0) + NVL(s2.ADIT_SCORE,0))       AS TOT_EVL_SCORE
		          ,RANK()   OVER (PARTITION BY s1.EVL_YEAR, s1.HT_SE, s2.GROUP_SE ORDER BY (NVL(s1.EVL_SCORE,0) + NVL(s3.TOT_DMRTR,0) + NVL(s2.ADIT_SCORE,0)) DESC)    AS SCORE_RNK
		          ,COUNT(1) OVER (PARTITION BY s1.EVL_YEAR, s1.HT_SE, s2.GROUP_SE)                              AS SCORE_COUNT
		    FROM   (SELECT EVL_YEAR
		                  ,HT_SE
		                  ,EMPNO
		                  ,SUM(EVL_SCORE) AS EVL_SCORE
		            FROM   TBHRM_WORK_SCRE_EVL_MANAGE
		            WHERE  EVL_MAN_SE IN ('01', '02', '03')
		            GROUP BY EVL_YEAR, HT_SE, EMPNO
		           ) s1
		           INNER JOIN (
		                       SELECT EVL_YEAR
		                            , HT_SE
		                            , EMPNO
		                            , EVL_STEP_SE
		                            , CASE WHEN JSSFC_SE = '04' THEN '02'
		                                   ELSE JSSFC_SE
		                              END AS JSSFC_SE
		                            , CASE WHEN CLSF_SE = '401' THEN '201'
		                                   WHEN CLSF_SE = '402' THEN '202'
		                                   ELSE CLSF_SE
		                              END CLSF_SE
		                            , ADIT_SCORE
		                            , CASE WHEN CLSF_SE IN('201','202','401','402')
		                                        THEN CASE WHEN JSSFC_SE = '04' AND (CLSF_SE = '201' OR CLSF_SE = '401') THEN '02201' /*가급은 2급에 포함*/
		                                                  WHEN JSSFC_SE = '04' AND (CLSF_SE = '202' OR CLSF_SE = '402') THEN '02202' /*나급은 3급에 포함*/
		                                                  ELSE JSSFC_SE || CLSF_SE
		                                             END
		                                   ELSE CASE WHEN JSSFC_SE = '04' THEN '02999' /*계약직은 일반직에 포함*/
		                                             ELSE JSSFC_SE || '999'
		                                        END
		                              END AS GROUP_SE
		                         FROM TBHRM_WORK_EVL_TRGTER
		                      ) s2
		                ON s1.EVL_YEAR = s2.EVL_YEAR
		               AND s1.HT_SE = s2.HT_SE
		               AND s1.EMPNO = s2.EMPNO
		           LEFT OUTER JOIN TOT_DMRTR_T s3
		                ON s1.EVL_YEAR = s3.EVL_YEAR
		               AND s1.HT_SE = s3.HT_SE
		               AND s1.EMPNO = s3.EMPNO
		    WHERE  1=1
		    ORDER BY s1.EVL_YEAR
		            ,s1.HT_SE
		            ,s2.GROUP_SE
		            ,SCORE_RNK
		</isEqual>
		), CLSF_GNFD_DTLS_TM AS ( /*현직급 임용일*/
		    SELECT EMPNO
		          ,CLSF_SE
		          ,MIN(GNFD_DE) AS CLSF_GNFD_DE
		    FROM   TBHRM_GNFD_DTLS 
		    GROUP BY EMPNO, CLSF_SE
		), WORK_EVL_SCORE_TM AS (
		    SELECT EVL_YEAR
		          ,HT_SE
		          ,EMPNO
		          ,SUM(DECODE(EVL_MAN_SE, '01', NVL(EVL_SCORE,0), 0))    AS EVL_1_SCORE
		          ,SUM(DECODE(EVL_MAN_SE, '02', NVL(EVL_SCORE,0), 0))    AS EVL_2_SCORE
		          ,SUM(DECODE(EVL_MAN_SE, '03', NVL(EVL_SCORE,0), 0))    AS EVL_3_SCORE
		    FROM   TBHRM_WORK_SCRE_EVL_MANAGE
		    WHERE  1=1
		    GROUP BY EVL_YEAR, HT_SE, EMPNO
		)
		<isEqual property="YEAR_SE" compareValue="01">
		SELECT r1.EVL_YEAR
		      ,r1.HT_SE
		      ,r1.EMPNO
		      ,r1.CLSF_TY
		      ,r1.JSSFC_SE
		      ,r1.CLSF_SE
		      ,COUNT(1) OVER(PARTITION BY r1.EVL_STEP_SE, r1.JSSFC_SE, r1.CLSF_SE) AS CLSF_CNT
		      ,NVL(r3.NOW_CLSF_EMPLMN_DE, r2.CLSF_GNFD_DE)                         AS CLSF_GNFD_DE
		      ,r1.EMPNM
		      ,r1.JSSFC_NM
		      ,r1.CLSF_NM
		      ,r1.OFCPS_NM
		      ,r1.JBLN_NM
		      ,r1.DEPT_CODE
		      ,r1.DEPT_NM
		      ,r1.EVL_MAN_1_EMPNO
		      ,r1.EVL_MAN_2_EMPNO
		      ,r1.CNFRMR_EMPNO
		      ,r1.EVL_STEP_SE
		      ,r1.EVL_1_SCORE
		      ,r1.EVL_2_SCORE
		      ,r1.EVL_3_SCORE
		      ,r1.EVL_SCORE
		      ,r1.TOT_DMRTR
		      ,r1.ADIT_SCORE
		      ,r1.TOT_EVL_SCORE
		      ,r1.SCORE_RNK
		      ,r1.GRAD_NM
		FROM   (
		        SELECT t1.EVL_YEAR
		              ,t1.HT_SE
		              ,t1.EMPNO
		              ,t1.JSSFC_SE
		              ,t1.CLSF_SE
		              ,SFSAL_GETEMPNO_01(t1.EMPNO)                        AS EMPNM
		              ,SFCOM_CODE_NM('HRM001', t1.JSSFC_SE, 'CODE_NM')    AS JSSFC_NM
		              ,SFCOM_CODE_NM('HRM002', t1.CLSF_SE,  'CODE_NM')    AS CLSF_NM
		              ,SFCOM_CODE_NM('HRM003', t1.OFCPS_SE, 'CODE_NM')    AS OFCPS_NM
		              ,SFCOM_CODE_NM('HRM004', t1.JBLN_SE,  'CODE_NM')    AS JBLN_NM
		              ,t1.DEPT_CODE
		              ,SFSAL_GETDEPTNM_01(t1.DEPT_CODE)                   AS DEPT_NM
		              ,(
		                CASE WHEN t1.CLSF_SE IN ('201', '202', '401', '402')                         THEN '일반직3급이상'
		                     WHEN t1.CLSF_SE IN ('203', '204', '205', '301', '403', '404', '405')    THEN '일반직4급이하'
		                     WHEN t1.CLSF_SE IN ('501', '601', '901')                                THEN '시설관리원등'
		                END
		               )    AS CLSF_TY
		              ,t1.EVL_MAN_1_EMPNO
		              ,t1.EVL_MAN_2_EMPNO
		              ,t1.CNFRMR_EMPNO
		              ,t1.EVL_STEP_SE
		              ,t3.EVL_1_SCORE
		              ,t3.EVL_2_SCORE
		              ,t3.EVL_3_SCORE
		              ,t4.EVL_SCORE
		              ,t4.TOT_DMRTR
		              ,t4.ADIT_SCORE
		              ,t4.TOT_EVL_SCORE
		              ,t4.SCORE_RNK
		              ,t4.GRAD_NM
		        FROM   TBHRM_WORK_EVL_TRGTER t1
		               LEFT OUTER JOIN TBHRM_WORK_EVL_PD t2
		                    ON t1.EVL_YEAR = t2.EVL_YEAR
		                   AND t1.HT_SE = t2.HT_SE
		               LEFT OUTER JOIN WORK_EVL_SCORE_TM t3
		                    ON t1.EVL_YEAR = t3.EVL_YEAR
		                   AND t1.HT_SE = t3.HT_SE
		                   AND t1.EMPNO = t3.EMPNO
		               LEFT OUTER JOIN GRAD_NMPR_T t4
		                    ON t1.EVL_YEAR = t4.EVL_YEAR
		                   AND t1.HT_SE = t4.HT_SE
		                   AND t1.EMPNO = t4.EMPNO
		        WHERE  t1.EVL_YEAR = #EVL_YEAR#
		        AND    t1.HT_SE = #HT_SE#
			<isNotEmpty property="JSSFC_SE">
		        AND    t1.JSSFC_SE = #JSSFC_SE#
			</isNotEmpty>
			<isNotEmpty property="CLSF_SE">
		        AND    t1.CLSF_SE = #CLSF_SE#
			</isNotEmpty>
			<isNotEmpty property="EMPNM">
		        AND    SFSAL_GETEMPNO_01(t1.EMPNO) LIKE '%' || #EMPNM# || '%'
			</isNotEmpty>
			<isNotEmpty property="EMPNO">
		        AND    t1.EMPNO = #EMPNO#
			</isNotEmpty>
		       ) r1
		       LEFT OUTER JOIN CLSF_GNFD_DTLS_TM r2
		            ON r1.EMPNO = r2.EMPNO
		           AND r1.CLSF_SE = r2.CLSF_SE
		       LEFT OUTER JOIN TBHRM_HR_MASTR r3
		            ON r1.EMPNO = r3.EMPNO
		WHERE  1=1
		ORDER BY r1.EVL_STEP_SE DESC, r1.JSSFC_SE ASC, r1.CLSF_SE ASC, r1.SCORE_RNK, r1.EMPNO
		</isEqual>
		<isEqual property="YEAR_SE" compareValue="02">
		SELECT r1.EVL_YEAR
		      ,r1.HT_SE
		      ,r1.EMPNO
		      ,r1.CLSF_TY
		      ,r1.JSSFC_SE
		      ,r1.CLSF_SE
		      ,COUNT(1) OVER(PARTITION BY r1.GROUP_SE)        AS CLSF_CNT
		      ,NVL(r3.NOW_CLSF_EMPLMN_DE, r2.CLSF_GNFD_DE)    AS CLSF_GNFD_DE
		      ,r1.EMPNM
		      ,r1.JSSFC_NM
		      ,r1.CLSF_NM
		      ,r1.OFCPS_NM
		      ,r1.JBLN_NM
		      ,r1.DEPT_CODE
		      ,r1.DEPT_NM
		      ,r1.EVL_MAN_1_EMPNO
		      ,r1.EVL_MAN_2_EMPNO
		      ,r1.CNFRMR_EMPNO
		      ,r1.EVL_STEP_SE
		      ,r1.EVL_1_SCORE
		      ,r1.EVL_2_SCORE
		      ,r1.EVL_3_SCORE
		      ,r1.EVL_SCORE
		      ,r1.TOT_DMRTR
		      ,r1.ADIT_SCORE
		      ,r1.TOT_EVL_SCORE
		      ,r1.SCORE_RNK
		      ,CASE WHEN r1.TOT_EVL_SCORE >= 90 THEN '수'
		            WHEN r1.TOT_EVL_SCORE >= 80 THEN '우'
		            WHEN r1.TOT_EVL_SCORE >= 70 THEN '양'
		            ELSE '가'
		       END AS GRAD_NM
		FROM   (
		        SELECT t1.EVL_YEAR
		              ,t1.HT_SE
		              ,t1.EMPNO
		              ,t4.JSSFC_SE
		              ,t4.CLSF_SE
		              ,t4.GROUP_SE
		              ,SFSAL_GETEMPNO_01(t1.EMPNO)                        AS EMPNM
		              ,SFCOM_CODE_NM('HRM001', t4.JSSFC_SE, 'CODE_NM')    AS JSSFC_NM
		              ,SFCOM_CODE_NM('HRM002', t4.CLSF_SE,  'CODE_NM')    AS CLSF_NM
		              ,SFCOM_CODE_NM('HRM003', t1.OFCPS_SE, 'CODE_NM')    AS OFCPS_NM
		              ,SFCOM_CODE_NM('HRM004', t1.JBLN_SE,  'CODE_NM')    AS JBLN_NM
		              ,t1.DEPT_CODE
		              ,SFSAL_GETDEPTNM_01(t1.DEPT_CODE)                   AS DEPT_NM
		              ,(
		                CASE WHEN t1.CLSF_SE IN ('201', '202', '401', '402')                         THEN '일반직3급이상'
		                     WHEN t1.CLSF_SE IN ('203', '204', '205', '301', '403', '404', '405')    THEN '일반직4급이하'
		                     WHEN t1.CLSF_SE IN ('501', '601', '901')                                THEN '시설관리원등'
		                END
		               )    AS CLSF_TY
		              ,t1.EVL_MAN_1_EMPNO
		              ,t1.EVL_MAN_2_EMPNO
		              ,t1.CNFRMR_EMPNO
		              ,t1.EVL_STEP_SE
		              ,t3.EVL_1_SCORE
		              ,t3.EVL_2_SCORE
		              ,t3.EVL_3_SCORE
		              ,t4.EVL_SCORE
		              ,t4.TOT_DMRTR
		              ,t4.ADIT_SCORE
		              ,t4.TOT_EVL_SCORE
		              ,t4.SCORE_RNK
		              ,t4.SCORE_COUNT
		        FROM   TBHRM_WORK_EVL_TRGTER t1
		               LEFT OUTER JOIN TBHRM_WORK_EVL_PD t2
		                    ON t1.EVL_YEAR = t2.EVL_YEAR
		                   AND t1.HT_SE = t2.HT_SE
		               LEFT OUTER JOIN WORK_EVL_SCORE_TM t3
		                    ON t1.EVL_YEAR = t3.EVL_YEAR
		                   AND t1.HT_SE = t3.HT_SE
		                   AND t1.EMPNO = t3.EMPNO
		               LEFT OUTER JOIN EVL_RANK_T t4
		                    ON t1.EVL_YEAR = t4.EVL_YEAR
		                   AND t1.HT_SE = t4.HT_SE
		                   AND t1.EMPNO = t4.EMPNO
		        WHERE  t1.EVL_YEAR = #EVL_YEAR#
		        AND    t1.HT_SE = #HT_SE#
			<isNotEmpty property="JSSFC_SE">
		        AND    t4.JSSFC_SE = #JSSFC_SE#
			</isNotEmpty>
			<isNotEmpty property="CLSF_SE">
		        AND    t4.CLSF_SE = #CLSF_SE#
			</isNotEmpty>
			<isNotEmpty property="EMPNM">
		        AND    SFSAL_GETEMPNO_01(t1.EMPNO) LIKE '%' || #EMPNM# || '%'
			</isNotEmpty>
			<isNotEmpty property="EMPNO">
		        AND    t1.EMPNO = #EMPNO#
			</isNotEmpty>
		       ) r1
		       LEFT OUTER JOIN CLSF_GNFD_DTLS_TM r2
		            ON r1.EMPNO = r2.EMPNO
		           AND r1.CLSF_SE = r2.CLSF_SE
		       LEFT OUTER JOIN TBHRM_HR_MASTR r3
		            ON r1.EMPNO = r3.EMPNO
		WHERE  1=1
		ORDER BY r1.GROUP_SE ASC, r1.SCORE_RNK, r1.EMPNO
		</isEqual>
	</select>

	
	<!-- 직무수행능력에 관한 사항 조회 -->
	<select id="HRM060106DAO.selectWorkScreAcmslt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*HRM060106DAO.selectWorkScreAcmslt(직무수행능력에 관한 사항 조회)*/]]>
		WITH DEPT_GNFD_DTLS_TM AS ( /*현 보직일*/
		    SELECT EMPNO, DEPT_CODE, MIN(GNFD_DE) AS DEPT_GNFD_DE
		    FROM TBHRM_GNFD_DTLS 
		    GROUP BY EMPNO, DEPT_CODE
		)
		, CLSF_GNFD_DTLS_TM AS ( /*현직급 임용일*/
		    SELECT EMPNO, CLSF_SE, MIN(GNFD_DE) AS CLSF_GNFD_DE
		    FROM TBHRM_GNFD_DTLS 
		    GROUP BY EMPNO, CLSF_SE
		), DSCPL_DSPS_TM AS (
		    SELECT s1.EMPNO
		         , SUM(CASE WHEN s1.DCSN_DSCPL_SE IN ('130', '160', '180', '190', '191') THEN 1 ELSE 0 END)     AS DSCPL2   /*경고,훈계*/
		         , SUM(CASE WHEN s1.DCSN_DSCPL_SE = '210'           THEN 1 ELSE 0 END)     AS DSCPL4   /*직위해제*/
		         , SUM(CASE WHEN s1.DCSN_DSCPL_SE = '170'           THEN 1 ELSE 0 END)     AS DSCPL5   /*견책*/
		         , SUM(CASE WHEN s1.DCSN_DSCPL_SE = '150'           THEN 1 ELSE 0 END)     AS DSCPL6   /*감봉*/
		         , SUM(CASE WHEN s1.DCSN_DSCPL_SE = '140'           THEN 1 ELSE 0 END)     AS DSCPL7   /*정직*/
		         , SUM(CASE WHEN s1.DEMAND_DSCPL_SE = '001'         THEN 1 ELSE 0 END)     AS DSCPL8   /*경징계*/
		         , SUM(CASE WHEN s1.DEMAND_DSCPL_SE = '002'         THEN 1 ELSE 0 END)     AS DSCPL9   /*중징계*/
		    FROM   TBHRM_DSCPL_DSPS s1
		           INNER JOIN TBHRM_WORK_EVL_PD s2
		                ON s1.DSCPL_DCSN_DE BETWEEN s2.HT_BGNDE AND s2.HT_ENDDE
		               AND s2.EVL_YEAR = #EVL_YEAR#
		               AND s2.HT_SE = #HT_SE#
		    WHERE  1=1
		    GROUP BY s1.EMPNO
		), DTY_EXC_ATITD_DMRTR_TM AS (
		    SELECT T1.EMPNO
		          ,T1.LATEN_SRVIC_CO           /*지각복무_건수*/
		          ,T1.WTRMS_ABSENC_CO          /*무단결근_건수*/
		          ,T1.WTRMS_LRLY_CO            /*무단조회_건수*/
		          ,T1.WTRMS_GNOT_CO            /*무단외출_건수*/
		          ,T1.TWDCVLN_KD_IMPRTY_CO     /*대민불친절_건수*/
		    FROM   TBHRM_DTY_EXC_ATITD_DMRTR T1
		           LEFT OUTER JOIN TBHRM_HR_MASTR T2
		                ON T1.EMPNO = T2.EMPNO
		           LEFT OUTER JOIN TBHRM_DEPT T3
		                ON T2.DEPT_CODE = T3.DEPT_CODE
		           LEFT OUTER JOIN TBHRM_DTY_EXC_ATITD_CONFM T4
		                ON T1.EVL_YEAR  = T4.EVL_YEAR
		               AND T1.HT_SE     = T4.HT_SE
		               AND T2.DEPT_CODE = T4.DEPT_CODE
		    WHERE  T1.EVL_YEAR = #EVL_YEAR#
		    AND    T1.HT_SE    = #HT_SE#
		    AND    T4.CONFM_AT = '1'
		)
		SELECT t1.EMPNO
		     , t12.EMPNM
		     , t1.DEPT_CODE
		     , t4.DEPT_NM
		     , t1.OFCPS_SE
		     , t1.CLSF_SE
		     , t1.JSSFC_SE
             , SFCOM_CODE_NM('HRM003', t1.OFCPS_SE, 'CODE_NM') AS OFCPS_NM
             , SFCOM_CODE_NM('HRM002', t1.CLSF_SE, 'CODE_NM')  AS HR_CLSF_NM
             , SFCOM_CODE_NM('HRM004', t1.CLSF_SE, 'CODE_NM')  AS JBLN_NM
		     , t12.BRTHDY
		     , t12.ECNY_DE                                                  /* 입사일*/
		     , NVL(t12.NOW_CLSF_EMPLMN_DE, t3.CLSF_GNFD_DE) AS CLSF_GNFD_DE /* 현직급 임용일*/
		     , NVL(t12.APPNT_DE, t2.DEPT_GNFD_DE)            AS DEPT_GNFD_DE /* 현 보직일*/
		     , ROUND(NVL(MONTHS_BETWEEN(TO_DATE(#EVL_YEAR#||'0102', 'YYYYMMDD'), TO_DATE(t12.ECNY_DE, 'YYYYMMDD')),0),0) AS WORK_MONTH
		     , t5.EVL_YEAR
		     , t5.HT_SE
		     , t5.HT_BGNDE
		     , t5.HT_ENDDE
                , NVL(t6.LATEN_SRVIC_CO,0)         AS LATEN          /*지각*/
                , NVL(t6.WTRMS_ABSENC_CO,0)        AS WTRMS_ABSENC   /*무단결근*/
                , NVL(t6.WTRMS_LRLY_CO,0)          AS WTRMS_LRLY     /*무단조회*/
                , NVL(t6.WTRMS_GNOT_CO,0)          AS WTRMS_GNOT     /*무단외출 장시간무단이석*/
                , NVL(t6.TWDCVLN_KD_IMPRTY_CO,0)   AS TWDCVLN_UNKD   /*대민불친절*/
                , NVL(t7.DSCPL2,0)                 AS ADMNT_WARN     /*훈계_경고포함*/
                , NVL(t7.DSCPL4,0)                 AS OFCPS_RELIS    /*직위해제*/
                , NVL(t7.DSCPL5,0)                 AS RPRIMND        /*견책*/
                , NVL(t7.DSCPL6,0)                 AS SLYRD          /*감봉*/
                , NVL(t7.DSCPL7,0)                 AS STOP_OCCP      /*정직*/
                , NVL(t7.DSCPL8,0)                 AS PTDSCPL        /*경징계*/
                , NVL(t7.DSCPL9,0)                 AS GRSP           /*중징계*/
                , t9.DTY_RELATE_CRQFC_SE
                , t9.INFRM_ABLTY
                , t9.FGGG_TEST_SE
                , t9.FGGG_TEST_SCORE
                , t9.CRQFC_ETC
                , t9.DTY_ATITD_ETC
                , t9.HOPE_DEPT1
                , t10.DEPT_NM                      AS HOPE_DEPT1_NM
                , t9.HOPE_DEPT2
                , T11.DEPT_NM                      AS HOPE_DEPT2_NM
                , NVL(t9.NOW_DEPT_MNTNC_AT, 0)     AS NOW_DEPT_MNTNC_AT
                , t9.FILE_SN
		FROM TBHRM_WORK_EVL_TRGTER t1
		    LEFT OUTER JOIN DEPT_GNFD_DTLS_TM t2
		      ON  t1.EMPNO     = t2.EMPNO
		      AND t1.DEPT_CODE = t2.DEPT_CODE
		    LEFT OUTER JOIN CLSF_GNFD_DTLS_TM t3
		      ON  t1.EMPNO     = t3.EMPNO
		      AND t1.CLSF_SE   = t3.CLSF_SE
		    LEFT OUTER JOIN VWHRM_DEPT t4
		      ON  t1.DEPT_CODE = t4.DEPT_CODE
		    LEFT OUTER JOIN TBHRM_WORK_EVL_PD t5
		      ON  t1.EVL_YEAR = t5.EVL_YEAR
		      AND t1.HT_SE = t5.HT_SE
		    LEFT OUTER JOIN DTY_EXC_ATITD_DMRTR_TM t6
		      ON t1.EMPNO = t6.EMPNO
		    LEFT OUTER JOIN DSCPL_DSPS_TM t7
		      ON t1.EMPNO = t7.EMPNO
		    LEFT OUTER JOIN TBHRM_WORK_SCRE_ACMSLT t9
		      ON t1.EVL_YEAR   = t9.EVL_YEAR
		     AND t1.HT_SE      = t9.HT_SE
		     AND t1.EMPNO      = t9.EMPNO
		    LEFT OUTER JOIN VWHRM_DEPT t10
		      ON  t9.HOPE_DEPT1 = t10.DEPT_CODE
		    LEFT OUTER JOIN VWHRM_DEPT t11
		      ON  t9.HOPE_DEPT2 = t11.DEPT_CODE
		    LEFT OUTER JOIN TBHRM_HR_MASTR t12
		      ON  t1.EMPNO = t12.EMPNO
		WHERE 1=1
		AND t1.EVL_YEAR = #EVL_YEAR#
		AND t1.HT_SE = #HT_SE#
		AND t1.EMPNO = #EMPNO#
		ORDER BY t1.OFCPS_SE
		       , t1.JSSFC_SE
		       , t1.CLSF_SE
	</select>
	
	<!-- 추가점수 입력 -->
	<update id="HRM060106DAO.updateEvlScreEvl" parameterClass="java.util.HashMap">
		<![CDATA[/*HRM060106DAO.updateEvlScreEvl(추가점수 입력)*/]]>
		UPDATE TBHRM_WORK_EVL_TRGTER SET
			  ADIT_SCORE = #ADIT_SCORE#
			, UPDUSR_ID  = #S_USER_ID#
			, UPDT_DT    = SYSDATE
		WHERE EVL_YEAR   = #EVL_YEAR#
		  AND HT_SE      = #HT_SE#
		  AND EMPNO      = #EMPNO#
	</update>

</sqlMap>