<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BDG040101_SQL">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>


	<!-- 수입지출자료 조회 -->
	<select id="BDG040101DAO.selectStacntOrg" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.selectStacntOrg*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.MTH
		      ,t1.STACNT_CODE
		      ,NVL(t1.EXPNDTR_UNIT_NM, t2.BUDGET_ACNT_NM)       AS STACNT_NM
		      ,LPAD(' ',(t1.STACNT_LEVEL-1)*6,' ')||NVL(t1.EXPNDTR_UNIT_NM, t2.BUDGET_ACNT_NM)       AS STACNT_NM2
		      ,t1.UPPER_STACNT_CODE
		      ,t1.STACNT_LEVEL
		      ,t1.DETAIL_BSNS_CODE
		      ,t3.BSNS_NM             AS DETAIL_BSNS_NM
		      ,t1.DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE
		      ,t2.BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t1.EXPNDTR_UNIT_NM
		      ,t1.ORIBDGT
		      ,NVL(t1.RVSPBGT_1_ODR,0)+NVL(t1.RVSPBGT_2_ODR,0)+NVL(t1.RVSPBGT_3_ODR,0)+NVL(t1.RVSPBGT_4_ODR,0)    AS RVSPBGT_ODR
		      ,t1.CYFD_BUDGET
		      ,t1.MVMN_AM
		      ,t1.BUKIP_MVMN_AM
		      ,t1.DVR_AM
		      ,t1.RSVFND_REQST_AM
		      ,t1.CAUSE_ACTION_AM
		      ,t1.DET_DCSN_AM
		      ,t1.EXCUT_AM
		      ,t1.CYFD_ACNT_CODE
		      ,t1.CYFD_EXPNDTR_UNIT_CODE
		      ,t1.CYFD_EXPNDTR_UNIT_NM
		      ,t1.CYFD_SE
		      ,t1.CYFD_PRVONSH
		      ,t1.CYFD_DCSN_AT
		      ,t1.CYFD_DVR_AM
		      ,t1.CYFD_EXCUT_AM
		      ,t1.CYFD_AM
		      ,t1.CYFD_AM_CNSTRC_IMPRV
		      ,t1.CYFD_AM_ACDNT
		      ,t1.CYFD_AM_CTNU
		      ,t1.DISUSE_AM
		      ,t1.SE_ACCNUT_ACNT_CODE
		FROM   (
		        SELECT *
		        FROM   TBBDG_BUDGET_STACNT
		        WHERE  YEAR    = #YEAR#
		        AND    BSNS_SE = #BSNS_SE#
		        AND    BALC_SE = #BALC_SE#
		        AND    MTH     = LPAD(#MTH#,2,'0')
		       ) t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.BSNS_SE = t2.BSNS_SE
		           AND t1.BALC_SE = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		START WITH t1.STACNT_LEVEL = '1'
		CONNECT BY PRIOR t1.STACNT_CODE = t1.UPPER_STACNT_CODE
		ORDER SIBLINGS BY t1.YEAR
		                 ,t1.BSNS_SE
		                 ,t1.BALC_SE
		                 ,t1.STACNT_CODE
	</select>


	<!-- 수입지출자료 조회 -->
	<select id="BDG040101DAO.selectBudgetStacnt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.selectBudgetStacnt*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.MTH
		      ,t1.STACNT_CODE
		      ,NVL(t1.EXPNDTR_UNIT_NM, t2.BUDGET_ACNT_NM)       AS STACNT_NM
		      ,LPAD(' ',(t1.STACNT_LEVEL-1)*6,' ')||NVL(t1.EXPNDTR_UNIT_NM, t2.BUDGET_ACNT_NM)       AS STACNT_NM2
		      ,t1.UPPER_STACNT_CODE
		      ,t1.STACNT_LEVEL
		      ,t1.DETAIL_BSNS_CODE
		      ,t3.BSNS_NM             AS DETAIL_BSNS_NM
		      ,t1.DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE
		      ,t2.BUDGET_ACNT_NM
		      ,t1.EXPNDTR_UNIT_CODE
		      ,t1.EXPNDTR_UNIT_NM
		      ,t1.ORIBDGT
		      ,NVL(t1.RVSPBGT_1_ODR,0)+NVL(t1.RVSPBGT_2_ODR,0)+NVL(t1.RVSPBGT_3_ODR,0)+NVL(t1.RVSPBGT_4_ODR,0)    AS RVSPBGT_ODR
		      ,t1.CYFD_BUDGET
		      ,t1.MVMN_AM
		      ,t1.BUKIP_MVMN_AM
		      ,t1.DVR_AM
		      ,t1.RSVFND_REQST_AM
		      ,t1.CAUSE_ACTION_AM
		      ,t1.DET_DCSN_AM
		      ,t1.EXCUT_AM
		      ,t1.CYFD_ACNT_CODE
		      ,t1.CYFD_EXPNDTR_UNIT_CODE
		      ,t1.CYFD_EXPNDTR_UNIT_NM
		      ,t1.CYFD_SE
		      ,t1.CYFD_PRVONSH
		      ,t1.CYFD_DCSN_AT
		      ,t1.CYFD_DVR_AM
		      ,t1.CYFD_EXCUT_AM
		      ,t1.CYFD_AM
		      ,t1.CYFD_AM_CNSTRC_IMPRV
		      ,t1.CYFD_AM_ACDNT
		      ,t1.CYFD_AM_CTNU
		      ,t1.DISUSE_AM
		      ,t1.SE_ACCNUT_ACNT_CODE
		FROM   (
		        SELECT *
		        FROM   TBBDG_BUDGET_STACNT
		        WHERE  YEAR    = #YEAR#
		        AND    BSNS_SE = #BSNS_SE#
		        AND    BALC_SE = #BALC_SE#
		        AND    MTH     = LPAD(#MTH#,2,'0')
		       ) t1
		       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.BSNS_SE = t2.BSNS_SE
		           AND t1.BALC_SE = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t3
		            ON t1.DETAIL_BSNS_CODE = t3.BSNS_CODE
		START WITH t1.STACNT_LEVEL = '1'
		CONNECT BY PRIOR t1.STACNT_CODE = t1.UPPER_STACNT_CODE
		ORDER SIBLINGS BY t1.YEAR
		                 ,t1.BSNS_SE
		                 ,t1.BALC_SE
		                 ,t1.STACNT_CODE
	</select>


	<!-- 수입지출자료 삭제 -->
	<delete id="BDG040101DAO.deleteBudgetStacnt" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.deleteBudgetStacnt*/]]>
		DELETE
		FROM   TBBDG_BUDGET_STACNT
		WHERE  YEAR             = #YEAR#
		AND    BSNS_SE          = #BSNS_SE#
		AND    BALC_SE          = #BALC_SE#
		AND    MTH              = LPAD(#MTH#,2,'0')
	</delete>


	<!-- 수입지출자료 추가 -->
	<insert id="BDG040101DAO.insertBudgetStacnt" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.insertBudgetStacnt*/]]>
	<![CDATA[
		INSERT INTO TBBDG_BUDGET_STACNT (
		     YEAR
		    ,BSNS_SE
		    ,BALC_SE
		    ,MTH
		    ,STACNT_CODE
		    ,UPPER_STACNT_CODE
		    ,STACNT_LEVEL
		    ,DETAIL_BSNS_CODE
		    ,DEPT_CODE
		    ,BUDGET_ACNT_CODE
		    ,EXPNDTR_UNIT_CODE
		    ,EXPNDTR_UNIT_NM
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		)
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,LPAD(#MTH#,2,'0')                            AS MTH
		      ,t1.BUDGET_ACNT_CODE || '00000000'            AS STACNT_CODE
		      ,t1.UPPER_ACNT_CODE  || '00000000'            AS UPPER_STACNT_CODE
		      ,DECODE(t1.ACNT_LEVEL,'7','4',t1.ACNT_LEVEL)  AS STACNT_LEVEL
		      ,NULL                                         AS DETAIL_BSNS_CODE
		      ,NULL                                         AS DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE
		      ,NULL                                         AS EXPNDTR_UNIT_CODE
		      ,NULL                                         AS EXPNDTR_UNIT_NM
		      ,#S_USER_ID#
		      ,SYSDATE
		      ,#S_USER_ID#
		      ,SYSDATE
		FROM   TBBDG_BUDGET_ACNT_CODE t1
		WHERE  YEAR    = #YEAR#
		AND    BSNS_SE = #BSNS_SE#
		AND    BALC_SE = #BALC_SE#
		UNION ALL
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,LPAD(#MTH#,2,'0')                                                                                    AS MTH
		      ,t1.BUDGET_ACNT_CODE||t1.EXPNDTR_UNIT_CODE                                                            AS STACNT_CODE
		      ,DECODE(t1.UNIT_LEVEL, '1', t1.BUDGET_ACNT_CODE||'00000000'
		                           , '2', t1.BUDGET_ACNT_CODE||t1.TAXITM_CODE||'000000'
		                           , '3', t1.BUDGET_ACNT_CODE||t1.TAXITM_CODE||SUBSTR(t1.DEPT_CODE,3,2)||'0000' )   AS UPPER_STACNT_CODE
		      ,(t1.UNIT_LEVEL + (CASE WHEN t1.YEAR < 2016 THEN 4 ELSE 5 END))||''                                   AS STACNT_LEVEL
		      ,NULL                                                                                                 AS DETAIL_BSNS_CODE
		      ,t1.DEPT_CODE                                                                                         AS DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE                                                                                  AS BUDGET_ACNT_CODE
		      ,t1.EXPNDTR_UNIT_CODE                                                                                 AS EXPNDTR_UNIT_CODE
		      ,t1.EXPNDTR_UNIT_NM                                                                                   AS EXPNDTR_UNIT_NM
		      ,#S_USER_ID#
		      ,SYSDATE
		      ,#S_USER_ID#
		      ,SYSDATE
		FROM   (
		        SELECT 1                    AS UNIT_LEVEL
		              ,YEAR
		              ,BSNS_SE
		              ,BALC_SE
		              ,BUDGET_ACNT_CODE
		              ,TAXITM_CODE
		              ,TAXITM_NM
		              ,NULL                 AS DEPT_CODE
		              ,NULL                 AS DEPT_NM
		              ,TAXITM_CODE||'000000'                            AS EXPNDTR_UNIT_CODE
		              ,TAXITM_NM                                        AS EXPNDTR_UNIT_NM
		        FROM   TBBDG_EXPNDTR_UNIT_CODE
		        WHERE DEPT_CODE <> '000000'
		        GROUP BY YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, TAXITM_CODE, TAXITM_NM
		        UNION ALL
		        SELECT 2                    AS UNIT_LEVEL
		              ,YEAR
		              ,BSNS_SE
		              ,BALC_SE
		              ,BUDGET_ACNT_CODE
		              ,TAXITM_CODE
		              ,TAXITM_NM
		              ,DEPT_CODE
		              ,DEPT_NM
		              ,TAXITM_CODE||SUBSTR(DEPT_CODE,3,2)||'0000'       AS EXPNDTR_UNIT_CODE
		              ,DEPT_NM                                          AS EXPNDTR_UNIT_NM
		        FROM   TBBDG_EXPNDTR_UNIT_CODE
		        WHERE  DEPT_CODE IS NOT NULL
		        AND DEPT_CODE <> '000000'
		        GROUP BY YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, TAXITM_CODE, TAXITM_NM, DEPT_CODE, DEPT_NM
		        UNION ALL
		        SELECT 3                    AS UNIT_LEVEL
		              ,YEAR
		              ,BSNS_SE
		              ,BALC_SE
		              ,BUDGET_ACNT_CODE
		              ,TAXITM_CODE
		              ,TAXITM_NM
		              ,DEPT_CODE
		              ,DEPT_NM
		              ,EXPNDTR_UNIT_CODE
		              ,EXPNDTR_UNIT_NM
		        FROM   TBBDG_EXPNDTR_UNIT_CODE
		        WHERE  SUBSTR(EXPNDTR_UNIT_CODE, 3) <> '000000'
		        AND DEPT_CODE <> '000000'
		       ) t1
		WHERE  t1.YEAR    = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.BALC_SE = #BALC_SE#
		AND	   t1.EXPNDTR_UNIT_NM IS NOT NULL
		UNION ALL
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,LPAD(#MTH#,2,'0')                                            AS MTH
		      ,t1.BUDGET_ACNT_CODE||t1.EXPNDTR_UNIT_CODE                    AS STACNT_CODE
		      ,t1.BUDGET_ACNT_CODE||SUBSTR(t1.EXPNDTR_UNIT_CODE,1,6)||'00'  AS UPPER_STACNT_CODE
		      ,'8'                                                          AS STACNT_LEVEL
		      ,NULL                                                         AS DETAIL_BSNS_CODE
		      ,t1.DEPT_CODE                                                 AS DEPT_CODE
		      ,t1.BUDGET_ACNT_CODE                                          AS BUDGET_ACNT_CODE
		      ,t1.EXPNDTR_UNIT_CODE                                         AS EXPNDTR_UNIT_CODE
		      ,t1.EXPNDTR_UNIT_NM                                           AS EXPNDTR_UNIT_NM
		      ,#S_USER_ID#
		      ,SYSDATE
		      ,#S_USER_ID#
		      ,SYSDATE
		FROM   (
		        SELECT s1.YEAR
		              ,s1.BSNS_SE
		              ,s1.BALC_SE
		              ,s1.DEPT_CODE
		              ,s1.BUDGET_ACNT_CODE
		              ,s1.EXPNDTR_UNIT_CODE
		              ,s1.EXPNDTR_UNIT_NM
		        FROM   TBBDG_FRMTN_BUDGET s1
		        WHERE  NOT EXISTS (
		            SELECT *
		            FROM   TBBDG_EXPNDTR_UNIT_CODE
		            WHERE  YEAR             = s1.YEAR
		            AND    BSNS_SE          = s1.BSNS_SE
		            AND    BALC_SE          = s1.BALC_SE
		            AND    BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		            AND    (
		                    TAXITM_CODE||'000000'                       = s1.EXPNDTR_UNIT_CODE
		                    OR
		                    TAXITM_CODE||SUBSTR(DEPT_CODE,3,2)||'0000'  = s1.EXPNDTR_UNIT_CODE
		                    OR
		                    EXPNDTR_UNIT_CODE                           = s1.EXPNDTR_UNIT_CODE
		                   )
		        )
		        GROUP BY s1.YEAR
		                ,s1.BSNS_SE
		                ,s1.BALC_SE
		                ,s1.DEPT_CODE
		                ,s1.BUDGET_ACNT_CODE
		                ,s1.EXPNDTR_UNIT_CODE
		                ,s1.EXPNDTR_UNIT_NM
		       ) t1
		WHERE  t1.YEAR    = #YEAR#
		AND    t1.BSNS_SE = #BSNS_SE#
		AND    t1.BALC_SE = #BALC_SE#
	]]>
	</insert>


	<!-- Step 1 : 기본금액 입력 -->
	<update id="BDG040101DAO.updateStacntStep1" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.updateStacntStep1*/]]>
		DECLARE
		BEGIN
		    /*1. 7레벨 지출단위부터 값 입력 시작(예산 기본금액)*/
		    UPDATE TBBDG_BUDGET_STACNT s1
		    SET    (
		             ORIBDGT,RVSPBGT_1_ODR,RVSPBGT_2_ODR,RVSPBGT_3_ODR,RVSPBGT_4_ODR
		            ,CYFD_BUDGET,MVMN_AM,BUKIP_MVMN_AM,DVR_AM,RSVFND_REQST_AM
		            ,DETAIL_BSNS_CODE
		           )
		           = (
		              SELECT SUM(t1.ORIBDGT         )        /*본예산*/
		        <![CDATA[   + CASE  WHEN LPAD(#MTH#,2,'0') > SUBSTR(t1.RVSPBGT_1_YM,5,2) THEN SUM(t1.RVSPBGT_1_ODR ) ELSE 0 END
		              		+ CASE  WHEN LPAD(#MTH#,2,'0') > SUBSTR(t1.RVSPBGT_2_YM,5,2) THEN SUM(t1.RVSPBGT_2_ODR ) ELSE 0 END
		              		+ CASE  WHEN LPAD(#MTH#,2,'0') > SUBSTR(t1.RVSPBGT_3_YM,5,2) THEN SUM(t1.RVSPBGT_3_ODR ) ELSE 0 END
		              		+ CASE  WHEN LPAD(#MTH#,2,'0') > SUBSTR(t1.RVSPBGT_4_YM,5,2) THEN SUM(t1.RVSPBGT_4_ODR ) ELSE 0 END ]]>
		                    ,DECODE(LPAD(#MTH#,2,'0'), SUBSTR(t1.RVSPBGT_1_YM,5,2) ,SUM(t1.RVSPBGT_1_ODR   ),0)        /*추경1차*/
		                    ,DECODE(LPAD(#MTH#,2,'0'), SUBSTR(t1.RVSPBGT_2_YM,5,2) ,SUM(t1.RVSPBGT_2_ODR   ),0)        /*추경2차*/
		                    ,DECODE(LPAD(#MTH#,2,'0'), SUBSTR(t1.RVSPBGT_3_YM,5,2) ,SUM(t1.RVSPBGT_3_ODR   ),0)        /*추경3차*/
		                    ,DECODE(LPAD(#MTH#,2,'0'), SUBSTR(t1.RVSPBGT_4_YM,5,2) ,SUM(t1.RVSPBGT_4_ODR   ),0)        /*추경4차*/
		                    <!-- ,SUM(t1.RVSPBGT_2_ODR   )        /*추경2차*/
		                    ,SUM(t1.RVSPBGT_3_ODR   )        /*추경3차*/
		                    ,SUM(t1.RVSPBGT_4_ODR   )        /*추경4차*/ -->
		                    ,SUM(t1.CYFD_BUDGET     )        /*이월*/
		                    ,SUM(t1.MVMN_AM         )        /*이동*/
		                    ,SUM(t1.BUKIP_MVMN_AM   )        /*부기이동*/
		                    ,SUM(t1.DVR_AM          )        /*전용*/
		                    ,SUM(t1.RSVFND_REQST_AM )        /*예비비*/
		                    ,MAX(t1.DETAIL_BSNS_CODE)
		              FROM   TBBDG_EXECUT_BUDGET t1
		              WHERE  t1.YEAR = s1.YEAR
		              AND    t1.BSNS_SE = s1.BSNS_SE
		              AND    t1.BALC_SE = s1.BALC_SE
		              AND    t1.BUDGET_ACNT_CODE  = s1.BUDGET_ACNT_CODE
		              AND    t1.EXPNDTR_UNIT_CODE = s1.EXPNDTR_UNIT_CODE
		              GROUP BY t1.YEAR, t1.BSNS_SE, t1.BALC_SE, t1.BUDGET_ACNT_CODE, t1.EXPNDTR_UNIT_CODE, t1.RVSPBGT_1_YM, t1.RVSPBGT_2_YM, t1.RVSPBGT_3_YM, t1.RVSPBGT_4_YM
		             )
		    WHERE  YEAR    = #YEAR#
		    AND    BSNS_SE = #BSNS_SE#
		    AND    BALC_SE = #BALC_SE#
		    AND    MTH     = LPAD(#MTH#,2,'0')
		    ;
		    
		    /*1. Leaf 지출단위부터 값 입력 시작(회계 기본금액)*/
		<isEqual property="BALC_SE" compareValue="1">
		    UPDATE TBBDG_BUDGET_STACNT s1
		    SET    (
		             DET_DCSN_AM
		            ,EXCUT_AM
		           )
		           = (
		              SELECT SUM(DECODE(t1.ACCNUT_ACNT_CODE, t2.GNRL_DEBTOR_ACNT_CODE,  NVL(DEBTOR_AMOUNT,0), 0))    AS DET_DCSN_AM    /*일반차변*/
		                    ,SUM(DECODE(t1.ACCNUT_ACNT_CODE, t2.SETOFF_CRDIT_ACNT_CODE, NVL(CRDIT_AMOUNT, 0), 0))    AS EXCUT_AM       /*상계대변*/
		              FROM   TBACC_CHIT_DETAIL t1
		                     INNER JOIN (
		                                 SELECT BUDGET_YEAR
		                                       ,BSNS_SE
		                                       ,BALC_SE
		                                       ,BUDGET_ACNT_CODE
		                                       ,GNRL_DEBTOR_ACNT_CODE
		                                       ,GNRL_CRDIT_ACNT_CODE
		                                       ,SETOFF_DEBTOR_ACNT_CODE
		                                       ,SETOFF_CRDIT_ACNT_CODE
		                                 FROM   TBACC_ATMC_JRNLZ_TY
		                                 GROUP BY BUDGET_YEAR
		                                         ,BSNS_SE
		                                         ,BALC_SE
		                                         ,BUDGET_ACNT_CODE
		                                         ,GNRL_DEBTOR_ACNT_CODE
		                                         ,GNRL_CRDIT_ACNT_CODE
		                                         ,SETOFF_DEBTOR_ACNT_CODE
		                                         ,SETOFF_CRDIT_ACNT_CODE
		                                ) t2
		                          ON t1.BUDGET_YEAR      = t2.BUDGET_YEAR
		                         AND t1.BSNS_SE          = t2.BSNS_SE
		                         AND t1.BALC_SE          = t2.BALC_SE
		                         AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		              WHERE  t1.BUDGET_YEAR      = s1.YEAR
		              AND    t1.BSNS_SE          = s1.BSNS_SE
		              AND    t1.BALC_SE          = s1.BALC_SE
		              AND    t1.BUDGET_ACNT_CODE = s1.BUDGET_ACNT_CODE
		             )
		    WHERE  s1.YEAR    = #YEAR#
		    AND    s1.BSNS_SE = #BSNS_SE#
		    AND    s1.BALC_SE = #BALC_SE#
		    AND    s1.MTH     = LPAD(#MTH#,2,'0')
		    ;
		</isEqual>
		<isEqual property="BALC_SE" compareValue="2">
		    UPDATE TBBDG_BUDGET_STACNT s1
		    SET    (
		            CAUSE_ACTION_AM,DET_DCSN_AM,EXCUT_AM,CYFD_EXCUT_AM
		           )
		           = (
		              SELECT NVL(SUM(                        DECODE(t1.ANACT_KND,'05', t1.CAUSE_ACTION_AMOUNT*-1, t1.CAUSE_ACTION_AMOUNT)    ),0)  /*원인행위액*/
		                    ,NVL(SUM(                        DECODE(t1.ANACT_KND,'05', t1.DEBT_AMT*-1,            t1.DEBT_AMT           )    ),0)  /*채무확정액*/
		                    ,NVL(SUM( DECODE(t1.CYFD_SE,'0', DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1,        t1.DECSN_AMOUNT       ),0) ),0)  /*결의금액*/
		                    ,NVL(SUM( DECODE(t1.CYFD_SE,'1', DECODE(t1.ANACT_KND,'05', t1.DECSN_AMOUNT*-1,        t1.DECSN_AMOUNT       ),0) ),0)  /*이월집행액*/
		              FROM   VHACC_EXP_DSN_MASTR t1
		              WHERE  t1.BUDGET_YEAR       = s1.YEAR
		              AND    t1.BSNS_SE           = s1.BSNS_SE
		              AND    t1.BALC_SE           = s1.BALC_SE
		              AND    t1.BUDGET_ACNT_CODE  = s1.BUDGET_ACNT_CODE
		              AND    t1.EXPNDTR_UNIT_CODE = s1.EXPNDTR_UNIT_CODE
		              AND    t1.CAUSE_ACTION_DE BETWEEN s1.YEAR||'0101' AND s1.YEAR||s1.MTH||'31'
		             )
		    WHERE  s1.YEAR    = #YEAR#
		    AND    s1.BSNS_SE = #BSNS_SE#
		    AND    s1.BALC_SE = #BALC_SE#
		    AND    s1.MTH     = LPAD(#MTH#,2,'0')
		    ;
		</isEqual>
		    
		    
		    /*4. 이월액 계산*/
		    UPDATE TBBDG_BUDGET_STACNT t1
		    SET    (
		             t1.CYFD_ACNT_CODE
		            ,t1.CYFD_EXPNDTR_UNIT_CODE
		            ,t1.CYFD_SE
		            ,t1.CYFD_PRVONSH
		            ,t1.CYFD_AM
		            ,t1.CYFD_AM_CNSTRC_IMPRV
		            ,t1.CYFD_AM_ACDNT
		            ,t1.CYFD_AM_CTNU
		           )
		           = (
		              SELECT MAX(CYFD_BUDGET_ACNT_CODE)
		                    ,MAX(CYFD_EXPNDTR_UNIT_CODE)
		                    ,MAX(SE)
		                    ,MAX(CYFD_PRVONSH)
		                    ,SUM(NVL(BUDGET_AM,0))
		                    ,SUM(DECODE(SE, '1', NVL(BUDGET_AM,0), '2', 0,                '3', 0               ))
		                    ,SUM(DECODE(SE, '1', 0,                '2', NVL(BUDGET_AM,0), '3', 0               ))
		                    ,SUM(DECODE(SE, '1', 0,                '2', 0,                '3', NVL(BUDGET_AM,0)))
		              FROM   TBBDG_CYFD_BUDGET
		              WHERE  NVL(CYFD_DCSN_AT,'0') = '1'
		              AND    YEAR              = t1.YEAR
		              AND    BSNS_SE           = t1.BSNS_SE
		              AND    BALC_SE           = t1.BALC_SE
		              AND    BUDGET_ACNT_CODE  = t1.BUDGET_ACNT_CODE
		              AND    EXPNDTR_UNIT_CODE = t1.EXPNDTR_UNIT_CODE
		             )
		    WHERE  t1.YEAR    = #YEAR#
		    AND    t1.BSNS_SE = #BSNS_SE#
		    AND    t1.BALC_SE = #BALC_SE#
		    AND    t1.MTH     = LPAD(#MTH#,2,'0')
		    ;
		    
		    
		    /*7. 레포츠센터 수입 계산*/
		END;
	</update>


	<!-- Step 2 : 상위합산(7 -> 5) 계산 -->
	<update id="BDG040101DAO.updateStacntStep2" parameterClass="java.util.HashMap">
	<![CDATA[/*BDG040101DAO.updateStacntStep2*/]]>
		DECLARE
		BEGIN
		    FOR STACNT_SUBSUM IN (
		          WITH STACNT_TREE AS (
		              SELECT YEAR
		                    ,BSNS_SE
		                    ,BALC_SE
		                    ,MTH
		                    ,STACNT_CODE
		                    ,UPPER_STACNT_CODE
		                    ,BUDGET_ACNT_CODE
		                    ,EXPNDTR_UNIT_CODE
		                    ,STACNT_LEVEL
		                    ,ORIBDGT
		                    ,RVSPBGT_1_ODR
		                    ,RVSPBGT_2_ODR
		                    ,RVSPBGT_3_ODR
		                    ,RVSPBGT_4_ODR
		                    ,CYFD_BUDGET
		                    ,MVMN_AM
		                    ,BUKIP_MVMN_AM
		                    ,DVR_AM
		                    ,RSVFND_REQST_AM
		                    ,CAUSE_ACTION_AM
		                    ,DET_DCSN_AM
		                    ,EXCUT_AM
		                    ,CYFD_EXCUT_AM
		                    ,CYFD_AM
		                    ,CYFD_AM_CNSTRC_IMPRV
		                    ,CYFD_AM_ACDNT
		                    ,CYFD_AM_CTNU
		                    ,DISUSE_AM
		              FROM   (
		                      SELECT *
		                      FROM   TBBDG_BUDGET_STACNT
		                      WHERE  YEAR    = #YEAR#
		                      AND    BSNS_SE = #BSNS_SE#
		                      AND    BALC_SE = #BALC_SE#
		                      AND    MTH     = LPAD(#MTH#,2,'0')
		                     )
		              START WITH STACNT_LEVEL = '1'
		              CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE
		              ORDER SIBLINGS BY YEAR
		                       ,BSNS_SE
		                       ,BALC_SE
		                       ,STACNT_CODE
		          )
		          SELECT r1.YEAR
		                ,r1.BSNS_SE
		                ,r1.BALC_SE
		                ,r1.MTH
		                ,r1.STACNT_CODE
		                ,(SELECT SUM(NVL(ORIBDGT,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS ORIBDGT_SUM
		                ,(SELECT SUM(NVL(RVSPBGT_1_ODR,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS RVSPBGT_1_ODR_SUM
		                ,(SELECT SUM(NVL(RVSPBGT_2_ODR,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS RVSPBGT_2_ODR_SUM
		                ,(SELECT SUM(NVL(RVSPBGT_3_ODR,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS RVSPBGT_3_ODR_SUM
		                ,(SELECT SUM(NVL(RVSPBGT_4_ODR,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS RVSPBGT_4_ODR_SUM
		                ,(SELECT SUM(NVL(CYFD_BUDGET,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_BUDGET_SUM
		                ,(SELECT SUM(NVL(MVMN_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS MVMN_AM_SUM
		                ,(SELECT SUM(NVL(BUKIP_MVMN_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS BUKIP_MVMN_AM_SUM
		                ,(SELECT SUM(NVL(DVR_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS DVR_AM_SUM
		                ,(SELECT SUM(NVL(RSVFND_REQST_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS RSVFND_REQST_AM_SUM
		                ,(SELECT SUM(NVL(CAUSE_ACTION_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CAUSE_ACTION_AM_SUM
		                ,(SELECT SUM(NVL(DET_DCSN_AM,0))
		                  FROM   STACNT_TREE
		                  <isEqual property="BALC_SE" compareValue="1" prepend="WHERE  ">EXPNDTR_UNIT_CODE IS NULL</isEqual>
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS DET_DCSN_AM_SUM
		                ,(SELECT SUM(NVL(EXCUT_AM,0))
		                  FROM   STACNT_TREE
		                  <isEqual property="BALC_SE" compareValue="1" prepend="WHERE  ">EXPNDTR_UNIT_CODE IS NULL</isEqual>
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS EXCUT_AM_SUM
		                ,(SELECT SUM(NVL(CYFD_EXCUT_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_EXCUT_AM_SUM
		                ,(SELECT SUM(NVL(CYFD_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_AM_SUM
		                ,(SELECT SUM(NVL(CYFD_AM_CNSTRC_IMPRV,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_AM_CNSTRC_IMPRV_SUM
		                ,(SELECT SUM(NVL(CYFD_AM_ACDNT,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_AM_ACDNT_SUM
		                ,(SELECT SUM(NVL(CYFD_AM_CTNU,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS CYFD_AM_CTNU_SUM
		                ,(SELECT SUM(NVL(DISUSE_AM,0))
		                  FROM   STACNT_TREE
		                  START WITH STACNT_CODE = r1.STACNT_CODE
		                  CONNECT BY PRIOR STACNT_CODE = UPPER_STACNT_CODE   )        AS DISUSE_AM_SUM
		          FROM   STACNT_TREE r1
		    )
		    LOOP
		        BEGIN
		            UPDATE TBBDG_BUDGET_STACNT
		            SET    ORIBDGT               = STACNT_SUBSUM.ORIBDGT_SUM
		                  ,RVSPBGT_1_ODR         = STACNT_SUBSUM.RVSPBGT_1_ODR_SUM
		                  ,RVSPBGT_2_ODR         = STACNT_SUBSUM.RVSPBGT_2_ODR_SUM
		                  ,RVSPBGT_3_ODR         = STACNT_SUBSUM.RVSPBGT_3_ODR_SUM
		                  ,RVSPBGT_4_ODR         = STACNT_SUBSUM.RVSPBGT_4_ODR_SUM
		                  ,CYFD_BUDGET           = STACNT_SUBSUM.CYFD_BUDGET_SUM
		                  ,MVMN_AM               = STACNT_SUBSUM.MVMN_AM_SUM
		                  ,BUKIP_MVMN_AM         = STACNT_SUBSUM.BUKIP_MVMN_AM_SUM
		                  ,DVR_AM                = STACNT_SUBSUM.DVR_AM_SUM
		                  ,RSVFND_REQST_AM       = STACNT_SUBSUM.RSVFND_REQST_AM_SUM
		                  ,CAUSE_ACTION_AM       = STACNT_SUBSUM.CAUSE_ACTION_AM_SUM
		                  ,DET_DCSN_AM           = (CASE WHEN BALC_SE='1' AND (EXPNDTR_UNIT_CODE IS NOT NULL) THEN DET_DCSN_AM ELSE STACNT_SUBSUM.DET_DCSN_AM_SUM END)
		                  ,EXCUT_AM              = (CASE WHEN BALC_SE='1' AND (EXPNDTR_UNIT_CODE IS NOT NULL) THEN EXCUT_AM    ELSE STACNT_SUBSUM.EXCUT_AM_SUM    END)
		                  ,CYFD_EXCUT_AM         = STACNT_SUBSUM.CYFD_EXCUT_AM_SUM
		                  ,CYFD_AM               = STACNT_SUBSUM.CYFD_AM_SUM
		                  ,CYFD_AM_CNSTRC_IMPRV  = STACNT_SUBSUM.CYFD_AM_CNSTRC_IMPRV_SUM
		                  ,CYFD_AM_ACDNT         = STACNT_SUBSUM.CYFD_AM_ACDNT_SUM
		                  ,CYFD_AM_CTNU          = STACNT_SUBSUM.CYFD_AM_CTNU_SUM
		                  ,DISUSE_AM             = STACNT_SUBSUM.DISUSE_AM_SUM
		            WHERE  YEAR                  = STACNT_SUBSUM.YEAR
		            AND    BSNS_SE               = STACNT_SUBSUM.BSNS_SE
		            AND    BALC_SE               = STACNT_SUBSUM.BALC_SE
		            AND    MTH                   = STACNT_SUBSUM.MTH
		            AND    STACNT_CODE           = STACNT_SUBSUM.STACNT_CODE
		            ;
		        END;
		    END LOOP;
		    
		    /*3. 불용액 계산*/
		    UPDATE TBBDG_BUDGET_STACNT s1
		    SET    DISUSE_AM =   NVL(ORIBDGT,0) + NVL(RVSPBGT_1_ODR,0) + NVL(RVSPBGT_2_ODR,0) + NVL(RVSPBGT_3_ODR,0) + NVL(RVSPBGT_4_ODR,0)
		                       + NVL(CYFD_BUDGET,0) + NVL(MVMN_AM,0) + NVL(BUKIP_MVMN_AM,0) + NVL(DVR_AM,0) + NVL(RSVFND_REQST_AM,0)
		                       - NVL(DET_DCSN_AM,0)
		    WHERE  YEAR      = #YEAR#
		    AND    BSNS_SE   = #BSNS_SE#
		    AND    BALC_SE   = #BALC_SE#
		    AND    MTH       = LPAD(#MTH#,2,'0')
		    ;
		END;
	</update>


</sqlMap>