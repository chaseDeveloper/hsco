<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC050307_SQL">	

	<!-- 회계계정과목 콤보 -->
	<select id="ACC050307DAO.accNutStacntList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[ /*ACC050307DAO.accNutStacntList*/ ]]>
		WITH BASE01_T AS (
		  SELECT t1.ACCNUT_YEAR
		       , t1.ACCNUT_ACNT_CODE
		       , '2' AS LVL
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', '00', t1.ACCNUT_ACNT_CODE, 'J') AS AMT1
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), t1.ACCNUT_ACNT_CODE, 'J') AS AMT2
		       , 0 AS AMT3
		  FROM (
		    SELECT SUBSTR(#YYYYMM#,1,4) AS ACCNUT_YEAR, SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32010000') AS ACCNUT_ACNT_CODE FROM DUAL /*1. 이익준비금*/
		  ) t1
		  UNION ALL
		  SELECT t1.ACCNUT_YEAR
		       , t1.ACCNUT_ACNT_CODE
		       , '2' AS LVL
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', '00', t1.ACCNUT_ACNT_CODE, 'J') AS AMT1
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), t1.ACCNUT_ACNT_CODE, 'J') AS AMT2
		       , 0 AS AMT3
		  FROM (
		    SELECT SUBSTR(#YYYYMM#,1,4) AS ACCNUT_YEAR, SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32020000') AS ACCNUT_ACNT_CODE FROM DUAL /*2. 감채적립금*/
		  ) t1
		  UNION ALL
		  SELECT t1.ACCNUT_YEAR
		       , t1.ACCNUT_ACNT_CODE
		       , '2' AS LVL
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', '00', t1.ACCNUT_ACNT_CODE, 'J') AS AMT1
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), t1.ACCNUT_ACNT_CODE, 'J') AS AMT2
		       , 0 AS AMT3
		  FROM (
		    SELECT SUBSTR(#YYYYMM#,1,4) AS ACCNUT_YEAR, SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32030000') AS ACCNUT_ACNT_CODE FROM DUAL /*3. 사업준비금*/
		  ) t1
		  UNION ALL
		  SELECT t1.ACCNUT_YEAR
		       , t1.ACCNUT_ACNT_CODE
		       , '2' AS LVL
		       , SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', '00', t1.ACCNUT_ACNT_CODE, 'J') AS AMT1
		       , (SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32030000'), 'J')
		         + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32010000'), 'J')
		         + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32020000'), 'J') /*이익준비금+사업준비금+감채적립금*/
		         + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), t1.ACCNUT_ACNT_CODE, 'J')
		         ) + (
		            SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', SUBSTR(#YYYYMM#,5,2),    SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'10000000'), 'J')*-1 
		            - (SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'20000000'), 'J')
		                + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '00', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'30000000'), 'J')) /*자산 - 부채 - 자본*/
		         ) AS AMT2
		       ,SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32030000'), 'J')
		         + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32010000'), 'J')
		         + SFACC_GET_STACNT_AMT(t1.ACCNUT_YEAR, '01', SUBSTR(#YYYYMM#,5,2), SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32020000'), 'J') AS AMT3
		  FROM (
		    SELECT SUBSTR(#YYYYMM#,1,4) AS ACCNUT_YEAR, SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32040000') AS ACCNUT_ACNT_CODE FROM DUAL /*4. 미처분이익잉여금(미처리결손금)*/
		  ) t1
		)
		, BASE02_T AS (
		  SELECT SUBSTR(#YYYYMM#,1,4)    AS ACCNUT_YEAR
		       , SFACC_GET_ACNT_CODE(SUBSTR(#YYYYMM#,1,4),'32000000') AS ACCNUT_ACNT_CODE
		       , '1'       AS LVL
		       , NVL(SUM(t1.AMT1),0) AS AMT1
		       , NVL(SUM(t1.AMT2),0) AS AMT2
		       , NVL(SUM(t1.AMT3),0) AS AMT3
		  FROM BASE01_T t1
		)
		SELECT t1.ACCNUT_YEAR
		     , t1.ACCNUT_ACNT_CODE
		     , NVL(t2.OUTPT_ACNT_NM, t2.ACCNUT_ACNT_NM) AS ACCNUT_ACNT_NM
		     , t1.LVL
		     , t1.AMT1
		     , t1.AMT2
		     , t1.AMT3
		     , t1.AMT1 + t1.AMT2 - t1.AMT3 AS AMT4
		FROM (
		    SELECT ACCNUT_YEAR
		         , ACCNUT_ACNT_CODE
		         , LVL
		         , AMT1
		         , AMT2
		         , AMT3
		    FROM BASE02_T 
		    UNION ALL
		    SELECT ACCNUT_YEAR
		         , ACCNUT_ACNT_CODE
		         , LVL
		         , AMT1
		         , AMT2
		         , AMT3
		    FROM BASE01_T 
		) t1
		  LEFT OUTER JOIN TBACC_ACCNUT_ACNT_SBJECT t2
		  ON  t1.ACCNUT_YEAR      = t2.ACCNUT_YEAR
		  AND t1.ACCNUT_ACNT_CODE = t2.ACCNUT_ACNT_CODE

	</select>
 </sqlMap>