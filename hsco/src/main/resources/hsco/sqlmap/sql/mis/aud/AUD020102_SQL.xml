<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="AUD020102_SQL">
	
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 근태정보 모니터링 목록 조회 -->
	<select id="AUD020102DAO.selectDclzDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT T1.DEPT_CODE
			     , T3.DEPT_NM
			     , T1.EMPNO
			     , T2.EMPNM
			     , SFHRM_GET_EMPL_INFO(T1.EMPNO, 'OFCPS_NM', T1.BGNDE)      AS OFCPS_NM
			     , SFHRM_GET_EMPL_INFO(T1.EMPNO, 'CLSF_NM', T1.BGNDE)       AS CLSF_NM
			     , T1.ASORT_CODE
			     , T4.CODE_NM                                               AS ASORT_CODE_NM
			     , T1.BGNDE
			     , T1.BEGIN_TM
			     , DECODE(T1.BEGIN_TM, NULL, T1.BGNDE,
			              SUBSTR(BGNDE, 1 ,4) || '-' || SUBSTR(BGNDE, 5, 2) || '-' || SUBSTR(BGNDE, 7, 2) || ' ' || BEGIN_TM, SUBSTR(BEGIN_TM, 1, 2) || ':' || SUBSTR(BEGIN_TM, 3, 2))    AS BGNDT
			     , T1.ENDDE
			     , T1.END_TM
			     , DECODE(T1.END_TM, NULL, T1.ENDDE,
			              SUBSTR(ENDDE, 1 ,4) || '-' || SUBSTR(ENDDE, 5, 2) || '-' || SUBSTR(ENDDE, 7, 2) || ' ' || END_TM, SUBSTR(END_TM, 1, 2) || ':' || SUBSTR(END_TM, 3, 2))          AS ENDDT
			     , T1.DAYCNT
			     , SUBSTR(T1.TIME, 1, 2) || ':' || SUBSTR(T1.TIME, 3, 2)    AS TIME
			     , T1.PRVONSH
			     , T1.SANCTN_NO
			     , T1.CNFIRM_AT
			     , T1.CANCL_SEQ
			     , T1.BSRP_SEQ
			  FROM TBHRM_WRKCP T1
			       LEFT OUTER JOIN TBHRM_HR_MASTR T2
			            ON T1.EMPNO = T2.EMPNO
			       LEFT OUTER JOIN TBHRM_DEPT T3
			            ON T1.DEPT_CODE = T3.DEPT_CODE
			       LEFT OUTER JOIN TBCOM_CMMN_CODE T4
			            ON T1.ASORT_CODE = T4.CODE
			           AND T4.GRP_CODE   = 'HRM028'
			 WHERE 1=1
			   AND SFCOM_GET_SANCTN_KND(T1.SANCTN_NO) = '5'
			   AND T1.CANCL_SEQ IS NULL
			   AND T1.CNFIRM_AT = '1'
			   AND (    T1.BGNDE BETWEEN #BGNDE# AND #ENDDE#
			         OR T1.ENDDE BETWEEN #BGNDE# AND #ENDDE# )
		]]>
		<isNotEmpty property="DEPT_CODE">
			   AND T1.DEPT_CODE = #DEPT_CODE#
		</isNotEmpty>
		<isNotEmpty property="EMPNM">
			   AND T2.EMPNM LIKE '%' || #EMPNM# || '%'
		</isNotEmpty>
			ORDER BY T1.DEPT_CODE
			       , T1.EMPNO
			       , T1.SEQ
	</select>  
	
	<!-- 출장정보 모니터링 목록 조회 -->
	<select id="AUD020102DAO.selectBsrpDtlsList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[		
			SELECT T1.DEPT_CODE
			     , T3.DEPT_NM
			     , T1.EMPNO
			     , T2.EMPNM
			     , SFHRM_GET_EMPL_INFO(T1.EMPNO, 'OFCPS_NM', T1.BSRP_BGNDE)    AS OFCPS_NM
			     , T1.BSRP_BGNDE
			     , T1.BSRP_ENDDE
			     , T1.BSRP_PURPS
			     , T1.DSTN_NM
			     , T1.MVMN_COURS
			     , T1.RM
			  FROM TBHRM_BSRP_INDVDL T1
			       LEFT OUTER JOIN TBHRM_HR_MASTR T2
			            ON T1.EMPNO = T2.EMPNO
			       LEFT OUTER JOIN TBHRM_DEPT T3
			            ON T1.DEPT_CODE = T3.DEPT_CODE
			 WHERE 1=1
			   AND SFCOM_GET_SANCTN_KND(T1.SANCTN_NO) = '5'
			   AND T1.CONFM_AT = '1'
			   AND (    T1.BSRP_BGNDE BETWEEN #BGNDE# AND #ENDDE#
			         OR T1.BSRP_ENDDE BETWEEN #BGNDE# AND #ENDDE# )
		]]>
		<isNotEmpty property="DEPT_CODE">
			   AND T1.DEPT_CODE = #DEPT_CODE#
		</isNotEmpty>
		<isNotEmpty property="EMPNM">
			   AND T2.EMPNM LIKE '%' || #EMPNM# || '%'
		</isNotEmpty>
			ORDER BY T1.DEPT_CODE
			       , T1.EMPNO
			       , T1.BSRP_SEQ
	</select>  
		
	<!-- 사원 목록 조회 -->
	<select id="AUD020102DAO.selectEmpList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.selectEmpList*/]]>
			SELECT T1.EMPNO
			     , T1.EMPNM
			     , T1.DEPT_CODE
			     , T2.DEPT_NM
			  FROM TBHRM_HR_MASTR T1
			       LEFT OUTER JOIN TBHRM_DEPT T2
			            ON T1.DEPT_CODE = T2.DEPT_CODE
			<isNotEmpty property="DEPT_CODE">
			   AND T1.DEPT_CODE = #DEPT_CODE#
			</isNotEmpty>
			<isNotEmpty property="EMPNO">
			   AND T1.EMPNO     = #EMPNO#
			</isNotEmpty>
			ORDER BY EMPNO
	</select>
		
	<!-- 개인별 월별초과근무 -->
	<select id="AUD020102DAO.selectMtOvtmwrkList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.selectMtOvtmwrkList*/]]>
		<![CDATA[
			WITH TBHRM_REWARD_MANAGE_TM AS (
			  SELECT OVTMWRK_YM
			       , EMPNO
			       , REWARD_SE
			       , SUM(CASE WHEN REWARD_SE = '1' THEN OVTMWRK_TM ELSE '0000' END) AS REWARD_TM
			       , SUM(CASE WHEN REWARD_SE = '2' THEN OVTMWRK_TM ELSE '0000' END) AS SUBST_TM
			  FROM OVTMWRK_REWARD_MANAGE
			  WHERE SUBSTR(OVTMWRK_YM,1,4) = #OVTMWRK_YEAR#
			  GROUP BY OVTMWRK_YM, EMPNO, REWARD_SE
			)
			, TBHRM_OVTMWRK_TM AS (
			    SELECT SUBSTR(OVTMWRK_DE,1,6) AS OVTMWRK_YM
			         , DEPT_CODE 
			         , EMPNO
			         , SUM(OVTIME_WORK_TIME) AS OVTIME_WORK_TIME /*시간외근무시간*/
			         , SUM(RESTDE_WORK_TIME) AS RESTDE_WORK_TIME /*휴일근무시간*/
			         , SUM(NIGHT_WORK_TIME)  AS NIGHT_WORK_TIME  /*야간근무시간*/
			    FROM TBHRM_OVTMWRK t1
			    WHERE SUBSTR(OVTMWRK_DE,1,4) = #OVTMWRK_YEAR#
			  	AND   EMPNO                  = #EMPNO#
			    GROUP BY SUBSTR(OVTMWRK_DE,1,6)
			           , DEPT_CODE 
			           , EMPNO
			)
			, TBHRM_OVTMWRK_LMT_TIME_TM AS (
			    SELECT DEPT_CODE
			         , DEPT_LMT_TIME   /*부서별 한도시간*/
			         , CMNL_LMT_TIME   /*사규 한도시간*/
			    FROM TBHRM_OVTMWRK_LMT_TIME
			    WHERE YEAR = #OVTMWRK_YEAR#
			)
			, MONTH12_TM AS (
			    SELECT #OVTMWRK_YEAR# || LPAD(LEVEL, 2, '0') MONTH_SEQ 
			    FROM DUAL CONNECT BY LEVEL <= 12
			)
			SELECT t1.MONTH_SEQ
			     , t2.OVTMWRK_YM
			     , t2.DEPT_CODE 
			     , t2.EMPNO
			     , LPAD(NVL(t2.OVTIME_WORK_TIME, '0000'),4, '0') AS OVTIME_WORK_TIME /*시간외근무시간*/
			     , LPAD(NVL(t2.RESTDE_WORK_TIME, '0000'),4, '0') AS RESTDE_WORK_TIME /*휴일근무시간*/
			     , LPAD(NVL(t2.NIGHT_WORK_TIME, '0000'),4, '0')  AS NIGHT_WORK_TIME  /*야간근무시간*/
			     , TO_NUMBER(NVL(SUBSTR(LPAD(NVL(t2.OVTIME_WORK_TIME, '0000'),4, '0'), 1, 2), 0)) AS OVTIME_WORK_TIME2	/*시간외근무시간*/
			     , TO_NUMBER(NVL(SUBSTR(LPAD(NVL(t2.RESTDE_WORK_TIME, '0000'),4, '0'), 1, 2), 0)) AS RESTDE_WORK_TIME2	/*휴일근무시간*/
			     , TO_NUMBER(NVL(SUBSTR(LPAD(NVL(t2.NIGHT_WORK_TIME, '0000'),4, '0'), 1, 2), 0))  AS NIGHT_WORK_TIME2	    /*야간근무시간*/
			     , LPAD(NVL(t3.REWARD_TM, '0000'),4, '0')        AS REWARD_TM        /*보상휴가시간*/
			     , LPAD(NVL(t3.SUBST_TM, '0000'),4, '0')         AS SUBST_TM         /*대체휴가시간*/
			     , LPAD(NVL(t2.OVTIME_WORK_TIME, '0000') + NVL(t2.RESTDE_WORK_TIME, '0000') - NVL(t3.REWARD_TM, '0000'),4,'0') AS OVTIME_JAN_TM /*시간외+휴일 잔여시간*/
			     , LPAD(NVL(t2.NIGHT_WORK_TIME, '0000') - NVL(t3.SUBST_TM, '0000'),4,'0')                                      AS NIGHT_JAN_TM  /*야간근무 잔여시간*/
			     , CASE WHEN t4.DEPT_LMT_TIME IS NOT NULL THEN t4.DEPT_LMT_TIME
			            WHEN t4.CMNL_LMT_TIME IS NOT NULL THEN t4.CMNL_LMT_TIME 
			            ELSE '56' /*디폴트 초과근무 한도값*/
			       END AS DEPT_LMT_TIME
			FROM MONTH12_TM t1
			  LEFT OUTER JOIN TBHRM_OVTMWRK_TM t2
			    ON  t1.MONTH_SEQ = t2.OVTMWRK_YM
			  LEFT OUTER JOIN TBHRM_REWARD_MANAGE_TM t3
			    ON  t2.OVTMWRK_YM = t3.OVTMWRK_YM
			    AND t2.EMPNO      = t3.EMPNO
			    AND t3.REWARD_SE  = '1'/*1:보상, 2:대체*/
			  LEFT OUTER JOIN TBHRM_OVTMWRK_LMT_TIME_TM t4
			    ON  t2.DEPT_CODE  = t4.DEPT_CODE
			ORDER BY t1.MONTH_SEQ
		]]>
	</select>
		
	<!-- 초과근무 상세내역 -->
	<select id="AUD020102DAO.selectIndvdlOvtmwrkList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.selectIndvdlOvtmwrkList*/]]>
			SELECT t1.OVTMWRK_DE
			  ,t1.SEQ
			  ,DECODE(TO_CHAR(TO_DATE(t1.OVTMWRK_DE, 'YYYYMMDD'), 'D'), '1', '일' , '2', '월' , '3', '화' , '4', '수' , '5', '목' , '6', '금' , '7', '토' ) AS OVTMWRK_DAY
			  ,t1.DEPT_CODE
			  ,t2.DEPT_NM
			  ,t5.CODE_NM AS HR_CLSF_NM
			  ,t1.EMPNO
			  ,t3.EMPNM
			  ,t1.REQST_BEGIN_TM														/*신청시작시각*/
			  ,t1.REQST_END_TM															/*신청종료시각*/
			  ,t1.REQST_TIME															/*신청시간*/
			  ,t1.RCOGN_BEGIN_TM														/*인정시작시각*/
			  ,t1.RCOGN_END_TM															/*인정종료시각*/
			  ,t1.RCOGN_TIME															/*인정시간*/
			  ,TO_NUMBER(NVL(SUBSTR(t1.OVTIME_WORK_TIME, 1, 2), 0)) AS OVTIME_WORK_TIME	/*시간외근무시간*/
			  ,TO_NUMBER(NVL(SUBSTR(t1.RESTDE_WORK_TIME, 1, 2), 0)) AS RESTDE_WORK_TIME	/*휴일근무시간*/
			  ,TO_NUMBER(NVL(SUBSTR(t1.NIGHT_WORK_TIME, 1, 2), 0)) AS NIGHT_WORK_TIME	/*야간근무시간*/
			  ,t1.WORK_DRCTR															/*근무지시자*/
			  ,t1.WORK_PURPS															/*근무목적*/
			  ,t1.RM                                                                    /*비고*/
			FROM TBHRM_OVTMWRK t1
			LEFT OUTER JOIN VWHRM_DEPT t2
			ON  t1.DEPT_CODE = t2.DEPT_CODE
			LEFT OUTER JOIN TBHRM_HR_MASTR t3
			ON  t1.EMPNO = t3.EMPNO
			LEFT OUTER JOIN TBCOM_CMMN_CODE t5
			ON  t5.GRP_CODE   = 'HRM002'
			AND t3.HR_CLSF_SE = t5.CODE
			WHERE 1=1
			<isNotEmpty property="OVTMWRK_YM">
				AND SUBSTR(t1.OVTMWRK_DE,1,6) = #OVTMWRK_YM#
			</isNotEmpty>
			<isEmpty property="OVTMWRK_YM">
				AND t1.OVTMWRK_DE = 'NO_DATA'
			</isEmpty>
			AND t1.EMPNO = #EMPNO#
			ORDER BY t1.OVTMWRK_DE ASC
			  ,t1.SEQ ASC
			  ,t1.REQST_BEGIN_TM ASC
	</select>
		
	<!-- 알림대상 목록 조회 -->
	<select id="AUD020102DAO.selectNtcnTrget" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.selectNtcnTrget*/]]>
			SELECT  t1.NTCN_SE
			       ,t1.EMPNO
			       ,t2.EMPNM
			       ,H_DECRYPT(t2.TELNO_2)  AS TELNO_2
			       ,t2.EMAIL
			FROM TBAUD_NTCN_TRGET t1
				LEFT OUTER JOIN TBHRM_HR_MASTR t2
				  ON t1.EMPNO = t2.EMPNO
			WHERE t1.NTCN_SE = '01'		/*알림구분(01:인사정보부당사례)*/
	</select>
	
	<!-- 알림대상 추가 -->
	<insert id="AUD020102DAO.ntcnTrgetC" parameterClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.ntcnTrgetC*/]]>
			INSERT INTO TBAUD_NTCN_TRGET (
					 NTCN_SE           /*알림구분*/
					,EMPNO             /*사번*/
					,REGISTER_ID       /*등록자ID*/
					,REGIST_DT         /*등록일시*/
					,UPDUSR_ID         /*수정자ID*/
					,UPDT_DT           /*수정일시*/
				) VALUES (
					 '01'              /*알림구분(01:인사정보부당사례)*/
					,#EMPNO#           /*사번*/
					,#S_USER_ID#       /*등록자ID*/
					,SYSDATE           /*등록일시*/
					,#S_USER_ID#       /*수정자ID*/
					,SYSDATE           /*수정일시*/
				)
	</insert>
	
	<!-- 알림대상 삭제 -->
	<update id="AUD020102DAO.ntcnTrgetD" parameterClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.ntcnTrgetD*/]]>
			DELETE FROM TBAUD_NTCN_TRGET
			 WHERE NTCN_SE = '01'           /*알림구분(01:부당사례)*/
			   AND EMPNO   = #EMPNO#        /*사번*/
	</update>
	
	<!-- 중복사례 조회 -->
	<select id="AUD020102DAO.selectInjstcNtcn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[/*AUD020102DAO.selectInjstcNtcn*/]]>
		<![CDATA[
			SELECT T.SRCH_DE
			     , T.INJSTC_SE
			     , T.EMPNO
			     , T.EMPNM
			     , T.WORK_DE
			     , T.WORK_BEGIN_TM
			     , T.WORK_END_TM
			     , T.BSRP_BGNDE
			     , T.BSRP_BEGIN_TM
			     , T.BSRP_ENDDE
			     , T.BSRP_END_TM
			     , T.DSTN_NM
			     , T.BGNDE
			     , T.BEGIN_TM
			     , T.ENDDE
			     , T.END_TM
			     , T.ASORT_CODE
			     , T.ASORT_CODE_NM
			     , T.DEPT_CODE
			     , T.DEPT_NM
			  FROM (
			        SELECT T1.SRCH_DE
			             , CASE WHEN (t2.EMPNO IS NOT NULL AND t3.EMPNO IS NOT NULL) THEN '1'    /*출입 VS 출장*/
			                    WHEN (t3.EMPNO IS NOT NULL AND t4.EMPNO IS NOT NULL) THEN '2'    /*출장 VS 근태*/
			                    WHEN (t2.EMPNO IS NOT NULL AND t4.EMPNO IS NOT NULL) THEN '3'    /*출입 VS 근태*/
			               END                                AS INJSTC_SE
			             , T1.EMPNO
			             , T1.EMPNM
			             , T2.WORK_DE
			             , T2.BEGIN_TM                        AS WORK_BEGIN_TM
			             , T2.END_TM                          AS WORK_END_TM
			             , T3.BSRP_BGNDE
			             , T3.BSRP_BEGIN_TM
			             , T3.BSRP_ENDDE
			             , T3.BSRP_END_TM
			             , T3.DSTN_NM
			             , T4.BGNDE
			             , T4.BEGIN_TM
			             , T4.ENDDE
			             , T4.END_TM
			             , T4.ASORT_CODE
			             , T4.ASORT_CODE_NM
			             , NVL(T3.DEPT_CODE, T4.DEPT_CODE)    AS DEPT_CODE
			             , NVL(T5.DEPT_NM, T6.DEPT_NM)        AS DEPT_NM
			          FROM (
			                /*조회조건*/
			                SELECT S1.EMPNO
			                     , S1.EMPNM
			                     , S2.SRCH_DE
			                  FROM TBHRM_HR_MASTR S1
			                     , (
			                        SELECT 1                                                               AS JOIN_KEY
			                             , TO_CHAR(TO_DATE(#BGNDE#, 'YYYYMMDD') + LEVEL - 1,'YYYYMMDD')    AS SRCH_DE
			                          FROM DUAL
			                        CONNECT BY LEVEL < TO_DATE(#ENDDE#, 'YYYYMMDD') - TO_DATE(#BGNDE#, 'YYYYMMDD') + 2
			                       ) S2
			                 WHERE (S2.SRCH_DE >= S1.ECNY_DE AND S2.SRCH_DE <= NVL(S1.RETIRE_DE, #ENDDE#))
		]]>
		<isNotEmpty property="EMPNO">
			                   AND S1.EMPNO = #EMPNO#
		</isNotEmpty>
		<![CDATA[
			               ) T1
			               LEFT OUTER JOIN (
			                                /*출입정보*/
			                                SELECT S2.EMPNO
			                                     , S1.WORK_DE
			                                      ,S1.BEGIN_TM
			                                      ,S1.END_TM
			                                  FROM (
			                                        SELECT DCLZ_ID, WORK_DE, BEGIN_TM, END_TM
			                                          FROM TBHRM_DCLZ_DTLS_MANAGE
			                                         WHERE (WORK_DE >= #BGNDE# AND WORK_DE <= #ENDDE#)
			                                        GROUP BY DCLZ_ID, WORK_DE, BEGIN_TM, END_TM
			                                       ) S1
			                                       INNER JOIN (
			                                                    SELECT DCLZ_ID, EMPNO
			                                                      FROM TBHRM_DCLZ_MAPPING_MANAGE
			                                                    GROUP BY DCLZ_ID, EMPNO
			                                                  ) S2
			                                            ON S1.DCLZ_ID = S2.DCLZ_ID
			                                 WHERE 1=1
			                               ) T2
			                    ON T1.EMPNO = T2.EMPNO
			                   AND T1.SRCH_DE = T2.WORK_DE
			               LEFT OUTER JOIN (
			                                /*출장정보*/
			                                SELECT S1.EMPNO
			                                     , S1.DEPT_CODE
			                                     , S1.BSRP_BGNDE
			                                     , S1.BSRP_BEGIN_TM
			                                     , S1.BSRP_ENDDE
			                                     , S1.BSRP_END_TM
			                                     , s1.DSTN_NM
			                                  FROM TBHRM_BSRP_INDVDL S1
			                                       LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR S2
			                                            ON S1.SANCTN_NO = S2.SANCTN_NO
			                                 WHERE 1=1
			                                   AND S1.CONFM_AT   = '1'
			                                   AND S2.SANCTN_KND = '5'
			                               ) T3
			                    ON T1.EMPNO = T3.EMPNO
			                   AND (T1.SRCH_DE >= T3.BSRP_BGNDE AND T1.SRCH_DE <= T3.BSRP_ENDDE)
			               LEFT OUTER JOIN (
			                                /*근태정보*/
			                                SELECT S1.EMPNO
			                                     , S1.DEPT_CODE
			                                     , S1.BGNDE
			                                     , S1.BEGIN_TM
			                                     , S1.ENDDE
			                                     , S1.END_TM
			                                     , S1.ASORT_CODE
			                                     , S3.CODE_NM       AS ASORT_CODE_NM
			                                  FROM TBHRM_WRKCP S1
			                                       LEFT OUTER JOIN TBCOM_ELCTRN_SANCTN_MASTR S2
			                                            ON S1.SANCTN_NO = S2.SANCTN_NO
			                                       LEFT OUTER JOIN TBCOM_CMMN_CODE S3
			                                            ON s1.ASORT_CODE = S3.CODE
			                                           AND S3.GRP_CODE   = 'HRM028'
			                                 WHERE 1=1
			                                   AND S2.SANCTN_KND = '5'
			                                   AND S1.CANCL_SEQ IS NULL
			                                   AND (S1.BGNDE >= #BGNDE# AND S1.BGNDE <= #ENDDE#)
			                                   AND (S1.ENDDE >= #BGNDE# AND S1.ENDDE <= #ENDDE#)
			                               ) T4
			                    ON T1.EMPNO = T4.EMPNO
			                   AND (T1.SRCH_DE >= T4.BGNDE AND T1.SRCH_DE <= T4.ENDDE)
			               LEFT OUTER JOIN TBHRM_DEPT T5
			                    ON T3.DEPT_CODE = T5.DEPT_CODE
			               LEFT OUTER JOIN TBHRM_DEPT T6
			                    ON T4.DEPT_CODE = T6.DEPT_CODE
			         WHERE 1=1
			           AND (
			                (T2.EMPNO IS NOT NULL AND T3.EMPNO IS NOT NULL)
			                OR
			                (T3.EMPNO IS NOT NULL AND T4.EMPNO IS NOT NULL)
			                OR
			                (T2.EMPNO IS NOT NULL AND T4.EMPNO IS NOT NULL)
			               )
		]]>
		<isNotEmpty property="DEPT_CODE">
			           AND (T3.DEPT_CODE = #DEPT_CODE# OR T4.DEPT_CODE = #DEPT_CODE#)
		</isNotEmpty>
			       ) T
			ORDER BY T.INJSTC_SE
			       , T.DEPT_CODE
			       , T.SRCH_DE
			       , T.EMPNO
	</select>

</sqlMap>