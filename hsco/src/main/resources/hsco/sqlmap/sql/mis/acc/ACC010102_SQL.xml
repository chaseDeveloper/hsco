<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ACC010102_SQL">	
	
	<!-- 마감일관리 목록 -->
	<select id="ACC010102DAO.closDeManageList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT 
			 CLOS_SE
			,CLOS_YM
			,TO_CHAR(CHIT_CLOS_DT,'YYYY-MM-DD HH24:MI')		AS CHIT_CLOS_DT
			,NVL(CHIT_CLOS_AT,0) AS CHIT_CLOS_AT
			,TO_CHAR(STACNT_CLOS_DT,'YYYY-MM-DD HH24:MI')	AS STACNT_CLOS_DT
			,NVL(STACNT_CLOS_AT,0) AS STACNT_CLOS_AT
			,TO_CHAR(SE_ACCNUT_CLOS_DT,'YYYY-MM-DD HH24:MI')	AS SE_ACCNUT_CLOS_DT
			,NVL(SE_ACCNUT_CLOS_AT,0) AS SE_ACCNUT_CLOS_AT
			,CHIT_CLOS_AT		AS ORG_CHIT_CLOS_AT
			,STACNT_CLOS_AT		AS ORG_STACNT_CLOS_AT
			,SE_ACCNUT_CLOS_AT	AS ORG_SE_ACCNUT_CLOS_AT
		FROM TBACC_CLOS_DE_MANAGE
		WHERE CLOS_YM LIKE #CLOS_YR# || '%'
		ORDER BY CLOS_YM, CLOS_SE
	]]>
	</select>
	
	<!-- 마감일관리 등록 -->
	<insert id="ACC010102DAO.closDeManageC" parameterClass="java.util.HashMap">
	<![CDATA[
		INSERT INTO TBACC_CLOS_DE_MANAGE
		(
			 CLOS_SE
			,CLOS_YM
			,CHIT_CLOS_DT
			,CHIT_CLOS_AT
			,STACNT_CLOS_DT
			,STACNT_CLOS_AT
			,SE_ACCNUT_CLOS_DT
			,SE_ACCNUT_CLOS_AT
			,REGISTER_ID
			,REGIST_DT
			,UPDUSR_ID
			,UPDT_DT
		) VALUES (
			 #CLOS_SE#
			,#CLOS_YM#
			,DECODE(#CHIT_CLOS_AT#,'1',SYSDATE,NULL)
			,NVL(#CHIT_CLOS_AT#,'0')
			,DECODE(#STACNT_CLOS_AT#,'1',SYSDATE,NULL)
			,NVL(#STACNT_CLOS_AT#,'0')
			,DECODE(#SE_ACCNUT_CLOS_DT#,'1',SYSDATE,NULL)
			,NVL(#SE_ACCNUT_CLOS_AT#,'0')
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	]]>
	</insert>
	
	<!-- 마감일관리 수정 -->
	<update id="ACC010102DAO.closDeManageU" parameterClass="java.util.HashMap">
		UPDATE TBACC_CLOS_DE_MANAGE
		SET
			 UPDUSR_ID          = #S_USER_ID#     
			,UPDT_DT            = SYSDATE
			,CHIT_CLOS_AT       = #CHIT_CLOS_AT#
		<isNotEqual property="CHIT_CLOS_AT" compareProperty="ORG_CHIT_CLOS_AT">
			<isEqual property="CHIT_CLOS_AT" compareValue="1">
			,CHIT_CLOS_DT       = SYSDATE  
			</isEqual>
			<isNotEqual property="CHIT_CLOS_AT" compareValue="1">
			,CHIT_CLOS_DT       = null
			</isNotEqual>
		</isNotEqual>
			,STACNT_CLOS_AT     = #STACNT_CLOS_AT#
		<isNotEqual property="STACNT_CLOS_AT" compareProperty="ORG_STACNT_CLOS_AT">
			<isEqual property="STACNT_CLOS_AT" compareValue="1">
			,STACNT_CLOS_DT     = SYSDATE
			</isEqual>
			<isNotEqual property="STACNT_CLOS_AT" compareValue="1">
			,STACNT_CLOS_DT     = null
			</isNotEqual>
		</isNotEqual>
			,SE_ACCNUT_CLOS_AT  = #SE_ACCNUT_CLOS_AT#
		<isNotEqual property="SE_ACCNUT_CLOS_AT" compareProperty="ORG_SE_ACCNUT_CLOS_AT">
			<isEqual property="SE_ACCNUT_CLOS_AT" compareValue="1">
			,SE_ACCNUT_CLOS_DT  = SYSDATE
			</isEqual>
			<isNotEqual property="SE_ACCNUT_CLOS_AT" compareValue="1">
			,SE_ACCNUT_CLOS_DT  = null
			</isNotEqual>
		</isNotEqual>
		WHERE CLOS_SE			= #CLOS_SE#
		  AND CLOS_YM 			= #CLOS_YM#
	</update>
	
	<!-- 마감일관리 삭제 -->
	<delete id="ACC010102DAO.closDeManageD" parameterClass="java.util.HashMap">
	<![CDATA[
		DELETE FROM TBACC_CLOS_DE_MANAGE
		WHERE CLOS_SE			= #CLOS_SE#
		  AND CLOS_YM 			= #CLOS_YM#
	]]>
	</delete>
	
		<!-- 전표리스트 -->
	<select id="ACC010102DAO.selectinverseJrnlzpr" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT
     		 t1.CHIT_CONFM_AT   	/* 전표승인여부 */
		    ,t1.CHIT_DE         	/* 전표일자 */
		    ,t1.ACCNUT_YEAR			/* 회계년도	*/
		    ,t1.CHIT_NO         	/* 전표번호 */
		    ,t2.BUDGET_ACNT_LIST  	/* 예산계정목록 */
		    ,t3.ACCNUT_ACNT_LIST  	/* 회계계정목록 */
		    ,t1.DECSN_YEAR      	/* 결의년도 */
		    ,t1.DECSN_NO        	/* 결의번호 */
		    ,t1.CHIT_SE				/* 전표구분 */
		    ,t1.CHIT_KND			/* 전표종류 */
		    ,t1.CHIT_TY				/* 전표유형 */
		    ,NVL(t1.CPTAL_EXPNDTR_DE, t5.CPTAL_EXPNDTR_ACNTBK_DE) AS CPTAL_EXPNDTR_DE	/* 자금지출일자 */
		    ,t4.DEBTOR_AMOUNT   	/* 차변 */
		    ,t4.CRDIT_AMOUNT    	/* 대변 */
		    ,t1.SUMRY_1         	/* 적요1 */
		    ,t1.SUMRY_2         	/* 적요2 */
		    ,t2.BUDGET_YEAR			/* 예산년도 */      
		    ,t2.BSNS_SE          	/* 사업구분 */
		    ,t2.BALC_SE          	/* 수지구분 */
		    ,t2.BUDGET_ACNT_CODE 	/* 예산코드 */
		    ,t2.BUDGET_ACNT_NM   	/* 예산명 */
		    ,t2.EXPNDTR_UNIT_CODE	/* 지출단위코드 */
		    ,t2.EXPNDTR_UNIT_NM  	/* 지출단위명 */
		    ,t2.DEPT_CODE			/* 부서코드 */
		    ,t5.ITNC_DE				/* 발의일자 */
		    ,t5.DET_DCSN_DE			/* 채무확정일자 */
		    ,t1.RVS_JRNLZ_CHIT_NO	/*역분개전표번호*/
		    ,NVL2(t6.RVS_JRNLZ_CHIT_NO, '1', '0') AS RVS_JRNLZ_SE /*역분개여부*/
		    ,DECODE(t1.CHIT_SE,'1','VAL0','2','VAL1',NULL) AS CHIT_TY_DATACOL /* 전표유형 datacolumn */
		FROM TBACC_CHIT_MASTR t1
		     LEFT OUTER JOIN
		     (SELECT 
		           ACCNUT_YEAR
		          ,CHIT_NO
		          ,LISTAGG(BUDGET_ACNT_NM,',') WITHIN GROUP(ORDER BY NULL) 		AS BUDGET_ACNT_LIST
		          ,MAX(BUDGET_YEAR) KEEP(DENSE_RANK FIRST ORDER BY NULL) 		AS BUDGET_YEAR
		          ,MAX(BSNS_SE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS BSNS_SE
		          ,MAX(BALC_SE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS BALC_SE
		          ,MAX(BUDGET_ACNT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS BUDGET_ACNT_CODE
              	  ,MAX(BUDGET_ACNT_NM) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS BUDGET_ACNT_NM
		          ,MAX(EXPNDTR_UNIT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS EXPNDTR_UNIT_CODE
              	  ,MAX(EXPNDTR_UNIT_NM) KEEP(DENSE_RANK FIRST ORDER BY NULL) 	AS EXPNDTR_UNIT_NM
              	  ,MAX(DEPT_CODE) KEEP(DENSE_RANK FIRST ORDER BY NULL) 			AS DEPT_CODE
		      FROM (
		      SELECT
		            DISTINCT
		           a1.ACCNUT_YEAR
		          ,a1.CHIT_NO
		          ,a2.BUDGET_ACNT_NM
		          ,a1.BUDGET_YEAR
		          ,a1.BSNS_SE
		          ,a1.BALC_SE
		          ,a1.BUDGET_ACNT_CODE
		          ,a1.EXPNDTR_UNIT_CODE
              	  ,a3.EXPNDTR_UNIT_NM
              	  ,a1.DEPT_CODE
		      FROM TBACC_CHIT_DETAIL a1
		           LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE a2
		           ON  a1.BUDGET_YEAR = a2.YEAR
		           AND a1.BSNS_SE = a2.BSNS_SE
		           AND a1.BALC_SE = a2.BALC_SE
		           AND a1.BUDGET_ACNT_CODE = a2.BUDGET_ACNT_CODE
		           LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE a3
		           ON  a1.BUDGET_YEAR = a3.YEAR
		           AND a1.BSNS_SE = a3.BSNS_SE
		           AND a1.BALC_SE = a3.BALC_SE
		           AND a1.BUDGET_ACNT_CODE = a3.BUDGET_ACNT_CODE
		           AND a1.EXPNDTR_UNIT_CODE = a3.EXPNDTR_UNIT_CODE
		      )
		      GROUP BY ACCNUT_YEAR, CHIT_NO
		     ) t2
		     ON t1.ACCNUT_YEAR = t2.ACCNUT_YEAR
		     AND t1.CHIT_NO = t2.CHIT_NO
		     LEFT OUTER JOIN
		     (SELECT 
		           ACCNUT_YEAR
		          ,CHIT_NO
		          ,LISTAGG(ACCNUT_ACNT_NM,',') WITHIN GROUP(ORDER BY NULL) AS ACCNUT_ACNT_LIST
		      FROM (
		            SELECT
		                 DISTINCT
		                 b1.ACCNUT_YEAR
		                ,b1.CHIT_NO
		                ,b2.ACCNUT_ACNT_NM
		            FROM TBACC_CHIT_DETAIL b1
		                 LEFT OUTER JOIN
		                 TBACC_ACCNUT_ACNT_SBJECT b2
		                 ON  b1.ACCNUT_YEAR = b2.ACCNUT_YEAR
		                 AND  b1.ACCNUT_ACNT_CODE = b2.ACCNUT_ACNT_CODE
		          )
		      GROUP BY ACCNUT_YEAR, CHIT_NO
		     ) t3
		     ON t1.ACCNUT_YEAR = t3.ACCNUT_YEAR
		     AND t1.CHIT_NO = t3.CHIT_NO
		    LEFT OUTER JOIN
		    (SELECT 
		         ACCNUT_YEAR
		        ,CHIT_NO
		        ,NVL(SUM(DEBTOR_AMOUNT),0) AS DEBTOR_AMOUNT
		        ,NVL(SUM(CRDIT_AMOUNT),0) AS CRDIT_AMOUNT
		     FROM TBACC_CHIT_DETAIL
		     GROUP BY ACCNUT_YEAR, CHIT_NO
		    ) t4
		      ON t1.ACCNUT_YEAR = t4.ACCNUT_YEAR
		     AND t1.CHIT_NO = t4.CHIT_NO
		    LEFT OUTER JOIN TBACC_EXP_DSN_MASTR t5
		      ON t1.DECSN_YEAR = t5.DECSN_YEAR
			 AND t1.DECSN_NO = t5.DECSN_NO
		    LEFT OUTER JOIN
		    (SELECT RVS_JRNLZ_CHIT_NO
		     FROM TBACC_CHIT_MASTR
		     WHERE CHIT_SE = '3'
		       AND RVS_JRNLZ_CHIT_NO IS NOT NULL			/*역분개된 데이터만 봄*/
		    ) t6
		  ON t1.CHIT_NO = t6.RVS_JRNLZ_CHIT_NO
		WHERE 1=1
		  AND t1.CHIT_DE BETWEEN #CHIT_FROM_DE# AND #CHIT_TO_DE#
		  AND t1.CHIT_SE = '3'
		  AND t1.RVS_JRNLZ_CHIT_NO IS NULL			/*역분개된 데이터는 보지 않음*/
	</select>
	
	<!-- 전표번호 채번 -->
	<select id="ACC010102DAO.chitNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT SFACC_CHIT_NO(#RVS_JRNLZ_CHIT_DE#, #S_USER_ID#) AS CHIT_NO
		FROM DUAL
	</select>
	
	
		<!-- (팝업)기존역분개 전표번호 찾기 -->
	<select id="ACC010102DAO.inverseJrnlzprR" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[/*ACC010102DAO.inverseJrnlzprR*/]]>
		SELECT CHIT_NO
		FROM TBACC_CHIT_MASTR
		WHERE RVS_JRNLZ_CHIT_NO = #CHIT_NO#
	</select>

	<!-- (팝업)기존역분개 삭제, 전표리스트 -->
	<delete id="ACC010102DAO.inverseJrnlzprD" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.inverseJrnlzpr*/]]>
		DELETE FROM TBACC_CHIT_MASTR
		WHERE CHIT_NO = #OLD_CHIT_NO#
	</delete>
	
	<!-- (팝업)기존역분개(전표상세) 삭제 -->
	<delete id="ACC010102DAO.inverseJrnlzprDetailD" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.inverseJrnlzprDetail*/]]>
		DELETE FROM TBACC_CHIT_DETAIL
		WHERE CHIT_NO = #OLD_CHIT_NO#
	</delete>	
	
	<!-- (팝업)역분개 등록, 전표리스트 -->
	<insert id="ACC010102DAO.inverseJrnlzpr" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.inverseJrnlzpr*/]]>
		INSERT INTO TBACC_CHIT_MASTR
		(
			 ACCNUT_YEAR                  /*회계년도*/
			,CHIT_NO                      /*전표번호*/
			,DECSN_YEAR                   /*결의년도*/
			,DECSN_NO                     /*결의번호*/
			,CHIT_DE                      /*전표일자*/
			,CHIT_SE                      /*전표구분*/
			,CHIT_KND                     /*전표종류*/
			,CPTAL_EXPNDTR_DE             /*자금지출일자*/
			,SUMRY_1                      /*적요1*/
			,SUMRY_2                      /*적요2*/
			,CHIT_CONFM_AT                /*전표승인여부*/
			,REGISTER_ID                  /*등록자ID*/
			,REGIST_DT                    /*등록일시*/
			,UPDUSR_ID                    /*수정자ID*/
			,UPDT_DT                      /*수정일시*/
			,CHIT_TY                      /*전표유형*/
			,RVS_JRNLZ_CHIT_NO            /*역분개전표번호*/
		) VALUES (
			 SUBSTR(#RVS_JRNLZ_CHIT_DE#,1,4) /*회계년도*/
			,#NEW_CHIT_NO#                /*전표번호*/
			,#DECSN_YEAR#                 /*결의년도*/
			,#DECSN_NO#                   /*결의번호*/
			,#RVS_JRNLZ_CHIT_DE#          /*역분개전표일자*/
			,'3'	                      /*전표구분*/
			,#CHIT_KND#                   /*전표종류*/
			,#CPTAL_EXPNDTR_DE#           /*자금지출일자*/
			,#SUMRY_1#                    /*적요1*/
			,#SUMRY_2#                    /*적요2*/
			,#CHIT_CONFM_AT#              /*전표승인여부*/
			,#S_USER_ID#                  /*등록자ID*/
			,SYSDATE                      /*등록일시*/
			,#S_USER_ID#                  /*수정자ID*/
			,SYSDATE                      /*수정일시*/
			,#CHIT_TY#                    /*전표유형*/
			,#CHIT_NO#                    /*역분개전표번호*/
		)
	</insert>
	
	<!-- (팝업)역분개 등록, 전표상세 -->
	<insert id="ACC010102DAO.inverseJrnlzprDetail" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.inverseJrnlzprDetail*/]]>
		INSERT INTO TBACC_CHIT_DETAIL
		(
			 ACCNUT_YEAR      
			,CHIT_NO          
			,SEQ              
			,ACCNUT_ACNT_CODE 
			,BUDGET_YEAR      
			,BSNS_SE          
			,BALC_SE          
			,BUDGET_ACNT_CODE 
			,DEPT_CODE        
			,EXPNDTR_UNIT_CODE
			,BSNS_CODE        
			,PRMPC_YEAR       
			,PRMPC_CODE       
			,DEBTOR_AMOUNT    
			,CRDIT_AMOUNT     
			,REGISTER_ID      
			,REGIST_DT        
			,UPDUSR_ID        
			,UPDT_DT          
		) SELECT
			SUBSTR(#RVS_JRNLZ_CHIT_DE#,1,4) ,
			#NEW_CHIT_NO# ,
			SEQ ,
			ACCNUT_ACNT_CODE ,
			BUDGET_YEAR ,
			BSNS_SE ,
			BALC_SE ,
			BUDGET_ACNT_CODE ,
			DEPT_CODE ,
			EXPNDTR_UNIT_CODE ,
			BSNS_CODE ,
			PRMPC_YEAR ,
			PRMPC_CODE ,
			CRDIT_AMOUNT AS DEBTOR_AMOUNT,           /*차변->대변*/
			DEBTOR_AMOUNT AS CRDIT_AMOUNT,           /*대변->차변*/
			REGISTER_ID ,
			REGIST_DT ,
			UPDUSR_ID ,
			UPDT_DT
		FROM TBACC_CHIT_DETAIL
		WHERE CHIT_NO		= #CHIT_NO#
	</insert>
	
	
	<!-- 기존역분개건 CHIT_NO찾기위해서 역분개건 검색 -->
	<select id="ACC010102DAO.searchInverseNo" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT
			 t2.CHIT_NO                 /* 역분개건 전표번호 */
		FROM TBACC_CHIT_MASTR t1
		INNER JOIN TBACC_CHIT_MASTR t2  /*역분개*/
		  ON  t1.CHIT_NO = t2.RVS_JRNLZ_CHIT_NO
		WHERE 1=1
		  AND t1.CHIT_DE BETWEEN #INVERSE_CHITDE#||'01' AND SUBSTR(#INVERSE_CHITDE#,0,4)+1||'0101'
		  AND t1.CHIT_SE = '3'
		  AND t2.RVS_JRNLZ_CHIT_NO IS NOT NULL	/*역분개된 데이터만 봄*/
      ORDER BY t1.CHIT_NO
	</select>
	
		<!-- (팝업)기존역분개 DETAIL 삭제, 전표리스트 -->
	<delete id="ACC010102DAO.stacntInverseDetailD" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.stacntInverseDetailD*/]]>
		DELETE FROM TBACC_CHIT_DETAIL
		WHERE CHIT_NO =  #CHIT_NO#
	</delete>
	
	
	<!-- (팝업)기존역분개 삭제, 전표리스트 -->
	<delete id="ACC010102DAO.stacntInverseD" parameterClass="java.util.HashMap">
	<![CDATA[/*ACC010102DAO.stacntInverseD*/]]>
		DELETE FROM TBACC_CHIT_MASTR
		WHERE CHIT_NO =  #CHIT_NO#
	</delete>

</sqlMap>