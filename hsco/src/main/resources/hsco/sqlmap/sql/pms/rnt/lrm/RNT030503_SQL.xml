<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RNT030503">

	<!-- 쿼리명 : 보증보험신청 명세서
	설명 : 보증보험신청 명세서
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2015.11.02
	-->
	<select id="RNT030503DAO.getList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
	   A.BILDNG_STRCT
	 , A.RE_CNTRCT_SE
	 , A.ELCTRN_SANCTN_NO
	 , A.CNTRCTR_NO
	 , A.CNTRCTR_CO
	 , A.HOUSE_KND
	 , A.ZIP
	 , A.ADRES 
	 , A.ADRES_DETAIL
	 , A.HEAT_SE
	 , A.FLOOR_SE
	 , A.AR
	 , A.ALL_ROOM_CO
	 , A.RENT_ROOM_CO
	 , A.PC_DECSN_MTH
	 , NVL(A.HOUSE_POTVALE,0) AS HOUSE_POTVALE
	 , A.RCOGN_RATE
	 , NVL(A.HOUSE_PC,0) AS HOUSE_PC
	 , A.DEBT_RATE
	 , NVL(A.HOUSE_STDPC,0) AS HOUSE_STDPC
	 , NVL(A.FDLTR_ESTBS_AMOUNT,0) AS FDLTR_ESTBS_AMOUNT
	 , NVL(A.RLDB_ESTBS_AMOUNT,0) AS RLDB_ESTBS_AMOUNT
	 , NVL(A.LEGACY_RENT_AMOUNT,0) AS LEGACY_RENT_AMOUNT
	 , NVL(A.LFSTS_CONFM_AMOUNT,0) AS LFSTS_CONFM_AMOUNT
	 , A.EVL_DE
	 , A.DCSN_DE
	 , A.CNTRCT_DE
	 , A.SPORT_BGNDE
	 , CASE WHEN SUBSTR(A.SPORT_BGNDE , 1,4) = SUBSTR(A.DCSN_DE , 1,4) THEN SPORT_BGNDE ELSE SUBSTR(A.DCSN_DE , 1,4)||SUBSTR(A.SPORT_BGNDE , 5,4)   END AS SPORT_BGNDE2
	 , A.SPORT_ENDDE
	 , A.TRNSFRN_DE
	 , NVL(A.LFSTS_AMOUNT,0) AS LFSTS_AMOUNT
	 , NVL(A.SPORT_AMOUNT,0) AS SPORT_AMOUNT
	 , NVL(A.RENT_ALOTM,0) AS RENT_ALOTM 
	 , NVL(A.ADIT_ALOTM,0) AS ADIT_ALOTM
	 , NVL(A.RNTCHRG,0) AS RNTCHRG
	 , NVL(A.RSVMNEY,0) AS RSVMNEY
	 , A.CDIT_PRESV_MTHD
	 , A.RM
     , B.QUALF_SE
     , C.NM
     , SUBSTR(SFCOM_DEC_ALL(C.IHIDNUM),1,6)||'0000000' AS IHIDNUM
     , D.NM_PSN
     , D.IHIDNUM_PSN
     , D.ZIP_PSN
     , D.ADRES_PSN
     , D.ADRES_DETAIL_PSN
     , NVL(SFCOM_AlignTel(D.TELNO_PSN, '2') ,'000000000000') AS TELNO_PSN
     , NVL(NVL(SFCOM_AlignTel(D.MBTLNO_PSN , '2') ,SFCOM_AlignTel(D.TELNO_PSN , '2')),'000000000000') AS MBTLNO_PSN
     , B.SCRT_INFO_EXAMIN_ID
     , Z.CNTRCT_BGNDE          
     , Z.CNTRCT_ENDDE
     , Z.ENDRS_NO
     , Z.SCRITS_NO
     , Z.INSRNC_AMOUNT
     , Z.EXCCLC_AMOUNT
     , Z.MANAGE_NO 
     , Z.RM    
     , DECODE(D.SN , '1' , D.NM_COCNR , '') AS NM_COCNR_1
     , DECODE(D.SN , '1' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_1
     , DECODE(D.SN , '1' , D.ZIP_COCNR , '') AS ZIP_COCNR_1
     , DECODE(D.SN , '1' , D.ADRES_COCNR , '') || ' ' || DECODE(D.SN , '1' , D.ADRES_DETAIL_COCNR , '') AS ADRES_COCNR_1
     , DECODE(D.SN , '1' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_1
     , DECODE(D.SN , '1' , NVL(SFCOM_AlignTel(D.TELNO_COCNR , '2' ),'000000000000') , '') AS TELNO_COCNR_1
     , DECODE(D.SN , '1' , NVL(NVL(SFCOM_AlignTel(D.MBTLNO_COCNR , '2'),SFCOM_AlignTel(D.TELNO_COCNR , '2')),'000000000000') , '') AS MBTLNO_COCNR_1                         
     , DECODE(D.SN , '2' , D.NM_COCNR , '') AS NM_COCNR_2
     , DECODE(D.SN , '2' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_2     
     , DECODE(D.SN , '2' , D.ZIP_COCNR , '') AS ZIP_COCNR_2
     , DECODE(D.SN , '2' , D.ADRES_COCNR , '') || ' ' ||DECODE(D.SN , '2' , D.ADRES_DETAIL_COCNR , '')  AS ADRES_COCNR_2     
     , DECODE(D.SN , '2' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_2
     , DECODE(D.SN , '2' , NVL(SFCOM_AlignTel(D.TELNO_COCNR , '2'),'000000000000') , '') AS TELNO_COCNR_2
     , DECODE(D.SN , '2' , NVL(NVL(SFCOM_AlignTel(D.MBTLNO_COCNR , '2'),SFCOM_AlignTel(D.TELNO_COCNR , '2')),'000000000000') , '') AS MBTLNO_COCNR_2
     , DECODE(D.SN , '3' , D.NM_COCNR , '') AS NM_COCNR_3
     , DECODE(D.SN , '3' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_3     
     , DECODE(D.SN , '3' , D.ZIP_COCNR , '') AS ZIP_COCNR_3
     , DECODE(D.SN , '3' , D.ADRES_COCNR , '') AS ADRES_COCNR_3               
     , DECODE(D.SN , '3' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_3                  
     , DECODE(D.SN , '3' , NVL(SFCOM_AlignTel(D.TELNO_COCNR , '2'),'000000000000') , '') AS TELNO_COCNR_3     
     , DECODE(D.SN , '3' , NVL(NVL(SFCOM_AlignTel(D.MBTLNO_COCNR , '2'),SFCOM_AlignTel(D.TELNO_COCNR , '2')),'000000000000') , '') AS MBTLNO_COCNR_3
     , B.RE_CNTRCT_CO    
     , (CASE WHEN B.RE_CNTRCT_CO = 0  THEN 1 ELSE 0 END) AS NEW              
     , (CASE WHEN B.RE_CNTRCT_CO != 0  THEN 1 ELSE 0 END) AS OLD
     , SN_PSN
	 , A.LEGACY_RENT_CNT 
	 , A.VACANT_ROOM_CO
	 , A.FDLTR_ESTBS_CNT         
  FROM TBRNT_LFSTS_HOUSE_CNTRCTR A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO AND A.CNTRCTR_CO = B.CNTRCT_CO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
  LEFT JOIN TBRNT_LFSTS_INSRNC Z ON A.CNTRCTR_NO = Z.CNTRCTR_NO AND A.CNTRCTR_CO = Z.CNTRCTR_CO AND Z.INSRNC_SE = #INSRNC_SE# AND Z.RESCI_TRMNAT_DE IS NULL
  JOIN (SELECT ROW_NUMBER() OVER (PARTITION BY A.CNTRCTR_NO , A.CNTRCTR_CO ORDER BY A.RNTAGNT_NO DESC) AS SN_PSN
             , B.NM AS NM_PSN
             , SUBSTR(SFCOM_DEC_ALL(B.IHIDNUM),1,6)||'0000000' AS IHIDNUM_PSN
             , B.ZIP AS ZIP_PSN
             , B.ADRES AS ADRES_PSN
             , B.ADRES_DETAIL AS ADRES_DETAIL_PSN
             , B.TELNO AS TELNO_PSN
             , B.MBTLNO AS MBTLNO_PSN
             , A.CNTRCTR_NO AS CNTRCTR_NO_PSN
             , A.CNTRCTR_CO AS CNTRCTR_CO_PSN
             , C.SN
             , C.NM_COCNR
             , SUBSTR(SFCOM_DEC_ALL(C.IHIDNUM_COCNR),1,6)||'0000000'  AS IHIDNUM_COCNR
             , C.ZIP_COCNR
             , C.ADRES_COCNR
             , C.ADRES_DETAIL_COCNR
             , C.TELNO_COCNR
             , C.MBTLNO_COCNR
          FROM TBRNT_LFSTS_RENT_PSN A 
          JOIN TBRNT_LFSTS_CSTMR B ON A.LFSTS_CSTMR_NO = B.LFSTS_CSTMR_NO
          LEFT JOIN (SELECT 
                           ROW_NUMBER ()  OVER (PARTITION BY A.CNTRCTR_NO ORDER BY A.SN) AS SN
                          , B.NM AS NM_COCNR
                          , B.IHIDNUM AS IHIDNUM_COCNR
                          , B.ZIP AS ZIP_COCNR
                          , B.ADRES AS ADRES_COCNR
                          , B.ADRES_DETAIL AS ADRES_DETAIL_COCNR
                          , B.TELNO AS TELNO_COCNR
                          , B.MBTLNO AS MBTLNO_COCNR
                          , A.CNTRCTR_NO AS CNTRCTR_NO_COCNR
                          , A.LFSTS_CSTMR_NO_RENT_PSN    
                       FROM TBRNT_LFSTS_COCNR A
                       JOIN TBRNT_LFSTS_CSTMR B ON A.LFSTS_CSTMR_NO = B.LFSTS_CSTMR_NO
                       JOIN TBRNT_LFSTS_RENT_PSN Z ON A.CNTRCTR_NO = Z.CNTRCTR_NO AND A.CNTRCTR_CO = Z.CNTRCTR_CO
                       ) C ON A.CNTRCTR_NO = C.CNTRCTR_NO_COCNR AND A.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO_RENT_PSN
                       ) D ON A.CNTRCTR_NO = D.CNTRCTR_NO_PSN AND A.CNTRCTR_CO = D.CNTRCTR_CO_PSN         
WHERE 1=1
  AND SN_PSN = '1'
<isNotEmpty property="AREA_SE">
  AND B.AREA_SE = #AREA_SE#
</isNotEmpty>    
<isNotEmpty property="ENDDE1">  
  AND A.SPORT_BGNDE BETWEEN #ENDDE1# AND #ENDDE2#
</isNotEmpty>  
  AND NOT EXISTS (SELECT 1 FROM TBRNT_LFSTS_RESCI_TRMNAT Z WHERE A.CNTRCTR_NO = Z.CNTRCTR_NO AND A.CNTRCTR_CO = Z.CNTRCTR_CO)
ORDER BY RE_CNTRCT_CO , A.CNTRCTR_NO 
</select>


	<!-- 쿼리명 : 보증보험신청 명세서
	설명 : 보증보험신청 명세서
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2015.11.02
	-->
	<select id="RNT030503DAO.getList2" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT A.*
     , B.QUALF_SE
     , C.NM
     , SFCOM_DEC_ALL(C.IHIDNUM) AS IHIDNUM
     , D.NM_PSN
     , D.IHIDNUM_PSN
     , D.ZIP_PSN
     , D.ADRES_PSN
     , D.ADRES_DETAIL_PSN
     , D.TELNO_PSN
     , D.MBTLNO_PSN
     , B.SCRT_INFO_EXAMIN_ID
     , Z.CNTRCT_BGNDE          
     , Z.CNTRCT_ENDDE
     , Z.ENDRS_NO
     , Z.SCRITS_NO
     , Z.INSRNC_AMOUNT
     , Z.EXCCLC_AMOUNT
     , Z.MANAGE_NO 
     , Z.RM    
     , Z.RESCI_TRMNAT_DE
     , DECODE(D.SN , '1' , D.NM_COCNR , '') AS NM_COCNR_1
     , DECODE(D.SN , '1' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_1
     , DECODE(D.SN , '1' , D.ZIP_COCNR , '') AS ZIP_COCNR_1
     , DECODE(D.SN , '1' , D.ADRES_COCNR , '') AS ADRES_COCNR_1
     , DECODE(D.SN , '1' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_1
     , DECODE(D.SN , '1' , D.TELNO_COCNR , '') AS TELNO_COCNR_1
     , DECODE(D.SN , '1' , D.MBTLNO_COCNR , '') AS MBTLNO_COCNR_1                         
     , DECODE(D.SN , '2' , D.NM_COCNR , '') AS NM_COCNR_2
     , DECODE(D.SN , '2' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_2     
     , DECODE(D.SN , '2' , D.ZIP_COCNR , '') AS ZIP_COCNR_2
     , DECODE(D.SN , '2' , D.ADRES_COCNR , '') AS ADRES_COCNR_2     
     , DECODE(D.SN , '2' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_2
     , DECODE(D.SN , '2' , D.TELNO_COCNR , '') AS TELNO_COCNR_2
     , DECODE(D.SN , '2' , D.MBTLNO_COCNR , '') AS MBTLNO_COCNR_2          
     , DECODE(D.SN , '3' , D.NM_COCNR , '') AS NM_COCNR_3
     , DECODE(D.SN , '3' , D.IHIDNUM_COCNR , '') AS IHIDNUM_COCNR_3     
     , DECODE(D.SN , '3' , D.ZIP_COCNR , '') AS ZIP_COCNR_3
     , DECODE(D.SN , '3' , D.ADRES_COCNR , '') AS ADRES_COCNR_3               
     , DECODE(D.SN , '3' , D.ADRES_DETAIL_COCNR , '') AS ADRES_DETAIL_COCNR_3                  
     , DECODE(D.SN , '3' , D.TELNO_COCNR , '') AS TELNO_COCNR_3     
     , DECODE(D.SN , '3' , D.MBTLNO_COCNR , '') AS MBTLNO_COCNR_3        
     , B.RE_CNTRCT_CO   
  FROM TBRNT_LFSTS_HOUSE_CNTRCTR A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO AND A.CNTRCTR_CO = B.CNTRCT_CO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
  LEFT JOIN TBRNT_LFSTS_INSRNC Z ON A.CNTRCTR_NO = Z.CNTRCTR_NO AND Z.INSRNC_SE = #INSRNC_SE# AND Z.RESCI_TRMNAT_DE IS NOT NULL
  JOIN (SELECT B.NM AS NM_PSN
             , SFCOM_DEC_ALL(B.IHIDNUM) AS IHIDNUM_PSN
             , B.ZIP AS ZIP_PSN
             , B.ADRES AS ADRES_PSN
             , B.ADRES_DETAIL AS ADRES_DETAIL_PSN
             , B.TELNO AS TELNO_PSN
             , B.MBTLNO AS MBTLNO_PSN
             , A.CNTRCTR_NO AS CNTRCTR_NO_PSN
             , A.CNTRCTR_CO AS CNTRCTR_CO_PSN
             , C.SN
             , C.NM_COCNR
             , SFCOM_DEC_ALL(C.IHIDNUM_COCNR) AS IHIDNUM_COCNR
             , C.ZIP_COCNR
             , C.ADRES_COCNR
             , C.ADRES_DETAIL_COCNR
             , C.TELNO_COCNR
             , C.MBTLNO_COCNR
          FROM TBRNT_LFSTS_RENT_PSN A 
          JOIN TBRNT_LFSTS_CSTMR B ON A.LFSTS_CSTMR_NO = B.LFSTS_CSTMR_NO  
          LEFT JOIN (SELECT A.SN
                          , B.NM AS NM_COCNR
                          , B.IHIDNUM AS IHIDNUM_COCNR
                          , B.ZIP AS ZIP_COCNR
                          , B.ADRES AS ADRES_COCNR
                          , B.ADRES_DETAIL AS ADRES_DETAIL_COCNR
                          , B.TELNO AS TELNO_COCNR
                          , B.MBTLNO AS MBTLNO_COCNR
                          , A.CNTRCTR_NO AS CNTRCTR_NO_COCNR
                          , A.LFSTS_CSTMR_NO_RENT_PSN    
                       FROM TBRNT_LFSTS_COCNR A
                       JOIN TBRNT_LFSTS_CSTMR B ON A.LFSTS_CSTMR_NO = B.LFSTS_CSTMR_NO
                       ) C ON A.CNTRCTR_NO = C.CNTRCTR_NO_COCNR AND A.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO_RENT_PSN
                       ) D ON A.CNTRCTR_NO = D.CNTRCTR_NO_PSN AND A.CNTRCTR_CO = D.CNTRCTR_CO_PSN         
WHERE 1=1
<isNotEmpty property="AREA_SE">
  AND B.AREA_SE = #AREA_SE#
</isNotEmpty>    
<isNotEmpty property="ENDDE1">  
  AND A.SPORT_BGNDE BETWEEN #ENDDE1# AND #ENDDE2#
</isNotEmpty>
ORDER BY A.CNTRCTR_NO
</select>
	
</sqlMap>