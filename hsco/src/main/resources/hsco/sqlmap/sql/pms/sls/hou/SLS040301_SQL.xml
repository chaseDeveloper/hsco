<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SLS40301_SQL">

    <!-- 쿼리명 : 주택수납소인 조회
	설명 : 주택수납소인 조회 쿼리
	수정일  		수정자  	수정내용
	2015.11.18	최승락	최초생성
	작성자 : 최승락
	최초작성일 : 2015.11.18
	-->
	<select id="SLS040301DAO.selectHouseRcivPstmrkList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			  R1.CNTRCTR_NO
			, R1.HOUSE_CODE
			, R1.RCIV_SN
			, R1.ALL_HOUSE_NM
			, R1.DONG
			, R1.HO
			, R1.PAY_TMLMT
			, R1.HOUSE_CSTMR_NO
			, R2.CSTMR_NM
			, R1.PAY_CODE
			, R1.F_CORT_NAME
			, R1.PAYAMT
			, R1.ARRRG_AMOUNT
			, R1.TOT_PAYAMT
			, R1.PAY_SE
			, R1.PAYMTHD
			, R1.RCIV_NO
			, R1.OCR_SE
			, R1.PAY_SE_NM
			, R1.RCIV_AMOUNT
			, R1.OVERRPAY_AMOUNT
			, R1.PSTMRK_OPERT_SE
			, R1.PSTMRK_AT
			, R1.F_RESULT
			, R1.RECP_RESULT
			, R1.CHA_AMT
			, R1.RCIV_DE
			, R1.RCIV_SE
			, R1.RCIV_CO
			, R1.PAY_NO
		  FROM (
				<!-- 01 -->
				SELECT
					  T2.CNTRCTR_NO
					, T1.RCIV_SN
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE, 'ALL_HOUSE_NM') AS ALL_HOUSE_NM
					, T1.DONG
					, T1.HO
					, T3.PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE, '0')||NVL(T1.RCIV_SE, '0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T3.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1 /* 주택수납소인 */
					, TBSLS_HCNTRCTR T2
					, (
					   SELECT
							T1.CNTRCTR_NO
						   , T2.PAY_CODE
						   , (
							  SELECT SUBSTR(S1.CHRCTR_PREPAR_VALUE_0,1,1)
							    FROM TBCOM_CMMN_CODE S1
							   WHERE 1 = 1
								AND S1.GRP_CODE = 'HOU0A1'
								AND S1.CODE = T2.PAY_CODE
							) AS F_DIV
						   , (
							  SELECT S2.CODE_NM
							    FROM TBCOM_CMMN_CODE S2
							   WHERE 1 = 1
								AND S2.GRP_CODE = 'HOU0A1'
								AND S2.CODE = T2.PAY_CODE
							) AS F_CORT_NAME
						   , (
							  SELECT SUBSTR(S3.CHRCTR_PREPAR_VALUE_2, 1, 1)
							    FROM TBCOM_CMMN_CODE S3
							   WHERE 1 = 1
								AND S3.GRP_CODE = 'HOU0A1'
								AND S3.CODE = T2.PAY_CODE
							) AS F_REC_CLASS
						   , T2.PAY_SE
						   , T2.PAY_SN
						   , NVL(T2.PAYAMT,0) + NVL(T2.YRINS_SALE_INTR,0) AS PAYAMT
						   , NVL(T2.ARRRG_AMOUNT,0) + NVL(T2.ARRRG_DSCNT_AMOUNT,0) AS ARRRG_AMOUNT
						   , NVL(T2.PAYAMT,0) +  NVL(T2.YRINS_SALE_INTR,0) + NVL(T2.ARRRG_AMOUNT,0) + NVL(T2.POINT_DSCNT_AM,0) + NVL(T2.ARRRG_DSCNT_AMOUNT,0) AS TOT_PAYAMT
						   , T2.PAY_TMLMT
						   , T2.PAY_PRARNDE
						   , T2.RCIV_DE
						   , T2.RCIV_AMOUNT
						   , T2.PAY_NO						   
						FROM TBSLS_HCNTRCTR T1
						   , TBSLS_HOUSE_LTTOT_PAY T2 /* 주택분양납부 */
					    WHERE 1 = 1
						 AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
					    <![CDATA[
						 AND NVL(T2.RM, '!') <> 'K'
					 ]]>
					  ) T3
				 WHERE 1 = 1
				   AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
				   AND T1.CNTRCTR_NO = T3.CNTRCTR_NO(+)
				   AND T1.PAY_TMLMT = T3.PAY_TMLMT(+)
				   AND T1.PAY_NO = T3.PAY_NO(+)
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE IN ('1', '4', '5')
				   AND T2.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T2.DONG LIKE '%' || #DONG#
				   AND T2.HO LIKE '%' || #HO#
				   AND T1.PAYMTHD LIKE #PAYMTHD#||'%'

				UNION ALL

				<!-- 02 -->
				SELECT
					  T1.CNTRCTR_NO
					, T1.RCIV_SN					  
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE, 'ALL_HOUSE_NM') AS ALL_HOUSE_NM
					, T1.DONG
					, T1.HO
					, T3.PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE,'0')||NVL(T1.RCIV_SE,'0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T3.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1
					, TBSLS_HCNTRCTR T2
					, (
					   SELECT
							T1.CNTRCTR_NO
						   , T2.PAY_CODE
						   , (
							 SELECT SUBSTR(S1.CHRCTR_PREPAR_VALUE_0, 1, 1)
							   FROM TBCOM_CMMN_CODE S1
							  WHERE 1 = 1
							    AND S1.GRP_CODE = 'HOU0A1'
							    AND S1.CODE = T2.PAY_CODE
							) AS F_DIV
						   , (
							 SELECT S2.CODE_NM
							   FROM TBCOM_CMMN_CODE S2
							  WHERE 1 = 1
							    AND S2.GRP_CODE = 'HOU0A1'
							    AND S2.CODE = T2.PAY_CODE
							) AS F_CORT_NAME
						   , T2.PAYAMT
						   , T2.ARRRG_AMOUNT + NVL(T2.ARRRG_DSCNT_AMOUNT,0) AS ARRRG_AMOUNT
						   , NVL(T2.PAYAMT,0)  +  NVL(T2.ARRRG_AMOUNT,0) + NVL(T2.ARRRG_DSCNT_AMOUNT,0) AS TOT_PAYAMT
						   , T2.PAY_TMLMT
						   , T2.RCIV_DE
						   , T2.RCIV_AMOUNT
						   , T2.PAY_NO
						FROM TBSLS_HCNTRCTR T1
						   , TBSLS_ETC_INCME_PAY T2 /* 기타수입납부 */
					    WHERE 1 = 1
						 AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
					  ) T3
				 WHERE 1 = 1
				   AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
				   AND T1.CNTRCTR_NO = T3.CNTRCTR_NO
				   AND T1.PAY_TMLMT = T3.PAY_TMLMT
				   AND T1.RCIV_AMOUNT = T3.PAYAMT
				   AND T1.PAY_SE = T3.F_DIV
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE NOT IN ('1', '2', '3', '4', '5')
				   AND T2.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T2.DONG LIKE '%' || #DONG#
				   AND T2.HO LIKE '%' ||#HO#
				   AND T1.PAYMTHD LIKE #PAYMTHD#||'%'

				UNION ALL

				<!-- 03 -->
				SELECT
					  T2.CNTRCTR_NO
					, T1.RCIV_SN  
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE, 'ALL_HOUSE_NM') AS ALL_HOUSE_NM
					, T1.DONG
					, T1.HO
					, T3.PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE,'0')||NVL(T1.RCIV_SE,'0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T1.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1
					, TBSLS_HCNTRCTR T2
					, (
					   SELECT
							T1.CNTRCTR_NO
						   , T2.PAY_CODE
						   , (
							   SELECT S1.CODE_NM
								FROM TBCOM_CMMN_CODE S1
							    WHERE 1 = 1
								 AND S1.GRP_CODE = 'HOU0A1'
								 AND S1.CODE = T2.PAY_CODE
							) AS F_CORT_NAME
						   , SUM(NVL(T2.MT_RNTCHRG,0) + NVL(T2.DFNNT_AMOUNT,0)) AS PAYAMT
						   , SUM(NVL(T2.ARRRG_AMOUNT,0)) AS ARRRG_AMOUNT
						   , SUM(NVL(T2.MT_RNTCHRG,0) + NVL(T2.DFNNT_AMOUNT,0) + NVL(T2.ARRRG_AMOUNT,0)) AS TOT_PAYAMT
						   , MAX(T2.PAY_TMLMT) AS PAY_TMLMT
						   , t2.RCIV_PREARNGE_DE
						FROM TBSLS_HCNTRCTR T1
						   , TBSLS_HOUSE_RENT_PAY T2 /* 주택임대납부 */
					    WHERE 1 = 1
						 AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
						 AND (   (
							    <![CDATA[
								 T2.RCIV_DE IS NULL AND T2.PAY_TMLMT <= (SELECT MAX(S1.PAY_TMLMT)
							    ]]>
																   FROM TBSLS_HOUSE_RCIV_PSTMRK S1
																  WHERE 1 = 1
																    AND S1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
																    AND S1.PAY_SE = '2'
																    AND S1.CNTRCTR_NO = T2.CNTRCTR_NO
																)
								)
							  OR (
								  T2.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#								
								)
							)
					    GROUP BY T1.CNTRCTR_NO, T2.PAY_CODE , t2.RCIV_PREARNGE_DE
					  ) T3
				 WHERE 1 = 1
				   AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
				   AND T1.CNTRCTR_NO = T3.CNTRCTR_NO(+)
				   AND t1.rciv_de = t3.RCIV_PREARNGE_DE(+)
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE = '2'
				   AND T1.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T1.DONG LIKE '%' || #DONG#
				   AND T1.HO LIKE '%' || #HO#
				   AND T1.PAYMTHD LIKE #PAYMTHD#||'%'
				 <![CDATA[
				   AND T1.PAYMTHD <> '03' /* PAYMTHD */
				 ]]>
				UNION ALL

				<!-- 04 -->
				SELECT
					  T2.CNTRCTR_NO
         			, T1.RCIV_SN
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE, 'ALL_HOUSE_NM') AS ALL_HOUES_NM
					, T1.DONG
					, T1.HO
					, NVL(T3.PAY_TMLMT, T1.PAY_TMLMT) AS PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE,'0')||NVL(T1.RCIV_SE,'0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T1.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1
					, TBSLS_HCNTRCTR T2
					, (
						SELECT
							  T1.CNTRCTR_NO
							, T1.PAY_CODE
							, T1.PAY_TMLMT
							, (
							    SELECT CODE_NM
								 FROM TBCOM_CMMN_CODE S1
								WHERE 1 = 1
								  AND S1.GRP_CODE = 'HOU0A1'
								  AND S1.CODE = T1.PAY_CODE
							  ) AS F_CORT_NAME
							, NVL(T1.MT_RNTCHRG,0) + NVL(T1.DFNNT_AMOUNT,0) AS PAYAMT
							, NVL(T1.ARRRG_AMOUNT,0) AS ARRRG_AMOUNT
							, NVL(T1.MT_RNTCHRG,0) + NVL(T1.DFNNT_AMOUNT,0) + NVL(T1.ARRRG_AMOUNT,0) AS TOT_PAYAMT
						  FROM TBSLS_HOUSE_RENT_PAY T1 /* 주택임대납부 */
						 WHERE 1 = 1
						   AND T1.RCIV_DE IS NULL OR T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
					  ) T3
				 WHERE 1 = 1
				   AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
				   AND T1.CNTRCTR_NO = T3.CNTRCTR_NO(+)
				   AND T1.PAY_TMLMT = T3.PAY_TMLMT(+)
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE = '2'
				   AND T1.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T1.DONG LIKE '%' || #DONG#
				   AND T1.HO LIKE '%' || #HO#
				   AND T1.PAYMTHD LIKE #PAYMTHD#||'%'
				   AND T1.PAYMTHD = '03' /* xxx */

				UNION ALL

				<!-- 05 -->
				SELECT
					  T1.CNTRCTR_NO
					, T1.RCIV_SN 
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE,'ALL_HOUSE_NM') AS ALL_HOUSE_NM
					, T1.DONG
					, T1.HO
					, T1.PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE,'0')||NVL(T1.RCIV_SE,'0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T1.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1
					, TBSLS_HOUSE_LANMN_CNTRCTR T2
					, (
					   SELECT
							S2.HOUSE_CODE
						   , S2.MAIN_CODE
						   , S2.DETAIL_CODE
						   , 'RJ' AS PAY_CODE
						   , (
							   SELECT SUBSTR(L2.CHRCTR_PREPAR_VALUE_0, 1, 1)
								FROM TBCOM_CMMN_CODE L2
							    WHERE 1 = 1
								 AND L2.GRP_CODE = 'HOU0A1'
								 AND L2.CODE = 'RJ'
							) AS F_DIV
						   , (
							   SELECT L1.CODE_NM
								FROM TBCOM_CMMN_CODE L1
							    WHERE 1 = 1
								 AND L1.GRP_CODE = 'HOU0A1'
								 AND L1.CODE = 'RJ'
							) AS F_CORT_NAME
						   , SUM(NVL(S2.PRNCPAL,0) + NVL(S2.INTR,0)) AS PAYAMT
						   , SUM(NVL(S2.OVDINTR,0)) AS ARRRG_AMOUNT
						   , SUM(NVL(S2.PRNCPAL,0) + NVL(S2.INTR,0) + NVL(S2.OVDINTR,0)) AS TOT_PAYAMT
						   , MAX(S2.PAY_TMLMT) AS PAY_TMLMT
						FROM TBSLS_HOUSE_RCIV_PSTMRK S1
						   , TBSLS_HOUSE_MT_LANMN S2 /* 주택월융자금 */
					    WHERE 1 = 1
						 AND S1.HOUSE_CODE = S2.HOUSE_CODE
						 AND S1.DONG = S2.MAIN_CODE
						 AND S1.HO = S2.DETAIL_CODE
						 AND S1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
						 AND S1.PAY_SE = '3'
					    <![CDATA[
						 AND S2.PAY_TMLMT <= S1.PAY_TMLMT
					    ]]>
						 AND (S1.RCIV_DE = S2.RCIV_DE OR S2.RCIV_DE IS NULL)
					    <![CDATA[
						 AND S1.PAYMTHD <> '03'
					    ]]>
					    GROUP BY S2.HOUSE_CODE, S2.MAIN_CODE, S2.DETAIL_CODE
					  ) T3
				 WHERE 1 = 1
				   AND T1.HOUSE_CODE = T2.HOUSE_CODE
				   AND T1.DONG = T2.MAIN_CODE
				   AND T1.HO = T2.DETAIL_CODE
				   AND T1.HOUSE_CODE = T3.HOUSE_CODE
				   AND T1.DONG = T3.MAIN_CODE
				   AND T1.HO = T3.DETAIL_CODE
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE = '3'
				 <![CDATA[
				   AND T1.PAY_TMLMT = T3.PAY_TMLMT
				 ]]>
				   AND T1.PAY_SE = T3.F_DIV
				   AND T1.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T1.DONG LIKE '%' || #DONG#
				   AND T1.HO LIKE '%' || #HO#
				   AND T1.PAYMTHD LIKE #PAYMTHD#||'%'
				 <![CDATA[
				   AND T1.PAYMTHD <> '03'
				 ]]>

				UNION ALL

				<!-- 06 -->
				SELECT
					  T1.CNTRCTR_NO
					, T1.RCIV_SN
					, T1.HOUSE_CODE
					, SFSLS_HOUSE_NM(T1.HOUSE_CODE,'ALL_HOUSE_NM') AS ALL_HOUSE_NM
					, T1.DONG
					, T1.HO
					, T1.PAY_TMLMT
					, T2.HOUSE_CSTMR_NO
					, T3.PAY_CODE
					, T3.F_CORT_NAME
					, T3.PAYAMT
					, T3.ARRRG_AMOUNT
					, T3.TOT_PAYAMT
					, T1.PAY_SE
					, T1.PAYMTHD
					, T1.RCIV_NO
					, NVL(T1.ODR_SE,'0')||NVL(T1.RCIV_SE,'0')||NVL(T1.RCIV_CO, '0') AS OCR_SE
					, SFCOM_CODE_NM('HOU0B3',T1.PAY_SE, 'CODE_NM') AS PAY_SE_NM
					, T1.RCIV_AMOUNT
					, T1.OVERRPAY_AMOUNT
					, T1.PSTMRK_OPERT_SE
					, T1.PSTMRK_AT
					, DECODE(T1.PSTMRK_OPERT_SE, 'J', '정상', 'O', '과오납', 'R', '과오납', 'H', '확인요망', 'N', '확인요망', '미확인') AS F_RESULT
					, DECODE(T1.PSTMRK_AT, '1', '처리', '미처리') AS RECP_RESULT
					, NVL(T1.RCIV_AMOUNT,0) - NVL(T3.TOT_PAYAMT,0) AS CHA_AMT
					, T1.RCIV_DE
					, T1.RCIV_SE
					, T1.RCIV_CO
					, T1.PAY_NO
				  FROM TBSLS_HOUSE_RCIV_PSTMRK T1
					, TBSLS_HOUSE_LANMN_CNTRCTR T2
					, (
					   SELECT
							T2.HOUSE_CODE
						   , T2.MAIN_CODE
						   , T2.DETAIL_CODE
						   , 'RJ' AS PAY_CODE
						   , (
							 SELECT L1.CODE_NM
							   FROM TBCOM_CMMN_CODE L1
							  WHERE 1 = 1
							    AND L1.GRP_CODE = 'HOU0A1'
							    AND L1.CODE = 'RJ'
							) AS F_CORT_NAME
						   , (
							 SELECT SUBSTR(L2.CHRCTR_PREPAR_VALUE_0, 1, 1)
							   FROM TBCOM_CMMN_CODE L2
							  WHERE 1 = 1
							    AND L2.GRP_CODE = 'HOU0A1'
							    AND L2.CODE = 'RJ'
							) AS F_DIV
						   , SUM(NVL(T2.PRNCPAL,0) + NVL(T2.INTR,0)) AS PAYAMT
						   , SUM(NVL(T2.OVDINTR,0)) AS ARRRG_AMOUNT
						   , SUM(NVL(T2.PRNCPAL,0) + NVL(T2.INTR,0) + NVL(T2.OVDINTR,0)) AS TOT_PAYAMT
						   , T2.PAY_TMLMT
						FROM TBSLS_HOUSE_RCIV_PSTMRK T1
						   , TBSLS_HOUSE_MT_LANMN T2 /* 주택월융자금 */
					    WHERE 1 = 1
						 AND T1.HOUSE_CODE = T2.HOUSE_CODE
						 AND T1.DONG = T2.MAIN_CODE
						 AND T1.HO = T2.DETAIL_CODE
						 AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2# 
						 AND T1.PAY_SE = '3'
					    <![CDATA[
						 AND T2.PAY_TMLMT = T1.PAY_TMLMT
					    ]]>
						 AND (T1.RCIV_DE = T2.RCIV_DE OR T2.RCIV_DE IS NULL)
						 AND T1.PAYMTHD = '03'
					    GROUP BY T2.HOUSE_CODE, T2.MAIN_CODE, T2.DETAIL_CODE, T2.PAY_TMLMT
					  ) T3
				 WHERE 1 = 1
				   AND T1.HOUSE_CODE = T2.HOUSE_CODE
				   AND T1.DONG = T2.MAIN_CODE
				   AND T1.HO = T2.DETAIL_CODE
				   AND T1.HOUSE_CODE = T3.HOUSE_CODE
				   AND T1.DONG = T3.MAIN_CODE
				   AND T1.HO = T3.DETAIL_CODE
				   AND T1.PAY_TMLMT = T3.PAY_TMLMT
				   AND T1.PAY_SE = T3.F_DIV
				   AND T1.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
				   AND T1.PAY_SE = '3'
				   AND T1.HOUSE_CODE LIKE #HOUSE_CODE#||'%'
				   AND T1.DONG LIKE '%' || #DONG#
				   AND T1.HO LIKE '%' || #HO#
				   
				   AND T1.PAYMTHD = '03' /* xxx */
		       ) R1
             , TBSLS_HOUSE_CSTMR R2
         WHERE 1 = 1
           AND R1.HOUSE_CSTMR_NO = R2.HOUSE_CSTMR_NO
         ORDER BY R1.ALL_HOUSE_NM, R1.DONG, R1.HO, R1.PAY_TMLMT, R1.RCIV_NO
	</select>
	
	
	
	<!-- ============================================================================================= -->
	<!-- 3.납부구분 : 분양금(1), 보증금(4) 수납대상 납부정보 -->
	<select id="SLS040301DAO.selectTBSLS_HOUSE_LTTOT_PAY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CNTRCTR_NO
		      ,PAY_NO
		      ,PAY_CODE
		      ,PAYAMT + ARRRG_AMOUNT + YRINS_SALE_INTR + NVL(POINT_DSCNT_AM, 0) AS PAY_AMT
		  FROM TBSLS_HOUSE_LTTOT_PAY /* 주택분양납부 */
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND TMPR_RCIV_NO = #RCIV_NO#
		   AND PAY_TMLMT = #PAY_TMLMT#
		   AND RCIV_DE IS NULL	
	</select>
	
	<!-- 3.납부구분 : 분양금(1), 보증금(4) 수정 -->
	<update id="SLS040301DAO.updateTBSLS_HOUSE_LTTOT_PAY" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_LTTOT_PAY /* 주택분양납부 */
		   SET RCIV_DE = #RCIV_DE#
		     , RCIV_AMOUNT = #RCIV_AMOUNT#		
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND PAY_SE = #RCIV_SE#
		   AND PAY_TMLMT = #PAY_TMLMT#
		   AND PAY_NO = #PAY_NO#
		   <!--AND PAY_NO = #PAY_NO# -->	
	</update>
	
	<!-- 3.납부구분 : 분양금(1), 보증금(4) 추가 -->
	<insert id="SLS040301DAO.insertTBSLS_HOUSE_RCIV" parameterClass="java.util.HashMap">
		INSERT INTO TBSLS_HOUSE_RCIV /* 주택수납 */
		  (LTTOT_RENT_SE
		  ,CNTRCTR_NO
		  ,RCPT_NO
		  ,RCIV_DE
		  ,PAY_CODE
		  ,RCIV_AMOUNT
		  ,OVERRPAY_AMOUNT
		  ,RCIV_MTH
		  ,BANK_CODE
		  ,OCR_NO
		  ,OPETR_ID
		  ,NMCHANGE_CNNC_CODE
		  ,REGISTER_ID
		  ,REGIST_DT
		  ,UPDUSR_ID
		  ,UPDT_DT)
		VALUES
		  (#LTTOT_RENT_SE#
		  ,#CNTRCTR_NO#
		  ,#RCPT_NO#
		  ,#RCIV_DE#
		  ,#PAY_CODE#
		  ,#RCIV_AMOUNT#
		  ,#OVERRPAY_AMOUNT#
		  ,#RCIV_MTH#
		  ,#BANK_CODE#
		  ,#OCR_NO#
		  ,#OPETR_ID#
		  ,#NMCHANGE_CNNC_CODE#
		  ,#S_USER_ID#
		  ,SYSDATE
		  ,#S_USER_ID#
		  ,SYSDATE)	
	</insert>
	
	
	<!-- ============================================================================================= -->
	<!-- 3.납부구분 :  임대료(2) 수납대상 납부정보 -->
	<select id="SLS040301DAO.selectTBSLS_HOUSE_RENT_PAY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CNTRCTR_NO
		      ,PAY_NO
		      ,PAY_CODE
		      ,MT_RNTCHRG + ARRRG_AMOUNT + DFNNT_AMOUNT AS PAY_AMT
		  FROM TBSLS_HOUSE_RENT_PAY
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND TMPR_RCIV_NO = #RCIV_NO#
		   AND RCIV_DE IS NULL	
	</select>
	
	<!-- 3.납부구분 :  임대료(2) 수정 -->
	<update id="SLS040301DAO.updateTBSLS_HOUSE_RENT_PAY2" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RENT_PAY
		   SET RCIV_DE = #RCIV_DE#
		      ,RCIV_AMOUNT = MT_RNTCHRG + ARRRG_AMOUNT
		      ,PAYMTHD = #PAYMTHD#
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND RCIV_DE IS NULL
		   AND PAY_TMLMT <![CDATA[ <= ]]> #PAY_TMLMT#		   	
	</update>

	<update id="SLS040301DAO.updateTBSLS_HOUSE_RENT_PAY" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RENT_PAY
		   SET RCIV_DE = #RCIV_DE#
		      ,RCIV_AMOUNT = #RCIV_AMOUNT#
		      ,PAYMTHD = #PAYMTHD#
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND RCIV_DE IS NULL
		   AND PAY_TMLMT = #PAY_TMLMT#		   	
	</update>		
	
	<!-- ============================================================================================= -->
	<!-- 3.납부구분 : 융자금(3) 수정 -->
	<update id="SLS040301DAO.updateTBSLS_HOUSE_MT_LANMN" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_MT_LANMN
		   SET RCIV_DE     = #RCIV_DE#
		      ,RCIV_AMOUNT = NVL(PRNCPAL, 0) + NVL(INTR, 0) + NVL(OVDINTR, 0)
		 WHERE HOUSE_CODE = #HOUSE_CODE#
		   AND MAIN_CODE = #DONG#
		   AND DETAIL_CODE = #HO#
		   AND RCIV_DE IS NULL
		   AND PAY_TMLMT = #PAY_TMLMT#	
	</update>
	
	
	<!-- 3.납부구분 : 기타수입 수납대상 납부정보 -->
	<select id="SLS040301DAO.selectTBSLS_ETC_INCME_PAY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CNTRCTR_NO
		      ,PAY_NO
		      ,PAY_CODE
		      ,PAYAMT AS PAY_AMT
          FROM TBSLS_ETC_INCME_PAY
         WHERE JOB_SE ='HOU'              
           AND CNTRCTR_NO = #CNTRCTR_NO#
           AND PAY_NO = #PAY_NO#
           AND PAY_TMLMT = #PAY_TMLMT#
           AND PAY_CODE = #PAY_CODE#
           AND RCIV_DE IS NULL	
	</select>
	
	<!-- 3.납부구분 : 기타수입 (3) 수정 -->
	<update id="SLS040301DAO.updateTBSLS_ETC_INCME_PAY" parameterClass="java.util.HashMap">
		UPDATE TBSLS_ETC_INCME_PAY
		   SET RCIV_DE = #RCIV_DE#
		      ,RCIV_AMOUNT = #RCIV_AMOUNT#
		      ,UPDUSR_ID = #S_USER_ID#
		      ,UPDT_DT = SYSDATE
         WHERE JOB_SE ='HOU'              
           AND CNTRCTR_NO = #CNTRCTR_NO#
           AND PAY_NO LIKE #PAY_NO# || '%'
           AND PAY_TMLMT = #PAY_TMLMT#
           AND PAY_CODE = #PAY_CODE#
           AND RCIV_DE IS NULL	
	</update>
	
	<!-- 3.납부구분 : 기타수입 (3) 추가 -->
	<insert id="SLS040301DAO.insertTBSLS_ETC_INCME_RCIV" parameterClass="java.util.HashMap">
		INSERT INTO TBSLS_ETC_INCME_RCIV
		  (CNTRCTR_NO
		  ,RCPT_NO
		  ,RCIV_DE
		  ,RCIV_AMOUNT
		  ,PAYMTHD
		  ,BANK_CODE
		  ,OCR_NO
		  ,OPETR_ID
		  ,REGISTER_ID
		  ,REGIST_DT
		  ,UPDUSR_ID
		  ,UPDT_DT)
		VALUES
		  (#CNTRCTR_NO#
		  ,#RCPT_NO#
		  ,#RCIV_DE#
		  ,#RCIV_AMOUNT#
		  ,#PAYMTHD#
		  ,#BANK_CODE#
		  ,#OCR_NO#
		  ,#OPETR_ID#
		  ,#S_USER_ID#
		  ,SYSDATE
		  ,#S_USER_ID#
		  ,SYSDATE)	
	</insert>
	
	<!-- ============================================================================================= -->
	<!-- 2.작업구분 : 일부과오납(O) 추가 -->
	<insert id="SLS040301DAO.insertTBSLS_HOUSE_RCIV_FALT" parameterClass="java.util.HashMap">
		  INSERT INTO TBSLS_HOUSE_RCIV_FALT
		    (FALT_SN
		    ,CNTRCTR_NO
		    ,RCIV_SN
		    ,OVERRPAY_AMOUNT
		    ,RCIV_DE
		    ,RCPMNY_MTH
		    ,BANK_CODE
		    ,DEFRAY_ACNUTNO
		    ,REGISTER_ID
		    ,REGIST_DT
		    ,UPDUSR_ID
		    ,UPDT_DT
		    ,PAY_TMLMT)
		  VALUES
		    ((SELECT NVL(MAX(FALT_SN), 0) + 1 AS FALT_SN FROM TBSLS_HOUSE_RCIV_FALT)
		    ,#CNTRCTR_NO#
		    ,#RCIV_SN#
		    ,#OVERRPAY_AMOUNT#
		    ,#RCIV_DE#
		    ,#PAYMTHD#
		    ,#BANK_CODE#
		    ,#OCR_NO#
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#S_USER_ID#
		    ,SYSDATE
		    ,#PAY_TMLMT#)	
	
	</insert>
	
	<!-- 2.작업구분 : 일부과오납(O) 수정 -->
	<update id="SLS040301DAO.updateTBSLS_HOUSE_RCIV_PSTMRK" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RCIV_PSTMRK
		   SET PSTMRK_AT = '1'
		 WHERE CNTRCTR_NO = #CNTRCTR_NO#
		   AND RCIV_SN = #RCIV_SN#
	</update>
	<!-- ============================================================================================= -->
	
	
	
	<!-- 주택수납소인 처리 -->
    <parameterMap id="SPSLS_HOUSE_DECSN_DI_param" class="java.util.HashMap">
		<parameter property="IN_CNTRCTR_NO"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_PAY_SE"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_OPERT_SE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_UPDUSR_ID"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		
		<parameter property="IN_HOUSE_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_DONG"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_HO"				jdbcType="VARCHAR"	javaType="string" 	mode="IN" />		
		<parameter property="IN_RCIV_SE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_RCIV_CO"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		
		<parameter property="IN_PAY_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_PAY_TMLMT"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_PAYMTHD"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />

	</parameterMap>

	<procedure id="SLS040301DAO.SPSLS_HOUSE_DECSN_DI" parameterMap="SPSLS_HOUSE_DECSN_DI_param">
		{ call SPSLS_HOUSE_RECEIPT(?,?,?,?,?, ?,?,?,?,?, ?,?,?) }
	</procedure>
	
	<!-- 상호전환 이율에 따라 임대료를 인하 -->
	<parameterMap id="SPSLS_HOUSE_RENT_DOWN_param" class="java.util.HashMap">
		<parameter property="IN_RCIV_DE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_HOUSE_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_DONG"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_HO"				jdbcType="VARCHAR"	javaType="string" 	mode="IN" />				
		<parameter property="IN_PAYMTHD"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		
		<parameter property="IN_UPDUSR_ID"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="OUT_RESULT_CD"		jdbcType="VARCHAR"	javaType="string"	mode="OUT" />
		<parameter property="OUT_RESULT_MSG"	jdbcType="VARCHAR"	javaType="string"	mode="OUT" />
	</parameterMap>
	
	
	<procedure id="SLS040301DAO.SPSLS_HOUSE_RENT_DOWN" parameterMap="SPSLS_HOUSE_RENT_DOWN_param">
		{ call SPSLS_HOUSE_RENT_DOWN(?,?,?,?,?, ?,?,?) }
	</procedure>
	
	<!-- 주택수납소인 처리 취소 -->
	<parameterMap id="SPSLS_HOUSE_RCIV_PSTMRK_CANCEL_param" class="java.util.HashMap">
		<parameter property="IN_PAYMTHD"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE1"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE2"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_HOUSE_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_DONG"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_HO"				jdbcType="VARCHAR"	javaType="string" 	mode="IN" />				
	</parameterMap>
	
	<procedure id="SLS040301DAO.SPSLS_HOUSE_RCIV_PSTMRK_CANCEL" parameterMap="SPSLS_HOUSE_RCIV_PSTMRK_CANCEL_param">
		{ call SPSLS_HOUSE_RCIV_PSTMRK_CANCEL(?,?,?,?,?,?) }
	</procedure>
	
	
	<parameterMap id="SPSLS_HOUSE_RCIV_PSTMRK_I_param" class="java.util.HashMap">
		<parameter property="IN_PAYMTHD"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE1"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE2"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_HOUSE_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_DONG"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_HO"				jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_REGISTER_ID"	jdbcType="VARCHAR"	javaType="string" 	mode="IN" />				
	</parameterMap>
	
	<procedure id="SLS040301DAO.SPSLS_HOUSE_RCIV_PSTMRK_I" parameterMap="SPSLS_HOUSE_RCIV_PSTMRK_I_param">
		{ call SPSLS_HOUSE_RCIV_PSTMRK_I(?,?,?,?,?,? ,?) }
	</procedure>
	
	<parameterMap id="SPSLS_HOUSE_RCIV_PSTMRK_U_param" class="java.util.HashMap">
		<parameter property="IN_PAYMTHD"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE1"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_RCIV_DE2"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_HOUSE_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_DONG"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />	
		<parameter property="IN_HO"				jdbcType="VARCHAR"	javaType="string" 	mode="IN" />				
	</parameterMap>	
	
	<procedure id="SLS040301DAO.SPSLS_HOUSE_RCIV_PSTMRK_U" parameterMap="SPSLS_HOUSE_RCIV_PSTMRK_U_param">
		{ call SPSLS_HOUSE_RCIV_PSTMRK_U(?,?,?,?,?,?) }
	</procedure>	
	
	
	
	<!-- 주택수납과오 ================================================== -->

	<!-- 주택수납과오 조회 -->
	<select id="SLS040301DAO.selectHouseRcivFaltList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		
		SELECT 0 AS CHK
		      ,A.FALT_SN /** 과오일련번호 */
		      ,A.RCIV_SN /** 수납일련번호 */
		      ,A.RCIV_DE /** 수납일자 */
		      ,A.RCIV_NO /** 수납번호 */
		      ,A.EXPNDTR_DE /** 지출일자 */
		      ,A.DPSTR /** 예금주 */
		      ,A.BANK_CODE /** 은행코드 */
		      ,SFCOM_CODE_NM('COM021', A.BANK_CODE, 'CODE_NM') AS BANK_CODE_NM
		      ,A.DEFRAY_ACNUTNO /** 출금계좌번호 */
		      /*,A.OVERRPAY_AMOUNT /** 과오납금액 */
		      ,A.PROCESS_DTLS /** 처리내역 */
		      ,A.PYMNT_DE /** 지급일자 */
		      ,A.ELCTRN_SANCTN_NO /** 전자결재번호 */
		      ,A.SANCTN_AT /** 전자결재여부 */
		      ,A.EXPNDTR_DECSN_NO /** 지출결의번호 */
		      ,A.EXPNDTR_DECSN_DE  /** 지출결의일자 */
			  ,A.DECSN_YEAR		/** 결의년도 */
		      ,A.CNTRCTR_NO /** 계약자번호 */
		      ,A.RCPMNY_MTH /** 입금방법 */
		      ,A.PROCESS_AT /** 처리여부 */
		      ,DECODE(A.PROCESS_AT, '1', '처리완료', '미처리') AS PROCESS_AT_NM
		      ,A.PAY_TMLMT /** 납부기한 */
		       
		      ,B.RCIV_NO /** 수납번호 */
		      ,B.DECSN_DE /** 결의일자 */
		      ,B.INCME_DECSN_NO /** 결의번호 */
		       /*,B.BANK_CODE /** 은행코드 */
		       /*,SFCOM_CODE_NM('COM021', B.BANK_CODE, 'CODE_NM') AS BANK_CODE_NM
		      ,B.BANK_SPOT_CODE /** 은행지점코드 */
		      ,B.RCIV_AMOUNT /** 수납금액 */
		      ,B.PAYMTHD /** 납부방법 */
		      ,B.PAY_SE /** 납부구분 */
		      ,B.PSTMRK_OPERT_SE /** 소인작업구분 */
		      ,B.PSTMRK_AT /** 소인여부 */
		      ,B.OVERRPAY_AMOUNT /** 과오납금액 */
		      ,(NVL(B.RCIV_AMOUNT,0) - NVL(B.OVERRPAY_AMOUNT,0)) AS PAYAMT
		      ,B.ODR_SE /** 차수구분 */
		      ,B.RCIV_SE /** 수납구분 */
		      ,B.RCIV_CO /** 수납회수 */
		      ,B.PAY_TMLMT /** 납부기한 */
		      ,B.OVERRPAY_SE /** 과오납구분 */
		      ,B.OVERRPAY_DE /** 과오납일자 */
		      ,B.VIRTL_ACNUTNO /** 가상계좌번호 */
		      ,B.RQEST_SE /** 청구구분 */
		      ,B.PROCESS_NO /** 처리번호 */
		      ,C.HOUSE_CODE /** 주택코드 */
		      ,SFSLS_HOUSE_NM(C.HOUSE_CODE, 'ALL_HOUSE_NM') AS ALL_HOUSE_NM
		      ,C.HO /** 호 */
		      ,C.DONG /** 동 */
		      ,C.HOUSE_CSTMR_NO /** 주택고객번호 */
		      ,D.CSTMR_NM /** 고객명 */
		
		  FROM TBSLS_HOUSE_RCIV_FALT   A /* 주택수납과오 */
		      ,TBSLS_HOUSE_RCIV_PSTMRK B /* 주택수납소인 */
		      ,TBSLS_HCNTRCTR          C /* 주택계약자 */
		      ,TBSLS_HOUSE_CSTMR       D /* 주택고객 */
		
		 WHERE 1 = 1
		   AND A.RCIV_SN = B.RCIV_SN(+)
		   AND A.RCIV_DE = B.RCIV_DE(+)
		   AND A.CNTRCTR_NO = B.CNTRCTR_NO(+)
		   AND A.CNTRCTR_NO = C.CNTRCTR_NO(+)
		   AND C.HOUSE_CSTMR_NO = D.HOUSE_CSTMR_NO(+)
		   
		   AND B.PSTMRK_OPERT_SE IN ('O', 'R')   /* 과오납 */
		   /* AND B.OVERRPAY_AMOUNT > 0 */
		
		<isNotEmpty property="RCIV_DE1">   
		   AND A.RCIV_DE BETWEEN #RCIV_DE1# AND #RCIV_DE2#
		</isNotEmpty>
		
		<isNotEqual property="PAYMTHD" compareValue="%">
		   AND B.PAYMTHD LIKE #PAYMTHD# || '%'
		</isNotEqual>
		
		<isNotEqual property="HOUSE_CODE" compareValue="%">
		   AND B.HOUSE_CODE LIKE #HOUSE_CODE# || '%'
		</isNotEqual>

		<isNotEmpty property="DONG">
		   AND B.DONG LIKE ||'%' #DONG# 
		</isNotEmpty>

		<isNotEmpty property="HO">
		   AND B.HO LIKE ||'%' #HO#
		</isNotEmpty>

		 ORDER BY 1, 2, 3, 4


	</select>

	<!-- 주택수납과오 추가 -->
	<insert id="SLS040301DAO.insertHouseRcivFaltList" parameterClass="java.util.HashMap">
		INSERT INTO TBSLS_HOUSE_RCIV_FALT (			/** 주택수납과오 */
			 FALT_SN			/** 과오일련번호 */
			,RCIV_SN			/** 수납일련번호 */
			,RCIV_DE			/** 수납일자 */
			,RCIV_NO			/** 수납번호 */
			,EXPNDTR_DE			/** 지출일자 */
			,DPSTR			/** 예금주 */
			,BANK_CODE			/** 은행코드 */
			,DEFRAY_ACNUTNO			/** 출금계좌번호 */
			,OVERRPAY_AMOUNT			/** 과오납금액 */
			,PROCESS_DTLS			/** 처리내역 */
			,PYMNT_DE			/** 지급일자 */
			,ELCTRN_SANCTN_NO			/** 전자결재번호 */
			,EXPNDTR_DECSN_NO			/** 지출결의번호 */
			,CNTRCTR_NO			/** 계약자번호 */
			,RCPMNY_MTH			/** 입금방법 */
			,PROCESS_AT			/** 처리여부 */
			,PAY_TMLMT			/** 납부기한 */
			,REGISTER_ID			/** 등록자ID */
			,REGIST_DT			/** 등록일시 */
			,UPDUSR_ID			/** 수정자ID */
			,UPDT_DT			/** 수정일시 */
		) VALUES (
			 #FALT_SN#			/** 과오일련번호 */
			,#RCIV_SN#			/** 수납일련번호 */
			,#RCIV_DE#			/** 수납일자 */
			,#RCIV_NO#			/** 수납번호 */
			,#EXPNDTR_DE#			/** 지출일자 */
			,#DPSTR#			/** 예금주 */
			,#BANK_CODE#			/** 은행코드 */
			,#DEFRAY_ACNUTNO#			/** 출금계좌번호 */
			,#OVERRPAY_AMOUNT#			/** 과오납금액 */
			,#PROCESS_DTLS#			/** 처리내역 */
			,#PYMNT_DE#			/** 지급일자 */
			,#ELCTRN_SANCTN_NO#			/** 전자결재번호 */
			,#EXPNDTR_DECSN_NO#			/** 지출결의번호 */
			,#CNTRCTR_NO#			/** 계약자번호 */
			,#RCPMNY_MTH#			/** 입금방법 */
			,#PROCESS_AT#			/** 처리여부 */
			,#PAY_TMLMT#			/** 납부기한 */
			,#USER_ID#			/** 등록자ID */
			,SYSDATE			/** 등록일시 */
			,#USER_ID#			/** 수정자ID */
			,SYSDATE			/** 수정일시 */
		)
	</insert>

	<!-- 주택수납과오 수정 -->
	<update id="SLS040301DAO.updateHouseRcivFaltList" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RCIV_FALT			/** 주택수납과오 */
		  SET			
			 DPSTR = #DPSTR#			/** 예금주 */
			,BANK_CODE = #BANK_CODE#			/** 은행코드 */
			,DEFRAY_ACNUTNO = #DEFRAY_ACNUTNO#			/** 출금계좌번호 */
			,OVERRPAY_AMOUNT = #OVERRPAY_AMOUNT#			/** 과오납금액 */
			,PROCESS_DTLS = #PROCESS_DTLS#			/** 처리내역 */
			,PYMNT_DE = #PYMNT_DE#			/** 지급일자 */
			
			,UPDUSR_ID = #S_USER_ID#			/** 수정자ID */
			,UPDT_DT = SYSDATE			/** 수정일시 */
		WHERE FALT_SN = #FALT_SN#			/** 과오일련번호 */
	</update>

	<!-- 주택수납과오 삭제 -->
	<delete id="SLS040301DAO.deleteHouseRcivFaltList" parameterClass="java.util.HashMap">
		DELETE FROM TBSLS_HOUSE_RCIV_FALT			/** 주택수납과오 */
		 WHERE FALT_SN = #FALT_SN#			/** 과오일련번호 */
	</delete>
	
	<insert id="SLS040301DAO.saveHouseRcivC" parameterClass="java.util.HashMap">
BEGIN
    INSERT INTO TBSLS_HOUSE_RCIV_PSTMRK
	(	   
		   RCIV_SN
	      ,CNTRCTR_NO
	      ,PAY_SE
	      ,HOUSE_CODE
	      ,DONG
	      ,HO
	      ,RCIV_DE
	      ,PAY_TMLMT
	      ,RCIV_NO
	      ,BANK_CODE
	      ,BANK_SPOT_CODE
	      ,RCIV_AMOUNT
	      ,ODR_SE
	      ,RCIV_SE
	      ,RCIV_CO
	      ,PAYMTHD
	      ,PSTMRK_OPERT_SE
	      ,PSTMRK_AT
	      ,REGISTER_ID
	      ,REGIST_DT
	      ,UPDUSR_ID
	      ,UPDT_DT
	      ,PAY_NO
	      ,OVERRPAY_AMOUNT
	 ) VALUES (
	  	   (SELECT NVL(MAX(RCIV_SN), 0) FROM TBSLS_HOUSE_RCIV_PSTMRK) + 1
	  	 , #CNTRCTR_NO#
         , (SELECT SUBSTR(S1.CHRCTR_PREPAR_VALUE_0, 1, 1)
             FROM TBCOM_CMMN_CODE S1
            WHERE 1 = 1
              AND S1.GRP_CODE = 'HOU0A1'
              AND S1.CODE = #PAY_CODE#)
	  	 , #HOUSE_CODE#
	  	 , #DONG#
	  	 , #HO#
	  	 , #RCIV_DE#
	     , #PAY_TMLMT#
	     , #RCIV_NO#
	     , #BANK_CODE#
	     , #BANK_SPOT_CODE#
	     , #RCIV_AMOUNT#
	     , #ODR_SE#
	     , #RCIV_SE#
	     , #RCIV_CO#
	     , '03'
	     , #PSTMRK_OPERT_SE#
	     , '0'
	     , #S_USER_ID#
	     , SYSDATE
	     , #S_USER_ID#
	     , SYSDATE
	     , #PAY_NO#	  	 
	     , #OVERRPAY_AMOUNT#
	 )
	 ;
	 
	 UPDATE TBSLS_ETC_INCME_PAY
	    SET CONFM_AT = '1'
      WHERE 1=1
        AND JOB_SE = 'HOU'
        AND CNTRCTR_NO = #CNTRCTR_NO#
        AND PAY_NO = #PAY_NO# 
        ;
      
END;	 	
	</insert>
	
	<update id="SLS040301DAO.saveHouseRcivU" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RCIV_PSTMRK			/** 주택수납과오 */
		  SET			
			 RCIV_AMOUNT = #RCIV_AMOUNT#			/** 출금계좌번호 */
			,OVERRPAY_AMOUNT = #OVERRPAY_AMOUNT#
			,PSTMRK_OPERT_SE = #PSTMRK_OPERT_SE#
			,PAY_TMLMT = #PAY_TMLMT#			/** 과오납금액 */
			,RCIV_DE = #RCIV_DE#			/** 처리내역 */
			,PAY_SE = #PAY_SE#			/** 지급일자 */
			,RCIV_SE = #RCIV_SE#
			,RCIV_CO = #RCIV_CO#
			,UPDUSR_ID = #S_USER_ID#			/** 수정자ID */
			,UPDT_DT = SYSDATE			/** 수정일시 */
		WHERE CNTRCTR_NO = #CNTRCTR_NO#			/** 과오일련번호 */
		  AND RCIV_SN = #RCIV_SN#
	</update>	
	
    <!-- 쿼리명 : 영수필통지서입력 납부번호 조회
	설명 : 영수필통지서입력 납부번호 조회 쿼리
	수정일  		수정자  	수정내용
	2015.10.29	최승락	최초생성
	작성자 : 최승락
	최초작성일 : 2015.10.29
	-->
	<select id="SLS040301DAO.selectPayNo" parameterClass="java.util.Map" resultClass="String">
SELECT PAY_NO
   FROM
   (            
            SELECT T2.PAY_NO
              FROM TBSLS_HCNTRCTR T1
                , TBSLS_HOUSE_LTTOT_PAY T2
    	     WHERE 1 = 1
               AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
               AND T1.HOUSE_CODE = #HOUSE_CODE#
               AND T1.DONG = #DONG#
               AND T1.HO = #HO#
               AND T2.PAY_CODE = #PAY_CODE#
               AND T2.PAY_TMLMT = #PAY_TMLMT#
             UNION  
            SELECT T2.PAY_NO
              FROM TBSLS_HCNTRCTR T1
                , TBSLS_HOUSE_RENT_PAY T2
			 WHERE 1 = 1                
               AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
               AND T1.HOUSE_CODE = #HOUSE_CODE#
               AND T1.DONG = #DONG#
               AND T1.HO = #HO#
               AND T2.PAY_CODE = #PAY_CODE#
               AND T2.PAY_TMLMT = #PAY_TMLMT#
    )
	</select>
	
	
    <!-- 쿼리명 : 영수필통지서입력 기타납부번호 조회
	설명 : 영수필통지서입력 기타납부번호 조회 쿼리
	수정일  		수정자  	수정내용
	2015.10.29	최승락	최초생성
	작성자 : 최승락
	최초작성일 : 2015.10.29
	-->
	<select id="SLS040301DAO.selectEtcPayNo" parameterClass="java.util.Map" resultClass="String">
		<![CDATA[
			SELECT T2.PAY_NO
			  FROM TBSLS_HCNTRCTR T1
				, TBSLS_ETC_INCME_PAY T2
			 WHERE 1 = 1
		]]>
			   AND T1.CNTRCTR_NO = T2.CNTRCTR_NO
			   AND T2.JOB_SE = 'HOU'
			   AND T1.HOUSE_CODE = #HOUSE_CODE#
			   AND T1.DONG = #DONG#
			   AND T1.HO = #HO#
			   AND T2.PAY_CODE = #PAY_CODE#
			   AND T2.PAY_TMLMT = #PAY_TMLMT#
	</select>		
	
	<!-- 지출결의 결의번호 업데이트  -->
	<update id="SLS040301DAO.updateExpndtrDecsnNo" parameterClass="java.util.Map">
		UPDATE TBSLS_HOUSE_RCIV_FALT 
		   SET
			   EXPNDTR_DECSN_DE  	= TO_CHAR(SYSDATE,'YYYYMMDD')
			  ,DECSN_YEAR 			= #DSNMASTR.DECSN_YEAR#
			  ,EXPNDTR_DECSN_NO  	= #DSNMASTR.DECSN_NO#
			  ,UPDUSR_ID            = #S_USER_ID#
		      ,UPDT_DT              = SYSDATE
	  	 WHERE 1 = 1
	       AND FALT_SN = #FALT_SN#			/** 과오일련번호 */
		  
	</update>
	
	<!-- 전자결재 결재번호 업데이트  -->
	<update id="SLS040301DAO.approveU" parameterClass="java.util.HashMap">
		UPDATE TBSLS_HOUSE_RCIV_FALT A
		   SET ELCTRN_SANCTN_NO  = (SELECT SANCTN_NO FROM TBCOM_ELCTRN_SANCTN_MASTR WHERE INTRLCK_IDNTFR = #KEY#)
			  ,UPDUSR_ID  =  #S_USER_ID#
			  ,UPDT_DT	=  SYSDATE			  
		 WHERE FALT_SN = #FALT_SN#			/** 과오일련번호 */
	</update>

	
	
</sqlMap>