<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="pms_prj02">

	<!-- 
		 R   : TBPRJ_BSNS_CODE		사업코드
		CRUD : TBPRJ_INVT_PLAN		투자계획
	-->

	<!-- 투자계획 ================================================== -->
	<!-- 투자계획 조회 -->
	<select id="PRJ020702.mList" parameterClass="map" resultClass="hashmap">
		/* PRJ020702.mList[투자계획 조회] */
		SELECT #STDR_YEAR# AS STDR_YEAR,
			   '0' AS SUB_SE,
			   #BSNS_CODE# AS BSNS_CODE,
			   SUBSTR (A.STD_PRMPC_CODE, 1, 2) || '0000' AS CD1,
			   SUBSTR (A.STD_PRMPC_CODE, 1, 4) || '00' AS CD2,
			   A.STD_PRMPC_CODE AS CD3,
			   NVL(BF_SUM, 0) AS BF_SUM,
			   NVL(M01, 0) AS M01,
			   NVL(M02, 0) AS M02,
			   NVL(M03, 0) AS M03,
			   NVL(M04, 0) AS M04,
			   NVL(M05, 0) AS M05,
			   NVL(M06, 0) AS M06,
			   NVL(M07, 0) AS M07,
			   NVL(M08, 0) AS M08,
			   NVL(M09, 0) AS M09,
			   NVL(M10, 0) AS M10,
			   NVL(M11, 0) AS M11,
			   NVL(M12, 0) AS M12,
			   NVL(AF_SUM, 0) AS AF_SUM
		  FROM TBPRJ_PRMPC_CODE A
		  LEFT JOIN (
					SELECT STD_PRMPC_CODE,
						   SUM(AMT) AS SUM,
						   SUM(DECODE(SE, '00', AMT, 0)) AS BF_SUM,
						   MAX(DECODE(SE, '01', AMT, 0)) AS M01,
						   MAX(DECODE(SE, '02', AMT, 0)) AS M02,
						   MAX(DECODE(SE, '03', AMT, 0)) AS M03,
						   MAX(DECODE(SE, '04', AMT, 0)) AS M04,
						   MAX(DECODE(SE, '05', AMT, 0)) AS M05,
						   MAX(DECODE(SE, '06', AMT, 0)) AS M06,
						   MAX(DECODE(SE, '07', AMT, 0)) AS M07,
						   MAX(DECODE(SE, '08', AMT, 0)) AS M08,
						   MAX(DECODE(SE, '09', AMT, 0)) AS M09,
						   MAX(DECODE(SE, '10', AMT, 0)) AS M10,
						   MAX(DECODE(SE, '11', AMT, 0)) AS M11,
						   MAX(DECODE(SE, '12', AMT, 0)) AS M12,
						   SUM(DECODE(SE, '13', AMT, 0)) AS AF_SUM
					  FROM (
							SELECT STD_PRMPC_CODE,
								   DECODE(SIGN(STDR_YEAR - #STDR_YEAR#), -1, '00', 0, STDR_MT, 1, '13') AS SE,
								   INVT_PLAN_AMOUNT AS AMT
							  FROM TBPRJ_INVT_PLAN
							 WHERE BSNS_CODE = #BSNS_CODE#
						   )
					 GROUP BY STD_PRMPC_CODE
			   ) B
			ON B.STD_PRMPC_CODE = A.STD_PRMPC_CODE
		 WHERE A.CL_SE = '3'
		 UNION ALL
		SELECT #STDR_YEAR# AS STDR_YEAR,
			   '1' AS SUB_SE,
			   #BSNS_CODE# AS BSNS_CODE,
			   A.STD_PRMPC_CODE AS CD1,
			   B.CD2,
			   B.CD3,
			   NVL(BF_SUM, 0) AS BF_SUM,
			   NVL(M01, 0) AS M01,
			   NVL(M02, 0) AS M02,
			   NVL(M03, 0) AS M03,
			   NVL(M04, 0) AS M04,
			   NVL(M05, 0) AS M05,
			   NVL(M06, 0) AS M06,
			   NVL(M07, 0) AS M07,
			   NVL(M08, 0) AS M08,
			   NVL(M09, 0) AS M09,
			   NVL(M10, 0) AS M10,
			   NVL(M11, 0) AS M11,
			   NVL(M12, 0) AS M12,
			   NVL(AF_SUM, 0) AS AF_SUM
		  FROM TBPRJ_PRMPC_CODE A
		  LEFT JOIN ( 
					SELECT SUBSTR(STD_PRMPC_CODE, 1, 2) || '0000' AS CD1,
						   '' AS CD2,
						   '' CD3,
						   SUM(DECODE(SE, '00', AMT, 0)) AS BF_SUM,
						   SUM(DECODE(SE, '01', AMT, 0)) AS M01,
						   SUM(DECODE(SE, '02', AMT, 0)) AS M02,
						   SUM(DECODE(SE, '03', AMT, 0)) AS M03,
						   SUM(DECODE(SE, '04', AMT, 0)) AS M04,
						   SUM(DECODE(SE, '05', AMT, 0)) AS M05,
						   SUM(DECODE(SE, '06', AMT, 0)) AS M06,
						   SUM(DECODE(SE, '07', AMT, 0)) AS M07,
						   SUM(DECODE(SE, '08', AMT, 0)) AS M08,
						   SUM(DECODE(SE, '09', AMT, 0)) AS M09,
						   SUM(DECODE(SE, '10', AMT, 0)) AS M10,
						   SUM(DECODE(SE, '11', AMT, 0)) AS M11,
						   SUM(DECODE(SE, '12', AMT, 0)) AS M12,
						   SUM(DECODE(SE, '13', AMT, 0)) AS AF_SUM
					  FROM (
							SELECT STD_PRMPC_CODE,
								   DECODE(SIGN(STDR_YEAR - #STDR_YEAR#), -1, '00', 0, STDR_MT, 1, '13') AS SE,
								   INVT_PLAN_AMOUNT AS AMT
							  FROM TBPRJ_INVT_PLAN
							 WHERE BSNS_CODE = #BSNS_CODE#
						   )
					 GROUP BY SUBSTR (STD_PRMPC_CODE, 1, 2) || '0000'
			   ) B
			ON B.CD1 = A.STD_PRMPC_CODE
		 WHERE A.CL_SE = '1'
		 ORDER BY CD1, SUB_SE, CD3
	</select>


	<!-- 투자계획 등록, 수정 -->
	<update id="PRJ020702.mCU" parameterClass="map">
		/* "PRJ020702.mCU"[투자계획 등록, 수정] */
		MERGE INTO TBPRJ_INVT_PLAN A
		USING DUAL
		ON (	A.BSNS_CODE		 = #BSNS_CODE#			/* 사업코드 */
			AND A.STDR_YEAR		 = #STDR_YEAR#			/* 기준년도 */
			AND A.STDR_MT		 = #STDR_MT#			/* 기준월 */
			AND A.STD_PRMPC_CODE = #STD_PRMPC_CODE#		/* 원가코드 */
		   )
		WHEN MATCHED THEN
		UPDATE 
			SET INVT_PLAN_AMOUNT = #INVT_PLAN_AMOUNT#,	/* 시작일자 */
				UPDUSR_ID		 = #S_USER_ID#,			/* 수정자ID */
				UPDT_DT			 = SYSDATE				/* 수정일시 */
		WHEN NOT MATCHED THEN
		INSERT (
				BSNS_CODE,								/* 사업코드 */
				STDR_YEAR,								/* 기준년도 */
				STDR_MT,								/* 기준월 */
				STD_PRMPC_CODE,							/* 원가코드 */
				INVT_PLAN_AMOUNT,						/* 투자계획 */
				REGISTER_ID,							/* 등록자ID */
				REGIST_DT,								/* 등록일시 */
				UPDUSR_ID,								/* 수정자ID */
				UPDT_DT									/* 수정일시 */
				)
		VALUES (
				#BSNS_CODE#,							/* 사업코드 */
				#STDR_YEAR#,							/* 기준년도 */
				#STDR_MT#,								/* 기준월 */
				#STD_PRMPC_CODE#,						/* 원가코드 */
				#INVT_PLAN_AMOUNT#,						/* 투자계획 */
				#S_USER_ID#,							/* 등록자ID */
				SYSDATE,								/* 등록일시 */
				#S_USER_ID#,							/* 수정자ID */
				SYSDATE									/* 수정일시 */
				)
	</update>


	<!-- 투자계획 삭제 -->
	<delete id="PRJ020702.mD" parameterClass="map">
		/* PRJ020702.mD[투자계획 삭제] */
		DELETE
		  FROM TBPRJ_INVT_PLAN
		 WHERE BSNS_CODE		 = #BSNS_CODE#
		   AND STDR_YEAR		 = #STDR_YEAR#
<!-- 		   AND STDR_MT			 = #STDR_MT# -->
		   AND STD_PRMPC_CODE	 = #STD_PRMPC_CODE#
	</delete>
	
	
	<!-- 원가코드 조회 -->
	<select id="PRJ020702.prmpcCodeList" parameterClass="map" resultClass="hashmap">
		/* PRJ020702.prmpcCodeList[원가코드 조회] */
		SELECT STD_PRMPC_CODE AS CODE,					/* 표준원가코드 */
			   CL_SE,									/* 분류구분 */
			   SUBSTR(STD_PRMPC_CODE, 1, 2 * CL_SE - 2) AS UPPER_CODE,
			   CASE WHEN CL_SE = '1' THEN LCLAS_NM
					WHEN CL_SE = '2' THEN MLSFC_NM
					WHEN CL_SE = '3' THEN SCLAS_NM
				END AS CODE_NM
		  FROM TBPRJ_PRMPC_CODE
		 ORDER BY STD_PRMPC_CODE
	</select>


	<!-- 양식 조회 -->
	<select id="PRJ020702.sampleList" parameterClass="map" resultClass="hashmap">
		/* PRJ020702.sampleList[양식 조회] */
		SELECT A.CD1,
			   A.CD2,
			   A.CD3,
			   C.CD_NM1,
			   B.CD_NM2,
			   A.CD_NM3,
			   '[' || A.CD1 || '] ' || C.CD_NM1 AS FULL_CD_NM1,
			   '[' || A.CD2 || '] ' || B.CD_NM2 AS FULL_CD_NM2,
			   '[' || A.CD3 || '] ' || A.CD_NM3 AS FULL_CD_NM3,
			   A.STD_PRMPC_CODE
		  FROM (
				SELECT SUBSTR(STD_PRMPC_CODE, 1, 2) AS CD1,
					   SUBSTR(STD_PRMPC_CODE, 3, 2) AS CD2,
					   SUBSTR(STD_PRMPC_CODE, 5) AS CD3,
					   SCLAS_NM AS CD_NM3,
					   STD_PRMPC_CODE
				  FROM TBPRJ_PRMPC_CODE
				 WHERE CL_SE = '3'
			   ) A
		 INNER JOIN (
				SELECT SUBSTR(STD_PRMPC_CODE, 1, 2) AS CD1,
					   SUBSTR(STD_PRMPC_CODE, 3, 2) AS CD2,
					   MLSFC_NM AS CD_NM2
				  FROM TBPRJ_PRMPC_CODE
				 WHERE CL_SE = '2'
			   ) B
			ON B.CD1 = A.CD1
		   AND B.CD2 = A.CD2
		 INNER JOIN (
				SELECT SUBSTR(STD_PRMPC_CODE, 1, 2) AS CD1,
					   LCLAS_NM AS CD_NM1
				  FROM TBPRJ_PRMPC_CODE
				 WHERE CL_SE = '1'
			   ) C
			ON C.CD1 = A.CD1
		 ORDER BY STD_PRMPC_CODE
	</select>
</sqlMap>