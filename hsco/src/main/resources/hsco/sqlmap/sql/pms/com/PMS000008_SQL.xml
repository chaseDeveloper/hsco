<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="PMS000008SQL">	


<!--  영구임대 R1 주택명 정보 확인  -->
	<select id="PMS000008DAO.selectHoseNmListRN1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
             SELECT 
			  RENT_HOUSE_CODE AS CODE,
			  RENT_HOUSE_NM AS CODE_NM, 
			  '['||RENT_HOUSE_CODE||']'||RENT_HOUSE_NM AS ALL_CODE_NM
			  FROM  TBRNT_RENT_HOUSE
			  WHERE USE_AT = 1
			  ORDER BY CODE          
	</select>
<!--  매입임대 R2 주택명 정보 확인  -->
	<select id="PMS000008DAO.selectHoseNmListRN2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
             SELECT 
			  	RENT_HOUSE_CODE AS CODE,
			    RENT_HOUSE_NM AS CODE_NM, 
			    '['||RENT_HOUSE_CODE||']'||RENT_HOUSE_NM AS ALL_CODE_NM
			    FROM TBRNT_PUCHAS_HOUSE
			    WHERE USE_AT = 1 
			    ORDER BY CODE          
	</select>
<!--  전세임대 R3 주택명 정보 확인  -->
	<select id="PMS000008DAO.selectHoseNmListRN3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
             SELECT
		    	'00'||CODE AS CODE, 
		        CODE_NM,
		        '[00'||CODE||']'||CODE_NM AS ALL_CODE_NM 
		        FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'RNT004'
		         AND USE_AT = 1  
		        ORDER BY CODE         
	</select>
<!--  주택임대 HOU 주택명 정보 확인  -->
	<select id="PMS000008DAO.selectHoseNmListHOU" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
             SELECT 
		        HOUSE_CODE AS CODE,
		        HOUSE_NM AS CODE_NM,
	   		    '['||HOUSE_CODE||']'||HOUSE_NM AS ALL_CODE_NM 
		        FROM TBSLS_HOUSE_INFO
		        WHERE USE_AT = 1
		        ORDER BY CODE           
	</select>
<!--  토지임대 LAD 토지명 정보 확인  -->	
	<select id="PMS000008DAO.selectHoseNmListLAD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT /* 토지코드 목록 조회 */
			  '0' AS CHK				/* 체크(예비) */
			, a.LAD_CODE as CODE        /* 토지코드 */
			, a.LAD_NM   as CODE_NM     /* 토지명 */
			, '['||a.LAD_CODE||']'||a.LAD_NM AS ALL_CODE_NM        /* 토지명 */
			, a.ACQS_AMOUNT             /* 취득금액 */
			, a.USE_AT                  /* 사용여부 */
			, a.BSNS_CODE               /* 사업코드 */
			, a.LOCPLC_ZIP              /* 소재지우편번호 */
			, a.LOCPLC_BASS_ADRES       /* 소재지기본주소 */
			, a.OPERTN_BGNDE            /* 시행시작일 */
			, a.OPERTN_ENDDE            /* 시행종료일 */
			, a.PLAN_CONFM_NTFC_DE_1    /* 계획승인고시일자1 */
			, a.PLAN_CONFM_NTFC_DE_2    /* 계획승인고시일자2 */
			, a.LTTOT_BSNS_CODE         /* 분양사업코드 */
			, a.RENT_BSNS_CODE          /* 임대사업코드 */
			, a.PRPOS_CODE              /* 용도코드 */
			, a.READNG_AT               /* 열람여부 */
			, a.HMPG_USE_AT             /* 홈페이지사용여부 */
			, a.REGISTER_ID             /* 등록자ID */
			, a.REGIST_DT               /* 등록일시 */
			, a.UPDUSR_ID               /* 수정자ID */
			, a.UPDT_DT                 /* 수정일시 */
			, a.BSNS_TY                 /* 사업타입 */
			, a.LOCPLC_DETAIL_ADRES     /* 소재지상세주소 */
			, a.LOCPLC_ZIP_LNM          /* 소재지우편번호지번 */
			, a.LOCPLC_BASS_ADRES_LNM   /* 소재지기본주소지번 */
			, a.LOCPLC_DETAIL_ADRES_LNM /* 소재지상세주소지번 */
		  FROM TBSLS_LAD_INFO a          /* 토지정보 */
		 WHERE 1 = 1
		   AND USE_AT = 1      			  /* 사용여부 */
		 ORDER BY a.LAD_CODE
	</select>

	<!-- 쿼리명 : 과년도미수금내역조회
	설명 : 과년도미수금내역조회
	수정일  수정자  수정내용
	
	작성자 : 김지훈
	최초작성일 : 2015.12.16
	-->
	<select id="PMS000008DAO.selectPstyrAtmpAmountList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     SELECT ANACT_SE,									 /* 결의서구분 */
		        MDAT_DE,									 /* 결의일자 */
		        MDAT_DECSN_NO,								 /* 조정결의번호 */
		        PAY_SE, 									 /* 납부구분 */
		        AMOUNT, 									 /* 금액 */
		        RM, 										 /* 비고 */
		        BUDGET_YEAR, 								 /* 예산년도 */
		        BUDGET_ACNT_SE, 							 /* 예산계정구분 */
		        BUDGET_ACNTCTGR, 							 /* 예산계정과목 */
		        BUKIP_CODE, 								 /* 부기코드 */
		        REGISTER_ID, 								 /* 등록자 아이디 */
		        REGIST_DT, 									 /* 등록일시 */
		        UPDUSR_ID, 									 /* 수정자 아이디 */
		        UPDT_DT,									 /* 수정일시 */
		        (SELECT CODE_NM
		           FROM TBCOM_CMMN_CODE z
		           WHERE CODE = SUBSTR(a.BUDGET_ACNT_SE,1,1)  /* 사업구분 첫자리만 적용 - 사업구분명*/
		             AND GRP_CODE = 'BDG001') BUDGET_ACNT_SE_NM,
		        (SELECT BUDGET_ACNT_NM
		           FROM TBBDG_BUDGET_ACNT_CODE z
		           WHERE YEAR = a.BUDGET_YEAR
		             AND BSNS_SE = SUBSTR(a.BUDGET_ACNT_SE,1,1)
		             AND BUDGET_ACNT_CODE = a.BUDGET_ACNTCTGR) BUDGET_ACNT_NM, /* 예산계정코드명 */
		        (SELECT EXPNDTR_UNIT_NM
		           FROM TBBDG_EXPNDTR_UNIT_CODE z
		           WHERE YEAR = a.BUDGET_YEAR
		             AND BSNS_SE = SUBSTR(a.BUDGET_ACNT_SE,1,1)
		             AND BUDGET_ACNT_CODE  = a.BUDGET_ACNTCTGR
		             AND EXPNDTR_UNIT_CODE = a.BUKIP_CODE)  EXPNDTR_UNIT_NM, /* 지출단위코드명 */
		        HOUSE_CODE,									 /* 주택코드 */
		        PRPOS_CODE AS PRPOS_CODE,
                JOB_SE_CODE AS JOB_SE
		 FROM TBRNT_PSTYR_ATMPT_AMOUNT a
		 WHERE BUDGET_YEAR = #YEAR#
		   AND a.JOB_SE_CODE = #JOB_SE#
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#
		 </isNotEmpty>
	</select>
	
<!--  과년도미수금내역 신규등록  -->
	<insert id="PMS000008DAO.InsertPstyrAtmpAmountList" parameterClass="java.util.HashMap" >
		 INSERT INTO TBRNT_PSTYR_ATMPT_AMOUNT
                         (JOB_SE_CODE,
                          MDAT_DE,
                          MDAT_DECSN_NO,
                          BUDGET_YEAR,
                          BUDGET_ACNT_SE,
                          BUDGET_ACNTCTGR,
                          BUKIP_CODE,
                          ANACT_SE,
                          PAY_SE,
                          AMOUNT,
                          RM,
                          HOUSE_CODE,
                         <isEqual property="JOB_SE" compareValue="LAD" > 
                          PRPOS_CODE,
                         </isEqual>
                          REGISTER_ID,
                          REGIST_DT,
                          UPDUSR_ID,
                          UPDT_DT
                          )
                  VALUES(#JOB_SE#,
                         #MDAT_DE#,
                         (SELECT NVL(MAX(TO_NUMBER(MDAT_DECSN_NO)),0)
                            FROM TBRNT_PSTYR_ATMPT_AMOUNT
                            WHERE BUDGET_YEAR = #BUDGET_YEAR#) + 1,
                         #BUDGET_YEAR#,
                         #BUDGET_ACNT_SE#,
                         #BUDGET_ACNTCTGR#,
                         #BUKIP_CODE#,
                         #ANACT_SE#,
                         DECODE(#PAY_SE#,'%','',#PAY_SE#),
                         #AMOUNT#,
                         #RM#,
                         DECODE(#HOUSE_CODE#,'%','',#HOUSE_CODE#),
                        <isEqual property="JOB_SE" compareValue="LAD" > 
                         #PRPOS_CODE#,
                        </isEqual>
                         #S_USER_ID#,
                         SYSDATE,
                         #S_USER_ID#,
                         SYSDATE
                         )
	</insert>
	
<!-- 과년도미수금내역 수정 -->
	<update id="PMS000008DAO.UpdatePstyrAtmpAmountList" parameterClass="java.util.HashMap" >
    UPDATE TBRNT_PSTYR_ATMPT_AMOUNT
       SET ANACT_SE          = #ANACT_SE#,
           PAY_SE            = decode(#PAY_SE#,'%','',#PAY_SE#),
           AMOUNT            = #AMOUNT#,
           RM                = #RM#,
           HOUSE_CODE        = DECODE(#HOUSE_CODE#,'%','',#HOUSE_CODE#),
           UPDUSR_ID         = #S_USER_ID#,
           BUDGET_ACNT_SE    = #BUDGET_ACNT_SE#,
           BUDGET_ACNTCTGR   = #BUDGET_ACNTCTGR#,
           BUKIP_CODE        = #BUKIP_CODE#,
          <isEqual property="JOB_SE" compareValue="LAD" > 
           PRPOS_CODE        =  #PRPOS_CODE#,
          </isEqual>     
           UPDT_DT           = SYSDATE
     WHERE JOB_SE_CODE       = #JOB_SE#
       AND MDAT_DE           = #MDAT_DE#
       AND MDAT_DECSN_NO     = #MDAT_DECSN_NO#
	</update>
	
<!-- 과년도미수금내역 수삭제-->
	<delete id="PMS000008DAO.DeletePstyrAtmpAmountList" parameterClass="java.util.HashMap">
  	DELETE FROM TBRNT_PSTYR_ATMPT_AMOUNT
     WHERE JOB_SE_CODE      = #JOB_SE#
       AND MDAT_DE          = #MDAT_DE#
       AND MDAT_DECSN_NO    = #MDAT_DECSN_NO#
	</delete>

<!-- 예산계정과목코드 목록조회 -->
	<select id="PMS000008DAO.selectAcntCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*PMS000008DAO.selectAcntCode*/]]>
		WITH EXECUT_BUDGET AS (
		        SELECT t1.YEAR
		              ,t1.BSNS_SE
		              ,t1.BALC_SE
		              ,t2.UPPER_ACNT_CODE
		              ,t1.BUDGET_ACNT_CODE
		              ,t2.BUDGET_ACNT_NM
		              ,DECODE(t2.ACNT_LEVEL, '7', '4', t2.ACNT_LEVEL)               AS ACNT_LEVEL
		              ,t2.CHIT_PROCESS_AT
		        FROM   (
		                SELECT YEAR
		                       ,BSNS_SE
		                       ,BALC_SE
		                       ,BUDGET_ACNT_CODE
		                  FROM TBBDG_EXPNDTR_UNIT_CODE
		                 WHERE 1=1
		                	<isNotEmpty property="YEAR"      prepend="AND    ">YEAR     = #YEAR#</isNotEmpty>
		                	<isNotEmpty property="BSNS_SE"   prepend="AND    ">BSNS_SE  = #BSNS_SE#</isNotEmpty>
		                	<isNotEmpty property="BALC_SE"   prepend="AND    ">BALC_SE  = #BALC_SE#</isNotEmpty>
		                	<isNotEmpty property="ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE LIKE #ACNT_CODE#</isNotEmpty>
		                	<isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		                 GROUP BY YEAR
		                        ,BSNS_SE
		                        ,BALC_SE
		                        ,BUDGET_ACNT_CODE
		               ) t1
		               INNER JOIN TBBDG_BUDGET_ACNT_CODE t2
		                    ON t1.YEAR = t2.YEAR
		                   AND t1.BSNS_SE = t2.BSNS_SE
		                   AND t1.BALC_SE = t2.BALC_SE
		                   AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		        WHERE  1=1
		        <isNotEmpty property="PLAN_REGIST_AT" prepend="AND    ">NVL(t2.PLAN_REGIST_AT,0) = #PLAN_REGIST_AT#</isNotEmpty>
		        ORDER BY T1.YEAR
		                ,T1.BSNS_SE
		                ,T1.BALC_SE
		                ,T1.BUDGET_ACNT_CODE
		), LV5_BUDGET AS (
		    SELECT lv5.YEAR, lv5.BSNS_SE, lv5.BALC_SE, lv5.BUDGET_ACNT_CODE, lv5.BUDGET_ACNT_NM, lv5.ACNT_LEVEL, lv5.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv5
		    WHERE  lv5.ACNT_LEVEL = '5'
		    AND    EXISTS(
		        SELECT *
		        FROM   EXECUT_BUDGET
		        WHERE  YEAR             = lv5.YEAR
		        AND    BSNS_SE          = lv5.BSNS_SE
		        AND    BALC_SE          = lv5.BALC_SE
		        AND    BUDGET_ACNT_CODE = lv5.BUDGET_ACNT_CODE
<!-- 		  <isNotEmpty property="JOB_SE">
		        <isEqual property="JOB_SE" compareValue="RN1">
		        AND    (BUDGET_ACNT_CODE = '4114001' OR BUDGET_ACNT_CODE = '4116001' OR BUDGET_ACNT_CODE = '4221001')
		        </isEqual>
		        <isEqual property="JOB_SE" compareValue="RN2">
		        AND    (BUDGET_ACNT_CODE = '4114001' OR BUDGET_ACNT_CODE = '4221001')
		        </isEqual>
		        <isEqual property="JOB_SE" compareValue="HOU">
		        AND    (BUDGET_ACNT_CODE = '4111001' OR BUDGET_ACNT_CODE = '4113001' OR BUDGET_ACNT_CODE = '4221001')
		        </isEqual>
		        <isEqual property="JOB_SE" compareValue="LAD">
		        AND    BUDGET_ACNT_CODE = '4122001'
		        </isEqual>
		  </isNotEmpty>   -->    
        		
		    )
		), LV4_BUDGET AS (
		    SELECT lv4.YEAR, lv4.BSNS_SE, lv4.BALC_SE, lv4.BUDGET_ACNT_CODE, lv4.BUDGET_ACNT_NM, lv4.ACNT_LEVEL, lv4.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv4
		    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		    AND    (
		            lv4.BUDGET_ACNT_CODE IN (
		                                     SELECT lv5.UPPER_ACNT_CODE
		                                     FROM   LV5_BUDGET lv5
		                                     WHERE  lv5.ACNT_LEVEL = '5'
		                                     AND    lv5.YEAR       = lv4.YEAR
		                                     AND    lv5.BSNS_SE    = lv4.BSNS_SE
		                                     AND    lv5.BALC_SE    = lv4.BALC_SE
		                                    )
		            OR
		            EXISTS (
		                    SELECT *
		                    FROM   EXECUT_BUDGET
		                    WHERE  YEAR             = lv4.YEAR
		                    AND    BSNS_SE          = lv4.BSNS_SE
		                    AND    BALC_SE          = lv4.BALC_SE
		                    AND    BUDGET_ACNT_CODE = lv4.BUDGET_ACNT_CODE
		                   )
		           )
		<isNotEmpty property="SEMOK_CODE">
		    AND    lv4.BUDGET_ACNT_CODE = (
		                                   SELECT MAX(UPPER_ACNT_CODE)
		                                   FROM   TBBDG_BUDGET_ACNT_CODE
		                                   WHERE  YEAR = lv4.YEAR
		                                   AND    BSNS_SE = lv4.BSNS_SE
		                                   AND    BALC_SE = lv4.BALC_SE
		                                   AND    UPPER_ACNT_CODE = lv4.BUDGET_ACNT_CODE
		                                   AND    BUDGET_ACNT_CODE = #SEMOK_CODE#
		                                  )
		</isNotEmpty>
		), LV3_BUDGET AS (
		    SELECT lv3.YEAR, lv3.BSNS_SE, lv3.BALC_SE, lv3.BUDGET_ACNT_CODE, lv3.BUDGET_ACNT_NM, lv3.ACNT_LEVEL, lv3.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv3
		    WHERE  lv3.ACNT_LEVEL = '3'
		    AND    lv3.BUDGET_ACNT_CODE IN (
		                                    SELECT lv4.UPPER_ACNT_CODE
		                                    FROM   LV4_BUDGET lv4
		                                    WHERE  lv4.ACNT_LEVEL IN ('4', '7')
		                                    AND    lv4.YEAR       = lv3.YEAR
		                                    AND    lv4.BSNS_SE    = lv3.BSNS_SE
		                                    AND    lv4.BALC_SE    = lv3.BALC_SE
		                                   )
		), LV2_BUDGET AS (
		    SELECT lv2.YEAR, lv2.BSNS_SE, lv2.BALC_SE, lv2.BUDGET_ACNT_CODE, lv2.BUDGET_ACNT_NM, lv2.ACNT_LEVEL, lv2.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv2
		    WHERE  lv2.ACNT_LEVEL = '2'
		    AND    lv2.BUDGET_ACNT_CODE IN (
		                                    SELECT lv3.UPPER_ACNT_CODE
		                                    FROM   LV3_BUDGET lv3
		                                    WHERE  lv3.ACNT_LEVEL = '3'
		                                    AND    lv3.YEAR       = lv2.YEAR
		                                    AND    lv3.BSNS_SE    = lv2.BSNS_SE
		                                    AND    lv3.BALC_SE    = lv2.BALC_SE
		                                   )
		), LV1_BUDGET AS (
		    SELECT lv1.YEAR, lv1.BSNS_SE, lv1.BALC_SE, lv1.BUDGET_ACNT_CODE, lv1.BUDGET_ACNT_NM, lv1.ACNT_LEVEL, lv1.UPPER_ACNT_CODE
		    FROM   TBBDG_BUDGET_ACNT_CODE lv1
		    WHERE  lv1.ACNT_LEVEL = '1'
		    AND    lv1.BUDGET_ACNT_CODE IN (
		                                    SELECT lv2.UPPER_ACNT_CODE
		                                    FROM   LV2_BUDGET lv2
		                                    WHERE  lv2.ACNT_LEVEL = '2'
		                                    AND    lv2.YEAR       = lv1.YEAR
		                                    AND    lv2.BSNS_SE    = lv1.BSNS_SE
		                                    AND    lv2.BALC_SE    = lv1.BALC_SE
		                                   )
		), VWBDG_BUDGET_ACNT_CODE AS (
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV1_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV2_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV3_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV4_BUDGET
		    UNION ALL
		    SELECT YEAR, BSNS_SE, BALC_SE, BUDGET_ACNT_CODE, BUDGET_ACNT_NM, ACNT_LEVEL, UPPER_ACNT_CODE
		    FROM   LV5_BUDGET
		), BUDGET_ACNT_TREE AS (
		    SELECT ROWNUM AS RNUM
		          ,t1.YEAR
		          ,t1.BSNS_SE
		          ,t1.BALC_SE
		          ,t1.BUDGET_ACNT_CODE
		          ,t1.BUDGET_ACNT_NM
		          ,(CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                 WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 2)
		                 ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)    END) ||'.'|| t1.BUDGET_ACNT_NM              AS BUDGET_ACNT_NM2
		          ,SYS_CONNECT_BY_PATH((CASE WHEN t1.ACNT_LEVEL &lt; '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)
		                                     WHEN SUBSTR(t1.BUDGET_ACNT_CODE, 6) = '00' THEN SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4, 2)
		                                     ELSE SUBSTR(t1.BUDGET_ACNT_CODE, 1, 3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE, 4)                                                END) ||'.'|| t1.BUDGET_ACNT_NM,'|')||'|'    AS ACNT_NM_PATH
		          ,SYS_CONNECT_BY_PATH(t1.BUDGET_ACNT_NM,'|')||'|'                                                                                  AS ACNT_NM_PATH2
		          ,DECODE(t1.ACNT_LEVEL,'7','4',t1.ACNT_LEVEL)                                                                                      AS ACNT_LEVEL
		          ,t1.UPPER_ACNT_CODE
		    FROM   VWBDG_BUDGET_ACNT_CODE t1
		    START WITH t1.UPPER_ACNT_CODE IS NULL
		    CONNECT BY PRIOR t1.BUDGET_ACNT_CODE = t1.UPPER_ACNT_CODE
		    ORDER SIBLINGS BY t1.YEAR
		                     ,t1.BSNS_SE
		                     ,t1.BALC_SE
		                     ,t1.BUDGET_ACNT_CODE
		)
		SELECT s1.YEAR                              AS YEAR
		      ,s1.BSNS_SE                           AS BSNS_SE
		      ,s1.BALC_SE                           AS BALC_SE
		      ,s1.BUDGET_ACNT_CODE                  AS BUDGET_ACNT_CODE
		      ,s1.BUDGET_ACNT_NM                    AS BUDGET_ACNT_NM
		      ,s1.BUDGET_ACNT_NM2                   AS BUDGET_ACNT_NM2
		      ,s1.ACNT_LEVEL                        AS ACNT_LEVEL
		      ,s1.UPPER_ACNT_CODE                   AS UPPER_ACNT_CODE
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 1)-1) AS GWAN
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 2)-1) AS HANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 3)-1) AS SEHANG
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 4)-1) AS MOK
		      ,SUBSTR(s1.ACNT_NM_PATH, INSTR(s1.ACNT_NM_PATH, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH, '|', 1, 5)-1) AS SEMOK
		      ,        SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 1+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 1)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 2+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 2)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 3+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 3)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 4+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 4)-1)
		       ||'-'|| SUBSTR(s1.ACNT_NM_PATH2, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)+1, INSTR(s1.ACNT_NM_PATH2, '|', 1, 5+1) - INSTR(s1.ACNT_NM_PATH2, '|', 1, 5)-1)           AS BUDGET_ACNT_TREE_NM
		 FROM BUDGET_ACNT_TREE s1
		WHERE 1=1
		ORDER BY s1.RNUM
	</select>
	
<!-- 세목/지출단위코드 목록조회 -->
	<select id="PMS000008DAO.selectExpndtrUnitCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[/*PMS000008DAO.selectExpndtrUnitCode*/]]>
		SELECT t1.YEAR
		      ,t1.BSNS_SE
		      ,t1.BALC_SE
		      ,t1.DETAIL_BSNS_CODE
		      ,t4.BSNS_NM                                                                                                                                               AS DETAIL_BSNS_NM
		      ,t1.DETAIL_BSNS_CODE ||'.'||NVL(t4.BSNS_NM,'')                                                                                                            AS DETAIL_BSNS_NM2
		      ,t1.BUDGET_ACNT_CODE                                                                                                                                      AS BUDGET_ACNT_CODE
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,6)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,2)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)                                                                      AS BUDGET_ACNT_CODE2
		      ,t2.BUDGET_ACNT_NM                                                                                                                                        AS BUDGET_ACNT_NM
		      ,(CASE WHEN t2.ACNT_LEVEL <![CDATA[<]]> '4' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)
		             WHEN SUBSTR(t1.BUDGET_ACNT_CODE,6)='00' THEN SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4,2)
		             ELSE SUBSTR(t1.BUDGET_ACNT_CODE,1,3)||'-'||SUBSTR(t1.BUDGET_ACNT_CODE,4) END)||'.'||t2.BUDGET_ACNT_NM                                              AS BUDGET_ACNT_NM2
		      ,t1.EXPNDTR_UNIT_CODE                                                                                                                                     AS EXPNDTR_UNIT_CODE
		      ,SUBSTR(t1.EXPNDTR_UNIT_CODE,1,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,3,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,5,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,7,2)    AS EXPNDTR_UNIT_CODE2
		      ,t3.EXPNDTR_UNIT_NM                                                                                                                                       AS EXPNDTR_UNIT_NM
		      ,SUBSTR(t1.EXPNDTR_UNIT_CODE,1,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,3,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,5,2)||'-'||SUBSTR(t1.EXPNDTR_UNIT_CODE,7,2)
		       ||'.'|| NVL(t1.EXPNDTR_UNIT_NM,'')                                                                                                                       AS EXPNDTR_UNIT_NM2
		      ,t3.TAXITM_CODE                                                                                                                                           
		      ,t3.TAXITM_NM                                                                                                                                             
		      ,t3.TAXITM_CODE ||'.'|| NVL(t3.TAXITM_NM,'')                                                                                                              AS TAXITM_NM2
		      ,t3.DEPT_CODE                                                                                                                                             
		      ,t3.DEPT_NM                                                                                                                                               
		      ,t3.DEPT_CODE ||'.'|| NVL(t3.DEPT_NM,'')                                                                                                                  AS DEPT_NM2
		      ,SFBDG_EXPNDTR_UNIT_NM(t1.YEAR,t1.BSNS_SE,t1.BALC_SE,t1.BUDGET_ACNT_CODE,t1.EXPNDTR_UNIT_CODE)                                                            AS EXPNDTR_UNIT_TREE_NM
		      ,NVL(t5.CAUSE_ACTION_AMOUNT,0)                                                                                                                            AS CAUSE_ACTION_AMOUNT
		      ,NVL(t5.DEBT_AMT,0)                                                                                                                                       AS DEBT_AMT
		      ,NVL(t5.DECSN_AMOUNT,0)                                                                                                                                   AS DECSN_AMOUNT
		      ,SUM(NVL(t5.CAUSE_ACTION_AMOUNT,0))                OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_CAUSE_ACTION_AMOUNT
		      ,SUM(NVL(t5.DEBT_AMT,0))                           OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DEBT_AMT
		      ,SUM(NVL(t5.DECSN_AMOUNT,0))                       OVER (PARTITION BY t1.BUDGET_ACNT_CODE)                                                                AS BUDGET_DECSN_AMOUNT
		      ,t2.GWAN_NM                                                                                                                                               AS GWAN_NM  
		      ,t2.HANG_NM                                                                                                                                               AS HANG_NM  
		      ,t2.SEHANG_NM                                                                                                                                             AS SEHANG_NM
		      ,t2.MOK_NM                                                                                                                                                AS MOK_NM   
		      ,t2.SEMOK_NM                                                                                                                                              AS SEMOK_NM
		      ,(
		        SELECT (CASE WHEN COUNT(1) > 0 THEN '1' ELSE '0' END)
		        FROM   TBBDG_BUDGET_FRMTN_PD r1
		               LEFT OUTER JOIN TBBDG_BUDGET_FRMTN_PD_DEPT r2
		                    ON r1.YEAR = r2.YEAR
		                   AND r1.SN = r2.SN
		        WHERE  r1.USE_AT = '1'
		        AND    r1.REQST_SE = '4'
		        AND    TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN r1.BGNDE AND r1.ENDDE
		        AND    r1.YEAR = t1.YEAR
		        AND    (r2.DEPT_CODE = '000000' OR r2.DEPT_CODE = t1.DEPT_CODE)
		       )                                                                                                                                                        AS USE_AT
		FROM   (
		        SELECT YEAR
		              ,BSNS_SE
		              ,BALC_SE
		              ,DETAIL_BSNS_CODE
		              ,DEPT_CODE
		              ,BUDGET_ACNT_CODE
		              ,EXPNDTR_UNIT_CODE
		              ,EXPNDTR_UNIT_NM
		        FROM   TBBDG_EXPNDTR_UNIT_CODE 
		        WHERE  1=1
		        <isNotEmpty property="YEAR"             prepend="AND    ">YEAR             = #YEAR#</isNotEmpty>
		        <isNotEmpty property="BSNS_SE"          prepend="AND    ">BSNS_SE          = #BSNS_SE#</isNotEmpty>
		        <isNotEmpty property="BALC_SE"          prepend="AND    ">BALC_SE          = #BALC_SE#</isNotEmpty>
		        <isNotEmpty property="DETAIL_BSNS_CODE" prepend="AND    ">DETAIL_BSNS_CODE = #DETAIL_BSNS_CODE#</isNotEmpty>
		        <isNotEmpty property="BUDGET_ACNT_CODE" prepend="AND    ">BUDGET_ACNT_CODE = #BUDGET_ACNT_CODE#</isNotEmpty>
		        <isNotEmpty property="DEPT_CODE"><isNotEqual property="DEPT_CODE" compareValue="000000" prepend="AND    ">DEPT_CODE = #DEPT_CODE#</isNotEqual></isNotEmpty>
		        GROUP BY YEAR
		                ,BSNS_SE
		                ,BALC_SE
		                ,DETAIL_BSNS_CODE
		                ,DEPT_CODE
		                ,BUDGET_ACNT_CODE
		                ,EXPNDTR_UNIT_CODE
		                ,EXPNDTR_UNIT_NM
		       ) t1
		       LEFT OUTER JOIN VHBDG_BUDGET_ACNT_CODE t2
		            ON t1.YEAR = t2.YEAR
		           AND t1.BSNS_SE = t2.BSNS_SE
		           AND t1.BALC_SE = t2.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t2.BUDGET_ACNT_CODE
		       LEFT OUTER JOIN TBBDG_EXPNDTR_UNIT_CODE t3
		            ON t1.YEAR = t3.YEAR
		           AND t1.BSNS_SE = t3.BSNS_SE
		           AND t1.BALC_SE = t3.BALC_SE
		           AND t1.BUDGET_ACNT_CODE = t3.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t3.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN TBPRJ_BSNS_CODE t4
		            ON t1.DETAIL_BSNS_CODE = t4.BSNS_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', CAUSE_ACTION_AMOUNT*-1, CAUSE_ACTION_AMOUNT)),0)  AS CAUSE_ACTION_AMOUNT
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', DEBT_AMT*-1,            DEBT_AMT           )),0)  AS DEBT_AMT
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', DECSN_AMOUNT*-1,        DECSN_AMOUNT       )),0)  AS DECSN_AMOUNT
		                        FROM   VHACC_EXP_DSN_MASTR
		                        WHERE  1=1
		                        <isNotEmpty property="MONTH" prepend="AND">
		                        	SUBSTR(CAUSE_ACTION_DE,1,6) BETWEEN BUDGET_YEAR||'01' AND BUDGET_YEAR||#MONTH#
		                        </isNotEmpty>
		                        <isEmpty property="MONTH" prepend="AND">
		                        	CAUSE_ACTION_DE BETWEEN BUDGET_YEAR||'0101' AND BUDGET_YEAR||'1231'
		                        </isEmpty>
		                        GROUP BY BUDGET_YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                       ) t5
		            ON t1.YEAR              = t5.BUDGET_YEAR
		           AND t1.BSNS_SE           = t5.BSNS_SE
		           AND t1.BALC_SE           = t5.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t5.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t5.EXPNDTR_UNIT_CODE
		       LEFT OUTER JOIN (
		                        SELECT BUDGET_YEAR
		                              ,BSNS_SE
		                              ,BALC_SE
		                              ,BUDGET_ACNT_CODE
		                              ,EXPNDTR_UNIT_CODE
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', ORI_DECSN_AMOUNT*-1,  ORI_DECSN_AMOUNT  )),0)  AS ORI_DECSN_AMOUNT
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', CYFD_DECSN_AMOUNT*-1, CYFD_DECSN_AMOUNT )),0)  AS CYFD_DECSN_AMOUNT
		                              ,NVL(SUM(DECODE(ANACT_KND,'05', DECSN_AMOUNT*-1,      DECSN_AMOUNT      )),0)  AS DECSN_AMOUNT
		                        FROM   (
		                                SELECT DECSN_NO
		                                      ,CPTAL_EXPNDTR_ACNTBK_DE
		                                      ,ANACT_KND
		                                      ,CYFD_SE
		                                      ,CASE WHEN CPTAL_EXPNDTR_ACNTBK_DE IS NULL                          THEN BUDGET_YEAR
		                                            WHEN SUBSTR(CPTAL_EXPNDTR_ACNTBK_DE, 1, 4) <![CDATA[<]]> BUDGET_YEAR  THEN SUBSTR (DET_DCSN_DE, 1, 4)
		                                            ELSE BUDGET_YEAR
		                                       END                                       AS BUDGET_YEAR
		                                      ,BSNS_SE
		                                      ,BALC_SE
		                                      ,BUDGET_ACNT_CODE
		                                      ,EXPNDTR_UNIT_CODE
		                                      ,ORIBDGT_DECSN_AMOUNT       AS ORI_DECSN_AMOUNT
		                                      ,CYFD_BUDGET_DECSN_AMOUNT   AS CYFD_DECSN_AMOUNT
		                                      ,DECSN_AMOUNT               AS DECSN_AMOUNT
		                                FROM   TBACC_EXP_DSN_MASTR
		                                WHERE  1=1
		                               )
		                        WHERE  1=1
		                        GROUP BY BUDGET_YEAR
		                                ,BSNS_SE
		                                ,BALC_SE
		                                ,BUDGET_ACNT_CODE
		                                ,EXPNDTR_UNIT_CODE
		                       ) t6
		            ON t1.YEAR              = t6.BUDGET_YEAR
		           AND t1.BSNS_SE           = t6.BSNS_SE
		           AND t1.BALC_SE           = t6.BALC_SE
		           AND t1.BUDGET_ACNT_CODE  = t6.BUDGET_ACNT_CODE
		           AND t1.EXPNDTR_UNIT_CODE = t6.EXPNDTR_UNIT_CODE
		WHERE  1=1
		ORDER BY t1.YEAR
		        ,t1.BSNS_SE
		        ,t1.BALC_SE
		        ,t1.BUDGET_ACNT_CODE
		        ,t1.DETAIL_BSNS_CODE
		        ,t1.DEPT_CODE
		        ,t1.EXPNDTR_UNIT_CODE
	</select>

<!-- 과년도미수금 조회 -영구임대 RN1- -->

	<select id="PMS000008DAO.selectPstyrAtmptAmountInfoRN1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
				SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.RENT_HOUSE_CODE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , HOUSE_SE
					 , RENT_HOUSE_NM AS HOUSE_NM
					  
			      FROM TBRNT_RENT_CNTRCT A,
		               (SELECT
		                       CNTRCTR_NO
		           		     , SUM(NVL(RNTCHRG, 0)) + 
		                       SUM(NVL(RDCAMT_AMOUNT, 0)) PAY_AMT
		                  FROM TBRNT_RENT_MT_RNTCHRG
		                 WHERE 1=1
		                   AND PAY_TMLMT <![CDATA[ <= ]]>  (#BUDGET_YEAR# -1)||'1231'
		                   AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)
		                 GROUP BY CNTRCTR_NO) B,
                        TBRNT_RENT_HOUSE C
			      WHERE 1=1
			        AND A.CNTRCTR_NO = B.CNTRCTR_NO
                    AND A.RENT_HOUSE_CODE = C.RENT_HOUSE_CODE
				    AND B.PAY_AMT > 0                   
			          GROUP BY A.RENT_HOUSE_CODE, HOUSE_SE, RENT_HOUSE_NM
			          ORDER BY HOUSE_CODE
			
	</select>

<!-- 과년도미수금 조회 -매입임대 RN2- -->
	
	<select id="PMS000008DAO.selectPstyrAtmptAmountInfoRN2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
				SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.RENT_HOUSE_CODE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , HOUSE_SE
					 , RENT_HOUSE_NM AS HOUSE_NM
					  
			      FROM TBRNT_PUCHAS_CNTRCT A,
					   (SELECT
					           CNTRCTR_NO
					   	     , SUM(NVL(RNTCHRG, 0)) +					           
					           SUM(NVL(RDCAMT_AMOUNT, 0)) PAY_AMT
					      FROM TBRNT_PUCHAS_MT_RNTCHRG
					     WHERE 1=1
					       AND PAY_TMLMT <![CDATA[ <= ]]>  (#BUDGET_YEAR# -1)||'1231'
					       AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)	
					     GROUP BY CNTRCTR_NO) B,
						TBRNT_PUCHAS_HOUSE C
				  WHERE 1=1
				    AND A.CNTRCTR_NO = B.CNTRCTR_NO
					AND A.RENT_HOUSE_CODE = C.RENT_HOUSE_CODE
					AND B.PAY_AMT > 0 			      	
 			      GROUP BY A.RENT_HOUSE_CODE,  HOUSE_SE, RENT_HOUSE_NM
			      ORDER BY HOUSE_CODE
			
	</select>
<!-- 과년도미수금 조회 -전세임대 RN3- -->
	
	<select id="PMS000008DAO.selectPstyrAtmptAmountInfoRN3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
				SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.AREA_SE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , CODE_NM AS HOUSE_NM
					  
			     FROM
						TBRNT_LFSTS_CNTRCT A,

					    (SELECT CNTRCTR_NO,
			                    SUM (NVL (RNTCHRG_THSMON, 0)) +
			                    SUM (NVL (RSVMNEY_THSMON, 0)) +
			                    SUM (NVL (RNTCHRG_RDCAMT, 0)) +
			                    SUM (NVL (RSVMNEY_RDCAMT, 0)) 			
			                    PAY_AMT
			               FROM TBRNT_LFSTS_MT_RNTCHRG
			              WHERE DEDT_DE <![CDATA[ <= ]]> (#BUDGET_YEAR# -1)||'1231'
			                AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)			 
			              GROUP BY CNTRCTR_NO) B
					    ,(SELECT * FROM TBCOM_CMMN_CODE 
						   WHERE GRP_CODE = 'RNT004') C
				  WHERE 1=1
					AND B.PAY_AMT > 0
					AND A.CNTRCTR_NO = B.CNTRCTR_NO
					AND TO_NUMBER(A.AREA_SE) = C.CODE
				  GROUP BY AREA_SE, CODE_NM  
				  ORDER BY HOUSE_CODE 
			
	</select>

<!-- 과년도미수금 조회 -주택판매 HOU- -->
	
	<select id="PMS000008DAO.selectPstyrAtmptAmountInfoHOU" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
				SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.HOUSE_CODE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , C.HOUSE_NM AS HOUSE_NM
					  
			      FROM TBSLS_HCNTRCTR A,

				  	   (SELECT CNTRCTR_NO,
				           SUM (NVL (MT_RNTCHRG, 0)+NVL(DFNNT_AMOUNT,0))  PAY_AMT
				       		FROM TBSLS_HOUSE_RENT_PAY
				         WHERE PAY_TMLMT <![CDATA[ <= ]]> (#BUDGET_YEAR# -1)||'1231'
				           AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)
				         GROUP BY CNTRCTR_NO
				       ) B,
				        
							 TBSLS_HOUSE_INFO C
				 WHERE 1=1
				   AND A.CNTRCTR_NO = B.CNTRCTR_NO
				   AND A.HOUSE_CODE = C.HOUSE_CODE
				   AND PAY_AMT > 0
				   AND (C.HOUSE_SE IN ('S2','S4')
                     OR C.LTTOT_CNVRS_SE = '02')
                   AND NVL (C.USE_AT,'0') = '1'
                   AND A.CNTRCT_DE IS NOT NULL
				 GROUP BY A.HOUSE_CODE, C.HOUSE_NM
				 UNION ALL
				 SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.HOUSE_CODE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , C.HOUSE_NM AS HOUSE_NM
					  
			      FROM TBSLS_HCNTRCTR A,

				  	   (SELECT CNTRCTR_NO,
				           SUM (NVL (PAYAMT, 0)+NVL(ARRRG_DSCNT_AMOUNT,0))  PAY_AMT
				       		FROM tbsls_house_lttot_pay
				         WHERE PAY_TMLMT <![CDATA[ <= ]]> (#BUDGET_YEAR# -1)||'1231'
				           AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)
			                 AND pay_code like 'S%'		
				         GROUP BY CNTRCTR_NO
				       ) B,				        
							 TBSLS_HOUSE_INFO C
				 WHERE 1=1
				   AND A.CNTRCTR_NO = B.CNTRCTR_NO
				   AND A.HOUSE_CODE = C.HOUSE_CODE
				   AND PAY_AMT > 0
				   AND A.CNTRCTR_STTUS_CODE = '01'
				   AND A.CNTRCT_DE IS NOT NULL
				   AND C.HOUSE_SE IN ('S1', 'S3', 'S2', 'S4')
				   AND NVL (C.USE_AT,'0') = '1'
				 GROUP BY A.HOUSE_CODE, C.HOUSE_NM
				 ORDER BY HOUSE_CODE
			
	</select>

<!-- 과년도미수금 조회 -토지판매 LAD- -->
	
	<select id="PMS000008DAO.selectPstyrAtmptAmountInfoLAD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
				SELECT 
			 		   '2' AS ANACT_SE
					 , #MDAT_DE# AS MDAT_DE
					 , #PAY_SE# AS PAY_SE
					 , SUM(NVL(PAY_AMT, 0)) AS AMOUNT
					 , #RM# AS RM
					 , #BUDGET_YEAR# AS BUDGET_YEAR
					 , #BUDGET_ACNT_SE# AS BUDGET_ACNT_SE
					 , #BUDGET_ACNTCTGR# AS BUDGET_ACNTCTGR
					 , #BUKIP_CODE# AS BUKIP_CODE
					 , #BUDGET_ACNT_SE_NM# AS BUDGET_ACNT_SE_NM
					 , #BUDGET_ACNT_NM# AS BUDGET_ACNT_NM
					 , #EXPNDTR_UNIT_NM# AS EXPNDTR_UNIT_NM
					 , A.LAD_CODE AS HOUSE_CODE
					 , #JOB_SE# AS JOB_SE
					 , LAD_NM AS HOUSE_NM
					  
			      FROM TBSLS_LCNTRCTR A,

						(SELECT CNTRCTR_NO
					  	      , SUM(NVL(PAYAMT,0))  AS PAY_AMT 
						   FROM TBSLS_LCNTRCTR_PAY 
						  WHERE 1=1
					  	    AND (RCIV_DE IS	NULL 
			                   OR RCIV_DE > (#BUDGET_YEAR# -1)||'1231'
			                 		)
						    AND PAY_TMLMT <![CDATA[ <= ]]> (#BUDGET_YEAR# -1)||'1231'
						    AND PAY_CODE like 'S%' AND PAY_CODE <![CDATA[ <> ]]> 'SE'						    
						  GROUP BY CNTRCTR_NO) B
						,TBSLS_LAD_INFO C
						
				  WHERE 1=1
				    AND A.CNTRCTR_NO = B.CNTRCTR_NO
				    AND B.PAY_AMT > 0
				    AND A.LAD_CODE = C.LAD_CODE
				    AND A.CANCL_DE IS NULL
				  GROUP BY A.LAD_CODE, LAD_NM
				  ORDER BY HOUSE_CODE
			
	</select>
	
<!-- 과년도미수금 일괄저장 기등록 조회- -->
	
	<select id="PMS000008DAO.selectPstyrAtmptAmountChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	
			SELECT COUNT(*) AS COUNT 
			  FROM TBRNT_PSTYR_ATMPT_AMOUNT 
			 WHERE 1=1
			   AND BUKIP_CODE = #BUKIP_CODE#
			   AND BUDGET_YEAR = #BUDGET_YEAR#
		 	   AND BUDGET_ACNTCTGR = #BUDGET_ACNTCTGR#
			   AND HOUSE_CODE = #HOUSE_CODE#
			   AND JOB_SE_CODE = #JOB_SE#
	 </select>
<!-- 과년도미수금 기등록 자료 일괄 삭제 RN1- -->
	
	<delete id="PMS000008DAO.deletetPstyrAtmptAmountBatch" parameterClass="java.util.HashMap">	
	
			DELETE  
			  FROM TBRNT_PSTYR_ATMPT_AMOUNT 
			 WHERE 1=1
			   AND BUKIP_CODE = #BUKIP_CODE#
			   AND BUDGET_YEAR = #BUDGET_YEAR#
		 	   AND BUDGET_ACNTCTGR = #BUDGET_ACNTCTGR#
			   AND HOUSE_CODE = #HOUSE_CODE#
			   AND JOB_SE_CODE = #JOB_SE#
	 </delete>
</sqlMap>