<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="rentCstmr_SQL">	
   <!--  설명  : 임대고객관리 		
   		작성자 : 지효정 -->
   
    <!-- 임대고객번호 생성 -->
	<select id="rentCstmrDAO.rentCstmrSeq" resultClass="java.lang.String">
		 SELECT SQ_TBRNT_PRMANENT_RENT_CSTMR_1.NEXTVAL
		 FROM DUAL
	</select>
	
	<!-- 임대고객 목록 -->
	<select id="rentCstmrDAO.rentCstmrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 PRMANENT_CSTMR_NO  /*영구고객번호(SQ_TBRNT_PRMANENT_RENT_CSTMR_1)*/
			,NM                 /*성명*/
			,SFCOM_DEC_ALL(IHIDNUM) AS IHIDNUM	/*주민등록번호*/
			,ZIP                /*우편번호*/
			,ADRES              /*주소*/
			,ADRES_DETAIL       /*주소_상세*/
			,TELNO              /*전화번호*/
			,MBTLNO             /*휴대폰번호*/
			,EMAIL				/*이메일*/
		FROM TBRNT_PRMANENT_RENT_CSTMR
		WHERE 1=1
		<isNotEmpty property="nm">
		AND   NM LIKE '%' || #nm# || '%'
		</isNotEmpty> 
		<isNotEmpty property="prmanentCstmrNo">
		AND   PRMANENT_CSTMR_NO = #prmanentCstmrNo#
		</isNotEmpty>
		order by 1
	</select>
	
	<!-- 임대고객생성 -->
	<insert id="rentCstmrDAO.rentCstmrC" parameterClass="java.util.HashMap">
		INSERT INTO TBRNT_PRMANENT_RENT_CSTMR(
			 PRMANENT_CSTMR_NO	/*영구고객번호(SQ_TBRNT_PRMANENT_RENT_CSTMR_1)*/  
			,NM                 /*성명*/
			,IHIDNUM	        /*주민등록번호*/
			,ZIP                /*우편번호*/
			,ADRES              /**/
			,ADRES_DETAIL       /**/
			,TELNO              /**/
			,MBTLNO             /**/
			,EMAIL				/**/
			,REGISTER_ID		
			,REGIST_DT  
			,UPDUSR_ID  
			,UPDT_DT
		)
		VALUES(
			 <isEmpty property="PRMANENT_CSTMR_NO">
			 SQ_TBRNT_PRMANENT_RENT_CSTMR_1.NEXTVAL
			 </isEmpty>
			 <isNotEmpty property="PRMANENT_CSTMR_NO">
			 #PRMANENT_CSTMR_NO#
			 </isNotEmpty>
			,TRIM(#NM#)
			,SFCOM_ENC_ALL(#IHIDNUM#)            
			,#ZIP#                
			,#ADRES#              
			,#ADRES_DETAIL#       
			,#TELNO#              
			,#MBTLNO#             
			,#EMAIL#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 임대고객수정 -->
	<update id="rentCstmrDAO.rentCstmrU" parameterClass="java.util.HashMap">
		UPDATE TBRNT_PRMANENT_RENT_CSTMR SET
			 NM = TRIM(#NM#)          
			,IHIDNUM = SFCOM_ENC_ALL(#IHIDNUM#)         
			,ZIP = #ZIP#
			,ADRES = #ADRES#
			,ADRES_DETAIL = #ADRES_DETAIL#
			,TELNO = #TELNO#
			,MBTLNO = #MBTLNO#
			,EMAIL = #EMAIL#
			,UPDUSR_ID = #S_USER_ID# 
			,UPDT_DT = SYSDATE
		WHERE PRMANENT_CSTMR_NO = #PRMANENT_CSTMR_NO#
	</update>
	
	<!-- 임대고객삭제 -->
	<delete id="rentCstmrDAO.rentCstmrD" parameterClass="java.util.HashMap">
		DELETE FROM TBRNT_PRMANENT_RENT_CSTMR
		WHERE PRMANENT_CSTMR_NO = #PRMANENT_CSTMR_NO#
	</delete>
	
	<!-- 임대고객가족목록 -->
	<select id="rentCstmrDAO.rentCstmrFamilyList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.SN               
			,A.PRMANENT_CSTMR_NO
			,A.FAMILY_RELATE
			,A.RM
			,A.EXAMIN_ID
			,A.FAMILY_NO
			,A.PORTAL_REGIST_AT
			,A.CNTRCTR_NO
			,A.WAITR_CSTMR_NO
			,A.CNTRCTR_CSTMR_NO
			,B.NM                 
			,SFCOM_DEC_ALL(B.IHIDNUM) AS IHIDNUM            
			,B.ZIP                
			,B.ADRES              
			,B.ADRES_DETAIL       
			,B.TELNO              
			,B.MBTLNO             
			,B.EMAIL
		FROM 
			TBRNT_RENT_FAMILY_MATTER A
		   ,TBRNT_PRMANENT_RENT_CSTMR B
		WHERE A.PRMANENT_CSTMR_NO = B.PRMANENT_CSTMR_NO
		AND   CNTRCTR_CSTMR_NO = #cntrctrCstmrNo#
	</select>
	
	<!-- 임대고객가족목록 -->
	<select id="rentCstmrDAO.rentCstmrFamilyList2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.SN               
			,A.PRMANENT_CSTMR_NO
			,A.FAMILY_RELATE
			,A.RM
			,A.EXAMIN_ID
			,A.FAMILY_NO
			,A.PORTAL_REGIST_AT
			,A.CNTRCTR_NO
			,A.WAITR_CSTMR_NO
			,A.CNTRCTR_CSTMR_NO
			,B.NM                 
			,SFCOM_DEC_ALL(B.IHIDNUM) AS IHIDNUM            
			,B.ZIP                
			,B.ADRES              
			,B.ADRES_DETAIL       
			,B.TELNO              
			,B.MBTLNO             
			,B.EMAIL
		FROM 
			TBRNT_RENT_FAMILY_MATTER A
		   ,TBRNT_PRMANENT_RENT_CSTMR B
		WHERE A.PRMANENT_CSTMR_NO = B.PRMANENT_CSTMR_NO
		AND   CNTRCTR_NO = #cntrctrNo#
	</select>
	
	<!-- 임대고객가족생성 -->
	<insert id="rentCstmrDAO.rentCstmrFamilyC" parameterClass="java.util.HashMap">
		INSERT INTO TBRNT_RENT_FAMILY_MATTER(
		 	 SN               
			,PRMANENT_CSTMR_NO
			,FAMILY_RELATE
			,RM
			,EXAMIN_ID
			,FAMILY_NO
			,PORTAL_REGIST_AT
			,CNTRCTR_NO
			,WAITR_CSTMR_NO
			,CNTRCTR_CSTMR_NO
			,REGISTER_ID
			,REGIST_DT  
			,UPDUSR_ID  
			,UPDT_DT
		)
		VALUES(
			 (SELECT NVL(MAX(SN),0) + 1 FROM TBRNT_RENT_FAMILY_MATTER)      
			,#PRMANENT_CSTMR_NO#
			,#FAMILY_RELATE#
			,#RM#
			,#EXAMIN_ID#
			,#FAMILY_NO#
			,#PORTAL_REGIST_AT#
			,#CNTRCTR_NO#
			,#WAITR_CSTMR_NO#
			,#CNTRCTR_CSTMR_NO#
			,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 임대고객가족수정 -->
	<update id="rentCstmrDAO.rentCstmrFamilyU" parameterClass="java.util.HashMap">
		UPDATE TBRNT_RENT_FAMILY_MATTER SET
		 	 PRMANENT_CSTMR_NO 	= #PRMANENT_CSTMR_NO#
			,FAMILY_RELATE 		= #FAMILY_RELATE#
			,RM 				= #RM#
			,EXAMIN_ID 			= #EXAMIN_ID#
			,FAMILY_NO 			= #FAMILY_NO#
			,PORTAL_REGIST_AT 	= #PORTAL_REGIST_AT#
			,CNTRCTR_NO 		= #CNTRCTR_NO#
			,WAITR_CSTMR_NO 	= #WAITR_CSTMR_NO#
			,CNTRCTR_CSTMR_NO 	= #CNTRCTR_CSTMR_NO#
			,UPDUSR_ID 			= #S_USER_ID# 
			,UPDT_DT 			= SYSDATE
		WHERE SN = #SN#
	</update>
	
	<!-- 임대고객가족삭제 -->
	<delete id="rentCstmrDAO.rentCstmrFamilyD" parameterClass="java.util.HashMap">
		DELETE FROM TBRNT_RENT_FAMILY_MATTER
		WHERE SN = #SN#
	</delete>
	
	<!-- 임대사업자 목록 -->
	<select id="rentCstmrDAO.rentBsnmList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		     A.CNTRCTR_NO       
		    ,A.BIZRNO           
		    ,A.PRMANENT_CSTMR_NO
		    ,A.MTLTY            
		    ,A.BIZCND           
		    ,A.ITEM             
		    ,A.USEPRPS
		    ,NM
		    ,SFCOM_DEC_ALL(IHIDNUM) AS IHIDNUM
		    ,TELNO
		    ,MBTLNO
		    ,A.ZIP
		    ,A.ADRES
		    ,A.BIZ_OWNER_NM
		    ,A.EMAIL
		FROM 
			TBRNT_SOPSRT_BSNM A
		    ,TBRNT_PRMANENT_RENT_CSTMR B
		WHERE A.CNTRCTR_NO = #cntrctrNo#
		AND   A.PRMANENT_CSTMR_NO = B.PRMANENT_CSTMR_NO(+)
	</select>
	
	<!-- 임대사업자 생성 -->
	<insert id="rentCstmrDAO.rentBsnmC" parameterClass="java.util.HashMap">
		INSERT INTO TBRNT_SOPSRT_BSNM(
			 CNTRCTR_NO       
		    ,BIZRNO           
		    ,PRMANENT_CSTMR_NO
		    ,MTLTY            
		    ,BIZCND           
		    ,ITEM             
		    ,USEPRPS
		    ,ZIP
		    ,ADRES
		    ,BIZ_OWNER_NM
		    ,EMAIL
		    ,REGISTER_ID
			,REGIST_DT  
			,UPDUSR_ID  
			,UPDT_DT
		)
		VALUES(
			 #CNTRCTR_NO#      
		    ,#BIZRNO#           
		    ,#PRMANENT_CSTMR_NO#
		    ,#MTLTY#            
		    ,#BIZCND#           
		    ,#ITEM#             
		    ,#USEPRPS#
		    ,#ZIP#
		    ,#ADRES#
		    ,#BIZ_OWNER_NM#
		    ,#EMAIL#
		    ,#S_USER_ID#
			,SYSDATE
			,#S_USER_ID#
			,SYSDATE
		)
	</insert>
	
	<!-- 임대사업자 수정 -->
	<update id="rentCstmrDAO.rentBsnmU" parameterClass="java.util.HashMap">
		UPDATE TBRNT_SOPSRT_BSNM SET
			 BIZRNO = #BIZRNO#        
		    ,PRMANENT_CSTMR_NO = #PRMANENT_CSTMR_NO#
		    ,MTLTY = #MTLTY#
		    ,BIZCND = #BIZCND#       
		    ,ITEM = #ITEM#      
		    ,ZIP = #ZIP#
		    ,ADRES = #ADRES#
		    ,BIZ_OWNER_NM = #BIZ_OWNER_NM#
		    ,USEPRPS = #USEPRPS#
			,UPDUSR_ID = #S_USER_ID# 
			,UPDT_DT = SYSDATE
			,EMAIL = #EMAIL#
		WHERE CNTRCTR_NO = #CNTRCTR_NO#
	</update>
	
	<!-- 임대사업자 삭제 -->
	<delete id="rentCstmrDAO.rentBsnmD" parameterClass="java.util.HashMap">
		DELETE FROM TBRNT_SOPSRT_BSNM
		WHERE CNTRCTR_NO = #CNTRCTR_NO#
	</delete> 
	
	<select id="rentCstmrDAO.rentCntrctCstmrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.CNTRCTR_NO
			,A.RENT_HOUSE_CODE
			,B.RENT_HOUSE_NM
		    ,A.DONG
		    ,A.HO
		    ,C.PRMANENT_CSTMR_NO  
		    ,C.NM                 
		    ,SFCOM_DEC_ALL(C.IHIDNUM) AS IHIDNUM            
		    ,C.ZIP                
		    ,C.ADRES              
		    ,C.ADRES_DETAIL       
		    ,C.TELNO              
		    ,C.MBTLNO             
		    ,C.EMAIL
		FROM 
		     TBRNT_RENT_CNTRCT A
			,TBRNT_RENT_HOUSE B
		    ,TBRNT_PRMANENT_RENT_CSTMR C
		    ,TBRNT_RENT_RESCI D
		WHERE A.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		AND   A.PRMANENT_CSTMR_NO = C.PRMANENT_CSTMR_NO
		AND   A.CNTRCTR_NO = D.CNTRCTR_NO(+)
		<isNotEmpty property="canclSe">
		AND   DECODE(D.CANCL_DE, NULL, '1', '0') LIKE #canclSe#
		</isNotEmpty>
		<isNotEmpty property="houseSe">
		AND   #houseSe# LIKE '%' || B.HOUSE_SE || '%'
		</isNotEmpty>
		<isNotEmpty property="rentHouseCode">
		AND   A.RENT_HOUSE_CODE = #rentHouseCode#
		</isNotEmpty>
		<isNotEmpty property="dong">
		AND   A.DONG = LPAD(#dong#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="ho">
		AND   A.HO = LPAD(#ho#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="nm">
		AND   C.NM like '%' || #nm# || '%'
		</isNotEmpty>   
		ORDER BY A.RENT_HOUSE_CODE, A.DONG ,A.HO
	</select>




	<!-- 영구임대고객 가족 목록
	작성자 : 한상훈
	 -->
	<select id="rentCstmrDAO.selectRentCstmrFamilyList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* rentCstmrDAO.selectRentCstmrFamilyList[영구임대고객 가족 목록] */
		SELECT A.SN,							/* 일련번호 */
			   A.PRMANENT_CSTMR_NO,				/* 임대고객번호 */
			   A.FAMILY_RELATE,					/* 가족관계 */
			   A.RM,							/* 비고 */
			   A.EXAMIN_ID,						/* 조사ID */
			   A.FAMILY_NO,						/* 가족번호 */
			   A.PORTAL_REGIST_AT,				/* 포털등록여부 */
			   A.CNTRCTR_NO,					/* 계약자번호 */
			   A.WAITR_CSTMR_NO,				/* 대기자고객번호 */
			   A.CNTRCTR_CSTMR_NO,				/* 계약자고객번호 */
			   A.RENT_HOUSE_CODE,				/* 주택코드 */
			   A.RCEPT_DE,						/* 접수일자 */
			   A.RCEPT_SN,						/* 대기접수일련번호 */
			   B.NM,							/* 세대원명 */
			   SFCOM_DEC_ALL(B.IHIDNUM) AS IHIDNUM,	/* 세대원 주민번호 */
			   B.ZIP,							/* 우편번호 */
			   B.ADRES,							/* 주소 */
			   B.ADRES_DETAIL,					/* 주소상세 */
			   B.TELNO,							/* 전화번호 */
			   B.MBTLNO,						/* 연락처2 */
			   B.EMAIL							/* 이메일 */
		  FROM TBRNT_RENT_FAMILY_MATTER A
		 INNER JOIN TBRNT_PRMANENT_RENT_CSTMR B
			ON A.PRMANENT_CSTMR_NO = B.PRMANENT_CSTMR_NO
		 WHERE 1 = 1
		<isEqual property="WAITR_CNTRCTR_SE" compareValue="01"><!-- 대기자계약자구분 [01:대기자조건] -->
		   AND A.RENT_HOUSE_CODE = #RENT_HOUSE_CODE#
		   AND A.RCEPT_DE  = #RCEPT_DE#
		   AND A.RCEPT_SN = #RCEPT_SN#
		</isEqual>
		<isEqual property="WAITR_CNTRCTR_SE" compareValue="02"><!-- 대기자계약자구분 [02:계약자조건] -->
		   AND A.CNTRCTR_NO = #CNTRCTR_NO#
		</isEqual>
		<isEmpty property="WAITR_CNTRCTR_SE"><!-- 대기자계약자구분값이 없으면 조회결과가 없음 -->
		   AND 1 = 0
		</isEmpty>
		 ORDER BY A.FAMILY_RELATE
	</select>
</sqlMap>