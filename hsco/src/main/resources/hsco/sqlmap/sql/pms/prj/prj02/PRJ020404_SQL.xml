<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="pms_prj02">

	<!-- 
		 R   : TBPRJ_BSNS_CODE				사업코드
	-->
	<!-- 회수계획 ================================================== -->
	<!-- 회수계획 조회 -->
	<select id="PRJ020404.mList" parameterClass="map" resultClass="hashmap">
		/* PRJ020404.mList[회수계획 조회] */
		SELECT #STDR_YEAR# AS STDR_YEAR,
			   '0' AS SUB_SE,
			   #BSNS_CODE# AS BSNS_CODE,
			   A.SAL_SE,
			   A.CODE AS PRPOS_CODE,
			   B.CODE AS SUPLY_CODE,
			   NVL(BF_SUM, 0) AS BF_SUM,
			   NVL(M01, 0) AS M01,
			   NVL(M02, 0) AS M02,
			   NVL(M03, 0) AS M03,
			   NVL(M04, 0) AS M04,
			   NVL(M05, 0) AS M05,
			   NVL(M06, 0) AS M06,
			   NVL(M07, 0) AS M07,
			   NVL(M08, 0) AS M08,
			   NVL(M09, 0) AS M09,
			   NVL(M10, 0) AS M10,
			   NVL(M11, 0) AS M11,
			   NVL(M12, 0) AS M12,
			   NVL(AF_SUM, 0) AS AF_SUM
		  FROM (
				SELECT SAL_SE,
					   CODE,
					   CODE_NM,
					   UPPER_CODE
				  FROM TBPRJ_CMMN_CODE
				 WHERE USE_AT = '1'
				   AND UPPER_CODE IS NULL
			   ) A
		 INNER JOIN (
				SELECT LEVEL AS LVL,
					   SAL_SE,
					   CODE,
					   CODE_NM,
					   UPPER_CODE
				  FROM TBPRJ_CMMN_CODE
				 WHERE USE_AT = '1'
				 START WITH UPPER_CODE IS NULL
			   CONNECT BY PRIOR CODE = UPPER_CODE
				   AND PRIOR SAL_SE = SAL_SE
				   AND LEVEL = 2
			   ) B
			ON B.SAL_SE = A.SAL_SE
		   AND B.UPPER_CODE = A.CODE
		   AND B.LVL = 2
		  LEFT JOIN (
				SELECT SAL_SE,
					   PRPOS_CODE,
					   SUPLY_CODE,
					   SUM(AMT) AS SUM,
					   SUM(DECODE(SE, '00', AMT, 0)) AS BF_SUM,
					   MAX(DECODE(SE, '01', AMT, 0)) AS M01,
					   MAX(DECODE(SE, '02', AMT, 0)) AS M02,
					   MAX(DECODE(SE, '03', AMT, 0)) AS M03,
					   MAX(DECODE(SE, '04', AMT, 0)) AS M04,
					   MAX(DECODE(SE, '05', AMT, 0)) AS M05,
					   MAX(DECODE(SE, '06', AMT, 0)) AS M06,
					   MAX(DECODE(SE, '07', AMT, 0)) AS M07,
					   MAX(DECODE(SE, '08', AMT, 0)) AS M08,
					   MAX(DECODE(SE, '09', AMT, 0)) AS M09,
					   MAX(DECODE(SE, '10', AMT, 0)) AS M10,
					   MAX(DECODE(SE, '11', AMT, 0)) AS M11,
					   MAX(DECODE(SE, '12', AMT, 0)) AS M12,
					   SUM(DECODE(SE, '13', AMT, 0)) AS AF_SUM
				  FROM (
						SELECT SAL_SE,
							   PRPOS_CODE,
							   SUPLY_CODE,
							   DECODE(SIGN(STDR_YEAR - #STDR_YEAR#), -1, '00', 0, STDR_MT, 1, '13') AS SE,
							   RTRVL_PLAN_AMOUNT AS AMT
						  FROM TBPRJ_RTRVL_PLAN
						 WHERE BSNS_CODE = #BSNS_CODE#
					   )
				 GROUP BY SAL_SE, PRPOS_CODE, SUPLY_CODE
			   ) C
			ON C.SAL_SE = B.SAL_SE
		   AND C.PRPOS_CODE = A.CODE
		   AND C.SUPLY_CODE = B.CODE
		 WHERE A.SAL_SE = (
							SELECT CASE WHEN BSNS_TY IN ('11', '12') THEN '1'	/* 사업유형이 택지분양, 택지임대이면 토지 */
										ELSE '2'
									END SAL_SE
							  FROM TBPRJ_BSNS_CODE
							 WHERE BSNS_CODE = #BSNS_CODE#
						  )
		 UNION ALL
		SELECT #STDR_YEAR# AS STDR_YEAR,
			   '1' AS SUB_SE,
			   #BSNS_CODE# AS BSNS_CODE,
			   A.SAL_SE,
			   A.CODE AS PRPOS_CODE,
			   '' AS SUPLY_CODE,
			   NVL(BF_SUM, 0) AS BF_SUM,
			   NVL(M01, 0) AS M01,
			   NVL(M02, 0) AS M02,
			   NVL(M03, 0) AS M03,
			   NVL(M04, 0) AS M04,
			   NVL(M05, 0) AS M05,
			   NVL(M06, 0) AS M06,
			   NVL(M07, 0) AS M07,
			   NVL(M08, 0) AS M08,
			   NVL(M09, 0) AS M09,
			   NVL(M10, 0) AS M10,
			   NVL(M11, 0) AS M11,
			   NVL(M12, 0) AS M12,
			   NVL(AF_SUM, 0) AS AF_SUM
		  FROM (
				SELECT SAL_SE,
					   CODE,
					   CODE_NM,
					   UPPER_CODE
				  FROM TBPRJ_CMMN_CODE
				 WHERE USE_AT = '1'
				   AND UPPER_CODE IS NULL
			   ) A
		  LEFT JOIN (
				SELECT SAL_SE,
					   PRPOS_CODE,
					   '' AS SUPLY_CODE,
					   SUM(DECODE(SE, '00', AMT, 0)) AS BF_SUM,
					   SUM(DECODE(SE, '01', AMT, 0)) AS M01,
					   SUM(DECODE(SE, '02', AMT, 0)) AS M02,
					   SUM(DECODE(SE, '03', AMT, 0)) AS M03,
					   SUM(DECODE(SE, '04', AMT, 0)) AS M04,
					   SUM(DECODE(SE, '05', AMT, 0)) AS M05,
					   SUM(DECODE(SE, '06', AMT, 0)) AS M06,
					   SUM(DECODE(SE, '07', AMT, 0)) AS M07,
					   SUM(DECODE(SE, '08', AMT, 0)) AS M08,
					   SUM(DECODE(SE, '09', AMT, 0)) AS M09,
					   SUM(DECODE(SE, '10', AMT, 0)) AS M10,
					   SUM(DECODE(SE, '11', AMT, 0)) AS M11,
					   SUM(DECODE(SE, '12', AMT, 0)) AS M12,
					   SUM(DECODE(SE, '13', AMT, 0)) AS AF_SUM
				  FROM (
						SELECT SAL_SE,
							   PRPOS_CODE,
							   SUPLY_CODE,
							   DECODE(SIGN(STDR_YEAR - #STDR_YEAR#), -1, '00', 0, STDR_MT, 1, '13') AS SE,
							   RTRVL_PLAN_AMOUNT AS AMT
						  FROM TBPRJ_RTRVL_PLAN
						 WHERE BSNS_CODE = #BSNS_CODE#
					   )
				 GROUP BY SAL_SE, PRPOS_CODE
			   ) B
			ON B.SAL_SE = A.SAL_SE
		   AND B.PRPOS_CODE = A.CODE
		 WHERE A.SAL_SE = (
							SELECT CASE WHEN BSNS_TY IN ('11', '12') THEN '1'	/* 사업유형이 택지분양, 택지임대이면 토지 */
										ELSE '2'
									END SAL_SE
							  FROM TBPRJ_BSNS_CODE
							 WHERE BSNS_CODE = #BSNS_CODE#
						  )
		 ORDER BY SAL_SE, PRPOS_CODE, SUB_SE, SUPLY_CODE
	</select>


	<!-- 회수계획 등록, 수정 -->
	<update id="PRJ020404.mCU" parameterClass="map">
		/* "PRJ020404.mCU"[회수계획 등록, 수정] */
		MERGE INTO TBPRJ_RTRVL_PLAN A
		USING DUAL
		ON (	A.BSNS_CODE		 = #BSNS_CODE#			/* 사업코드 */
			AND A.STDR_YEAR		 = #STDR_YEAR#			/* 기준년도 */
			AND A.STDR_MT		 = #STDR_MT#			/* 기준월 */
			AND A.SAL_SE		 = #SAL_SE#				/* 판매구분 */
			AND A.PRPOS_CODE	 = #PRPOS_CODE#			/* 용지구분 */
			AND A.SUPLY_CODE	 = #SUPLY_CODE#			/* 공급유형 */
		   )
		WHEN MATCHED THEN
		UPDATE 
			SET RTRVL_PLAN_AMOUNT= #RTRVL_PLAN_AMOUNT#,	/* 시작일자 */
				UPDUSR_ID		 = #S_USER_ID#,			/* 수정자ID */
				UPDT_DT			 = SYSDATE				/* 수정일시 */
		WHEN NOT MATCHED THEN
		INSERT (
				BSNS_CODE,								/* 사업코드 */
				STDR_YEAR,								/* 기준년도 */
				STDR_MT,								/* 기준월 */
				SAL_SE,									/* 판매구분 */
				PRPOS_CODE,								/* 용지구분 */
				SUPLY_CODE,								/* 공급유형 */
				RTRVL_PLAN_AMOUNT,						/* 회수계획 */
				REGISTER_ID,							/* 등록자ID */
				REGIST_DT,								/* 등록일시 */
				UPDUSR_ID,								/* 수정자ID */
				UPDT_DT									/* 수정일시 */
				)
		VALUES (
				#BSNS_CODE#,							/* 사업코드 */
				#STDR_YEAR#,							/* 기준년도 */
				#STDR_MT#,								/* 기준월 */
				#SAL_SE#,								/* 판매구분 */
				#PRPOS_CODE#,							/* 용지구분 */
				#SUPLY_CODE#,							/* 공급유형 */
				#RTRVL_PLAN_AMOUNT#,					/* 회수계획 */
				#S_USER_ID#,							/* 등록자ID */
				SYSDATE,								/* 등록일시 */
				#S_USER_ID#,							/* 수정자ID */
				SYSDATE									/* 수정일시 */
				)
	</update>


	<!-- 회수계획 삭제 -->
	<delete id="PRJ020404.mD" parameterClass="map">
		/* PRJ020404.mD[회수계획 삭제] */
		DELETE
		  FROM TBPRJ_RTRVL_PLAN
		 WHERE BSNS_CODE	 = #BSNS_CODE#
		   AND SAL_SE		 = #SAL_SE#
		   AND PRPOS_CODE	 = #PRPOS_CODE#
		   AND SUPLY_CODE	 = #SUPLY_CODE#
	</delete>


	<!-- 사업관리 공통코드 조회 -->
	<select id="PRJ020404.cmmCodeList" parameterClass="map" resultClass="hashmap">
		/* PRJ020404.cmmCodeList[사업관리 공통코드 조회] */
		SELECT LEVEL AS LVL,
			   SAL_SE,
			   CODE,
			   CODE_NM,
			   UPPER_CODE
		  FROM TBPRJ_CMMN_CODE
		 WHERE USE_AT = '1'
		   AND SAL_SE = (
						SELECT CASE WHEN BSNS_TY IN ('11', '12') THEN '1'		/* 사업유형이 택지분양, 택지임대이면 토지 */
									ELSE '2'
								END SAL_SE
						  FROM TBPRJ_BSNS_CODE
						 WHERE BSNS_CODE = #BSNS_CODE#
						 )
		 START WITH UPPER_CODE IS NULL
	   CONNECT BY PRIOR CODE = UPPER_CODE
		   AND PRIOR SAL_SE = SAL_SE
		   AND LEVEL = 2
		 ORDER BY SAL_SE, CODE
	</select>


	<!-- 양식 조회 -->
	<select id="PRJ020404.sampleList" parameterClass="map" resultClass="hashmap">
		/* PRJ020404.sampleList[양식 조회] */
		SELECT A.SAL_SE,
			   B.CODE AS PRPOS_CODE,
			   B.CODE_NM AS PRPOS_CODE_NM,
			   A.CODE AS SUPLY_CODE,
			   A.CODE_NM AS SUPLY_CODE_NM,
			   '[' || B.CODE || '] ' || B.CODE_NM AS FULL_PRPOS_CODE_NM,
			   '[' || A.CODE || '] ' || A.CODE_NM AS FULL_SUPLY_CODE_NM
		  FROM (
				SELECT LEVEL AS LVL,
					   SAL_SE,
					   CODE,
					   CODE_NM,
					   UPPER_CODE
				  FROM TBPRJ_CMMN_CODE
				 WHERE USE_AT = '1'
				 START WITH UPPER_CODE IS NULL
			   CONNECT BY PRIOR CODE = UPPER_CODE
				   AND PRIOR SAL_SE = SAL_SE
				   AND LEVEL = 2
				 ORDER BY SAL_SE, CODE
			   ) A
		 INNER JOIN (
				SELECT SAL_SE,
					   CODE,
					   CODE_NM,
					   UPPER_CODE
				  FROM TBPRJ_CMMN_CODE
				 WHERE USE_AT = '1'
				   AND UPPER_CODE IS NULL
			   ) B
			ON B.SAL_SE = A.SAL_SE
		   AND B.CODE = A.UPPER_CODE
		 WHERE A.LVL = 2
		   AND A.SAL_SE = (
							SELECT CASE WHEN BSNS_TY IN ('11', '12') THEN '1'	/* 사업유형이 택지분양, 택지임대이면 토지 */
										ELSE '2'
									END SAL_SE
							  FROM TBPRJ_BSNS_CODE
							 WHERE BSNS_CODE = #BSNS_CODE#
						  )
		 ORDER BY A.SAL_SE, A.CODE
	</select>
</sqlMap>