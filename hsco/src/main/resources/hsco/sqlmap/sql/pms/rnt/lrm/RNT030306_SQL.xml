<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RNT030302">

	<!-- 쿼리명 : 대상자 조회
	설명 : 대상자 조회 쿼리
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.07.08
	-->
	<select id="RNT030306DAO.getList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
 SELECT
      TLC.CNTRCTR_NO
    , TLC.CNTRCT_CO
    , TLC.RE_CNTRCT_CO
    , TLC.AREA_SE
    , TLC.DONG
    , TLC.HO
    , TLC.LFSTS_CSTMR_NO
    , TLC.FRST_CNTRCT_DE
    , TLC.CNTRCT_CO
    , TLC.QUALF_SE
    , TLC.FAMILY_CO
    , TLC.ZIP_DM
    , TLC.ADRES_DM
    , TLC.ADRES_DETAIL_DM
    , TLC.HOUSE_POSESN_AT
    , TLC.LAD_POSESN_AT
    , TLC.BILD_POSESN_AT
    , TLC.CAR_POSESN_AT
    , TLC.BEFORE_ADRES
    , TLC.SCRT_INFO_EXAMIN_ID
    , TLC.RM
    , TLHC.ELCTRN_SANCTN_NO
    , TLHC.RNTCHRG + TLHC.RSVMNEY AS SUM
    , TLC.REGISTER_ID
    , TLC.REGIST_DT
    , TLC.UPDUSR_ID
    , TLC.UPDT_DT
    , TLHC.DCSN_DE
    , TLHC.CNTRCT_DE
    , TLHC.TRNSFRN_DE
    , TLHC.CDIT_PRESV_MTHD
    , TLHC.CNTRCTR_CO
    , TLHC.HOUSE_KND
    , TLHC.ZIP AS ZIP_HOUSE
    , TLHC.ADRES AS ADRES_HOUSE
    , TLHC.ADRES_DETAIL AS ADRES_DETAIL_HOUSE
    , TLHC.HEAT_SE
    , TLHC.FLOOR_SE
    , TLHC.AR
    , TLHC.ALL_ROOM_CO
    , TLHC.RENT_ROOM_CO
    , TLHC.SPORT_BGNDE
    , TLHC.SPORT_ENDDE
    , TLHC.LFSTS_AMOUNT
    , TLHC.SPORT_AMOUNT
    , TLHC.RENT_ALOTM
    , TLHC.ADIT_ALOTM
    , TLHC.RNTCHRG
    , TLHC.RSVMNEY
    , TLRC.NM
    , SFCOM_DEC_ALL(TLRC.IHIDNUM) AS IHIDNUM  
    , TLRC.ZIP
    , TLRC.ADRES
    , TLRC.ADRES_DETAIL
    , TLRC.TELNO
    , TLRC.MBTLNO
    , TLRT.RESCI_TRMNAT_DE    
    , Z.NM AS NM_PSN
    , Z.TELNO AS TELNO_PSN
    , Z.MBTLNO AS MBTLNO_PSN
 FROM TBRNT_LFSTS_CNTRCT TLC  
 JOIN TBRNT_LFSTS_CSTMR TLRC ON TLC.LFSTS_CSTMR_NO = TLRC.LFSTS_CSTMR_NO
 JOIN TBRNT_LFSTS_HOUSE_CNTRCTR TLHC ON TLC.CNTRCTR_NO = TLHC.CNTRCTR_NO AND TLC.CNTRCT_CO = TLHC.CNTRCTR_CO
 <isEqual property="CNTRCT_GB" compareValue="%" >
 LEFT JOIN TBRNT_LFSTS_RESCI_TRMNAT TLRT ON TLC.CNTRCTR_NO = TLRT.CNTRCTR_NO AND TLC.CNTRCT_CO = TLRT.CNTRCTR_CO
 </isEqual>
 <isEqual property="CNTRCT_GB" compareValue="1" >
 LEFT JOIN TBRNT_LFSTS_RESCI_TRMNAT TLRT ON TLC.CNTRCTR_NO = TLRT.CNTRCTR_NO AND TLC.CNTRCT_CO = TLRT.CNTRCTR_CO
 </isEqual> 
 <isEqual property="CNTRCT_GB" compareValue="2">
 JOIN TBRNT_LFSTS_RESCI_TRMNAT TLRT ON TLC.CNTRCTR_NO = TLRT.CNTRCTR_NO AND TLC.CNTRCT_CO = TLRT.CNTRCTR_CO
 </isEqual> 
 LEFT JOIN TBRNT_LFSTS_RENT_PSN TLRP ON TLC.CNTRCTR_NO = TLRP.CNTRCTR_NO AND TLC.CNTRCT_CO = TLRP.CNTRCTR_CO 
 LEFT JOIN TBRNT_LFSTS_CSTMR Z ON TLRP.LFSTS_CSTMR_NO = Z.LFSTS_CSTMR_NO
WHERE 1=1    
    AND TLRP.RNTAGNT_NO =
                       (SELECT   NVL (MAX (RNTAGNT_NO), 1)
                          FROM   TBRNT_LFSTS_RENT_PSN
                         WHERE   CNTRCTR_NO = TLC.CNTRCTR_NO
                                 AND CNTRCTR_CO = TLC.CNTRCT_CO)     
 <isNotEmpty property="AREA_SE">
	 AND TLC.AREA_SE = #AREA_SE#
 </isNotEmpty>
 <isNotEmpty property="NM">
 	AND TLRC.NM LIKE #NM#||'%'
 </isNotEmpty>
 <isNotEmpty property="OWNER">
 	AND Z.NM LIKE #OWNER#||'%'
 </isNotEmpty>
  <isNotEmpty property="DONG">
 	AND TLC.DONG LIKE  '%' || #DONG# || '%'
 </isNotEmpty>	
  <isNotEmpty property="HO">
 	AND TLC.HO LIKE  '%' || #HO# || '%'
 </isNotEmpty>	
 <isNotEmpty property="ADRES">
 	AND TLRC.ADRES LIKE '%'||#ADRES#||'%'
 </isNotEmpty>	
 <isNotEmpty property="CSTMR_NO">
 	AND TLC.LFSTS_CSTMR_NO = #CSTMR_NO#
 </isNotEmpty> 
 <isEqual property="CNTRCT_GB" compareValue="1">
 	AND NOT EXISTS (SELECT 1 
 	                  FROM TBRNT_LFSTS_RESCI_TRMNAT A 
 	                 WHERE A.CNTRCTR_NO = TLC.CNTRCTR_NO 
 	                   AND A.CNTRCTR_CO = TLC.CNTRCT_CO)
  </isEqual>	
 	ORDER BY TLC.AREA_SE , TLC.CNTRCTR_NO , TLHC.CNTRCTR_CO
 
	</select>
	<!-- 쿼리명 : 지원금반환 조회
	설명 : 지원금반환 조회 쿼리
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.07.08 
	-->
	
<select id="RNT030306DAO.getListR1" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT
      CNTRCTR_NO
    , CNTRCTR_CO
    , RETURN_NO
    , SPORT_RETURN_AMOUNT
    , SPORT_RETURN_AMOUNT + NVL(OVDINTR, 0) AS SUM_AMOUNT
    , RQEST_AMOUNT <!--  입주자 부담금 -->
    , RQEST_DE
    , DEDT_DE
    , RETURN_DE
    , INTR_CREAT_BGNDE
    , INTR_CREAT_ENDDE
    , OVDINTR
    , REGISTER_ID
    , REGIST_DT
    , UPDUSR_ID
    , UPDT_DT
 FROM TBRNT_LFSTS_SPRMNY_RETURN
WHERE CNTRCTR_NO = #CNTRCTR_NO#
  AND CNTRCTR_CO = #CNTRCTR_CO#
  
  ORDER BY CNTRCTR_CO
</select>

<!-- 	
	</update>
	 쿼리명 : 지원금반환 수정
	설명 : 지원금반환 수정 쿼리
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.07.08 

	
<update id="RNT030306DAO.listU" parameterClass="java.util.Map">
UPDATE TBRNT_SPRMNY_RETURN
   SET
      SPORT_RETURN_AMOUNT    =    #SPORT_RETURN_AMOUNT#
    , RQEST_DE    =    #RQEST_DE#
    , DEDT_DE    =    #DEDT_DE#
    , INTR_CREAT_BGNDE = ##
    , INTR_CREAT_ENDDE = ##
    , OVDINTR  
    , RETURN_DE    =    #RETURN_DE#
    , UPDUSR_ID    =    #UPDUSR_ID#
    , UPDT_DT    =    SYSDATE
WHERE CNTRCTR_NO = #CNTRCTR_NO#
  AND CNTRCTR_CO = #CNTRCTR_CO#
  AND RETURN_NO = #RETURN_NO#  

</update>
	-->		
	<!-- 	
	쿼리명 : 지원금반환 신규
	설명 : 지원금반환 신규 쿼리
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.07.08 
	-->
<insert id="RNT030306DAO.listC" parameterClass="java.util.Map">
INSERT INTO TBRNT_LFSTS_SPRMNY_RETURN
(
      CNTRCTR_NO
    , CNTRCTR_CO
    , RETURN_NO
    , SPORT_RETURN_AMOUNT
    , RQEST_AMOUNT
    , RQEST_DE
    , DEDT_DE
    , RETURN_DE
    , INTR_CREAT_BGNDE
    , INTR_CREAT_ENDDE
    , OVDINTR
    , REGISTER_ID
    , REGIST_DT
    , UPDUSR_ID
    , UPDT_DT    
)VALUES(
      #CNTRCTR_NO#
    , #CNTRCTR_CO#
    , (SELECT NVL(MAX(RETURN_NO)+1,0) FROM TBRNT_LFSTS_SPRMNY_RETURN WHERE CNTRCTR_NO = #CNTRCTR_NO# AND CNTRCTR_CO = #CNTRCTR_CO#)
    , #SPORT_RETURN_AMOUNT#
    , #RQEST_AMOUNT#
    , #RQEST_DE#
    , #DEDT_DE#
    , #RETURN_DE#
    , #INTR_CREAT_BGNDE#
    , #INTR_CREAT_ENDDE#
    , #OVDINTR#    
    , #S_USER_ID#
    , SYSDATE
    , #S_USER_ID#
    , SYSDATE          
)
</insert>
	<!-- 쿼리명 : 지원금반환 삭제
	설명 : 지원금반환 삭제 쿼리
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.07.08 
	-->	
<delete id="RNT030306DAO.listD" parameterClass="java.util.Map">
DELETE FROM TBRNT_LFSTS_SPRMNY_RETURN
 WHERE CNTRCTR_NO = #CNTRCTR_NO#
   AND CNTRCTR_CO = #CNTRCTR_CO#
   AND RETURN_NO = #RETURN_NO#
</delete>
<!-- 쿼리명 : 미납임대료 조회
	설명 : 미납임대료 조회
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P1" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
        A.CNTRCTR_NO
     ,  C.NM
     ,  A.DEDT_DE
     ,  A.RQEST_NO
     ,  A.RNTCHRG_THSMON
     ,  A.RSVMNEY_THSMON
     ,  NVL(RNTCHRG_RDCAMT , 0) as RNTCHRG_RDCAMT
     ,  NVL(RSVMNEY_RDCAMT , 0) as RSVMNEY_RDCAMT
     ,  NVL(RNTCHRG_RDCAMT , 0) + NVL(RSVMNEY_RDCAMT , 0) T_RDCAMT
     ,  A.OVDINTR
     ,  NVL(A.RNTCHRG_THSMON , 0) + NVL(A.RSVMNEY_THSMON , 0) + NVL(A.OVDINTR, 0) + NVL(RNTCHRG_RDCAMT,0) + NVL(RSVMNEY_RDCAMT,0) AS TOTAL_RNTCHRG 
     , '2' AS RCIV_SE
  FROM TBRNT_LFSTS_MT_RNTCHRG A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
 WHERE A.RCIV_DE IS NULL 
   AND A.CNTRCTR_NO = #CNTRCTR_NO#
ORDER BY A.CNTRCTR_NO , DEDT_DE
</select>

<!-- 쿼리명 : 미납지원금 조회
	설명 : 미납지원금 조회
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P2" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT
      A.CNTRCTR_NO
    , C.NM
    , A.DEDT_DE
    , A.RETURN_NO AS DEDT_DE
    , A.SPORT_RETURN_AMOUNT as RNTCHRG_THSMON
    , A.OVDINTR
    , A.SPORT_RETURN_AMOUNT + NVL(A.OVDINTR,0) + NVL(RQEST_AMOUNT,0) AS TOTAL_RNTCHRG  
    , '1' AS RCIV_SE
  FROM TBRNT_LFSTS_SPRMNY_RETURN A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
WHERE A.RETURN_DE IS NULL  
  AND A.CNTRCTR_NO = #CNTRCTR_NO#
ORDER BY A.CNTRCTR_NO , A.DEDT_DE
</select>

<!-- 쿼리명 : 미납지원금,임대료 조회
	설명 : 미납임대료,지원금 조회
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P3" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
       A.CNTRCTR_NO
     , C.NM
     , A.DEDT_DE
     , A.RQEST_NO
     , A.RNTCHRG_THSMON
     , A.RSVMNEY_THSMON
     , A.OVDINTR
     , A.RNTCHRG_THSMON + A.RSVMNEY_THSMON + NVL(A.OVDINTR,0) AS TOTAL_RNTCHRG 
     , '2' AS RCIV_SE
  FROM TBRNT_LFSTS_MT_RNTCHRG A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
 WHERE A.RCIV_DE IS NULL 
   AND A.CNTRCTR_NO = #CNTRCTR_NO#
UNION ALL
SELECT
      A.CNTRCTR_NO
    , C.NM
    , A.DEDT_DE
    , A.RETURN_NO AS RQEST_NO
    , A.SPORT_RETURN_AMOUNT AS RNTCHRG_THSMON
    , 0 AS RSVMNEY_THSMON
    , A.OVDINTR
    , A.SPORT_RETURN_AMOUNT + NVL(A.OVDINTR,0) AS TOTAL_RNTCHRG
    , '1' AS RCIV_SE  
  FROM TBRNT_LFSTS_SPRMNY_RETURN A
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO
  JOIN TBRNT_LFSTS_CSTMR C ON B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
WHERE A.RETURN_DE IS NULL  
  AND A.CNTRCTR_NO = #CNTRCTR_NO#
ORDER BY CNTRCTR_NO , DEDT_DE , RQEST_NO
</select>

<!-- 쿼리명 : 입금내역(가상계좌)
	설명 : 입금내역(가상계좌)
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P4" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
       A.BANK_CD
     , A.VACCT_NO
     , A.IN_DATE
     , A.PAYEND_DATE
     , A.BILL_SEQ
     , A.CORT_CODE
     , A.BILL_AMT
  FROM VA_RECEIPT A 
 WHERE CRT_ID = #CNTRCTR_NO#
 ORDER BY A.IN_DATE DESC
</select>

<!-- 쿼리명 : 납부요청(가상계좌 VA_BILL)
	설명 : 납부요청(가상계좌 VA_BILL)
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P5" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
       BANK_CD
     , CRT_ID
     , VACCT_NO
     , TR_DATE
     , TR_NO
     , TR_SDATE
     , TR_EDATE
     , BILL_AMT
     , PUT_USER_ID     
     , PUT_DATE
     , EXT1
     , PUT_USER_ID
     , PUT_DATE     
  FROM VA_BILL
 WHERE CRT_ID = #CRT_ID#
   AND VACCT_NO = #VACCT_NO#
 ORDER BY TR_NO
</select>

<!-- 쿼리명 : 납부요청(가상계좌 VA_BILL_DEDATIL)
	설명 : 납부요청(가상계좌 VA_BILL_DEDATIL)
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P6" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
       BANK_CD
     , VACCT_NO
     , CORT_CODE
     , PAYEND_DATE
     , BILL_AMT 
  FROM VA_BILL_DETAIL 
 WHERE CRT_ID = #CRT_ID#
   AND VACCT_NO = #VACCT_NO#
   AND BANK_CD = #BANK_CD# 
 ORDER BY TR_NO
</select>


<!-- 쿼리명 : 가상계좌 납부요청 개별 프로시저
	설명 : 가상계좌 납부요청 개별 프로시저
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
	<parameterMap id="sp_va_bill_uid_param" class="java.util.HashMap">
		<parameter property="IN_FLAG"     		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_BANK_CD"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_ACCT_NO"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_TR_DATE"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_TR_SDATE" 		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_TR_EDATE" 		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_CRT_DIV"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_CRT_ID"   		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_BILL_SEQ"		jdbcType="VARCHAR"	javaType="string"  	mode="IN" />
		<parameter property="IN_CORT_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_PAY_NUM"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_REC_CLASS"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_REC_SEQ"		jdbcType="VARCHAR"	javaType="string"   mode="IN" />
		<parameter property="IN_PAYEND_DATE"	jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_BILL_AMT"		jdbcType="VARCHAR"	javaType="string"   mode="IN" />
		<parameter property="IN_PAY_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
		<parameter property="IN_SALE_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
		<parameter property="IN_INT_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
		<parameter property="IN_BILL_DIV"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="S_USER_ID"	jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_BJ_YN"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
		<parameter property="IN_LOSS_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />		
	</parameterMap>

<!-- 쿼리명 : 가상계좌 납부요청 개별 프로시저
	설명 : 가상계좌 납부요청 개별 프로시저
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
	<procedure id="RNT030306DAO.SP_VA_BILL_UID" parameterMap="sp_va_bill_uid_param">
		{ call SP_VA_BILL_UID(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>



<!-- 쿼리명 : 은행계좌 콤보
	설명 : 은행계좌 콤보
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="RNT030306DAO.P8" parameterClass="java.util.Map" resultClass="java.util.HashMap">
    SELECT '['||SFCOM_CODE_NM('COM021', BANK_CD ,'CODE_NM')||'] '|| VACCT_NO  AS BANK_NM
    , BANK_CD
    , VACCT_NO
      FROM VA_MAST 
     WHERE CUST_CD = #CNTRCTR_NO#
     <isEqual property="OPT1" compareValue="1">
       AND OPT1 = 1
     </isEqual>
     <isEqual property="OPT1" compareValue="2">
       AND OPT2 = 1
     </isEqual>
     <isNotEmpty property="BANK_CODE">
       AND BANK_CD = #BANK_CODE#
     </isNotEmpty>   
       
</select>

<!-- 쿼리명 : 출력물 쿼리1
	설명 : 출력물 쿼리1
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2016.01.04 
-->	
<select id="RNT030306DAO.PRINT1" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT  DISTINCT A.CNTRCTR_NO
      , C.NM
      , C.ZIP
      , C.ADRES
      , C.ADRES_DETAIL
      , DECODE(C.MBTLNO , NULL , C.TELNO , C.MBTLNO) AS MBTLNO      
      , D.NM AS NM_PSN
      , D.ADRES AS ADRES_PSN
      , D.ADRES_DETAIL AS ADRES_DETAIL_PSN
	  , DECODE(D.MBTLNO , NULL , D.TELNO , D.MBTLNO) AS MBTLNO_PSN      
      , F.SPORT_BGNDE
      , F.SPORT_ENDDE
      , F.LFSTS_AMOUNT
      , F.SPORT_AMOUNT
      , F.RENT_ALOTM
      , F.ADIT_ALOTM      
      , E.BANK_NM||' : '||E.VACCT_NO AS VACCT
      , Z.*
  FROM TBRNT_LFSTS_SPRMNY_RETURN A 
  JOIN TBRNT_LFSTS_CNTRCT B ON A.CNTRCTR_NO = B.CNTRCTR_NO
  JOIN TBRNT_LFSTS_CSTMR C ON  B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
  JOIN (SELECT  A.CNTRCTR_NO
              , A.CNTRCTR_CO
              , B.NM
              , B.ZIP
              , B.ADRES
              , B.ADRES_DETAIL
              , B.TELNO
              , B.MBTLNO
          FROM TBRNT_LFSTS_RENT_PSN A
          JOIN TBRNT_LFSTS_CSTMR B ON A.LFSTS_CSTMR_NO = B.LFSTS_CSTMR_NO) D ON A.CNTRCTR_NO = D.CNTRCTR_NO AND A.CNTRCTR_CO = D.CNTRCTR_CO
  JOIN (SELECT VACCT_NO 
             , IN_DATE
             , (SELECT CODE_NM FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'COM021' AND CODE = BANK_CD) AS BANK_NM 
          FROM VA_RECEIPT 
        WHERE CRT_ID = #CNTRCTR_NO#) E ON A.RETURN_DE = TO_CHAR(E.IN_DATE , 'YYYYMMDD')      
  JOIN TBRNT_LFSTS_HOUSE_CNTRCTR F ON A.CNTRCTR_NO = F.CNTRCTR_NO AND A.CNTRCTR_CO = F.CNTRCTR_CO           
  LEFT JOIN TBPMS_CPR_INFO Z ON 1=1       
 WHERE 1=1
   AND A.CNTRCTR_NO = #CNTRCTR_NO#     
   AND A.CNTRCTR_CO = #CNTRCTR_CO#

</select>

<!-- 쿼리명 : 출력물 쿼리2
	설명 : 출력물 쿼리2
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2016.01.04 
-->	
<select id="RNT030306DAO.PRINT2" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT
            MAX(DECODE(MOD(RNUM ,2) , 1 , RNUM)) AS RNUM_1
          , MAX(DECODE(MOD(RNUM ,2) , 0 , RNUM)) AS RNUM_2
          , MAX(DECODE(MOD(RNUM ,2) , 1 , SPORT_RETURN_AMOUNT)) AS SPORT_RETURN_AMOUNT_1
          , MAX(DECODE(MOD(RNUM ,2) , 0 , SPORT_RETURN_AMOUNT)) AS SPORT_RETURN_AMOUNT_2
          , MAX(DECODE(MOD(RNUM ,2) , 1 , RETURN_DE)) AS RETURN_DE_1
          , MAX(DECODE(MOD(RNUM ,2) , 0 , RETURN_DE)) AS RETURN_DE_2  
          , C_NUM                                        /*  그룹을 짓기 위한 컬럼 */
  FROM (SELECT A.CNTRCTR_NO
             , A.CNTRCTR_CO
             , A.RETURN_DE
             , A.SPORT_RETURN_AMOUNT
             , CEIL(ROWNUM/2) AS C_NUM                  /* 한줄로 출력하기 위한 컬럼 */
             , ROWNUM AS RNUM
          FROM TBRNT_LFSTS_SPRMNY_RETURN A
         WHERE 1=1
           AND A.CNTRCTR_NO = #CNTRCTR_NO#
           AND A.CNTRCTR_CO = #CNTRCTR_CO#
      ORDER BY A.RETURN_NO) A
 GROUP BY C_NUM
</select>


<!-- 쿼리명 : 납부서 출력 조회
	설명 : 납부서 출력 조회
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2016.08.06 
-->	
<select id="RNT030306DAO.PRINT3" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT   DISTINCT
         a.AREA_SE,
         a.DONG,
         a.HO,
         m.NM,
         b.ZIP,
         TRIM (b.ADRES) AS ADDR1,
         TRIM (b.ADRES_DETAIL) AS ADDR2,
         SUBSTR (d.PAYEND_DATE1, 1, 6) AS BILL_YM,
         d.PAYEND_DATE1 AS PAYEND_DATE,
         '지역' AS C_TITLE1,
         (SELECT   CODE_NM
            FROM   TBCOM_CMMN_CODE
           WHERE   GRP_CODE = 'RNT004' AND CHRCTR_PREPAR_VALUE_1 = A.AREA_SE)
            AS C_CONT1,
         '납   부   자' AS C_TITLE2,
         m.NM AS C_CONT2,
         '자동이체코드' AS C_TITLE3,
         a.AREA_SE || '-' || a.DONG || '-' || a.HO AS C_CONT3,
         '전 세 임 대 료' AS A_TITLE1,
         d.PAY_AMT AS A_AMT1,
         '대손충당금' AS A_TITLE2,
         d.LOSS_AMT AS A_AMT2,
         '연체금액' AS A_TITLE3,
         d.INT_AMT AS A_AMT3,
         '차감금액' AS A_TITLE4,
         d.SALE_AMT AS A_AMT4,
         d.PAY_AMT + d.SALE_AMT + d.LOSS_AMT + d.INT_AMT AS A_AMT5,
         e.MIN_RATIO,
         e.MAX_RATIO,
         f.OPOST_NO,
         f.OADDR1,
         f.OADDR2,
         f.OTEL_NO,
         f.OFAX_NO,
         <!--
         DECODE (s.CNTRCTR_NO, '', v.BANK1, '') AS BANK1,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO1, '') AS ACCT_NO1,
         DECODE (s.CNTRCTR_NO, '', v.BANK2, '') AS BANK2,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO2, '') AS ACCT_NO2,
         DECODE (s.CNTRCTR_NO, '', v.BANK3, '') AS BANK3,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO3, '') AS ACCT_NO3,
         DECODE (s.CNTRCTR_NO, '', v.BANK4, '') AS BANK4,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO4, '') AS ACCT_NO4,
         DECODE (s.CNTRCTR_NO, '', v.BANK5, '') AS BANK5,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO5, '') AS ACCT_NO5,
         DECODE (s.CNTRCTR_NO, '', v.BANK6, '') AS BANK6,
         DECODE (s.CNTRCTR_NO, '', v.ACCT_NO6, '') AS ACCT_NO6,
         -->
         v.BANK1 AS BANK1,
         v.ACCT_NO1 AS ACCT_NO1,
         v.BANK2 AS BANK2,
         v.ACCT_NO2 AS ACCT_NO2,
         v.BANK3 AS BANK3,
         v.ACCT_NO3 AS ACCT_NO3,
         v.BANK4 AS BANK4,
         v.ACCT_NO4 AS ACCT_NO4,         
         v.BANK5 AS BANK5,
         v.ACCT_NO5 AS ACCT_NO5,
         v.BANK6 AS BANK6,
         v.ACCT_NO6 AS ACCT_NO6,         
         d.PAY_AMT AS PAY_AMT,
         d.SALE_AMT,
         d.LOSS_AMT,
         d.INT_AMT,
         d.TOT_AMT,
         d.MONTH1,
         TO_CHAR (d.PAYEND_DATE1, 'yyyy-mm-dd') AS PAYEND_DATE1,
         d.PAY_AMT1,
         d.SALE_AMT1,
         d.LOSS_AMT1,
         d.INT_AMT1,
         d.TOT_AMT1,
         d.MONTH2,
         TO_CHAR (d.PAYEND_DATE2, 'yyyy-mm-dd') AS PAYEND_DATE2,
         d.PAY_AMT2,
         d.SALE_AMT2,
         d.LOSS_AMT2,
         d.INT_AMT2,
         d.TOT_AMT2,
         d.MONTH3,
         TO_CHAR (d.PAYEND_DATE3, 'yyyy-mm-dd') AS PAYEND_DATE3,
         d.PAY_AMT3,
         d.SALE_AMT3,
         d.LOSS_AMT3,
         d.INT_AMT3,
         d.TOT_AMT3,
         d.MONTH4,
         TO_CHAR (d.PAYEND_DATE4, 'yyyy-mm-dd') AS PAYEND_DATE4,
         d.PAY_AMT4,
         d.SALE_AMT4,
         d.LOSS_AMT4,
         d.INT_AMT4,
         d.TOT_AMT4,
         d.MONTH5,
         TO_CHAR (d.PAYEND_DATE5, 'yyyy-mm-dd') AS PAYEND_DATE5,
         d.PAY_AMT5,
         d.SALE_AMT5,
         d.LOSS_AMT5,
         d.INT_AMT5,
         d.TOT_AMT5,
         d.MONTH6,
         TO_CHAR (d.PAYEND_DATE6, 'yyyy-mm-dd') AS PAYEND_DATE6,
         d.PAY_AMT6,
         d.SALE_AMT6,
         d.LOSS_AMT6,
         d.INT_AMT6,
         d.TOT_AMT6,
         d.MONTH7,
         TO_CHAR (d.PAYEND_DATE7, 'yyyy-mm-dd') AS PAYEND_DATE7,
         d.PAY_AMT7,
         d.SALE_AMT7,
         d.LOSS_AMT7,
         d.INT_AMT7,
         d.TOT_AMT7,
         d.MONTH8,
         TO_CHAR (d.PAYEND_DATE8, 'yyyy-mm-dd') AS PAYEND_DATE8,
         d.PAY_AMT8,
         d.SALE_AMT8,
         d.LOSS_AMT8,
         d.INT_AMT8,
         d.TOT_AMT8,
         d.MONTH9,
         TO_CHAR (d.PAYEND_DATE9, 'yyyy-mm-dd') AS PAYEND_DATE9,
         d.PAY_AMT9,
         d.SALE_AMT9,
         d.LOSS_AMT9,
         d.INT_AMT9,
         d.TOT_AMT9,
         d.MONTH10,
         TO_CHAR (d.PAYEND_DATE10, 'yyyy-mm-dd') AS PAYEND_DATE10,
         d.PAY_AMT10,
         d.SALE_AMT10,
         d.LOSS_AMT10,
         d.INT_AMT10,
         d.TOT_AMT10,
         d.MONTH11,
         TO_CHAR (d.PAYEND_DATE11, 'yyyy-mm-dd') AS PAYEND_DATE11,
         d.PAY_AMT11,
         d.SALE_AMT11,
         d.LOSS_AMT11,
         d.INT_AMT11,
         d.TOT_AMT11,
         d.MONTH12,
         TO_CHAR (d.PAYEND_DATE12, 'yyyy-mm-dd') AS PAYEND_DATE12,
         d.PAY_AMT12,
         d.SALE_AMT12,
         d.LOSS_AMT12,
         d.INT_AMT12,
         d.TOT_AMT12,
         d.MONTH13,
         TO_CHAR (d.PAYEND_DATE13, 'yyyy-mm-dd') AS PAYEND_DATE13,
         d.PAY_AMT13,
         d.SALE_AMT13,
         d.LOSS_AMT13,
         d.INT_AMT13,
         d.TOT_AMT13,
         '' AS REC_DE,
         0 AS REC_AMT,
         s.BANK_NM,
         s.ACNUTNO,
         s.DPSTR,
         a.AREA_SE || '-' || a.DONG || '-' || a.HO AS AUTO_CODE,
         '1450000' AS BIZ_NO,
         (SELECT CODE_NM FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'RNT004' AND CHRCTR_PREPAR_VALUE_1 = A.AREA_SE)|| ' ' || trim(to_number(a.DONG)) AS APT_ADDR,
         TO_CHAR (d.PAYEND_DATE1, 'yyyy') BILL_YEAR,
         TO_CHAR (d.PAYEND_DATE1, 'mm') BILL_MONTH,
         SUBSTR (c.TR_DATE, 1, 4) AS CAL_YEAR,
         SUBSTR (c.TR_DATE, 5, 2) AS CAL_MONTH,
         SUBSTR (c.TR_DATE, 7, 2) AS CAL_DAY,
         SUBSTR (c.TR_EDATE, 1, 4) AS END_YEAR,
         SUBSTR (c.TR_EDATE, 5, 2) AS END_MONTH,
         SUBSTR (c.TR_EDATE, 7, 2) AS END_DAY,
         c.BILL_DIV,
         c.TR_DATE,
         c.TR_NO,
         s.BANK_NM || ' - ' || d.VACCT_NO AS BANK_G,
         d.BANK_CD,
         d.VACCT_NO,
         a.CNTRCTR_NO,
         #cortCode# AS CRT_DIV,
         0 AS USE_VOLUME,
         0 COST_AMT,
         0 TFAMILY_CNT,
         0 TSALE_AMT_06,
         0 SALE_AMT_06
  FROM   TBRNT_LFSTS_CNTRCT a,
         TBRNT_LFSTS_HOUSE_CNTRCTR B,
         TBRNT_LFSTS_CSTMR m,
         VA_BILL c,
         (  SELECT   CRT_ID, BANK_CD, VACCT_NO,
                     MAX (DECODE (ROWNUM, 1, '전세임대료', '')) AS MONTH1,
                     MAX (DECODE (ROWNUM, 1, PAYEND_DATE, '')) AS PAYEND_DATE1,
                     SUM (DECODE (ROWNUM, 1, PAY_AMT, NULL)) AS PAY_AMT1,
                     SUM (DECODE (ROWNUM, 1, SALE_AMT, NULL)) AS SALE_AMT1,
                     SUM (DECODE (ROWNUM, 1, NULL, NULL)) AS LOSS_AMT1,
                     SUM (DECODE (ROWNUM, 1, INT_AMT, NULL)) AS INT_AMT1,
                     SUM (DECODE (ROWNUM, 1, PAY_AMT+SALE_AMT+INT_AMT, NULL)) AS TOT_AMT1,
                     MAX (DECODE (ROWNUM, 1, '대손충당금','' )) AS MONTH2,
                     MAX (DECODE (ROWNUM, 1, PAYEND_DATE, '')) AS PAYEND_DATE2,
                     SUM (DECODE (ROWNUM, 1, LOSS_AMT, NULL)) AS PAY_AMT2,
                     SUM (DECODE (ROWNUM, 1, NULL, NULL)) AS SALE_AMT2,
                     SUM (DECODE (ROWNUM, 1, NULL, NULL)) AS LOSS_AMT2,
                     SUM (DECODE (ROWNUM, 1, NULL, NULL)) AS INT_AMT2,
                     SUM (DECODE (ROWNUM, 1, LOSS_AMT, NULL)) AS TOT_AMT2,
                     MAX (DECODE (ROWNUM, 2, CORT_NM, '')) AS MONTH3,
                     MAX (DECODE (ROWNUM, 2, PAYEND_DATE, '')) AS PAYEND_DATE3,
                     SUM (DECODE (ROWNUM, 2, PAY_AMT, NULL)) AS PAY_AMT3,
                     SUM (DECODE (ROWNUM, 2, SALE_AMT, NULL)) AS SALE_AMT3,
                     SUM (DECODE (ROWNUM, 2, LOSS_AMT, NULL)) AS LOSS_AMT3,
                     SUM (DECODE (ROWNUM, 2, INT_AMT, NULL)) AS INT_AMT3,
                     SUM (DECODE (ROWNUM, 2, BILL_AMT, NULL)) AS TOT_AMT3,
                     MAX (DECODE (ROWNUM, 3, CORT_NM, '')) AS MONTH4,
                     MAX (DECODE (ROWNUM, 3, PAYEND_DATE, '')) AS PAYEND_DATE4,
                     SUM (DECODE (ROWNUM, 3, PAY_AMT, NULL)) AS PAY_AMT4,
                     SUM (DECODE (ROWNUM, 3, SALE_AMT, NULL)) AS SALE_AMT4,
                     SUM (DECODE (ROWNUM, 3, LOSS_AMT, NULL)) AS LOSS_AMT4,
                     SUM (DECODE (ROWNUM, 3, INT_AMT, NULL)) AS INT_AMT4,
                     SUM (DECODE (ROWNUM, 3, BILL_AMT, NULL)) AS TOT_AMT4,
                     MAX (DECODE (ROWNUM, 4, CORT_NM, '')) AS MONTH5,
                     MAX (DECODE (ROWNUM, 4, PAYEND_DATE, '')) AS PAYEND_DATE5,
                     SUM (DECODE (ROWNUM, 4, PAY_AMT, NULL)) AS PAY_AMT5,
                     SUM (DECODE (ROWNUM, 4, SALE_AMT, NULL)) AS SALE_AMT5,
                     SUM (DECODE (ROWNUM, 4, LOSS_AMT, NULL)) AS LOSS_AMT5,
                     SUM (DECODE (ROWNUM, 4, INT_AMT, NULL)) AS INT_AMT5,
                     SUM (DECODE (ROWNUM, 4, BILL_AMT, NULL)) AS TOT_AMT5,
                     MAX (DECODE (ROWNUM, 5, CORT_NM, '')) AS MONTH6,
                     MAX (DECODE (ROWNUM, 5, PAYEND_DATE, '')) AS PAYEND_DATE6,
                     SUM (DECODE (ROWNUM, 5, PAY_AMT, NULL)) AS PAY_AMT6,
                     SUM (DECODE (ROWNUM, 5, SALE_AMT, NULL)) AS SALE_AMT6,
                     SUM (DECODE (ROWNUM, 5, LOSS_AMT, NULL)) AS LOSS_AMT6,
                     SUM (DECODE (ROWNUM, 5, INT_AMT, NULL)) AS INT_AMT6,
                     SUM (DECODE (ROWNUM, 5, BILL_AMT, NULL)) AS TOT_AMT6,
                     MAX (DECODE (ROWNUM, 6, CORT_NM, '')) AS MONTH7,
                     MAX (DECODE (ROWNUM, 6, PAYEND_DATE, '')) AS PAYEND_DATE7,
                     SUM (DECODE (ROWNUM, 6, PAY_AMT, NULL)) AS PAY_AMT7,
                     SUM (DECODE (ROWNUM, 6, SALE_AMT, NULL)) AS SALE_AMT7,
                     SUM (DECODE (ROWNUM, 6, LOSS_AMT, NULL)) AS LOSS_AMT7,
                     SUM (DECODE (ROWNUM, 6, INT_AMT, NULL)) AS INT_AMT7,
                     SUM (DECODE (ROWNUM, 6, BILL_AMT, NULL)) AS TOT_AMT7,
                     MAX (DECODE (ROWNUM, 7, CORT_NM, '')) AS MONTH8,
                     MAX (DECODE (ROWNUM, 7, PAYEND_DATE, '')) AS PAYEND_DATE8,
                     SUM (DECODE (ROWNUM, 7, PAY_AMT, NULL)) AS PAY_AMT8,
                     SUM (DECODE (ROWNUM, 7, SALE_AMT, NULL)) AS SALE_AMT8,
                     SUM (DECODE (ROWNUM, 7, LOSS_AMT, NULL)) AS LOSS_AMT8,
                     SUM (DECODE (ROWNUM, 7, INT_AMT, NULL)) AS INT_AMT8,
                     SUM (DECODE (ROWNUM, 7, BILL_AMT, NULL)) AS TOT_AMT8,
                     MAX (DECODE (ROWNUM, 8, CORT_NM, '')) AS MONTH9,
                     MAX (DECODE (ROWNUM, 8, PAYEND_DATE, '')) AS PAYEND_DATE9,
                     SUM (DECODE (ROWNUM, 8, PAY_AMT, NULL)) AS PAY_AMT9,
                     SUM (DECODE (ROWNUM, 8, SALE_AMT, NULL)) AS SALE_AMT9,
                     SUM (DECODE (ROWNUM, 8, LOSS_AMT, NULL)) AS LOSS_AMT9,
                     SUM (DECODE (ROWNUM, 8, INT_AMT, NULL)) AS INT_AMT9,
                     SUM (DECODE (ROWNUM, 8, BILL_AMT, NULL)) AS TOT_AMT9,
                     MAX (DECODE (ROWNUM, 9, CORT_NM, '')) AS MONTH10,
                     MAX (DECODE (ROWNUM, 9, PAYEND_DATE, '')) AS PAYEND_DATE10,
                     SUM (DECODE (ROWNUM, 9, PAY_AMT, NULL)) AS PAY_AMT10,
                     SUM (DECODE (ROWNUM, 9, SALE_AMT, NULL)) AS SALE_AMT10,
                     SUM (DECODE (ROWNUM, 9, LOSS_AMT, NULL)) AS LOSS_AMT10,
                     SUM (DECODE (ROWNUM, 9, INT_AMT, NULL)) AS INT_AMT10,
                     SUM (DECODE (ROWNUM, 9, BILL_AMT, NULL)) AS TOT_AMT10,
                     MAX (DECODE (ROWNUM, 10, CORT_NM, '')) AS MONTH11,
                     MAX (DECODE (ROWNUM, 10, PAYEND_DATE, '')) AS PAYEND_DATE11,
                     SUM (DECODE (ROWNUM, 10, PAY_AMT, NULL)) AS PAY_AMT11,
                     SUM (DECODE (ROWNUM, 10, SALE_AMT, NULL)) AS SALE_AMT11,
                     SUM (DECODE (ROWNUM, 10, LOSS_AMT, NULL)) AS LOSS_AMT11,
                     SUM (DECODE (ROWNUM, 10, INT_AMT, NULL)) AS INT_AMT11,
                     SUM (DECODE (ROWNUM, 10, BILL_AMT, NULL)) AS TOT_AMT11,
                     MAX (DECODE (ROWNUM, 11, CORT_NM, '')) AS MONTH12,
                     MAX (DECODE (ROWNUM, 11, PAYEND_DATE, '')) AS PAYEND_DATE12,
                     SUM (DECODE (ROWNUM, 11, PAY_AMT, NULL)) AS PAY_AMT12,
                     SUM (DECODE (ROWNUM, 11, SALE_AMT, NULL)) AS SALE_AMT12,
                     SUM (DECODE (ROWNUM, 11, LOSS_AMT, NULL)) AS LOSS_AMT12,
                     SUM (DECODE (ROWNUM, 11, INT_AMT, NULL)) AS INT_AMT12,
                     SUM (DECODE (ROWNUM, 11, BILL_AMT, NULL)) AS TOT_AMT12,
                     SUBSTR (MIN (CASE WHEN ROWNUM > 11 THEN CORT_NM END),
                             1,
                             7)
                     || '~'
                     || SUBSTR (MAX (CASE WHEN ROWNUM > 11 THEN CORT_NM END),
                                1,
                                7)
                     || TRIM(SUBSTR (
                                MAX (CASE WHEN ROWNUM > 11 THEN CORT_NM END),
                                8,
                                20
                             ))
                        AS MONTH13,
                     MAX (CASE WHEN ROWNUM > 11 THEN PAYEND_DATE END) AS PAYEND_DATE13,
                     SUM (CASE WHEN ROWNUM > 11 THEN PAY_AMT END) AS PAY_AMT13,
                     SUM (CASE WHEN ROWNUM > 11 THEN SALE_AMT END) AS SALE_AMT13,
                     SUM (CASE WHEN ROWNUM > 11 THEN LOSS_AMT END) AS LOSS_AMT13,
                     SUM (CASE WHEN ROWNUM > 11 THEN INT_AMT END) AS INT_AMT13,
                     SUM (CASE WHEN ROWNUM > 11 THEN BILL_AMT END) AS TOT_AMT13,
                     SUM (PAY_AMT) AS PAY_AMT,
                     SUM (SALE_AMT) AS SALE_AMT,
                     SUM (LOSS_AMT) AS LOSS_AMT,
                     SUM (INT_AMT) AS INT_AMT,
                     SUM (BILL_AMT) AS TOT_AMT
              FROM   (  SELECT   a.*,
                                 DECODE (CORT_CODE,
                                            'RN', '임대료',
                                            'R0', '보증금',
                                            'T2', '소송비',
                                            '기타수입')
                                    AS CORT_NM
                          FROM   VA_BILL_DETAIL a
                         WHERE       BANK_CD = #bankCd#
                                 AND VACCT_NO = #vacctNo#
                                 AND CRT_ID = #cntrctrNo#
                      ORDER BY   PAYEND_DATE DESC) b
          GROUP BY   CRT_ID, BANK_CD, VACCT_NO) d,
         (SELECT   MIN (INTRT) AS MIN_RATIO, MAX (INTRT) AS MAX_RATIO
            FROM   TBPMS_INTRT_INFO a
           WHERE   JOB_SE = 'RN3' AND INTRT_KND = 'PMS' AND INTRT_SE = 'A1')
         e,
         (SELECT   CHRCTR_PREPAR_VALUE_0 AS OPOST_NO,
                   CHRCTR_PREPAR_VALUE_1 AS OADDR1,
                   CHRCTR_PREPAR_VALUE_2 AS OADDR2,
                   '전화:'
                   || (SELECT   CHRCTR_PREPAR_VALUE_0
                         FROM   TBCOM_CMMN_CODE
                        WHERE   GRP_CODE = 'COM027' AND CODE_NM = 'RN')
                      AS OTEL_NO,
                   'FAX :'
                   || (SELECT   CHRCTR_PREPAR_VALUE_1
                         FROM   TBCOM_CMMN_CODE
                        WHERE   GRP_CODE = 'COM027' AND CODE_NM = 'RN')
                      AS OFAX_NO
            FROM   TBCOM_CMMN_CODE A
           WHERE   GRP_CODE = 'COM027' AND CODE = 'RN') f,
         (SELECT   CNTRCTR_NO,
                   (SELECT   CODE_NM
                      FROM   TBCOM_CMMN_CODE
                     WHERE   GRP_CODE = 'COM021' AND CODE = BANK_CODE)
                      AS BANK_NM,
                   ACNUTNO,
                   DPSTR
            FROM   TBPMS_ATCNG
           WHERE   ATCNG_CANCL_DE IS NULL AND JOB_SE = 'RN3') s,
         VI_VA_MAST v
 WHERE       a.CNTRCTR_NO = c.CRT_ID
         AND a.LFSTS_CSTMR_NO = m.LFSTS_CSTMR_NO
         AND A.CNTRCTR_NO = B.CNTRCTR_NO
         AND A.CNTRCT_CO = B.CNTRCTR_CO
         AND c.BANK_CD = d.BANK_CD
         AND c.VACCT_NO = d.VACCT_NO
         AND c.CRT_ID = d.CRT_ID
         AND a.CNTRCTR_NO = s.CNTRCTR_NO(+)
         AND a.CNTRCTR_NO = v.CRT_ID
         <isEqual property="opt" compareValue="1">
         AND v.opt1 = '1'
         </isEqual>
         <isEqual property="opt" compareValue="2">
         AND v.opt2 = '1'
         </isEqual>         
</select>
</sqlMap>