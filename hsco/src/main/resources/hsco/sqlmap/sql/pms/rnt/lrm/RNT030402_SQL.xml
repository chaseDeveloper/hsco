<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RNT030402">

	<!-- 쿼리명 : 청구자료 조회
	설명 : 청구자료 조회
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.09
	-->
	<select id="RNT030402DAO.getList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
  A.LEVY_YM
, A.CNTRCTR_NO
, A.SN
, A.RNTCHRG_THSMON
, A.RSVMNEY_THSMON
, A.OVDINTR_THSMON
, A.RNTCHRG_THSMON + A.RSVMNEY_THSMON + A.OVDINTR_THSMON AS TOTAL_THSMON 
, A.RNTCHRG_NPYM
, A.RSVMNEY_NPYM
, A.OVDINTR_NPYM
, A.RNTCHRG_NPYM + A.RSVMNEY_NPYM + A.OVDINTR_NPYM AS TOTAL_NPYM
, CASE WHEN A.ATCNG_AT = '1' THEN '자동이체 ' ELSE '가상계좌' END ATCNG_AT  
, A.ACNUTNO
, A.REGISTER_ID
, A.REGIST_DT
, A.UPDUSR_ID
, A.UPDT_DT
, B.AREA_SE
, B.DONG
, B.HO
, C.NM
FROM TBRNT_LFSTS_NHT_OUTPT A
   , TBRNT_LFSTS_CNTRCT B
   , TBRNT_LFSTS_CSTMR C
WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
  AND B.LFSTS_CSTMR_NO = C.LFSTS_CSTMR_NO
  AND A.LEVY_YM = #LEVY_YM#
	</select>
	
	<!-- 쿼리명 : 출력자료 생성
	설명 : 출력자료 생성 
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.09
	-->		
<select id="RNT030402DAO.getList1" parameterClass="map" resultClass="hashmap">

SELECT B.AREA_SE AS HOUSE_CODE, B.DONG, B.HO, G.NM,
       DECODE(B.ADRES_DM,'',
              SUBSTR(REPLACE(X.ZIP,'-',''),1,3) || '-' || SUBSTR(REPLACE(X.ZIP,'-',''),4,3) 
              , SUBSTR(REPLACE(B.ZIP_DM,'-',''),1,3) || '-' || SUBSTR(REPLACE(B.ZIP_DM,'-',''),4,3)
             ) AS POSTNO,
       DECODE(B.ADRES_DM,'',TRIM(X.ADRES),TRIM(B.ADRES_DM)) AS ADDR1,
       DECODE(B.ADRES_DM,'',TRIM(X.ADRES_DETAIL),TRIM(B.ADRES_DETAIL_DM)) AS ADDR2,
       A.LEVY_YM , TO_CHAR(TO_DATE(SFCOM_GET_TREDATE(#DATE#)),'YYYY-MM-DD') AS DEDT_DE, 
       '주택(아파트)' AS C_TITLE1, D.AREA_SE_NM AS C_CONT1,
       '납   부   자' AS C_TITLE2, G.NM AS C_CONT2,
       '자동이체코드' AS C_TITLE3,  B.AREA_SE ||'-'|| B.DONG ||'-'|| B.HO AS C_CONT3,
       '기 관  코 드' AS C_TITLE4,'1450000' AS C_CONT4,                 
       '전세임대료' AS A_TITLE1, C.RENT_AMT AS A_AMT1,
       '대손충당금' AS A_TITLE2, C.CHA_AMT AS A_AMT2,
       '연체금액' AS A_TITLE3, C.APAY_AMT AS A_AMT3,
       '  ' AS A_TITLE4, 0 AS A_AMT4,
        C.RENT_AMT + C.CHA_AMT + C.APAY_AMT AS A_AMT5,
        E.MIN_RATIO, E.MAX_RATIO,
        '702-073' AS OPOST_NO , '화성광역시 북구 침산로 73' AS OADDR1 ,'주거복지처' AS OADDR2 , '전화:(053)350-0301~3' OTEL_NO , 'FAX:(053)350-0399' OFAX_NO ,
        DECODE(S.CNTRCTR_NO,'',V.BANK1,'') AS BANK1, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO1,'') AS ACCT_NO1, 
        DECODE(S.CNTRCTR_NO,'',V.BANK2,'') AS BANK2, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO2,'') AS ACCT_NO2, 
        DECODE(S.CNTRCTR_NO,'',V.BANK3,'') AS BANK3, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO3,'') AS ACCT_NO3,
        DECODE(S.CNTRCTR_NO,'',V.BANK4,'') AS BANK4, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO4,'') AS ACCT_NO4, 
        DECODE(S.CNTRCTR_NO,'',V.BANK5,'') AS BANK5, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO5,'') AS ACCT_NO5, 
        DECODE(S.CNTRCTR_NO,'',V.BANK6,'') AS BANK6, DECODE(S.CNTRCTR_NO,'',V.ACCT_NO6,'') AS ACCT_NO6
        , TO_CHAR(TO_DATE(R.REC_DATE), 'YYYY-MM-DD') AS REC_DATE, R.REC_AMT, S.BANK_NM, S.ACNUTNO, S.DPSTR, C.*
        , (SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
                      FROM TBCOM_CMMN_CODE
                     WHERE GRP_CODE = 'PCOM05'
                       AND CODE = '05') AS AUTO_NO
<![CDATA[        
  FROM (SELECT * FROM TBRNT_LFSTS_NHT_OUTPT WHERE LEVY_YM = #LEVY_YM# ) A, 
       TBRNT_LFSTS_CNTRCT B,
       TBRNT_LFSTS_CSTMR G, 
       TBRNT_LFSTS_HOUSE_CNTRCTR X,
       (SELECT CHRCTR_PREPAR_VALUE_1 AS AREA_SE , CODE_NM AS AREA_SE_NM  FROM TBCOM_CMMN_CODE WHERE OLD_GRP_CODE = 'RN004') D,
       (SELECT A.CNTRCTR_NO , MAX(RCIV_DE) AS REC_DATE , SUM(RCIV_AMOUNT) AS REC_AMT
          FROM TBRNT_LFSTS_RCIV A
         WHERE A.RCIV_DE = SFCOM_GET_TREDATE(TO_CHAR(ADD_MONTHS(TO_DATE(#PR_SDATE#), -1),'YYYYMMDD'))
           AND A.RCIV_AMOUNT > 0
           AND RCIV_SE = '2'
        GROUP BY CNTRCTR_NO
        ) R,       
        (SELECT CNTRCTR_NO
     , (SELECT CODE_NM FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'COM021' AND CODE = BANK_CODE) AS BANK_NM
                           , ACNUTNO , DPSTR
                       FROM TBPMS_ATCNG
                      WHERE ATCNG_CANCL_DE IS NULL
                        AND JOB_SE = 'RN3'          
       ) S, 
       (SELECT CNTRCTR_NO,
               SUM(RENT_AMT) AS RENT_AMT, SUM(CHA_AMT) AS CHA_AMT, SUM(APAY_AMT) AS APAY_AMT, SUM(TOT_AMT) AS TOT_AMT,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE1),'YYYY-MM')) AS MONTH1, MAX(TO_CHAR(TO_DATE(PAYEND_DATE1),'YYYY-MM-DD')) AS PAYEND_DATE1,
               SUM(RENT_AMT1) AS RNET_AMT1, SUM(CHA_AMT1) AS CHA_AMT1, SUM(APAY_AMT1) AS APAY_AMT1, 
               SUM(RENT_AMT1+CHA_AMT1+APAY_AMT1) AS TOT_ATM1,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE2),'YYYY-MM')) AS MONTH2, MAX(TO_CHAR(TO_DATE(PAYEND_DATE2),'YYYY-MM-DD')) AS PAYEND_DATE2,
               SUM(RENT_AMT2) AS RNET_AMT2, SUM(CHA_AMT2) AS CHA_AMT2, SUM(APAY_AMT2) AS APAY_AMT2, 
               SUM(RENT_AMT2+CHA_AMT2+APAY_AMT2) AS TOT_ATM2,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE3),'YYYY-MM')) AS MONTH3, MAX(TO_CHAR(TO_DATE(PAYEND_DATE3),'YYYY-MM-DD')) AS PAYEND_DATE3,
               SUM(RENT_AMT3) AS RNET_AMT3, SUM(CHA_AMT3) AS CHA_AMT3, SUM(APAY_AMT3) AS APAY_AMT3, 
               SUM(RENT_AMT3+CHA_AMT3+APAY_AMT3) AS TOT_ATM3,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE4),'YYYY-MM')) AS MONTH4, MAX(TO_CHAR(TO_DATE(PAYEND_DATE4),'YYYY-MM-DD')) AS PAYEND_DATE4,
               SUM(RENT_AMT4) AS RNET_AMT4, SUM(CHA_AMT4) AS CHA_AMT4, SUM(APAY_AMT4) AS APAY_AMT4, 
               SUM(RENT_AMT4+CHA_AMT4+APAY_AMT4) AS TOT_ATM4,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE5),'YYYY-MM')) AS MONTH5, MAX(TO_CHAR(TO_DATE(PAYEND_DATE5),'YYYY-MM-DD')) AS PAYEND_DATE5,
               SUM(RENT_AMT5) AS RNET_AMT5, SUM(CHA_AMT5) AS CHA_AMT5, SUM(APAY_AMT5) AS APAY_AMT5, 
               SUM(RENT_AMT5+CHA_AMT5+APAY_AMT5) AS TOT_ATM5,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE6),'YYYY-MM')) AS MONTH6, MAX(TO_CHAR(TO_DATE(PAYEND_DATE6),'YYYY-MM-DD')) AS PAYEND_DATE6,
               SUM(RENT_AMT6) AS RNET_AMT6, SUM(CHA_AMT6) AS CHA_AMT6, SUM(APAY_AMT6) AS APAY_AMT6, 
               SUM(RENT_AMT6+CHA_AMT6+APAY_AMT6) AS TOT_ATM6,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE7),'YYYY-MM')) AS MONTH7, MAX(TO_CHAR(TO_DATE(PAYEND_DATE7),'YYYY-MM-DD')) AS PAYEND_DATE7,
               SUM(RENT_AMT7) AS RNET_AMT7, SUM(CHA_AMT7) AS CHA_AMT7, SUM(APAY_AMT7) AS APAY_AMT7, 
               SUM(RENT_AMT7+CHA_AMT7+APAY_AMT7) AS TOT_ATM7,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE8),'YYYY-MM')) AS MONTH8, MAX(TO_CHAR(TO_DATE(PAYEND_DATE8),'YYYY-MM-DD')) AS PAYEND_DATE8,
               SUM(RENT_AMT8) AS RNET_AMT8, SUM(CHA_AMT8) AS CHA_AMT8, SUM(APAY_AMT8) AS APAY_AMT8, 
               SUM(RENT_AMT8+CHA_AMT8+APAY_AMT8) AS TOT_ATM82,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE9),'YYYY-MM')) AS MONTH9, MAX(TO_CHAR(TO_DATE(PAYEND_DATE9),'YYYY-MM-DD')) AS PAYEND_DATE9,
               SUM(RENT_AMT9) AS RNET_AMT9, SUM(CHA_AMT9) AS CHA_AMT9, SUM(APAY_AMT9) AS APAY_AMT9, 
               SUM(RENT_AMT9+CHA_AMT9+APAY_AMT9) AS TOT_ATM9,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE10),'YYYY-MM')) AS MONTH10, MAX(TO_CHAR(TO_DATE(PAYEND_DATE10),'YYYY-MM-DD')) AS PAYEND_DATE10,
               SUM(RENT_AMT10) AS RNET_AMT10, SUM(CHA_AMT10) AS CHA_AMT10, SUM(APAY_AMT10) AS APAY_AMT10, 
               SUM(RENT_AMT10+CHA_AMT10+APAY_AMT10) AS TOT_ATM10,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE11),'YYYY-MM')) AS MONTH11, MAX(TO_CHAR(TO_DATE(PAYEND_DATE11),'YYYY-MM-DD')) AS PAYEND_DATE11,
               SUM(RENT_AMT11) AS RNET_AMT11, SUM(CHA_AMT11) AS CHA_AMT11, SUM(APAY_AMT11) AS APAY_AMT11, 
               SUM(RENT_AMT11+CHA_AMT11+APAY_AMT11) AS TOT_ATM11,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE12),'YYYY-MM')) AS MONTH12, MAX(TO_CHAR(TO_DATE(PAYEND_DATE12),'YYYY-MM-DD')) AS PAYEND_DATE12,
               SUM(RENT_AMT12) AS RNET_AMT12, SUM(CHA_AMT12) AS CHA_AMT12, SUM(APAY_AMT12) AS APAY_AMT12, 
               SUM(RENT_AMT12+CHA_AMT12+APAY_AMT12) AS TOT_ATM12,
               MAX(TO_CHAR(TO_DATE(PAYEND_DATE13),'YYYY-MM')) AS MONTH13, MAX(TO_CHAR(TO_DATE(PAYEND_DATE13),'YYYY-MM-DD')) AS PAYEND_DATE13,
               SUM(RENT_AMT13) AS RNET_AMT13, SUM(CHA_AMT13) AS CHA_AMT13, SUM(APAY_AMT13) AS APAY_AMT13, 
               SUM(RENT_AMT13+CHA_AMT13+APAY_AMT13) AS TOT_ATM13
          FROM (       
                SELECT C.CNTRCTR_NO,       
                       RENT_AMT, CHA_AMT, APAY_AMT, RENT_AMT + CHA_AMT + APAY_AMT AS TOT_AMT,
                       DECODE(LEVY_YM,#LEVY_YM#,DEDT_DE,NULL) AS PAYEND_DATE1,        
                       DECODE(LEVY_YM,#LEVY_YM#,RENT_AMT,0) AS RENT_AMT1, 
                       DECODE(LEVY_YM,#LEVY_YM#,CHA_AMT,0)  AS CHA_AMT1, 
                       DECODE(LEVY_YM,#LEVY_YM#,APAY_AMT,0) AS APAY_AMT1, 
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-1),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE2,       
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-1),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT2,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-1),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT2,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-1),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT2,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-2),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE3,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-2),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT3,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-2),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT3,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-2),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT3,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-3),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE4,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-3),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT4,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-3),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT4,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-3),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT4,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-4),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE5,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-4),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT5,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-4),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT5,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-4),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT5,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-5),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE6,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-5),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT6,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-5),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT6,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-5),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT6,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-6),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE7,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-6),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT7,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-6),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT7,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-6),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT7,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-7),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE8,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-7),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT8,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-7),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT8,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-7),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT8,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-8),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE9,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-8),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT9,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-8),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT9,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-8),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT9,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-9),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE10,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-9),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT10,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-9),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT10,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-9),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT10,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-10),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE11,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-10),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT11,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-10),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT11,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-10),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT11,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-11),'YYYYMM') ,DEDT_DE,NULL) AS PAYEND_DATE12,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-11),'YYYYMM') ,RENT_AMT,0) AS RENT_AMT12,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-11),'YYYYMM') ,CHA_AMT,0)  AS CHA_AMT12,
                       DECODE(LEVY_YM,TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-11),'YYYYMM') ,APAY_AMT,0) AS APAY_AMT12,
                       CASE WHEN LEVY_YM <= TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-12),'YYYYMM') THEN DEDT_DE END AS PAYEND_DATE13,
                       CASE WHEN LEVY_YM <= TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-12),'YYYYMM') THEN RENT_AMT ELSE 0 END AS RENT_AMT13,
                       CASE WHEN LEVY_YM <= TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-12),'YYYYMM') THEN CHA_AMT ELSE 0 END AS CHA_AMT13,
                       CASE WHEN LEVY_YM <= TO_CHAR(ADD_MONTHS(TO_DATE(#LEVY_YM# ||'01'),-12),'YYYYMM') THEN APAY_AMT ELSE 0 END AS APAY_AMT13

                  FROM (SELECT CNTRCTR_NO, LEVY_YM, DEDT_DE, 
                               NVL(RNTCHRG_THSMON,0) + NVL(RNTCHRG_RDCAMT,0) AS RENT_AMT,
                               OVDINTR AS APAY_AMT, NVL(RSVMNEY_THSMON,0) + NVL(RSVMNEY_RDCAMT,0) AS CHA_AMT 
                          FROM TBRNT_LFSTS_MT_RNTCHRG C                
                         WHERE C.LEVY_YM <= #LEVY_YM#
                           AND C.RCIV_DE IS NULL
                           AND EXISTS(SELECT 1 FROM VA_BILL V
                                       WHERE CRT_DIV = 'RN'
                                         AND BILL_DIV = 'A'
                                         AND V.CRT_ID = C.CNTRCTR_NO
                                      )
                       ) C
         ) GROUP BY CNTRCTR_NO ) C,
           (SELECT   MIN (INTRT) AS MIN_RATIO,
                     MAX (INTRT) AS MAX_RATIO
              FROM   TBPMS_INTRT_INFO A
             WHERE   APPLC_DE = (SELECT   MAX (APPLC_DE)
                                   FROM   TBPMS_INTRT_INFO B
                                  WHERE   JOB_SE = 'RN3'
                                    AND   INTRT_KND = 'PMS'
                                    AND   INTRT_SE = 'A1')
                AND JOB_SE = 'RN3'
                AND   INTRT_KND = 'PMS'
                AND   INTRT_SE = 'A1' ) E,
       (SELECT * FROM VI_VA_MAST WHERE CRT_DIV = 'RN' AND OPT1 = '1') V  
]]>            
 WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
   AND B.CNTRCTR_NO = C.CNTRCTR_NO      
   AND B.CNTRCTR_NO = X.CNTRCTR_NO
   AND B.CNTRCT_CO = X.CNTRCTR_CO
   AND B.AREA_SE = D.AREA_SE
   AND B.LFSTS_CSTMR_NO = G.LFSTS_CSTMR_NO
   AND EXISTS(SELECT 1 FROM VA_BILL V
               WHERE CRT_DIV = 'RN'
                 AND BILL_DIV = 'A'
                 AND V.CRT_ID = B.CNTRCTR_NO)
   AND B.CNTRCTR_NO = V.CRT_ID
   AND B.CNTRCTR_NO = R.CNTRCTR_NO(+)
   AND B.CNTRCTR_NO = S.CNTRCTR_NO(+)
 ORDER BY 1,2,3   
</select>	

	<!-- 쿼리명 : 일괄납부 생성 프로시저
	설명 : 일괄납부 생성 프로시저
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.16
	-->	
<parameterMap id="sp_va_bill_uid_all" class="java.util.HashMap">
	<parameter property="in_CRT_DIV" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_CORT_DIV" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_APT_CLASS" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_BANK_CD" jdbcType="VARCHAR" javaType="string" mode="IN"  />
	<parameter property="in_CUST_ID" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_billym" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_dec_date" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_tr_date" jdbcType="VARCHAR" javaType="string" mode="IN"  />
	<parameter property="in_tr_sdate" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="in_tr_edate" jdbcType="VARCHAR" javaType="string" mode="IN" />
	<parameter property="S_USER_ID" jdbcType="VARCHAR" javaType="string" mode="IN" />
</parameterMap>	
	
<procedure id="RNT030402DAO.SP_VA_BILL_UID_ALL" parameterMap="sp_va_bill_uid_all">
{ CALL SP_VA_BILL_UID_ALL( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ?)}
</procedure>

	
	<!-- 쿼리명 : 청구자료생성
	설명 : 청구자료생성 
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.09
	-->	
<insert id="RNT030402DAO.listCUD" parameterClass="java.util.Map">
BEGIN

	DELETE TBRNT_LFSTS_NHT_OUTPT
	 WHERE 1=1
	   AND LEVY_YM = #LEVY_YM#
	   ;
	   
	<![CDATA[
	INSERT INTO TBRNT_LFSTS_NHT_OUTPT
	(
	  LEVY_YM
	, CNTRCTR_NO
	, SN
	, RNTCHRG_THSMON
	, OVDINTR_THSMON
	, RSVMNEY_THSMON
	, RNTCHRG_NPYM
	, OVDINTR_NPYM
	, RSVMNEY_NPYM
	, ATCNG_AT
	, ACNUTNO
	, REGISTER_ID
	, REGIST_DT
	, UPDUSR_ID
	, UPDT_DT
	)
	SELECT #LEVY_YM# 
	     , A.CNTRCTR_NO
	     , (SELECT NVL(MAX(SN),0)+1 FROM TBRNT_LFSTS_NHT_OUTPT)
	     , B.RNTCHRG_THSMON
	     , B.OVDINTR_THSMON
	     , B.RSVMNEY_THSMON
	     , B.RNTCHRG_NPYM
	     , B.OVDINTR_NPYM
	     , B.RSVMNEY_NPYM
	     , DECODE(C.ACNUTNO , NULL , '' , '1') AS ATCNG_AT
	     , C.ACNUTNO
	     , #S_USER_ID#
	     , SYSDATE
	     , #S_USER_ID#
	     , SYSDATE     
	FROM TBRNT_LFSTS_CNTRCT A
	    , (SELECT CNTRCTR_NO,
	               SUM(CASE WHEN LEVY_YM = #LEVY_YM# THEN RNTCHRG_THSMON + NVL(RNTCHRG_RDCAMT,0) ELSE 0 END) RNTCHRG_THSMON,
	               SUM(CASE WHEN LEVY_YM = #LEVY_YM# THEN OVDINTR ELSE 0 END) OVDINTR_THSMON,
	               SUM(CASE WHEN LEVY_YM = #LEVY_YM# THEN RSVMNEY_THSMON + NVL(RSVMNEY_RDCAMT,0) ELSE 0 END) RSVMNEY_THSMON,
	               SUM(CASE WHEN LEVY_YM < #LEVY_YM# THEN RNTCHRG_THSMON + NVL(RNTCHRG_RDCAMT,0) ELSE 0 END) RNTCHRG_NPYM,
	               SUM(CASE WHEN LEVY_YM < #LEVY_YM# THEN OVDINTR ELSE 0 END) OVDINTR_NPYM,
	               SUM(CASE WHEN LEVY_YM < #LEVY_YM# THEN RSVMNEY_THSMON + NVL(RSVMNEY_RDCAMT,0) ELSE 0 END) RSVMNEY_NPYM
	          FROM TBRNT_LFSTS_MT_RNTCHRG
	         WHERE LEVY_YM <= #LEVY_YM#
	           AND RCIV_DE IS NULL
	         GROUP BY CNTRCTR_NO) B
	   , (SELECT CNTRCTR_NO, MAX(ACNUTNO) AS ACNUTNO
	          FROM TBPMS_ATCNG d
	         WHERE ATCNG_CANCL_DE IS NULL
	           AND JOB_SE = 'RN3'
	             GROUP BY CNTRCTR_NO) C  
	   , (SELECT CHRCTR_PREPAR_VALUE_1 AS AREA_SE , CODE_NM FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'RNT004') D
	]]>   
	WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
	  AND A.CNTRCTR_NO = C.CNTRCTR_NO(+)
	  AND A.AREA_SE = D.AREA_SE              
	  AND NOT EXISTS( SELECT 1 FROM TBRNT_LFSTS_RESCI_TRMNAT Z WHERE A.CNTRCTR_NO = Z.CNTRCTR_NO AND A.CNTRCT_CO = Z.CNTRCTR_CO)
	  ;

END;	                    
</insert>


</sqlMap>