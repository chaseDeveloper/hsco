<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SLS000000_SQL">

<!--
SQL File Name : SLS000000_SQL.xml
Description : 판매공통
Modification Information
수정일			수정자		Version	Query Id
2015.08.26	이상준		1.0		최초 생성
-->
	
	<!-- 쿼리명 : 주택코드 목록 조회
	설명 : 주택코드 코드 목록 조회
	수정일  		수정자  	수정내용
	2015.08.26	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.26 
	-->
	<select id="SLS000000DAO.selectHouseCodeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectHouseCodeList 주택코드 목록 조회 */
		       a.HOUSE_CODE											/* 주택코드 */
		     , a.HOUSE_NM											/* 주택명 */
		     , '['||a.HOUSE_CODE||']'||a.HOUSE_NM AS ALL_HOUSE_NM	/* [주택코드]주택명 */
		     , a.HOUSE_SE											/* 주택구분 */
		     , a.USE_AT												/* 사용여부 */
		  FROM TBSLS_HOUSE_INFO a			/* 주택정보 */
		 WHERE 1 = 1
		 
 	   <isNotEmpty property="HOUSE_SE">
         <isNotEmpty property="HOUSE_SE_LIST">
           /* 주택구분(S1,S3,S5,S9/S2,S4), 분양전환구분(HOU013 : 01(전환대기), 02(분양전환)) */
           <iterate property="HOUSE_SE_LIST" open="AND (a.HOUSE_SE IN (" close=") " conjunction=",">
           #HOUSE_SE_LIST[]#
           </iterate>
           OR a.LTTOT_CNVRS_SE = #LTTOT_CNVRS_SE#
           )
         </isNotEmpty>
         <isEmpty property="HOUSE_SE_LIST">
           AND (a.HOUSE_SE = #HOUSE_SE# OR a.LTTOT_CNVRS_SE = #LTTOT_CNVRS_SE#)
         </isEmpty>
       </isNotEmpty>
       <isEmpty property="HOUSE_SE">
       	   AND a.LTTOT_CNVRS_SE = #LTTOT_CNVRS_SE#
       </isEmpty>
		 <isNotEmpty property="USE_AT">
		   AND a.USE_AT = #USE_AT#					/* 사용여부(0:미사용, 1:사용) */
		 </isNotEmpty>
		 ORDER BY a.HOUSE_CODE
    </select>	

	<!-- 쿼리명 : 주택코드별 동 목록 조회
	설명 : 주택코드별 동 목록 조회
	수정일  		수정자  	수정내용
	2015.08.27	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.27
	-->
	<select id="SLS000000DAO.selectHouseDongList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectHouseDongList 주택코드별 동 목록 조회 */
		       a.HOUSE_CODE					/* 주택코드 */
		     , a.DONG						/* 동 */
		     , a.DONG || '동' AS DONG_NM		/* 동 */
		  FROM TBSLS_HOUSE_DONG_HO a		/* 주택동호 */
		 WHERE 1 = 1
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#	/* 주택코드 */
		 </isNotEmpty>
		 GROUP BY a.HOUSE_CODE
		        , a.DONG
		 ORDER BY a.DONG
    </select>
    
    <!-- 쿼리명 : 주택코드/동별 호 목록 조회
	설명 : 주택코드/동별 호 목록 조회
	수정일  		수정자  	수정내용
	2015.08.27	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.27
	-->
	<select id="SLS000000DAO.selectHouseHoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectHouseHOList 주택코드/동별 호 목록 조회 */
			   a.HOUSE_CODE					/* 주택코드 */
		     , a.DONG						/* 동 */
		     , a.HO							/* 호 */
		     , a.HO || '호' AS HO_NM			/* 호 */
		  FROM TBSLS_HOUSE_DONG_HO a		/* 주택동호 */
		 WHERE 1 = 1
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#	/* 주택코드 */
		 </isNotEmpty>
		 <isNotEmpty property="DONG">
		   AND a.DONG = #DONG#				/* 동 */
		 </isNotEmpty>
		 ORDER BY a.HO
    </select>

	<!-- 쿼리명 : 주택코드별 동-호 목록 조회
	설명 : 주택코드별 동-호 목록 조회
	수정일  		수정자  	수정내용
	2015.08.27	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.27
	-->
	<select id="SLS000000DAO.selectHouseDongHoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectHouseDongHoList 주택코드별 동-호 목록 조회 */
			   a.HOUSE_CODE						/* 주택코드 */
		     , a.DONG							/* 동 */
		     , a.HO								/* 호 */
		     , a.DONG || '-' || A.HO AS DONG_HO	/* 동-호 */
		     , a.HOUSE_TY_CODE					/* 주택타입코드 */
		  FROM TBSLS_HOUSE_DONG_HO a			/* 주택동호 */
		 WHERE 1 = 1
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#		/* 주택코드 */
		 </isNotEmpty>
		 ORDER BY a.DONG
		        , a.HO
    </select>
    
    <!-- 쿼리명 : 주택코드별 평형 목록 조회
	설명 : 주택코드별 평형 목록 조회
	수정일  		수정자  	수정내용
	2015.08.27	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.27
	-->
	<select id="SLS000000DAO.selectHouseAeaList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectHouseAeaList 주택코드별 평형 목록 조회 */
			   a.HOUSE_CODE				/* 주택코드 */
		     , a.AEA					/* 평형 */
		     , a.AEA AS AEA_NM	/* 평형 */
		  FROM TBSLS_HOUSE_TY a			/* 주택타입 */
		 WHERE 1 = 1
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#
		 </isNotEmpty>
		 GROUP BY a.HOUSE_CODE
		        , a.AEA
		 ORDER BY a.AEA
    </select>
    
    <!-- 쿼리명 : 주택코드별 타입평수 목록 조회
	설명 : 주택코드별 타입평수 목록 조회
	수정일  		수정자  	수정내용
	2015.08.27	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.27
	-->
	<select id="SLS000000DAO.selectHouseTyAeaList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    SELECT /* SLS000000DAO.selectHouseTyAeaList 주택코드별 타입평수 목록 조회 */
	    	   DISTINCT a.TY_AEA		/* 타입평수 */
			 , a.TY_AEA AS TY_AEA_NM	/* 타입평수명 */
		  FROM TBSLS_HOUSE_TY a			/* 주택타입 */
		 WHERE 1 = 1
		 <isNotEmpty property="HOUSE_CODE">
		   AND a.HOUSE_CODE = #HOUSE_CODE#
		 </isNotEmpty>
		 ORDER BY a.TY_AEA
	</select>
    
    <!-- 쿼리명 : 주택계약 고객 조회 팝업
	설명 : 주택계약 고객 조회 팝업 조회
	수정일  		수정자  	수정내용
	2016.08.02	이광원		최초생성
	작성자 : 이광원
	최초작성일 : 2016.08.02
	-->
	<select id="SLS000000DAO.selectHOUcntrctr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.CNTRCTR_NO
		     , A.HOUSE_CODE
		     , A.DONG
		     , A.HO
		     , A.DONG || '동 ' || A.HO || '호' AS DONG_HO
		     , A.HOUSE_CSTMR_NO
		     , B.CSTMR_NM
		     , C.HOUSE_SE
		     , C.HOUSE_NM
		     , '[' || C.HOUSE_CODE || ']' || C.HOUSE_NM AS ALL_HOUSE_NM
		  FROM TBSLS_HCNTRCTR A
		  JOIN TBSLS_HOUSE_CSTMR B ON A.HOUSE_CSTMR_NO = B.HOUSE_CSTMR_NO
		  JOIN TBSLS_HOUSE_INFO C ON A.HOUSE_CODE = C.HOUSE_CODE
		 WHERE A.HOUSE_CODE LIKE #HOUSE_CODE# || '%'
		   AND B.CSTMR_NM LIKE #CSTMR_NM# || '%'
		 ORDER BY 1,2,3,4
	</select>    
	
	
        <!-- 쿼리명 : 토지계약 고객 조회 팝업
	설명 : 토지계약 고객 조회 팝업 조회
	수정일  		수정자  	수정내용
	2016.08.04	이광원		최초생성
	작성자 : 이광원
	최초작성일 : 2016.08.04
	-->
	<select id="SLS000000DAO.selectLADcntrctr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT A.CNTRCTR_NO
             , A.LAD_CODE
             , A.BLCK
             , A.LOT
             , A.LOT_TY
             , A.LAD_CSTMR_NO
             , B.CSTMR_NM
             , C.LAD_NM
             , '[' || C.LAD_CODE || ']' || C.LAD_NM AS ALL_LAD_NM
          FROM TBSLS_LCNTRCTR A
          JOIN TBSLS_LAD_CSTMR B ON A.LAD_CSTMR_NO = B.LAD_CSTMR_NO
          JOIN TBSLS_LAD_INFO C ON A.LAD_CODE = C.LAD_CODE
         WHERE A.LAD_CODE LIKE #LAD_CODE# || '%'
           AND B.CSTMR_NM LIKE '%' || #CSTMR_NM# || '%'
         ORDER BY 1,2,3,4
	</select> 
	
	
    <!-- 쿼리명 : 주택 계약자 목록 조회
	설명 : 주택 계약자 목록 조회
	수정일  		수정자  	수정내용
	2015.08.31	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.08.31
    -->
    <select id="SLS000000DAO.selectHcntrctrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	WITH V_SLS_HCNTRCTR AS
		(
		<include refid="COM000000.v_sls_hcntrctr_info"/>
		)
		SELECT /* SLS000000DAO.selectHcntrctrList 주택 계약자 목록 조회 */
			   '0' AS CHK				/* 체크(예비) */
			 , a1.HOUSE_CODE			/* 주택_주택코드 */
		     , a1.HOUSE_NM				/* 주택_주택명 */
		     , '['||a1.HOUSE_CODE||']'||a1.HOUSE_NM AS ALL_HOUSE_NM	/* [주택코드]주택명 */
		     , a1.HOUSE_SE				/* 주택_주택구분 */
		     , SFCOM_CODE_NM('HOU0A2', a1.HOUSE_SE, 'CODE_NM') AS HOUSE_SE_NM
		     , a1.LTTOT_CNVRS_SE		/* 주택_분양전환구분 */
		     , a1.LTTOT_CNVRS_DE		/* 주택_분양전환일자 */
		     , a1.USE_AT				/* 주택_사용여부 */
		     , a1.HOUSE_TY_CODE			/* 타입_주택타입코드 */
		     , a1.HOUSE_TY_NM			/* 타입_주택타입명 */
		     , a1.INC_LIMIT 			/* 임대증액한도액 */
		     , a1.AEA					/* 타입_평형 */
		     , a1.TY_AEA				/* 타입_타입평수 */
		     , a1.SUPLY_AMOUNT			/* 타입_공급가액 */
		     , a1.VAT					/* 타입_부가세 */
		     , a1.PLOT_CT				/* 타입_대지비용 */
		     , a1.BILDNG_CT				/* 타입_건축비용 */
		     , a1.DONG					/* 동호_동 */
		     , a1.HO					/* 동호_호 */
		     , a1.DONG||'-'||a1.HO AS DONG_HO	/* 동호_동-호 */
		     , a1.LTTOT_TY_CODE			/* 동호_분양타입코드 */
		     , a1.BASS_LTTOT_AMOUNT		/* 동호_기본분양금액 */
		     , a1.BASS_GTN				/* 동호_기본보증금 */
		     , a1.BASS_RNTCHRG			/* 동호_기본임대료 */
		     , a1.LTTOT_AMOUNT			/* 동호_분양금액 */
		     , a1.RNTCHRG				/* 동호_임대료 */
		     , a1.GTN					/* 동호_보증금 */
		     , a1.CNTRCTR_NO			/* 계약자_계약자번호 */
		     , a1.CSTMR_NM				/* 계약자_성명 */
		     , a1.CSTMR_NM_ALL			/* 계약자명_전체 */
		     , a1.IHIDNUM				/* 계약자_주민번호 */
		     , a1.TELNO 
			 , a1.MBTLNO
		     , a1.SU_NM					/* 계약자_배우자 */
		     , a1.RENT_LTTOT_CNVRS_DE	/* 계약자_임대분양전환일자 */
		     , a1.RENT_BGNDE			/* 계약자_임대시작일자 */
             , a1.RENT_ENDDE			/* 계약자_임대종료일자 */
		     , a1.CNTRCTR_STTUS_CODE	/* 계약자_계약자상태코드 */
		     , a1.RENT_LTTOT_USE_AT		/* 임대분양사용여부 */
		     , a1.ZIP
		     , a1.ADRES
		     , a1.ADRES_DETAIL
		  FROM (
		  		SELECT a.HOUSE_CODE				/* 주택_주택코드 */
		             , a.HOUSE_NM				/* 주택_주택명 */
		             , a.HOUSE_SE				/* 주택_주택구분 */
		             , a.LTTOT_CNVRS_SE			/* 주택_분양전환구분 */
		             , a.LTTOT_CNVRS_DE			/* 주택_분양전환일자 */
		             , a.USE_AT					/* 주택_사용여부 */
		             , b.HOUSE_TY_CODE			/* 타입_주택타입코드 */
		             , b.HOUSE_TY_NM			/* 타입_주택타입명 */
		             , b.INC_LIMIT 			    /* 임대증액한도액 */		             
		             , b.AEA					/* 타입_평형 */
		             , b.TY_AEA
		             , b.SUPLY_AMOUNT			/* 타입_공급가액 */
		             , b.VAT					/* 타입_부가세 */
		             , b.PLOT_CT				/* 타입_대지비용 */
		             , b.BILDNG_CT				/* 타입_건축비용 */
		             , c.DONG					/* 동호_동 */
		             , c.HO						/* 동호_호 */
		             , c.LTTOT_TY_CODE			/* 동호_분양타입코드 */
		             , c.BASS_LTTOT_AMOUNT		/* 동호_기본분양금액 */
		             , c.BASS_GTN				/* 동호_기본보증금 */
		             , c.BASS_RNTCHRG			/* 동호_기본임대료 */
		             , c.LTTOT_AMOUNT			/* 동호_분양금액 */
		             , c.RNTCHRG				/* 동호_임대료 */
		             , c.GTN					/* 동호_보증금 */
		             , d.CNTRCTR_NO				/* 계약자_계약자번호 */
					 , d.CSTMR_NM				/* 계약자_성명 */
					 , DECODE(d.CNTRCTR_NO, NULL, '', d.CSTMR_NM||' ['||d.CNTRCTR_NO||']') AS CSTMR_NM_ALL	/* 계약자명_전체 */
					 , d.IHIDNUM				/* 계약자_주민번호 */
					 , d.TELNO 
			 		 , d.MBTLNO
		             , d.SU_NM					/* 계약자_배우자 */
		             , d.RENT_LTTOT_CNVRS_DE	/* 계약자_임대분양전환일자 */
		             , d.RENT_BGNDE				/* 계약자_임대시작일자 */
               		 , d.RENT_ENDDE				/* 계약자_임대종료일자 */
		             , d.CNTRCTR_STTUS_CODE		/* 계약자_계약자상태코드 */
		             , DECODE(d.RENT_LTTOT_CNVRS_DE, NULL, 'Y', 'N') AS RENT_LTTOT_USE_AT	/* 임대분양사용여부 */
		             , d.ZIP
		             , d.ADRES
		             , d.ADRES_DETAIL
		          FROM TBSLS_HOUSE_INFO a		/* 주택정보 */
		             , TBSLS_HOUSE_TY b         /* 주택타입 */
		             , TBSLS_HOUSE_DONG_HO c    /* 주택동호 */
		             , V_SLS_HCNTRCTR d			/* 계약자정보 목록 */
		         WHERE 1=1
		           AND a.HOUSE_CODE = c.HOUSE_CODE
		           AND c.HOUSE_CODE = b.HOUSE_CODE(+)
		           AND c.HOUSE_TY_CODE = b.HOUSE_TY_CODE(+)
		           
		           AND c.HOUSE_CODE = d.HOUSE_CODE(+)
		           AND c.DONG = d.DONG(+)
		           AND c.HO = d.HO(+)
		           
		           AND a.USE_AT = '1'    		/* 주택_사용여부(사용) */
		           
		           
		           /* 조회조건 */
		     <isNotEmpty property="HOUSE_SE">
		     
				<!-- 
		       <isNotEmpty property="HOUSE_SE_LIST">
		         /* 주택구분(S1,S3,S5,S9/S2,S4), 분양전환구분(HOU013 : 01(전환대기), 02(분양전환)) */
		         <iterate property="HOUSE_SE_LIST" open="AND (a.HOUSE_SE IN (" close=") OR a.LTTOT_CNVRS_SE = '02')" conjunction=",">
		           #HOUSE_SE_LIST[]#
		         </iterate>
		       </isNotEmpty>
				 -->
				 
		       <!-- <isEmpty property="HOUSE_SE_LIST">-->
		       		<isEqual property="HOUSE_SE" compareValue="S1,S3"> <!-- 분양계약 -->
		       			AND (a.HOUSE_SE IN ('S1', 'S3') OR (a.HOUSE_SE in('S2','S4') and a.LTTOT_CNVRS_SE = '02'))
		       		</isEqual>
		       		<isEqual property="HOUSE_SE" compareValue="S2,S4"> <!-- 임대계약 -->
		       			  AND a.HOUSE_SE in('S2','S4') <!-- and nvl(a.LTTOT_CNVRS_SE,'01') !='02'  -->
		       		</isEqual>
		       <!-- </isEmpty>-->
		       
		       
		       
	         </isNotEmpty>

	         <isEmpty property="HOUSE_SE">
	         	   AND a.LTTOT_CNVRS_SE = '02'
	         </isEmpty>
	         	   
<!-- 		     <isEqual property="HOUSE_SE" compareValue="S2,S4">
		   		   AND d.RENT_LTTOT_CNVRS_DE IS NULL
		     </isEqual> -->
	         
		     <isNotEmpty property="CNTRCTR_STTUS_AT">
		           AND d.CANCL_DE IS NOT NULL	/* 계약자상태코드(HOU0A3) : 01(정상계약), 02(정상해지) */
		     </isNotEmpty>
		      
		      
		     <isNotEmpty property="HOUSE_CODE">
		           AND a.HOUSE_CODE = #HOUSE_CODE#	/* 주택코드 */
		     </isNotEmpty>
		     
		     <isNotEmpty property="DONG">
		           AND c.DONG LIKE LPAD(#DONG#,4,'0') /* 동 */
		     </isNotEmpty>
		     
		     <isNotEmpty property="HO">
		   		   AND c.HO LIKE LPAD(#HO#,4,'0')  /* 호 */
		     </isNotEmpty>
		     
		     <isNotEmpty property="AEA">
		           AND b.AEA(+) = #AEA#				/* 평형 */
		     </isNotEmpty>
			 
			 <isNotEmpty property="HOUSE_AEA">
                 AND b.AEA like  '%' || #HOUSE_AEA# || '%'
             </isNotEmpty>
          
			 <isNotEmpty property="CSTMR_NM">
				   AND (d.CSTMR_NM LIKE '%'||#CSTMR_NM#||'%' OR d.SU_NM LIKE '%'||#CSTMR_NM#||'%')	/* 성명(계약자 OR 배우자) */
			 </isNotEmpty>
		     
		     <isNotEmpty property="CSTMR_NO">
		           AND D.HOUSE_CSTMR_NO = #CSTMR_NO#				
		     </isNotEmpty>				 
		     
				 ORDER BY a.HOUSE_CODE, c.DONG, c.HO
			   ) a1
	     WHERE 1=1
	   <isNotEmpty property="RENT_LTTOT_CNVRS_AT">
	     <isEqual property="RENT_LTTOT_CNVRS_AT" compareValue="N">
	       <!-- 임대분양전환일자가 null인 계약자 -->
	       AND a1.RENT_LTTOT_CNVRS_DE IS NULL		/* 계약자_임대분양전환일자 */
	     </isEqual>
	   </isNotEmpty>
	   
	   
	   <isNotEmpty property="EMPTY_CODE">
		   <isEqual property="EMPTY_CODE" compareValue="Y">
		       <!-- 공가만 검색 -->
		      AND a1.CNTRCTR_NO is null
		     </isEqual> 	
	   </isNotEmpty>
	   
	   <isNotEmpty property="CNTRCTR_STTUS_AT">
	   	 /* 순수 계약자/해약자 정보만 조회시 적용 */
		 <isEqual property="CNTRCTR_STTUS_AT" compareValue="Y">
		   AND a1.CNTRCTR_STTUS_CODE = #CNTRCTR_STTUS_CODE#
		 </isEqual> 
	   </isNotEmpty> -->
	   
    </select>
    
    <!-- 쿼리명 : 토지코드 목록 조회
	설명 : 토지코드 코드 목록 조회	- 콤보등 기초 자료
	수정일  		수정자  	수정내용
	2015.09.16	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.09.16
	-->
	<select id="SLS000000DAO.selectLadCodeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* 토지코드 목록 조회 */
			  '0' AS CHK				/* 체크(예비) */
			, a.LAD_CODE                /* 토지코드 */
			, a.LAD_NM                  /* 토지명 */
			, '['||a.LAD_CODE||']'||a.LAD_NM AS ALL_LAD_NM        /* 토지명 */
			, a.ACQS_AMOUNT             /* 취득금액 */
			, a.USE_AT                  /* 사용여부 */
			, a.BSNS_CODE               /* 사업코드 */
			, a.LOCPLC_ZIP              /* 소재지우편번호 */
			, a.LOCPLC_BASS_ADRES       /* 소재지기본주소 */
			, a.OPERTN_BGNDE            /* 시행시작일 */
			, a.OPERTN_ENDDE            /* 시행종료일 */
			, a.PLAN_CONFM_NTFC_DE_1    /* 계획승인고시일자1 */
			, a.PLAN_CONFM_NTFC_DE_2    /* 계획승인고시일자2 */
			, a.LTTOT_BSNS_CODE         /* 분양사업코드 */
			, a.RENT_BSNS_CODE          /* 임대사업코드 */
			, a.PRPOS_CODE              /* 용도코드 */
			, a.READNG_AT               /* 열람여부 */
			, a.HMPG_USE_AT             /* 홈페이지사용여부 */
			, a.REGISTER_ID             /* 등록자ID */
			, a.REGIST_DT               /* 등록일시 */
			, a.UPDUSR_ID               /* 수정자ID */
			, a.UPDT_DT                 /* 수정일시 */
			, a.BSNS_TY                 /* 사업타입 */
			, a.LOCPLC_DETAIL_ADRES     /* 소재지상세주소 */
			, a.LOCPLC_ZIP_LNM          /* 소재지우편번호지번 */
			, a.LOCPLC_BASS_ADRES_LNM   /* 소재지기본주소지번 */
			, a.LOCPLC_DETAIL_ADRES_LNM /* 소재지상세주소지번 */
		  FROM TBSLS_LAD_INFO a          /* 토지정보 */
		 WHERE 1 = 1
		 <isNotEmpty property="USE_AT">
		   AND USE_AT = #USE_AT#         /* 사용여부 */
		 </isNotEmpty>
		 ORDER BY a.LAD_CODE		 
    </select>
    
    <!-- 쿼리명 : 토지상세정보 목록 조회
	설명 : 토지상세정보 목록 조회
	수정일  		수정자  	수정내용
	2015.09.16	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2015.09.17
	-->
	<select id="SLS000000DAO.selectLadDetailList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH V_LCNTRCTR AS
		(
		<include refid="COM000000.v_sls_lcntrctr_info"/>
		)
		SELECT /* SLS000000DAO.selectLadDetailList 토지상세정보 목록 조회 */
			   '0' AS CHK					/* 체크(예비) */
			 , a1.LAD_CODE					/* 토지코드 */
             , a1.BLCK						/* 블록 */
             , a1.LOT						/* 롯트 */
             , a1.LOT_TY					/* 롯트타입 */
             , a1.LAD_SE					/* 토지구분 */
             , a1.LOCPLC_ZIP				/* 소재지우편번호 */
             , a1.LOCPLC_BASS_ADRES			/* 소재지기본주소 */
             , a1.LOCPLC_DETAIL_ADRES		/* 소재지상세주소 */
             , a1.LOCPLC_ZIP_LNM			/* 소재지우편번호지번 */
             , a1.LOCPLC_BASS_ADRES_LNM		/* 소재지기본주소지번 */
             , a1.LOCPLC_DETAIL_ADRES_LNM	/* 소재지상세주소지번 */
             , a1.PRPOS_SE					/* 용도구분 */
             , a1.CLASSIFICATION_SE			/* 급지구분 */
             , a1.CNTNT_SE					/* 목차구분 */
             , a1.BGNN_AR					/* 당초면적[권리면적] */
             , a1.BGNN_UNTPC				/* 당초단가 */
             , a1.BGNN_AMOUNT				/* 당초금액[권리금액] */
             , a1.PLAN_AMOUNT               /* 예정금액 */
             , a1.DCSN_AR					/* 확정면적 */
             , a1.DCSN_UNTPC				/* 확정단가 */
             , a1.DCSN_AMOUNT				/* 확정금액 */
             , a1.REMVL_FLFL_GTN			/* 철거이행보증금 */
             , a1.RENT_GTN					/* 임대보증금 */
             , a1.FYER_RNTCHRG				/* 연간임대료 */
             , a1.ATCH_FLPTH				/* 첨부파일경로 */
             , a1.FILE_SN					/* 파일일련번호 */
             , a1.FILE_ORDR					/* 파일순차번호 */
             , j1.FILE_EXTSN				/* 파일확장자 */
             , j1.ORGINL_FILE_NM			/* 원본 파일명 */
             , REGEXP_SUBSTR(j1.FILE_TY, '[^/]+', 1, 1) AS FILE_TY	/* 파일유형 */
             , a1.ATCH_FILE					/* 첨부파일 */
             , a1.RM						/* 비고 */
             , a1.REMNDR_LAD_SE				/* 잔여토지구분 */
		     , a1.SUPLY_CODE				/* 공급코드 */
		     , a1.CNTRCT_STTUS				/* 계약상태 */
		     , a1.BDNBR						/* 건물번호 */
		     , a1.ALL_AR					/* 전체면적 */
		     , a1.REAL_BLCK					/* 실제블록 */
		     , a1.REAL_LOT					/* 실제롯트 */
		     , a1.REAL_LOT_TY				/* 실제롯트타입 */
		     , a1.CNTRCTR_NO				/* 토지계약자번호 */
		     , a1.LAD_CSTMR_NO				/* 토지고객번호 */
		     , a1.CSTMR_NM						/* 토지계약자_성명 */
		     , a1.ALL_NM					/* 계약자번호 성명 */
		     , b1.LAD_NM					/* 토지명 */
		     , '['||a1.LAD_CODE||'] '||b1.LAD_NM AS ALL_LAD_NM										/* 토지코드 토지명 */
		   	 , DECODE(a1.PRPOS_SE, NULL, '', '['||a1.PRPOS_SE||'] '||d1.CODE_NM) AS PRPOS_SE_NM		/* 토지용도구분 */
		     , DECODE(a1.CNTNT_SE, NULL, '' ,'['||a1.CNTNT_SE||'] '||e1.CODE_NM) AS CNTNT_SE_NM		/* 토지목차구분 */
		     , DECODE(a1.LAD_SE, NULL, '', '['||a1.LAD_SE||'] '||c1.CODE_NM) AS LAD_SE_NM			/* 토지구분 */
		     , DECODE(a1.CLASSIFICATION_SE, NULL, '', '['||a1.CLASSIFICATION_SE||'] '||f1.CODE_NM) AS CLASSIFICATION_SE_NM	/* 토지급지구분 */
		     , DECODE(a1.REMNDR_LAD_SE, NULL, '', '['||a1.REMNDR_LAD_SE||'] '||g1.CODE_NM) AS REMNDR_LAD_SE_NM				/* 잔여토지구분 */
		     , DECODE(a1.SUPLY_CODE, NULL, '', '['||a1.SUPLY_CODE||'] '||h1.CODE_NM) AS SUPLY_CODE_NM						/* 공급코드구분 */
		     , DECODE(a1.CNTRCT_STTUS, NULL, '', '['||a1.CNTRCT_STTUS||'] '||i1.CODE_NM) AS CNTRCT_STTUS_NM					/* 계약상태 */
		     , a1.LOCPLC_BASS_ADRES||' '||a1.LOCPLC_DETAIL_ADRES AS ALL_ADDR												/* 전체 주소 */
		     , (SELECT '[' || z.CLASSIFICATION_SE || '] ' || z.CLASSIFICATION_UNTPC		/* 급지구분 급지단가 */
		          FROM TBSLS_LAD_CL_UNTPC z  	/* 토지급지별 단가 */
		         WHERE z.LAD_CODE = a1.LAD_CODE	/* 토지코드 */
		           AND z.CLASSIFICATION_SE = a1.CLASSIFICATION_SE	/* 급지구분 */
		       ) AS CLASSIFICATION_UNTPC	/* 급지구분 단가 */
		     , a1.BLCK_SUM					/* 블럭검색 */
		  FROM (SELECT a.LAD_CODE					/* 토지코드 */
		             , a.BLCK						/* 블록 */
		             , a.LOT						/* 롯트 */
		             , a.LOT_TY						/* 롯트타입 */
		             , a.LAD_SE						/* 토지구분 */
		             , a.LOCPLC_ZIP					/* 소재지우편번호 */
		             , a.LOCPLC_BASS_ADRES			/* 소재지기본주소 */
		             , a.LOCPLC_DETAIL_ADRES		/* 소재지상세주소 */
		             , a.LOCPLC_ZIP_LNM				/* 소재지우편번호지번 */
		             , a.LOCPLC_BASS_ADRES_LNM		/* 소재지기본주소지번 */
		             , a.LOCPLC_DETAIL_ADRES_LNM	/* 소재지상세주소지번 */
		             , a.PRPOS_SE					/* 용도구분 */
		             , a.CLASSIFICATION_SE			/* 급지구분 */
		             , a.CNTNT_SE					/* 목차구분 */
		             , a.BGNN_AR					/* 당초면적[권리면적] */
<!-- 		             , a.BGNN_UNTPC					/* 당초단가 */ -->
		             , TRUNC((NULLIF(a.BGNN_AMOUNT,0) / NULLIF(a.BGNN_AR,0)),2)  AS BGNN_UNTPC
		             , a.BGNN_AMOUNT				/* 당초금액[권리금액] */
		             , a.PLAN_AMOUNT                /* 예정금액 */
		             , a.DCSN_AR					/* 확정면적 */
		             , a.DCSN_UNTPC					/* 확정단가 */
		             , a.DCSN_AMOUNT				/* 확정금액 */
		             , a.REMVL_FLFL_GTN				/* 철거이행보증금 */
		             , a.RENT_GTN					/* 임대보증금 */
		             , a.FYER_RNTCHRG				/* 연간임대료 */
		             , a.ATCH_FLPTH					/* 첨부파일경로 */
		             , a.FILE_SN                    /* 파일일련번호 */
		             <!-- , REGEXP_SUBSTR(a.ATCH_FLPTH, '[^|]+', 1, 1) AS FILE_SN -->	/* 파일일련번호 */
     		 		 , REGEXP_SUBSTR(a.ATCH_FLPTH, '[^|]+', 1, 2) AS FILE_ORDR	/* 파일순차번호 */
		             , a.ATCH_FILE					/* 첨부파일 */
		             , a.RM							/* 비고 */
		             , a.REMNDR_LAD_SE				/* 잔여토지구분 */
		             , a.SUPLY_CODE					/* 공급코드 */
		             , a.CNTRCT_STTUS				/* 계약상태 */
		             , a.BDNBR						/* 건물번호 */
		             , a.ALL_AR						/* 전체면적 */
		             , a.REAL_BLCK					/* 실제블록 */
		             , a.REAL_LOT					/* 실제롯트 */
		             , a.REAL_LOT_TY				/* 실제롯트타입 */
		             , b.CNTRCTR_NO					/* 토지계약자번호 */
		             , b.LAD_CSTMR_NO				/* 토지고객번호 */
		             , b.CSTMR_NM							/* 토지계약자_성명 */
		             , DECODE(b.CNTRCTR_NO, NULL, '', '['||b.CNTRCTR_NO ||'] '||b.CSTMR_NM) AS ALL_NM	/* 계약자번호 성명 */
		             , LPAD(a.BLCK, 3,'0')||LPAD(a.LOT, 3, '0')||LPAD(a.LOT_TY, 2, '0') AS BLCK_SUM	/* 조회용 B.L.T 값 */
		          FROM TBSLS_LAD_DETAIL_INFO a		/* 토지상세정보 */
		             , V_LCNTRCTR b					/* 토지계약자정보 */
		         WHERE 1 = 1
		           AND a.LAD_CODE = b.LAD_CODE(+)	/* 토지코드 */
		           AND a.BLCK = b.BLCK(+)			/* 블록 */
		           AND a.LOT = b.LOT(+)				/* 롯트 */
		           AND a.LOT_TY = b.LOT_TY(+)		/* 롯트타입 */
		           AND b.CANCL_DE(+) IS NULL		/* 계약자_해약일자 */
		           AND a.LAD_CODE = #LAD_CODE#		/* 토지코드 */
		         <isNotEmpty property="PRPOS_SE">
		           AND a.PRPOS_SE = #PRPOS_SE#		/* 토지용도 */
		         </isNotEmpty>
		         <isNotEmpty property="SUPLY_CODE">
		           AND a.SUPLY_CODE = #SUPLY_CODE#		/* 공급구분 */
		         </isNotEmpty>
		         <isNotEmpty property="REMNDR_LAD_SE">
		           AND a.REMNDR_LAD_SE = #REMNDR_LAD_SE# 	/* 잔여토지구분 */
		         </isNotEmpty>
		   	   ) a1
		     , TBSLS_LAD_INFO b1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD0A3'	/* 토지상태 */
		       ) c1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD003'	/* 토지용도구분 */
		       ) d1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD002'	/* 토지목차구분 */
		       ) e1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD0B5'	/* 토지급지구분 */
		       ) f1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD0A2'	/* 잔여지구분 */
		       ) g1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD004'	/* 공급구분 */
		       ) h1
		     , (SELECT CODE
		     		 , CODE_NM
		  		  FROM TBCOM_CMMN_CODE
			     WHERE GRP_CODE = 'LAD0A4'	/* 계약상태 */
		       ) i1
		     , TBCOM_CMMN_ATCHMNFL j1
		 WHERE 1 = 1
		   AND a1.LAD_CODE = b1.LAD_CODE
		   AND a1.LAD_SE = c1.CODE(+)	/* 토지상태 */
		   AND a1.PRPOS_SE = d1.CODE(+)	/* 토지용도구분 */
		   AND a1.CNTNT_SE = e1.CODE(+)	/* 토지목차구분 */
		   AND a1.CLASSIFICATION_SE = f1.CODE(+)	/* 토지급지구분 */
		   AND a1.REMNDR_LAD_SE = g1.CODE(+)	/* 잔여지구분 */
		   AND a1.SUPLY_CODE = h1.CODE(+)	/* 공급구분 */
		   AND a1.CNTRCT_STTUS = i1.CODE(+)	/* 계약상태 */
		   AND a1.FILE_SN = j1.FILE_SN(+)
   		   AND a1.FILE_ORDR = j1.FILE_ORDR(+)
   	
   		<isNotEmpty property="BLCK_FM">
		   AND a1.BLCK = #BLCK_FM#	
		</isNotEmpty>
	    <isNotEmpty property="LOT_FM">
		   AND a1.LOT =	#LOT_FM#
		</isNotEmpty>
		<isNotEmpty property="LOT_TY_FM">
		   AND a1.LOT_TY =	#LOT_TY_FM#
		</isNotEmpty>
	  <!--  <isNotEmpty property="BLT_FM">
		<isNotEmpty property="BLT_TO">
		   AND a1.BLCK_SUM BETWEEN #BLT_FM# AND #BLT_TO#	
		</isNotEmpty>
		<isEmpty property="BLT_TO">
		   <![CDATA[
		   AND a1.BLCK_SUM >= #BLT_FM#
		   ]]>
		</isEmpty>
      </isNotEmpty>
     
      <isEmpty property="BLT_FM">
      	<isNotEmpty property="BLT_TO">
      	   <![CDATA[
      	   AND a1.BLCK_SUM <= #BLT_TO#
      	   ]]>
      	</isNotEmpty>
      </isEmpty> -->
		 ORDER BY LPAD(a1.BLCK, 3, '0')
		 		, LPAD(a1.LOT, 3, '0')
		        , LPAD(a1.LOT_TY, 2, '0')
	</select>
	
	<!-- 쿼리명 : 토지계약자 목록 조회
	설명 : 토지계약자 목록 조회
	수정일  		수정자  	수정내용
	2016.02.02	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2016.02.02
	-->
	<select id="SLS000000DAO.selectLcntrctrList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		WITH V_LCNTRCTR AS
		(
		<include refid="COM000000.v_sls_lcntrctr_info"/>
		)
		SELECT /* SLS000000DAO.selectLcntrctrList 토지계약자 목록 조회 */
			   a1.LAD_CODE				/* 토지코드 */
		     , a1.LAD_NM				/* 토지명 */
		     , a1.BLCK					/* 블럭 */
		     , a1.LOT					/* 롯트 */
		     , a1.LOT_TY				/* 롯트타입 */
		     , a1.BLCK || '-' || a1.LOT || '-' || a1.LOT_TY AS BLCK_LOT_TY
		     , LPAD(a1.BLCK, 3,'0')||LPAD(a1.LOT, 3, '0')||LPAD(a1.LOT_TY, 2, '0') AS BLCK_SUM	/* 조회용 B.L.T 값 */
		     , a1.REMNDR_LAD_SE			/* 토지구분(잔여토지구분) */
		     , a1.PRPOS_SE				/* 용도구분 */
		     , a1.LAD_SE				/* 계약구분(계약여부:00미계약,01계약,99계약불가) */
		     , a1.CNTRCT_STTUS			/* 계약타입(SL분양계약,RN임대계약) */
		     , a1.SUPLY_CODE			/* 공급구분 */
		     /* 계약자 정보 */
		     , a1.CNTRCTR_NO			/* 계약자번호 */
		     , a1.CSTMR_NM				/* 계약자명 */
		     , a1.CSTMR_NM_ALL			/* 계약자명_전체 */
		     , a1.CNTRCT_TY				/* 계약타입 */
		     , a1.CNTRCT_DE				/* 계약일자 */
		     , a1.CANCL_DE				/* 해약일자 */
		     /* 계약자 상세 */
		     , a1.CNTRCTR_MTLTY			/* 계약자상호 */
		     , a1.BDNBR					/* 건물번호 */
		     , a1.ZIP_DM				/* DM우편번호 */
		     , a1.BASS_ADRES_DM			/* DM기본주소 */
		     , a1.DETAIL_ADRES_DM		/* DM상세주소 */
		     , a1.BDNBR_DM				/* DM건물번호 */
		     , a1.ETC_CTTPC				/* 기타연락처 */
		     , a1.FAXNO					/* 팩스번호 */
		     , a1.RM					/* 비고 */
		     , a1.RENT_BGNDE			/* 임대시작일자 */
		     , a1.RENT_ENDDE			/* 임대종료일자 */
		     , a1.SUPLY_SE				/* 공급구분 */
		     , a1.NMCHANGE_CNNC_CODE	/* 명의변경 건에 대한 순번. 연결코드 */
		     , a1.ENTRPS_CHARGER		/* 업체담당자 */
		     , a1.ENTRPS_DEPT			/* 업체부서 */
		     , a1.ENTRPS_TELNO			/* 업체전화번호 */
		     , a1.CTRTC_FILE_COURS		/* 계약서파일경로 */
		     , a1.CTRTC_FILE			/* 계약서파일 */
		     , a1.IHIDNUM				/* 주민등록번호 */
		     , a1.ZIP					/* 우편번호 */
		     , a1.ADRES					/* 주소 */
		     , a1.ADRES_DETAIL			/* 주소_상세 */
		     , a1.TELNO					/* 전화번호 */
		     , a1.MBTLNO				/* 휴대폰번호 */
		     , a1.EMAIL					/* 이메일 */
		     , DECODE(a1.CANCL_DE, NULL, '0', '1') AS CNTRCTR_STTUS_CODE	/* 해약자 여부 : 1(해약자), 0(해약자 아님) */
		     , (CASE WHEN a1.CANCL_DE IS NULL 
		     		THEN (CASE WHEN a1.CNTRCTR_NO IS NULL 
		            		  THEN '1'
		                      ELSE '0'
		     		     END)
		            ELSE '0'
		       END) AS LAD_SE_CODE		/* 미계약토지여부 : 1(미계약 용지), 0(미계약용지 아님) */
		  FROM (SELECT
		               a.LAD_CODE			/* 토지코드 */
		             , c.LAD_NM				/* 토지명 */
		             , a.BLCK				/* 블럭 */
		             , a.LOT				/* 롯트 */
		             , a.LOT_TY				/* 롯트타입 */
		             , a.REMNDR_LAD_SE
		             , a.PRPOS_SE
		             , a.LAD_SE
		             , a.CNTRCT_STTUS
		             , a.SUPLY_CODE
		             /* 계약자 정보 */
		             , b.CNTRCTR_NO			/* 계약자번호 */
		             , b.CSTMR_NM			/* 계약자명 */
		             , DECODE(b.CNTRCTR_NO, NULL, '', b.CSTMR_NM||' ['||b.CNTRCTR_NO||']') AS CSTMR_NM_ALL	/* 계약자명_전체 */
		             , b.CNTRCT_TY			/* 계약타입 */
		             , b.CNTRCT_DE			/* 계약일자 */
		             , b.CANCL_DE			/* 해약일자 */
		             , b.CNTRCTR_MTLTY		/* 계약자상호 */
		             , b.BDNBR				/* 건물번호 */
		             , b.ZIP_DM				/* DM우편번호 */
		             , b.BASS_ADRES_DM		/* DM기본주소 */
		             , b.DETAIL_ADRES_DM	/* DM상세주소 */
		             , b.BDNBR_DM			/* DM건물번호 */
		             , b.ETC_CTTPC			/* 기타연락처 */
		             , b.FAXNO				/* 팩스번호 */
		             , b.RM					/* 비고 */
		             , b.RENT_BGNDE			/* 임대시작일자 */
		             , b.RENT_ENDDE			/* 임대종료일자 */
		             , b.SUPLY_SE			/* 공급구분 */
		             , b.NMCHANGE_CNNC_CODE	/* 명의변경 건에 대한 순번. 연결코드 */
		             , b.ENTRPS_CHARGER		/* 업체담당자 */
		             , b.ENTRPS_DEPT		/* 업체부서 */
		             , b.ENTRPS_TELNO		/* 업체전화번호 */
		             , b.CTRTC_FILE_COURS	/* 계약서파일경로 */
		             , b.CTRTC_FILE			/* 계약서파일 */
		             , b.IHIDNUM			/* 주민등록번호 */
		             , b.ZIP				/* 우편번호 */
		             , b.ADRES				/* 주소 */
		             , b.ADRES_DETAIL		/* 주소_상세 */
		             , b.TELNO				/* 전화번호 */
		             , b.MBTLNO				/* 휴대폰번호 */
		             , b.EMAIL				/* 이메일 */
		          FROM TBSLS_LAD_DETAIL_INFO a	/* 토지상세정보 */
		             , V_LCNTRCTR b		/* 토지계약자 정보 */
		             , TBSLS_LAD_INFO c			/* 토지정보 */
		         WHERE 1 = 1
		           AND a.LAD_CODE = b.LAD_CODE(+)
		           AND a.BLCK = b.BLCK(+)
		           AND a.LOT = b.LOT(+)
		           AND a.LOT_TY = b.LOT_TY(+)
		           AND a.LAD_CODE = c.LAD_CODE
		           AND a.LAD_CODE = #LAD_CODE#
		       ) a1
		 WHERE 1 = 1
		   /* 기타조건 */
		 <isNotEmpty property="BLCK">
		   AND a1.BLCK = #BLCK#
		 </isNotEmpty>
		 <isNotEmpty property="LOT">
		   AND a1.LOT = #LOT#
		 </isNotEmpty>
		 <isNotEmpty property="LOT_TY">
		   AND a1.LOT_TY = #LOT_TY#
		 </isNotEmpty>
		 <isNotEmpty property="REMNDR_LAD_SE">
		   AND a1.REMNDR_LAD_SE = #REMNDR_LAD_SE#	/* 토지구분(잔여토지구분) */
		 </isNotEmpty>
		 <isNotEmpty property="PRPOS_SE">
		   AND a1.PRPOS_SE = #PRPOS_SE#				/* 용도구분 */
		 </isNotEmpty>
		 <isNotEmpty property="LAD_SE">
		   AND a1.LAD_SE = #LAD_SE#					/* 계약구분(계약여부:00미계약,01계약,99계약불가) */
		 </isNotEmpty>
		 <isNotEmpty property="CNTRCT_STTUS">
		   AND a1.CNTRCT_STTUS = #CNTRCT_STTUS#		/* 계약타입(SL분양계약,RN임대계약) */
		 </isNotEmpty>
		 <isNotEmpty property="SUPLY_CODE">
		   AND a1.SUPLY_CODE = #SUPLY_CODE#			/* 공급구분 */
		 </isNotEmpty>
		 <isEqual property="CNTRCTR_STTUS_CODE" compareValue="1">
		   AND a1.CANCL_DE IS NOT NULL				/* 해약자만 조회 */
		 </isEqual>
		 <isEqual property="LAD_SE_CODE" compareValue="1">
		   /* 미계약 용지만 검색 */
		   AND a1.CANCL_DE IS NULL
		   AND a1.CNTRCTR_NO IS NULL
		 </isEqual>
		 <isNotEmpty property="CSTMR_NM">
		   AND a1.CSTMR_NM LIKE '%'||#CSTMR_NM#||'%'
		 </isNotEmpty>
		ORDER BY a1.LAD_CODE
		       , LPAD(a1.BLCK, 3, '0')
			   , LPAD(a1.LOT, 3, '0')
			   , LPAD(a1.LOT_TY, 2, '0')
	</select>
	
	<!-- 쿼리명 : 토지계약자 기타정보(압류, 대출, 소유권) 조회
	설명 : 토지계약자 기타정보(압류, 대출, 소유권) 조회
	수정일  		수정자  	수정내용
	2016.02.22	이상준		최초생성
	작성자 : 이상준
	최초작성일 : 2016.02.22
	-->
	<select id="SLS000000DAO.selectLcntrctrEtcInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT /* SLS000000DAO.selectLcntrctrEtcInfo 토지계약자 기타정보(압류, 대출, 소유권) 조회 */
		       a.CNTRCTR_NO							/* 계약자번호 */
			 /* 압류정보 */
		     , b.CDIT_DECSN_DE						/* 채권결정일 */
		     , NVL(b.DET_AMOUNT, 0) AS DET_AMOUNT	/* 채무금액 */
			 /* 대출정보 */
		     , c.TRNSFR_DE							/* 양도일자 */
		     , NVL(c.CDIT_TRNSFR_AMOUNT, 0) AS CDIT_TRNSFR_AMOUNT		/* 채권양도금액 */
		     /* 기타정보(소유권) */
		     , d.OWNSHIP_BEFORE_DE					/* 소유권이전일자 */
		     , d.OWNSHIP_RPRSNTV_NM					/* 소유권대표자명 */
		     , NVL(e.PAYAMT, 0) AS PAYAMT_SE		/* 정산금 실 정산 청구금액과 청구한 금액 오차 관리용(C08) */
		     , NVL(f.PAYAMT, 0) AS PAYAMT_SE_SUM			/* 정산금 합계 */
		     , NVL(f.PAYAMT_SE_CNT, 0) AS PAYAMT_SE_CNT		/* 정산횟수 */
		  FROM TBSLS_LCNTRCTR a						/* 토지계약자 */
		  	 , (SELECT x.CNTRCTR_NO
		             , MAX(x.CDIT_DECSN_DE) AS CDIT_DECSN_DE	/* 채권결정일 */
		             , SUM(x.DET_AMOUNT) AS DET_AMOUNT			/* 채무금액 */
		          FROM TBSLS_LCNTRCTR_SEIZR x	/* 토지계약자압류 */
		         WHERE x.RELIS_DE IS NULL
		           AND x.CNTRCTR_NO = #CNTRCTR_NO#
		         GROUP BY x.CNTRCTR_NO
		       ) b
		     , (SELECT y.CNTRCTR_NO
		             , MAX(y.TRNSFR_DE) AS TRNSFR_DE	/* 양도일자 */
		             , SUM(y.CDIT_TRNSFR_AMOUNT) AS CDIT_TRNSFR_AMOUNT	/* 채권양도금액 */
		          FROM TBSLS_LCNTRCTR_LON y	/* 토지계약자대출 */
		         WHERE y.RELIS_DE IS NULL
		           AND y.CNTRCTR_NO = #CNTRCTR_NO#
		         GROUP BY y.CNTRCTR_NO
		       ) c
		     , TBSLS_LCNTRCTR_ETC_INFO d	/* 토지계약지기타내역 */
		     , (SELECT CNTRCTR_NO
		             , PAYAMT
		          FROM TBSLS_LCNTRCTR_PAY	/* 토지계약자 납부 */
		         WHERE PAY_CODE = 'SE'		/* 정산금 */
		           AND CNTRCTR_NO = #CNTRCTR_NO#
		           AND ROWNUM = 1			/* AS_IS에서는 다수건의 경우 첫행을 기준으로 함 */
		       ) e
		     , (SELECT CNTRCTR_NO
		             , SUM(NVL(PAYAMT, 0)) AS PAYAMT
		             , COUNT(*) AS PAYAMT_SE_CNT
		          FROM TBSLS_LCNTRCTR_PAY	/* 토지계약자 납부 */
		         WHERE PAY_CODE = 'SE'
		           AND CNTRCTR_NO = #CNTRCTR_NO#
		         GROUP BY CNTRCTR_NO
		       ) f
		 WHERE 1 = 1
		   AND a.CNTRCTR_NO = b.CNTRCTR_NO(+)
		   AND a.CNTRCTR_NO = c.CNTRCTR_NO(+)
		   AND a.CNTRCTR_NO = d.CNTRCTR_NO(+)
		   AND a.CNTRCTR_NO = e.CNTRCTR_NO(+)
		   AND a.CNTRCTR_NO = f.CNTRCTR_NO(+)
		   AND a.CNTRCTR_NO = #CNTRCTR_NO#
	</select>
	
    <!-- 쿼리명 : 사업코드 목록 조회
	설명 : 사업코드 목록 조회	- 콤보등 기초 자료
	수정일  		수정자  	수정내용
	2015.09.18		최승락		최초생성
	작성자 : 최승락
	최초작성일 : 2015.09.18
	-->
	<select id="SLS000000DAO.selectBsnsCodeList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			  BSNS_CODE     /* 사업코드 */
			, BSNS_NM       /* 사업명 */
            , '['||BSNS_CODE||']'||BSNS_NM AS ALL_BSNS_NM	/* [사업코드]사업명 */			  
			, BSNS_TY       /* 사업유형 */
		
		  FROM TBPRJ_BSNS_CODE
		 WHERE 1 = 1
	</select>
	

    <!-- 쿼리명 : 사업코드 목록 조회
	설명 : 사업코드 목록 조회	- 콤보등 기초 자료
	수정일  		수정자  	수정내용
	2015.09.18		최승락		최초생성
	작성자 : 최승락
	최초작성일 : 2015.09.18
	-->
	<select id="SLS000000DAO.selectLADcntrct" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.CNTRCTR_NO
     , A.LAD_CODE
     , A.BLCK
     , A.LOT
     , A.LOT_TY
     , A.LAD_CSTMR_NO
     , B.CSTMR_NM
     , C.LAD_NM
     , C.PRPOS_CODE
  FROM TBSLS_LCNTRCTR A
  JOIN TBSLS_LAD_CSTMR B ON A.LAD_CSTMR_NO = B.LAD_CSTMR_NO
  JOIN TBSLS_LAD_INFO C ON A.LAD_CODE = C.LAD_CODE
 WHERE A.LAD_CODE LIKE #LAD_CODE# || '%'
   AND B.CSTMR_NM LIKE #CSTMR_NM# || '%'
  ORDER BY 1,2,3,4
	</select>	

	
	<!-- 쿼리명 : 주택상세정보 조회
	설명 : 주택상세정보 조회 쿼리
	수정일  수정자  수정내용

	작성자 : 최승락
	최초작성일 : 2015.10.04
	-->
	<select id="SLS000000DAO.selectHouseInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 
				  T1.HOUSE_CODE
				, T1.DONG
				, T1.HO
				, T2.HOUSE_TY_CODE
				, T2.TY_AEA
				, T2.AEA
				, T2.HOUSE_STLE
				, T2.HOUSE_DRC
				, T2.TY_FLOOR_BEGIN
				, T2.TY_FLOOR_END
				, T2.PLOT_CT
				, T2.BILDNG_CT
				, T2.VAT
				, T2.INHBTNT_BILDNG_CT
				, T2.INHBTNT_VAT
				, T2.SUPLY_AMOUNT
				, T2.RNTCHRG
				, T2.FINANC_LMT_AMOUNT
			  FROM TBSLS_HOUSE_DONG_HO T1
				, TBSLS_HOUSE_TY T2
			 WHERE 1 = 1
		]]>
			   AND T1.HOUSE_CODE = T2.HOUSE_CODE
			   AND T1.HOUSE_TY_CODE = T2.HOUSE_TY_CODE
			   AND T1.HOUSE_CODE = #HOUSE_CODE#
			   AND T1.DONG = #DONG#
			   AND T1.HO = #HO#
	</select>
 
    <!-- 쿼리명 : 납부요청 (가상계좌 팝업) 연체 조회
	설명 : 가상계좌 팝업 요청별 연체자료 조회
	수정일  		수정자  	수정내용
	2015.12.24	이광원	최초생성
	작성자 : 이광원
	최초작성일 : 2015.12.24
	-->
	<select id="SLS000000DAO.P3"  remapResults="true"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 분양  -->
	<isEqual property="CHK1" compareValue = "1">     
	<![CDATA[
	SELECT  PAY_CODE 
	      , PAY_SE    
	      , PAY_SN    
	      , PAY_TMLMT 
	      , PAYAMT    
	      , CASE WHEN NVL(ARRRG_DSCNT_AMOUNT,0) < 0 THEN ARRRG_DSCNT_AMOUNT ELSE 0 END AS DFNNT_AMOUNT            
	      , CASE WHEN NVL(ARRRG_AMOUNT,0)  > 0 THEN ARRRG_AMOUNT ELSE 0 END AS ARRRG_AMOUNT  
	      , PAYAMT + NVL(ARRRG_AMOUNT,0) + NVL(ARRRG_DSCNT_AMOUNT,0) AS TOT_AMOUNT 
	      , PAY_NO  
	      , CNTRCTR_NO
	  FROM TBSLS_HOUSE_LTTOT_PAY A
	 WHERE 1=1
	   AND RCIV_DE IS NULL 
	   AND PAY_CODE IN (SELECT CODE 
	                        FROM TBCOM_CMMN_CODE 
	                       WHERE 1=1
	                         AND GRP_CODE = 'HOU0A1' 
	                         AND CHRCTR_PREPAR_VALUE_0 = '1')                          
	   AND A.CNTRCTR_NO = #CNTRCTR_NO#                         
	UNION ALL
	]]>
	</isEqual>
	<isEqual property="CHK2" compareValue = "1">
	<!-- 주택 보증금 -->
	<![CDATA[
	SELECT  PAY_CODE  
	      , PAY_SE    
	      , PAY_SN    
	      , PAY_TMLMT 
	      , PAYAMT    
	      , CASE WHEN NVL(ARRRG_DSCNT_AMOUNT,0) < 0  THEN ARRRG_DSCNT_AMOUNT ELSE 0 END AS DFNNT_AMOUNT 
	      , CASE WHEN NVL(ARRRG_AMOUNT,0)  > 0 THEN ARRRG_AMOUNT ELSE 0 END AS ARRRG_AMOUNT 
	      , PAYAMT + NVL(ARRRG_AMOUNT,0) + NVL(ARRRG_DSCNT_AMOUNT,0) AS TOT_AMOUNT
	      , PAY_NO 
	      , CNTRCTR_NO
	  FROM TBSLS_HOUSE_LTTOT_PAY 
	 WHERE 1=1
	   AND RCIV_DE IS NULL 
	   AND PAY_CODE IN (SELECT CODE 
	                        FROM TBCOM_CMMN_CODE 
	                       WHERE 1=1
	                         AND GRP_CODE = 'HOU0A1' 
	                         AND CHRCTR_PREPAR_VALUE_0 = '4')                                                   
	   AND CNTRCTR_NO = #CNTRCTR_NO# 
	UNION ALL	
	]]>
	</isEqual>
	<isEqual property="CHK3" compareValue = "1">	
	<!-- 임대료 -->
	<![CDATA[
	SELECT  PAY_CODE
	      , '0' AS PAY_SE 
	      , 0 AS PAY_SN   
	      , PAY_TMLMT
	      , MT_RNTCHRG
	      , ARRRG_AMOUNT
	      , DFNNT_AMOUNT  
	      , MT_RNTCHRG + ARRRG_AMOUNT + DFNNT_AMOUNT AS TOT_AMOUNT
	      , PAY_NO
	      , CNTRCTR_NO
	  FROM TBSLS_HOUSE_RENT_PAY 
	 WHERE 1=1
	   AND RCIV_DE IS NULL
	   AND CNTRCTR_NO = #CNTRCTR_NO# 
	UNION ALL	
	]]>
	</isEqual>
	<isEqual property="CHK4" compareValue = "1">
	<!-- 기타 수납 -->
	SELECT  PAY_CODE
	      , '0' PAY_SE
	      , 0 PAY_SN
	      , PAY_TMLMT
	      , PAYAMT
	      , CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[ < 0]]> THEN ARRRG_AMOUNT ELSE 0 END AS DFNNT_AMOUNT        
	      , CASE WHEN NVL(ARRRG_AMOUNT,0)  > 0 THEN ARRRG_AMOUNT ELSE 0 END AS ARRRG_AMOUNT        
	      , PAYAMT + NVL(ARRRG_AMOUNT,0) AS TOT_AMOUNT
	      , PAY_NO
	      , CNTRCTR_NO
	  FROM TBSLS_ETC_INCME_PAY 
	 WHERE 1=1
	   AND JOB_SE = 'HOU' 
	   AND RCIV_DE IS NULL
       AND CNTRCTR_NO = #CNTRCTR_NO# 
	UNION ALL
	</isEqual>
	<isEqual property="CHK5" compareValue = "1">      
	<!--  융자금 --> 
	SELECT  'RJ' AS PAY_CODE
	      , '0' AS PAY_SE 
	      , 0 AS PAY_SN      
	      , PAY_TMLMT
	      , NVL(PRNCPAL,0) AS PAYAMT    
	      , NVL(BRRW_AMOUNT,0) AS DFNNT_AMOUNT
	      , NVL(INTR,0) + NVL(OVDINTR,0) AS ARRRG_AMOUNT 
	      , NVL(PRNCPAL,0) + NVL(INTR,0) + NVL(OVDINTR,0) + NVL(BRRW_AMOUNT,0) AS TOT_AMOUNT
	      , TO_CHAR(NHT_SN) AS PAY_NO
	      , CNTRCTR_NO
	  FROM TBSLS_HOUSE_MT_LANMN 
	 WHERE 1=1
	   AND RCIV_DE IS NULL 
	   AND HOUSE_CODE = #HOUSE_CODE#
	   AND MAIN_CODE = #DONG#
	   AND DETAIL_CODE = #HO#
	UNION ALL	   
	</isEqual>   
	SELECT  'RJ' AS PAY_CODE
	      , '0' AS PAY_SE 
	      , 0 AS PAY_SN      
	      , PAY_TMLMT
	      , NVL(PRNCPAL,0) AS PAYAMT    
	      , NVL(BRRW_AMOUNT,0) AS DFNNT_AMOUNT
	      , NVL(INTR,0) + NVL(OVDINTR,0) AS ARRRG_AMOUNT 
	      , NVL(PRNCPAL,0) + NVL(INTR,0) + NVL(OVDINTR,0) + NVL(BRRW_AMOUNT,0) AS TOT_AMOUNT
	      , TO_CHAR(NHT_SN) AS PAY_NO
	      , CNTRCTR_NO
	  FROM TBSLS_HOUSE_MT_LANMN 
	 WHERE 1=1
	   AND RCIV_DE IS NULL 
	   AND HOUSE_CODE = '999999999999'
	 ORDER BY PAY_TMLMT , PAY_CODE
    </select>
    
<!-- 쿼리명 : 납부요청(가상계좌 VA_BILL)
	설명 : 납부요청(가상계좌 VA_BILL)
	수정일  수정자  수정내용
	
	작성자 : 이광원
	최초작성일 : 2015.10.27 
-->	
<select id="SLS000000DAO.P5" parameterClass="java.util.Map" resultClass="java.util.HashMap">
SELECT 
       BANK_CD
     , CRT_ID
     , VACCT_NO
     , TR_DATE
     , TR_NO
     , TR_SDATE
     , TR_EDATE
     , BILL_AMT
     , PUT_USER_ID     
     , PUT_DATE
     , EXT1
     , PUT_USER_ID
     , PUT_DATE     
  FROM VA_BILL
 WHERE CRT_ID = #CRT_ID#
   AND VACCT_NO = #TR_NO#
 ORDER BY TR_NO
</select>

	<!-- 쿼리명 : 납부요청(가상계좌 VA_BILL_DEDATIL)
		설명 : 납부요청(가상계좌 VA_BILL_DEDATIL)
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2015.10.27 
	-->	
	<select id="SLS000000DAO.P6" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	SELECT 
	 	  BANK_CD
		, VACCT_NO
		, TR_DATE
		, TR_NO
		, BILL_SEQ
		, CRT_DIV
		, CRT_ID
		, CORT_CODE
		, REC_CLASS
		, REC_SEQ
		, PAYEND_DATE
		, BILL_AMT
		, PAY_AMT
		, SALE_AMT
		, INT_AMT
		, PUT_USER_ID
		, PUT_DATE
		, EXT1
		, PAY_NUM
		, LOSS_AMT
		, LSALE_AMT
		, OPT2
	  FROM VA_BILL_DETAIL 
	 WHERE CRT_ID = #CRT_ID#
	   AND TR_NO = #TR_NO# 
	   AND BANK_CD = #BANK_CD#
	 ORDER BY TR_NO
	</select>
	
	
	<!-- 쿼리명 : 가상계좌 납부요청 개별 프로시저
		설명 : 가상계좌 납부요청 개별 프로시저
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2015.10.27 
	-->	
		<parameterMap id="sp_va_bill_uid_param" class="java.util.HashMap">
			<parameter property="IN_FLAG"     		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_BANK_CD"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_ACCT_NO"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_TR_DATE"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_TR_SDATE" 		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_TR_EDATE" 		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_CRT_DIV"  		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_CRT_ID"   		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_BILL_SEQ"		jdbcType="VARCHAR"	javaType="string"  	mode="IN" />
			<parameter property="IN_CORT_CODE"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_PAY_NUM"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_REC_CLASS"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_REC_SEQ"		jdbcType="VARCHAR"	javaType="string"   mode="IN" />
			<parameter property="IN_PAYEND_DATE"	jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_BILL_AMT"		jdbcType="VARCHAR"	javaType="string"   mode="IN" />
			<parameter property="IN_PAY_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
			<parameter property="IN_SALE_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
			<parameter property="IN_INT_AMT"		jdbcType="VARCHAR"	javaType="string"	mode="IN" />
			<parameter property="IN_BILL_DIV"		jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="S_USER_ID"	jdbcType="VARCHAR"	javaType="string" 	mode="IN" />
			<parameter property="IN_BJ_YN"			jdbcType="VARCHAR"	javaType="string" 	mode="IN" />		
		</parameterMap>
	
	<!-- 쿼리명 : 가상계좌 납부요청 개별 프로시저
		설명 : 가상계좌 납부요청 개별 프로시저
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2015.10.27 
	-->	
		<procedure id="SLS000000DAO.SP_VA_BILL_UID" parameterMap="sp_va_bill_uid_param">
			{ call SP_VA_BILL_UID(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
		</procedure>
	
	
	
	<!-- 쿼리명 : 은행계좌 콤보
		설명 : 은행계좌 콤보
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2015.12.24 
	-->	
	<select id="SLS000000DAO.P8" parameterClass="java.util.Map" resultClass="java.util.HashMap">
        SELECT '['||SFCOM_CODE_NM('COM021', BANK_CD ,'CODE_NM')||'] '|| VACCT_NO  AS BANK_NM
        , BANK_CD
        , VACCT_NO
          FROM VA_MAST 
         WHERE CUST_CD = #CNTRCTR_NO#
           <isEqual property="OPT" compareValue = "1">    
           AND OPT1 = 1
           </isEqual>
           <isEqual property="OPT" compareValue = "2">    
           AND OPT2 = 1
           </isEqual>
	</select>
  
  
	<!-- 쿼리명 : 선납 / 연체 이자 계산
		설명 : 선납할인 / 연체이자 계산
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.02.29 
	-->	
	<select id="SLS000000DAO.P4" parameterClass="java.util.Map" resultClass="java.util.HashMap">
    
    SELECT  SFSLS_LAD_APAY_CAL( 
                               #IN_LAD_CODE# , 
                               #IN_PAY_TMLMT# , 
                               #IN_TO_DAY# , 
                               #IN_PAYAMT# ,
                               #CNTRCTR_NO#
                               ) as N_RESULT
         , #IN_PAYAMT# AS TOT_AMT
         , TO_DATE(#IN_PAY_TMLMT# , 'YYYYMMDD')  - TO_DATE(#IN_TO_DAY# , 'YYYYMMDD') AS CNT_DAY
         , SFSLS_LAD_RATIO(  #IN_SE# 
                           , #IN_LAD_CODE# 
                           , #IN_TO_DAY# 
                           , #IN_PAY_TMLMT# 
                           , '0' 
                           , CASE WHEN #IN_LAD_CODE# = '024' AND #PRPOS_SE# = '12' 
                                  THEN '1' 
                                  ELSE '0' END
                           ,  '0'       ) as RATIO                              
     FROM DUAL

	</select>  
	
	
	<!-- 쿼리명 : 선납 / 연체 이자 계산
		설명 : 선납할인 / 연체이자 계산
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.02.29 
	-->	
	<select id="SLS000000DAO.P4C" parameterClass="java.util.Map" resultClass="java.util.HashMap">
    
    SELECT  SFSLS_LAD_APAY_CAL( 
                               #IN_LAD_CODE# , 
                               #IN_PAY_TMLMT# , 
                               #IN_TO_DAY# , 
                               #IN_PAYAMT# ,
                               #CNTRCTR_NO#
                               ) as N_RESULT
         , #IN_PAYAMT# AS TOT_AMT
         , TO_DATE(#IN_PAY_TMLMT# , 'YYYYMMDD')  + TO_DATE(#IN_TO_DAY# , 'YYYYMMDD') AS CNT_DAY
         , SFSLS_LAD_RATIO(  #IN_SE# 
                           , #IN_LAD_CODE# 
                           , #IN_TO_DAY# 
                           , #IN_PAY_TMLMT# 
                           , '0' 
                           , CASE WHEN #IN_LAD_CODE# = '024' AND #PRPOS_SE# = '12' 
                                  THEN '1' 
                                  ELSE '0' END
                           ,  '0'       ) as RATIO                              
     FROM DUAL

	</select>  
	
	<select id="SLS000000DAO.P09" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		
		SELECT SFSLS_LAD_APAY_CAL_B( 
                               #IN_LAD_CODE# , 
                               #IN_PAY_TMLMT# , 
                               #IN_TO_DAY# , 
                               #IN_PAYAMT# ,
                               #CNTRCTR_NO#
                               ) AS PAYAMT
		  FROM DUAL		  
	
	</select>	
	
	
	<!-- 쿼리명 : 토지 가상계좌 종류
		설명 : 사용자별 가상계좌 종류
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.0.3.08 
	-->	
	<select id="SLS000000DAO.P02" parameterClass="java.util.Map" resultClass="java.util.HashMap">  
        SELECT 
            A.BANK_CD
            ,A.VACCT_NO
            ,(SELECT CODE_NM FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'COM021' AND CODE = A.BANK_CD) AS BANK_NM
        FROM VA_MAST A
        WHERE 
            CUST_CD = #CNTRCTR_NO#
            AND CRT_DIV=#CRT_DIV#
        ORDER BY  BANK_CD
    </select>
    

	
	<!-- 쿼리명 : 가상계좌 미납내역
		설명 : 가상계좌 미납내역
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.0.3.08 
	-->	
	<select id="SLS000000DAO.P05" parameterClass="java.util.Map" resultClass="java.util.HashMap">  
	       SELECT '0' AS CHK,
	         T1.CNTRCTR_NO,
	         T1.PAY_NO,
	         T1.RQEST_YM,
	         T1.PAY_CODE,
	         T1.PAY_ODR AS PAY_SN,
	         T1.PAY_SE,
	         T1.INSTLMT_SE,
	         T1.PAYAMT,
	         T1.PAY_SUPLY_AMOUNT,
	         T1.PAY_VAT,
	         T1.INSTLMT_INTR,
	         T1.INSTLMT_INTR_SUPLY_AMOUNT,
	         T1.INSTLMT_INTR_VAT,
	         T1.ARRRG_AMOUNT,
	         T1.PREPAY_DSCNT_AMOUNT,
	           NVL (T1.PAYAMT, 0)
	         + NVL (T1.ARRRG_AMOUNT, 0)
	         + NVL (T1.PREPAY_DSCNT_AMOUNT, 0)
	            AS TOT_AMOUNT,
	         T1.PAY_TMLMT,
	         T1.PAY_STDR_DE,
	         T1.NHT_OUTPT_DE,
	         T1.PAYMTHD,
	         T1.BANK_CODE,
	         T1.OCR_NO,
	         T1.MDAT_DE,
	         T1.OPETR_ID,
	         T1.LEV_DECSN_NO,
	         T1.RM,
	         T1.USE_AT,
	         T1.RCIV_DECSN_NO,
	         T1.LTTOT_RENT_SE,
	         T1.TMPR_RCIV_DE,
	         T1.TMPR_RCIV_AMOUNT,
	         T1.RDCAMT_AMOUNT,
	         T1.ARRRG_DSCNT_SE,
	         T1.ARRRG_DSCNT_AMOUNT,
	         T1.ARRRG_DSCNT_SUPLY_AMOUNT,
	         T1.ARRRG_DSCNT_VAT,
	         T1.ARRRG_DSCNT_DAYCNT,
	         T1.ARRRG_DSCNT_INTRT,
	         T1.RENT_ODR,
	         T1.RCIV_DE
	    FROM TBSLS_LCNTRCTR_PAY T1 
	   WHERE     1 = 1         
	         AND T1.CNTRCTR_NO = #CNTRCTR_NO#
	         AND NOT EXISTS(SELECT 1 FROM TBSLS_LAD_RCIV_PSTMRK T2
	                         WHERE T1.CNTRCTR_NO = T2.CNTRCTR_NO
	                           AND T1.PAY_NO = T2.PAY_NO
	                        )     
	         AND NVL(T1.PAYAMT,0) + NVL(ARRRG_AMOUNT,0) + NVL(PREPAY_DSCNT_AMOUNT,0) > 0                                    
		ORDER BY PAY_CODE,
	         PAY_TMLMT,
	         PAY_SE

    </select>
    
	<!-- 쿼리명 : 기타수입 가상계좌 미납내역
		설명 : 기타수입 가상계좌 미납내역
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.09.13 
	-->	
	<select id="SLS000000DAO.P005" parameterClass="java.util.Map" resultClass="java.util.HashMap">      
               SELECT '0' AS CHK,
             T1.CNTRCTR_NO,
             T1.PAY_NO,
             T1.RQEST_YM,
             T1.PAY_CODE,
             T1.PAYAMT,
             T1.PAY_SUPLY_AMOUNT,
             T1.PAY_VAT,
             T1.ARRRG_AMOUNT,
               NVL (T1.PAYAMT, 0)
             + NVL (T1.ARRRG_AMOUNT, 0)
                AS TOT_AMOUNT,
             T1.PAY_TMLMT,
             T1.PAYMTHD,
             T1.OCR_NO,
             T1.MDAT_DE,
             T1.LEV_DECSN_NO,
             T1.RM,
             T1.RCIV_DECSN_NO,
             T1.TMPR_RCIV_AMOUNT,
             T1.ARRRG_DSCNT_SE,
             T1.ARRRG_DSCNT_AMOUNT,
             T1.ARRRG_DSCNT_SUPLY_AMOUNT,
             T1.ARRRG_DSCNT_VAT,
             T1.ARRRG_DSCNT_DAYCNT,
             T1.ARRRG_DSCNT_INTRT,
             T1.RCIV_DE
        FROM tbsls_etc_incme_pay T1 
       WHERE     1 = 1         
             AND T1.CNTRCTR_NO = #CNTRCTR_NO#
             AND NOT EXISTS(SELECT 1 FROM TBSLS_LAD_RCIV_PSTMRK T2
                             WHERE T1.CNTRCTR_NO = T2.CNTRCTR_NO
                               AND T1.PAY_NO = T2.PAY_NO
                            )                                         
        ORDER BY PAY_CODE,
             PAY_TMLMT
    </select>
    
    	<!-- 쿼리명 : 가상계좌 미납내역
		설명 : 가상계좌 미납내역
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.0.3.08 
	-->	
	<select id="SLS000000DAO.HouP05" parameterClass="java.util.Map" resultClass="java.util.HashMap">  
                 SELECT   '0' AS CHK,
                          T1.CNTRCTR_NO,
                          T1.PAY_NO,
                          T1.RQEST_YM,
                          T1.PAY_CODE,
                          T1.PAY_SE,
                          T1.PAYAMT,
                          T1.PAY_SUPLY_AMOUNT,
                          T1.PAY_VAT,
                          T1.ARRRG_AMOUNT,
                          NVL(T1.PAYAMT , 0) + NVL(T1.ARRRG_AMOUNT , 0) AS TOT_AMOUNT,
                          T1.PAY_TMLMT,
                          T1.PAYMTHD,
                          T1.OCR_NO,
                          T1.MDAT_DE,
                          T1.LEV_DECSN_NO,
                          T1.RM,
                          T1.RCIV_DECSN_NO,
                          T1.LTTOT_RENT_SE,
                          T1.TMPR_RCIV_AMOUNT,
                          T1.ARRRG_DSCNT_SE,
                          T1.ARRRG_DSCNT_AMOUNT,
                          T1.ARRRG_DSCNT_SUPLY_AMOUNT,
                          T1.ARRRG_DSCNT_VAT,
                          T1.ARRRG_DSCNT_DAYCNT,
                          T1.ARRRG_DSCNT_INTRT,
                          T1.RCIV_DE
                   FROM   TBSLS_HOUSE_LTTOT_PAY T1, TBSLS_HOUSE_RCIV_PSTMRK T2
                  WHERE       1 = 1
                          AND T1.CNTRCTR_NO = T2.CNTRCTR_NO(+)
                          AND T1.PAY_NO = T2.PAY_NO(+)
                          AND T1.CNTRCTR_NO = #CNTRCTR_NO#
                          AND T1.LTTOT_RENT_SE in ('S', 'R')
                          AND T1.PAY_NO LIKE '%' || '%' || '%'
                          AND T2.RCIV_DE IS NULL                                     
               ORDER BY   
                          PAY_CODE,
                          PAY_TMLMT,
                          PAY_SE 
    </select>
    
	<!-- 쿼리명 : 연체/선납계산
		설명 : 가상계좌 미납내역
		수정일  수정자  수정내용
		
		작성자 : 이광원
		최초작성일 : 2016.0.3.09 
	-->	
	<select id="SLS000000DAO.P06" parameterClass="java.util.Map" resultClass="java.util.HashMap">
            SELECT
                  T1.CNTRCTR_NO
                , T1.PAY_NO
                , T1.RQEST_YM
                , T1.PAY_CODE
                , T1.PAY_ODR
                , T1.PAY_SE
                , T1.INSTLMT_SE
                , T1.PAYAMT
                , T1.PAY_SUPLY_AMOUNT
                , T1.PAY_VAT
                , T1.INSTLMT_INTR
                , T1.INSTLMT_INTR_SUPLY_AMOUNT
                , T1.INSTLMT_INTR_VAT
                , T1.ARRRG_AMOUNT
                , T1.PREPAY_DSCNT_AMOUNT
                , SFSLS_LAD_APAY_CAL(  #LAD_CODE#  /* 토지코드  */
                					 , NVL(T1.PAY_TMLMT , #IN_TO_DAY#) /* 납입기한이 없으면 변경기한일로 대체 */ 
                					 , #IN_TO_DAY# /* 변경기한일(수납예정일자)  */ 
                					 , T1.PAYAMT  /* 납부금액  */
                					 , T1.CNTRCTR_NO /* 계약자번호 */
                					 ) AS  APAY_CAL /* 토지코드가 국가산단 이고 용도구분이 산업시설용지 구분  */
          	   , TO_DATE(T1.PAY_TMLMT , 'YYYYMMDD')  - TO_DATE(#IN_TO_DAY# , 'YYYYMMDD') AS CNT_DAY
       		   , SFSLS_LAD_RATIO(  ' ' 
                           , #LAD_CODE# 
                           , #IN_TO_DAY# 
                           , T1.PAY_TMLMT 
                           , '0' 
                           , CASE WHEN #LAD_CODE# = '024' AND #PRPOS_SE# = '12' 
                                  THEN '1' 
                                  ELSE '0' END
                           ,  '0'       ) as RATIO                  
                , NVL(T1.PAY_TMLMT , #IN_TO_DAY#) AS PAY_TMLMT
                , NVL(T1.PAY_STDR_DE , #IN_TO_DAY#) AS PAY_STDR_DE
                , T1.NHT_OUTPT_DE
                , T1.PAYMTHD
                , T1.BANK_CODE
                , T1.OCR_NO
                , T1.MDAT_DE
                , T1.OPETR_ID
                , T1.LEV_DECSN_NO
                , T1.RM
                , T1.USE_AT
                , T1.RCIV_DECSN_NO
                , T1.LTTOT_RENT_SE
                , T1.TMPR_RCIV_DE
                , T1.TMPR_RCIV_AMOUNT
                , T1.RDCAMT_AMOUNT
                , T1.ARRRG_DSCNT_SE
                , T1.ARRRG_DSCNT_AMOUNT
                , T1.ARRRG_DSCNT_SUPLY_AMOUNT
                , T1.ARRRG_DSCNT_VAT
                , T1.ARRRG_DSCNT_DAYCNT
                , T1.ARRRG_DSCNT_INTRT
                , T1.RCIV_DE
                , CASE
                    WHEN T1.INSTLMT_SE = '3' THEN
                        (NVL(T1.PAYAMT, 0) + NVL(T1.INSTLMT_INTR, 0) + NVL(T1.ARRRG_AMOUNT, 0) + NVL(T1.RDCAMT_AMOUNT, 0))
                    ELSE
                        (NVL(T1.PAYAMT, 0) + NVL(T1.INSTLMT_INTR, 0) + NVL(T1.ARRRG_AMOUNT, 0) + NVL(T1.PREPAY_DSCNT_AMOUNT, 0) + NVL(T1.RDCAMT_AMOUNT, 0))
                  END AS PAYAMT_SM
                , CASE
                    WHEN T1.INSTLMT_SE = '3' THEN
                        (NVL(T1.PAYAMT, 0) + NVL(T1.INSTLMT_INTR, 0) + NVL(T1.ARRRG_AMOUNT, 0) + NVL(T1.PREPAY_DSCNT_AMOUNT, 0) + NVL(T1.RDCAMT_AMOUNT, 0) - NVL(T2.RCIV_AMOUNT, 0))
                    ELSE
                        (NVL(T1.PAYAMT, 0) + NVL(T1.INSTLMT_INTR, 0) + NVL(T1.ARRRG_AMOUNT, 0) + NVL(T1.PREPAY_DSCNT_AMOUNT, 0) + NVL(T1.RDCAMT_AMOUNT, 0) - NVL(T2.RCIV_AMOUNT, 0))
                  END AS UNCLAMT
                , T2.RCIV_AMOUNT AS R_RCIV_AMOUNT
                , T2.RCIV_DE AS R_RCIV_DE
                , T2.PAYMTHD AS R_RCIV_MTH
                , T2.BANK_CODE AS R_BANK_CODE
                , T2.OCR_NO AS R_OCR_NO
                , T2.OPETR_ID AS R_OPETR_ID
                ,T1.RENT_ODR /* 임대 재계약 차수 */
                ,T1.RENT_BGNDE /* 임대시작일자 */
                ,T1.RENT_ENDDE /* 임대종료일자 */
              FROM TBSLS_LCNTRCTR_PAY T1
                , TBSLS_LAD_RCIV_PSTMRK T2
             WHERE 1 = 1
              AND T1.CNTRCTR_NO = T2.CNTRCTR_NO(+)
              AND T1.PAY_NO = T2.PAY_NO(+)
              AND T1.CNTRCTR_NO = #CNTRCTR_NO#
              AND T1.LTTOT_RENT_SE = #LTTOT_RENT_SE#
             ORDER BY T1.PAY_CODE, T1.PAY_ODR , T1.PAY_TMLMT,  T1.PAY_SE	    
    </select>

	<!-- 납부서 출력	(토지) -->
	<select id="SLS000000DAO.selectBillPrintList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.LAD_CODE,											/* 토지코드 */
		       a.BLCK,												/* 블럭 */
		       a.LOT,												/* 롯트 */
		       a.LOT_TY,											/* 롯트 타입 */
		       h.CSTMR_NM,											/* 고객명 */
		       b.LAD_NM || ' ' || TRIM (a.BLCK || '-' || a.LOT || '-' || a.LOT_TY) 	AS APT_ADDR,	/* 토지명_블럭_롯트_타입 */
		       NVL (a.ZIP_DM, h.ZIP) 					AS POSTNO,	/* 우편번호 */
		       DECODE (a.ZIP_DM, '', TRIM(h.ADRES), TRIM(a.BASS_ADRES_DM))			AS ADDR1,		/* 주소 */
		       DECODE (a.ZIP_DM, '', TRIM(h.ADRES_DETAIL), TRIM(a.DETAIL_ADRES_DM))	AS ADDR2,		/* 상세주소 */
		       SUBSTR (d.PAYEND_DATE1, 1, 4) 			AS BILL_YEAR, 
		       SUBSTR (d.PAYEND_DATE1, 6, 2) 			AS BILL_MONTH, 
		       SUBSTR (c.TR_DATE, 1, 4) 				AS CAL_YEAR,
		       SUBSTR (c.TR_DATE, 5, 2) 				AS CAL_MONTH,
		       SUBSTR (c.TR_DATE, 7, 2) 				AS CAL_DAY,
		       SUBSTR (c.TR_EDATE, 1, 4) 				AS END_YEAR,
		       SUBSTR (c.TR_EDATE, 5, 2) 				AS END_MONTH,
		       SUBSTR (c.TR_EDATE, 7, 2) 				AS END_DAY,
		       '토   지   명' 							AS C_TITLE1,
		       b.LAD_NM 								AS C_CONT1,
		       '블럭  / 롯트' 							AS C_TITLE2,
		       TRIM (a.BLCK || '-' || a.LOT || '-' || a.LOT_TY)		AS C_CONT2,
		       '용 도  구 분' 							AS C_TITLE3,
		       SFCMP_GET_CODENM('LAD003', g.PRPOS_SE) 	AS C_CONT3,
		       '납   부   자' 							AS C_TITLE4,
		       h.CSTMR_NM 								AS C_CONT4,
		       '납부대상금액' 						  	AS A_TITLE1,
		       d.PAY_AMT 								AS A_AMT1,
		       '차감금액' 								AS A_TITLE2,
		       d.SALE_AMT 								AS A_AMT2,
		       '연체금액' 								AS A_TITLE3,
		       d.INT_AMT 								AS A_AMT3,
		       '  ' 									AS A_TITLE4,
		       0 										AS A_AMT4,
		       (d.PAY_AMT + d.SALE_AMT + d.INT_AMT) 	AS A_AMT5,
       		   SFPMS_GET_A1_RATIO('LAD', SUBSTR(#CNTRCTR_NO#, 1, 3),'MIN') AS MIN_RATIO, 
       		   SFPMS_GET_A1_RATIO('LAD', SUBSTR(#CNTRCTR_NO#, 1, 3),'MAX') AS MAX_RATIO,
		       f.DEPT_NM,
		       f.OTEL_NO,
		       f.OFAX_NO,
		       d.*,
		       c.BILL_DIV,
		       c.TR_DATE,
		       c.TR_NO,
		          d.CORT_NM1
		       || DECODE (d.CORT_NM2,  '', '',
		          DECODE (d.CORT_NM3,  '', ' ~ ' || d.CORT_NM2,
		          DECODE (d.CORT_NM4,  '', ' ~ ' || d.CORT_NM3,
		          DECODE (d.CORT_NM5,  '', ' ~ ' || d.CORT_NM4,
		          DECODE (d.CORT_NM6,  '', ' ~ ' || d.CORT_NM5,
		          DECODE (d.CORT_NM7,  '', ' ~ ' || d.CORT_NM6,
		          DECODE (d.CORT_NM8,  '', ' ~ ' || d.CORT_NM7,
		          DECODE (d.CORT_NM9,  '', ' ~ ' || d.CORT_NM8,
		          DECODE (d.CORT_NM10, '', ' ~ ' || d.CORT_NM9,
		          DECODE (d.CORT_NM11, '', ' ~ ' || d.CORT_NM10,
		          DECODE (d.CORT_NM12, '', ' ~ ' || d.CORT_NM11,
		          ''))))))))))) 	AS CORT_NM,
		       v.BANK1,
		       v.ACCT_NO1,
		       v.BANK2,
		       v.ACCT_NO2,
		       v.BANK3,
		       v.ACCT_NO3,
		       v.BANK4,
		       v.ACCT_NO4
		  FROM TBSLS_LCNTRCTR a,
		       TBSLS_LAD_INFO b,
		       TBSLS_LAD_DETAIL_INFO g,
		       TBSLS_LAD_CSTMR h,
		       VA_BILL c,
		       VI_VA_MAST v,	
		       (  SELECT CRT_ID,
		                 BANK_CD,
		                 VACCT_NO,
			             MAX (DECODE (ROWNUM, 1, CORT_NM, '')) AS CORT_NM1, 
			             MAX (DECODE (ROWNUM, 1, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE1, 
			             SUM (DECODE (ROWNUM, 1, PAY_AMT, NULL)) AS PAY_AMT1, 
			             SUM (DECODE (ROWNUM, 1, SALE_AMT, NULL)) AS SALE_AMT1, 
			             SUM (DECODE (ROWNUM, 1, INT_AMT, NULL)) AS INT_AMT1, 
			             SUM (DECODE (ROWNUM, 1, BILL_AMT, NULL)) AS BILL_AMT1, 
			             MAX (DECODE (ROWNUM, 2, CORT_NM, '')) AS CORT_NM2, 
			             MAX (DECODE (ROWNUM, 2, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE2, 
			             SUM (DECODE (ROWNUM, 2, PAY_AMT, NULL)) AS PAY_AMT2, 
			             SUM (DECODE (ROWNUM, 2, SALE_AMT, NULL)) AS SALE_AMT2, 
			             SUM (DECODE (ROWNUM, 2, INT_AMT, NULL)) AS INT_AMT2, 
			             SUM (DECODE (ROWNUM, 2, BILL_AMT, NULL)) AS BILL_AMT2, 
			             MAX (DECODE (ROWNUM, 3, CORT_NM, '')) AS CORT_NM3, 
			             MAX (DECODE (ROWNUM, 3, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE3, 
			             SUM (DECODE (ROWNUM, 3, PAY_AMT, NULL)) AS PAY_AMT3, 
			             SUM (DECODE (ROWNUM, 3, SALE_AMT, NULL)) AS SALE_AMT3, 
			             SUM (DECODE (ROWNUM, 3, INT_AMT, NULL)) AS INT_AMT3, 
			             SUM (DECODE (ROWNUM, 3, BILL_AMT, NULL)) AS BILL_AMT3, 
			             MAX (DECODE (ROWNUM, 4, CORT_NM, '')) AS CORT_NM4, 
			             MAX (DECODE (ROWNUM, 4, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE4, 
			             SUM (DECODE (ROWNUM, 4, PAY_AMT, NULL)) AS PAY_AMT4, 
			             SUM (DECODE (ROWNUM, 4, SALE_AMT, NULL)) AS SALE_AMT4, 
			             SUM (DECODE (ROWNUM, 4, INT_AMT, NULL)) AS INT_AMT4, 
			             SUM (DECODE (ROWNUM, 4, BILL_AMT, NULL)) AS BILL_AMT4, 
			             MAX (DECODE (ROWNUM, 5, CORT_NM, '')) AS CORT_NM5, 
			             MAX (DECODE (ROWNUM, 5, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE5, 
			             SUM (DECODE (ROWNUM, 5, PAY_AMT, NULL)) AS PAY_AMT5, 
			             SUM (DECODE (ROWNUM, 5, SALE_AMT, NULL)) AS SALE_AMT5, 
			             SUM (DECODE (ROWNUM, 5, INT_AMT, NULL)) AS INT_AMT5, 
			             SUM (DECODE (ROWNUM, 5, BILL_AMT, NULL)) AS BILL_AMT5, 
			             MAX (DECODE (ROWNUM, 6, CORT_NM, '')) AS CORT_NM6, 
			             MAX (DECODE (ROWNUM, 6, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE6, 
			             SUM (DECODE (ROWNUM, 6, PAY_AMT, NULL)) AS PAY_AMT6, 
			             SUM (DECODE (ROWNUM, 6, SALE_AMT, NULL)) AS SALE_AMT6, 
			             SUM (DECODE (ROWNUM, 6, INT_AMT, NULL)) AS INT_AMT6, 
			             SUM (DECODE (ROWNUM, 6, BILL_AMT, NULL)) AS BILL_AMT6, 
			             MAX (DECODE (ROWNUM, 7, CORT_NM, '')) AS CORT_NM7, 
			             MAX (DECODE (ROWNUM, 7, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE7, 
			             SUM (DECODE (ROWNUM, 7, PAY_AMT, NULL)) AS PAY_AMT7, 
			             SUM (DECODE (ROWNUM, 7, SALE_AMT, NULL)) AS SALE_AMT7, 
			             SUM (DECODE (ROWNUM, 7, INT_AMT, NULL)) AS INT_AMT7, 
			             SUM (DECODE (ROWNUM, 7, BILL_AMT, NULL)) AS BILL_AMT7, 
			             MAX (DECODE (ROWNUM, 8, CORT_NM, '')) AS CORT_NM8, 
			             MAX (DECODE (ROWNUM, 8, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE8, 
			             SUM (DECODE (ROWNUM, 8, PAY_AMT, NULL)) AS PAY_AMT8, 
			             SUM (DECODE (ROWNUM, 8, SALE_AMT, NULL)) AS SALE_AMT8, 
			             SUM (DECODE (ROWNUM, 8, INT_AMT, NULL)) AS INT_AMT8, 
			             SUM (DECODE (ROWNUM, 8, BILL_AMT, NULL)) AS BILL_AMT8, 
			             MAX (DECODE (ROWNUM, 9, CORT_NM, '')) AS CORT_NM9, 
			             MAX (DECODE (ROWNUM, 9, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE9, 
			             SUM (DECODE (ROWNUM, 9, PAY_AMT, NULL)) AS PAY_AMT9, 
			             SUM (DECODE (ROWNUM, 9, SALE_AMT, NULL)) AS SALE_AMT9, 
			             SUM (DECODE (ROWNUM, 9, INT_AMT, NULL)) AS INT_AMT9, 
			             SUM (DECODE (ROWNUM, 9, BILL_AMT, NULL)) AS BILL_AMT9, 
			             MAX (DECODE (ROWNUM, 10, CORT_NM, '')) AS CORT_NM10, 
			             MAX (DECODE (ROWNUM, 10, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE10, 
			             SUM (DECODE (ROWNUM, 10, PAY_AMT, NULL)) AS PAY_AMT10, 
			             SUM (DECODE (ROWNUM, 10, SALE_AMT, NULL)) AS SALE_AMT10, 
			             SUM (DECODE (ROWNUM, 10, INT_AMT, NULL)) AS INT_AMT10, 
			             SUM (DECODE (ROWNUM, 10, BILL_AMT, NULL)) AS BILL_AMT10, 
			             MAX (DECODE (ROWNUM, 11, CORT_NM, '')) AS CORT_NM11, 
			             MAX (DECODE (ROWNUM, 11, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE11, 
			             SUM (DECODE (ROWNUM, 11, PAY_AMT, NULL)) AS PAY_AMT11, 
			             SUM (DECODE (ROWNUM, 11, SALE_AMT, NULL)) AS SALE_AMT11, 
			             SUM (DECODE (ROWNUM, 11, INT_AMT, NULL)) AS INT_AMT11, 
			             SUM (DECODE (ROWNUM, 11, BILL_AMT, NULL)) AS BILL_AMT11, 
			             MAX (DECODE (ROWNUM, 12, CORT_NM, '')) AS CORT_NM12, 
			             MAX (DECODE (ROWNUM, 12, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE12, 
			             SUM (DECODE (ROWNUM, 12, PAY_AMT, NULL)) AS PAY_AMT12, 
			             SUM (DECODE (ROWNUM, 12, SALE_AMT, NULL)) AS SALE_AMT12, 
			             SUM (DECODE (ROWNUM, 12, INT_AMT, NULL)) AS INT_AMT12, 
			             SUM (DECODE (ROWNUM, 12, BILL_AMT, NULL)) AS BILL_AMT12,
			             MAX 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN CORT_NM 
			                 END
			             ) AS CORT_NM13, 
			             MAX 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD') 
			                 END
			             ) AS PAYEND_DATE13, 
			             SUM 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN PAY_AMT 
			                 END
			             ) AS PAY_AMT13, 
			             SUM 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN SALE_AMT 
			                 END
			             ) AS SALE_AMT13, 
			             SUM 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN INT_AMT 
			                 END
			             ) AS INT_AMT13, 
			             SUM 
			             (
			                 CASE 
			                     WHEN ROWNUM > 12 
			                     THEN BILL_AMT 
			                 END
			             ) AS BILL_AMT13, 
			             SUM (PAY_AMT) 	AS PAY_AMT, 
			             SUM (SALE_AMT) AS SALE_AMT, 
			             SUM (INT_AMT) 	AS INT_AMT, 
			             SUM (BILL_AMT) AS BILL_AMT 
		            FROM (  SELECT a.*,
		                           DECODE (CORT_CODE, 'RN', TO_CHAR (PAYEND_DATE, 'YYYY-MM '), '') || SFCMP_GET_CODENM('LAD0A1', CORT_CODE) AS CORT_NM
		                      FROM VA_BILL_DETAIL a
		                     WHERE BANK_CD = #BANK_CD# AND VACCT_NO = #VACCT_NO# AND CRT_ID = #CNTRCTR_NO#
		                  ORDER BY PAYEND_DATE) b
		        GROUP BY CRT_ID, BANK_CD, VACCT_NO) d,
		       (SELECT '판매지원처' AS DEPT_NM,
		               '전화:' || CHRCTR_PREPAR_VALUE_0 AS OTEL_NO,
		               'FAX :' || CHRCTR_PREPAR_VALUE_1 AS OFAX_NO
		          FROM TBCOM_CMMN_CODE
		         WHERE     GRP_CODE = 'COM027'
		               AND CODE_NM 	= 'LN') f
		 WHERE     a.CNTRCTR_NO	    = c.CRT_ID
		       AND a.LAD_CODE 		= b.LAD_CODE(+)
		       AND c.BANK_CD 		= d.BANK_CD
		       AND c.VACCT_NO 		= d.VACCT_NO
		       AND c.CRT_ID 		= d.CRT_ID
		       AND a.LAD_CODE		= g.LAD_CODE
		       AND a.BLCK			= g.BLCK
		       AND a.LOT			= g.LOT
		       AND a.LOT_TY			= g.LOT_TY
		       AND a.LAD_CSTMR_NO	= h.LAD_CSTMR_NO
		       AND a.CNTRCTR_NO		= v.CRT_ID
		       AND v.CRT_DIV		= 'LN'	/* 가상계좌부서구분 : LN-보상판매처(토지), SL-보상판매처(주택), RN-주거복지처(영구임대), MA-관리비(다가구), BS-주거복지처(보증금지원) */
	</select>

	<!-- 납부서 출력	(토지) -->
	<select id="SLS000000DAO.selectBillPrintListAll" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	
        SELECT a.LAD_CODE,                                            /* 토지코드 */
               a.BLCK,                                                /* 블럭 */
               a.LOT,                                                /* 롯트 */
               a.LOT_TY,                                            /* 롯트 타입 */
               h.CSTMR_NM,                                            /* 고객명 */
               b.LAD_NM || ' ' || TRIM (a.BLCK || '-' || a.LOT || '-' || a.LOT_TY)     AS APT_ADDR,    /* 토지명_블럭_롯트_타입 */
               NVL (a.ZIP_DM, h.ZIP)                     AS POSTNO,    /* 우편번호 */
               DECODE (a.ZIP_DM, '', TRIM(h.ADRES), TRIM(a.BASS_ADRES_DM))            AS ADDR1,        /* 주소 */
               DECODE (a.ZIP_DM, '', TRIM(h.ADRES_DETAIL), TRIM(a.DETAIL_ADRES_DM))    AS ADDR2,        /* 상세주소 */
               SUBSTR (d.PAYEND_DATE1, 1, 4)             AS BILL_YEAR, 
               SUBSTR (d.PAYEND_DATE1, 6, 2)             AS BILL_MONTH, 
               SUBSTR (c.TR_DATE, 1, 4)                 AS CAL_YEAR,
               SUBSTR (c.TR_DATE, 5, 2)                 AS CAL_MONTH,
               SUBSTR (c.TR_DATE, 7, 2)                 AS CAL_DAY,
               SUBSTR (c.TR_EDATE, 1, 4)                 AS END_YEAR,
               SUBSTR (c.TR_EDATE, 5, 2)                 AS END_MONTH,
               SUBSTR (c.TR_EDATE, 7, 2)                 AS END_DAY,
               '토   지   명'                             AS C_TITLE1,
               b.LAD_NM                                 AS C_CONT1,
               '블럭  / 롯트'                             AS C_TITLE2,
               TRIM (a.BLCK || '-' || a.LOT || '-' || a.LOT_TY)        AS C_CONT2,
               '용 도  구 분'                             AS C_TITLE3,
               SFCMP_GET_CODENM('LAD003', g.PRPOS_SE)     AS C_CONT3,
               '납   부   자'                             AS C_TITLE4,
               h.CSTMR_NM                                 AS C_CONT4,
               '납부대상금액'                               AS A_TITLE1,
               d.PAY_AMT                                 AS A_AMT1,
               '차감금액'                                 AS A_TITLE2,
               d.SALE_AMT                                 AS A_AMT2,
               '연체금액'                                 AS A_TITLE3,
               d.INT_AMT                                 AS A_AMT3,
               '  '                                     AS A_TITLE4,
               0                                         AS A_AMT4,
               (d.PAY_AMT + d.SALE_AMT + d.INT_AMT)     AS A_AMT5,
                  SFPMS_GET_A1_RATIO('LAD', A.LAD_CODE ,'MIN') AS MIN_RATIO, 
                  SFPMS_GET_A1_RATIO('LAD', A.LAD_CODE ,'MAX') AS MAX_RATIO,
               f.DEPT_NM,
               f.OTEL_NO,
               f.OFAX_NO,
               d.*,
               c.BILL_DIV,
               c.TR_DATE,
               c.TR_NO,
                  d.CORT_NM1
               || DECODE (d.CORT_NM2,  '', '',
                  DECODE (d.CORT_NM3,  '', ' ~ ' || d.CORT_NM2,
                  DECODE (d.CORT_NM4,  '', ' ~ ' || d.CORT_NM3,
                  DECODE (d.CORT_NM5,  '', ' ~ ' || d.CORT_NM4,
                  DECODE (d.CORT_NM6,  '', ' ~ ' || d.CORT_NM5,
                  DECODE (d.CORT_NM7,  '', ' ~ ' || d.CORT_NM6,
                  DECODE (d.CORT_NM8,  '', ' ~ ' || d.CORT_NM7,
                  DECODE (d.CORT_NM9,  '', ' ~ ' || d.CORT_NM8,
                  DECODE (d.CORT_NM10, '', ' ~ ' || d.CORT_NM9,
                  DECODE (d.CORT_NM11, '', ' ~ ' || d.CORT_NM10,
                  DECODE (d.CORT_NM12, '', ' ~ ' || d.CORT_NM11,
                  '')))))))))))     AS CORT_NM,
               v.BANK1,
               v.ACCT_NO1,
               v.BANK2,
               v.ACCT_NO2,
               v.BANK3,
               v.ACCT_NO3,
               v.BANK4,
               v.ACCT_NO4
          FROM TBSLS_LCNTRCTR a,
               TBSLS_LAD_INFO b,
               TBSLS_LAD_DETAIL_INFO g,
               TBSLS_LAD_CSTMR h,
               VA_BILL c,
               VI_VA_MAST v,    
               (  SELECT CRT_ID,
                         BANK_CD,
                         VACCT_NO,
                         MAX (DECODE (SN, 1, CORT_NM, '')) AS CORT_NM1, 
                         MAX (DECODE (SN, 1, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE1, 
                         SUM (DECODE (SN, 1, PAY_AMT, NULL)) AS PAY_AMT1, 
                         SUM (DECODE (SN, 1, SALE_AMT, NULL)) AS SALE_AMT1, 
                         SUM (DECODE (SN, 1, INT_AMT, NULL)) AS INT_AMT1, 
                         SUM (DECODE (SN, 1, BILL_AMT, NULL)) AS BILL_AMT1, 
                         MAX (DECODE (SN, 2, CORT_NM, '')) AS CORT_NM2, 
                         MAX (DECODE (SN, 2, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE2, 
                         SUM (DECODE (SN, 2, PAY_AMT, NULL)) AS PAY_AMT2, 
                         SUM (DECODE (SN, 2, SALE_AMT, NULL)) AS SALE_AMT2, 
                         SUM (DECODE (SN, 2, INT_AMT, NULL)) AS INT_AMT2, 
                         SUM (DECODE (SN, 2, BILL_AMT, NULL)) AS BILL_AMT2, 
                         MAX (DECODE (SN, 3, CORT_NM, '')) AS CORT_NM3, 
                         MAX (DECODE (SN, 3, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE3, 
                         SUM (DECODE (SN, 3, PAY_AMT, NULL)) AS PAY_AMT3, 
                         SUM (DECODE (SN, 3, SALE_AMT, NULL)) AS SALE_AMT3, 
                         SUM (DECODE (SN, 3, INT_AMT, NULL)) AS INT_AMT3, 
                         SUM (DECODE (SN, 3, BILL_AMT, NULL)) AS BILL_AMT3, 
                         MAX (DECODE (SN, 4, CORT_NM, '')) AS CORT_NM4, 
                         MAX (DECODE (SN, 4, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE4, 
                         SUM (DECODE (SN, 4, PAY_AMT, NULL)) AS PAY_AMT4, 
                         SUM (DECODE (SN, 4, SALE_AMT, NULL)) AS SALE_AMT4, 
                         SUM (DECODE (SN, 4, INT_AMT, NULL)) AS INT_AMT4, 
                         SUM (DECODE (SN, 4, BILL_AMT, NULL)) AS BILL_AMT4, 
                         MAX (DECODE (SN, 5, CORT_NM, '')) AS CORT_NM5, 
                         MAX (DECODE (SN, 5, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE5, 
                         SUM (DECODE (SN, 5, PAY_AMT, NULL)) AS PAY_AMT5, 
                         SUM (DECODE (SN, 5, SALE_AMT, NULL)) AS SALE_AMT5, 
                         SUM (DECODE (SN, 5, INT_AMT, NULL)) AS INT_AMT5, 
                         SUM (DECODE (SN, 5, BILL_AMT, NULL)) AS BILL_AMT5, 
                         MAX (DECODE (SN, 6, CORT_NM, '')) AS CORT_NM6, 
                         MAX (DECODE (SN, 6, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE6, 
                         SUM (DECODE (SN, 6, PAY_AMT, NULL)) AS PAY_AMT6, 
                         SUM (DECODE (SN, 6, SALE_AMT, NULL)) AS SALE_AMT6, 
                         SUM (DECODE (SN, 6, INT_AMT, NULL)) AS INT_AMT6, 
                         SUM (DECODE (SN, 6, BILL_AMT, NULL)) AS BILL_AMT6, 
                         MAX (DECODE (SN, 7, CORT_NM, '')) AS CORT_NM7, 
                         MAX (DECODE (SN, 7, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE7, 
                         SUM (DECODE (SN, 7, PAY_AMT, NULL)) AS PAY_AMT7, 
                         SUM (DECODE (SN, 7, SALE_AMT, NULL)) AS SALE_AMT7, 
                         SUM (DECODE (SN, 7, INT_AMT, NULL)) AS INT_AMT7, 
                         SUM (DECODE (SN, 7, BILL_AMT, NULL)) AS BILL_AMT7, 
                         MAX (DECODE (SN, 8, CORT_NM, '')) AS CORT_NM8, 
                         MAX (DECODE (SN, 8, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE8, 
                         SUM (DECODE (SN, 8, PAY_AMT, NULL)) AS PAY_AMT8, 
                         SUM (DECODE (SN, 8, SALE_AMT, NULL)) AS SALE_AMT8, 
                         SUM (DECODE (SN, 8, INT_AMT, NULL)) AS INT_AMT8, 
                         SUM (DECODE (SN, 8, BILL_AMT, NULL)) AS BILL_AMT8, 
                         MAX (DECODE (SN, 9, CORT_NM, '')) AS CORT_NM9, 
                         MAX (DECODE (SN, 9, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE9, 
                         SUM (DECODE (SN, 9, PAY_AMT, NULL)) AS PAY_AMT9, 
                         SUM (DECODE (SN, 9, SALE_AMT, NULL)) AS SALE_AMT9, 
                         SUM (DECODE (SN, 9, INT_AMT, NULL)) AS INT_AMT9, 
                         SUM (DECODE (SN, 9, BILL_AMT, NULL)) AS BILL_AMT9, 
                         MAX (DECODE (SN, 10, CORT_NM, '')) AS CORT_NM10, 
                         MAX (DECODE (SN, 10, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE10, 
                         SUM (DECODE (SN, 10, PAY_AMT, NULL)) AS PAY_AMT10, 
                         SUM (DECODE (SN, 10, SALE_AMT, NULL)) AS SALE_AMT10, 
                         SUM (DECODE (SN, 10, INT_AMT, NULL)) AS INT_AMT10, 
                         SUM (DECODE (SN, 10, BILL_AMT, NULL)) AS BILL_AMT10, 
                         MAX (DECODE (SN, 11, CORT_NM, '')) AS CORT_NM11, 
                         MAX (DECODE (SN, 11, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE11, 
                         SUM (DECODE (SN, 11, PAY_AMT, NULL)) AS PAY_AMT11, 
                         SUM (DECODE (SN, 11, SALE_AMT, NULL)) AS SALE_AMT11, 
                         SUM (DECODE (SN, 11, INT_AMT, NULL)) AS INT_AMT11, 
                         SUM (DECODE (SN, 11, BILL_AMT, NULL)) AS BILL_AMT11, 
                         MAX (DECODE (SN, 12, CORT_NM, '')) AS CORT_NM12, 
                         MAX (DECODE (SN, 12, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE12, 
                         SUM (DECODE (SN, 12, PAY_AMT, NULL)) AS PAY_AMT12, 
                         SUM (DECODE (SN, 12, SALE_AMT, NULL)) AS SALE_AMT12, 
                         SUM (DECODE (SN, 12, INT_AMT, NULL)) AS INT_AMT12, 
                         SUM (DECODE (SN, 12, BILL_AMT, NULL)) AS BILL_AMT12,
                         MAX 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN CORT_NM 
                             END
                         ) AS CORT_NM13, 
                         MAX 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD') 
                             END
                         ) AS PAYEND_DATE13, 
                         SUM 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN PAY_AMT 
                             END
                         ) AS PAY_AMT13, 
                         SUM 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN SALE_AMT 
                             END
                         ) AS SALE_AMT13, 
                         SUM 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN INT_AMT 
                             END
                         ) AS INT_AMT13, 
                         SUM 
                         (
                             CASE 
                                 WHEN SN > 12 
                                 THEN BILL_AMT 
                             END
                         ) AS BILL_AMT13, 
                         SUM (PAY_AMT)     AS PAY_AMT, 
                         SUM (SALE_AMT) AS SALE_AMT, 
                         SUM (INT_AMT)     AS INT_AMT, 
                         SUM (BILL_AMT) AS BILL_AMT 
                    FROM (  SELECT ROW_NUMBER() OVER(PARTITION BY a.crt_id  ORDER BY a.crt_id, a.payend_date)  AS SN
                                            , a.*,
                                   DECODE (CORT_CODE, 'RN', TO_CHAR (PAYEND_DATE, 'YYYY-MM '), '') || SFCMP_GET_CODENM('LAD0A1', CORT_CODE) AS CORT_NM
                              FROM VA_BILL_DETAIL a
                             WHERE BANK_CD = '031' 
                             ORDER BY crt_id, PAYEND_DATE) b
                GROUP BY CRT_ID, BANK_CD, VACCT_NO) d,
               (SELECT '판매지원처' AS DEPT_NM,
                       '전화:' || CHRCTR_PREPAR_VALUE_0 AS OTEL_NO,
                       'FAX :' || CHRCTR_PREPAR_VALUE_1 AS OFAX_NO
                  FROM TBCOM_CMMN_CODE
                 WHERE     GRP_CODE = 'COM027'
                       AND CODE_NM     = 'LN') f
         WHERE     a.CNTRCTR_NO        = c.CRT_ID
               AND a.LAD_CODE         = b.LAD_CODE(+)
               AND c.BANK_CD         = d.BANK_CD
               AND c.VACCT_NO         = d.VACCT_NO
               AND c.CRT_ID         = d.CRT_ID
               AND a.LAD_CODE        = g.LAD_CODE
               AND a.BLCK            = g.BLCK
               AND a.LOT            = g.LOT
               AND a.LOT_TY            = g.LOT_TY
               AND a.LAD_CSTMR_NO    = h.LAD_CSTMR_NO
               AND a.CNTRCTR_NO        = v.CRT_ID
               AND v.CRT_DIV        = 'LN'    /* 가상계좌부서구분 : LN-보상판매처(토지), SL-보상판매처(주택), RN-주거복지처(영구임대), MA-관리비(다가구), BS-주거복지처(보증금지원) */
        <isNotEmpty property="CNTRCTR_NO">
               AND A.CNTRCTR_NO IN
        <iterate property="ARR_CNTRCTR_NO"  open="(" close=")" conjunction="," >
               #ARR_CNTRCTR_NO[]#
        </iterate>
        </isNotEmpty>    	
	
	</select>

	
	<!-- 납부서 출력	(주택: 분양, 임대) -->
	<select id="SLS000000DAO.selectBillPrintListHouse" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.HOUSE_CODE
		  , A.DONG
		  , A.HO
		  , H.CSTMR_NM
		  , B.HOUSE_NM || ' ' ||TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO)) AS APT_ADDR
		  , CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231')<![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN    
                 DECODE (NVL (a.bass_adres_dm, '0'), '0', b.locplc_zip, a.zip_dm )
		            ELSE DECODE (NVL (a.bass_adres_dm, '0'), '0', b.locplc_zip, h.zip ) 
		       END AS postno,
		       CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231')<![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN
		               DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (b.locplc_bass_adres || ' ' || b.locplc_detail_adres),
		                       TRIM (a.bass_adres_dm || ' ' || a.detail_adres_dm)
		                      ) 
		            ELSE 
		              DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (h.adres),
		                       TRIM (a.bass_adres_dm)
		                      ) 
		       END AS addr1,
		       CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231') <![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN
				             DECODE (NVL (a.bass_adres_dm, '0'),
				                   '0', b.house_nm
				                    || ' '
				                    || TRIM (TO_NUMBER (a.dong) || '-' || TO_NUMBER (a.ho)),
				                   '')
				            ELSE 
				                     DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (h.adres_detail),
		                       TRIM (a.detail_adres_dm)
		                      )  
				END  AS addr2
       	  , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'YYYY') 		AS BILL_YEAR
       	  , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'MM') 			AS BILL_MONTH
		  , SUBSTR(C.TR_DATE, 1, 4)                                     AS CAL_YEAR
		  , SUBSTR(C.TR_DATE, 5, 2)                                     AS CAL_MONTH
		  , SUBSTR(C.TR_DATE, 7, 2)                                     AS CAL_DAY
		  , SUBSTR(C.TR_EDATE, 1, 4)                                    AS END_YEAR
		  , SUBSTR(C.TR_EDATE, 5, 2)                                    AS END_MONTH
		  , SUBSTR(C.TR_EDATE, 7, 2)                                    AS END_DAY
		  , '주택(아파트)'                                               	AS C_TITLE1
		  , B.HOUSE_NM                                                  AS C_CONT1
		  , '동   호   수'                                               	AS C_TITLE2
		  , TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO))             AS C_CONT2
		  , '납   부   자'                                               	AS C_TITLE3
		  , H.CSTMR_NM                                                  AS C_CONT3
		  , '자동이체코드'                                               	AS C_TITLE4
		  , A.HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO                    AS C_CONT4
		  , '납부대상금액'                                               	AS A_TITLE1
		  , D.PAY_AMT                                                   AS A_AMT1
		  , '차감금액'                                                   AS A_TITLE2
		  , D.SALE_AMT                                                  AS A_AMT2
		  , '연체금액'                                                   AS A_TITLE3
		  , D.INT_AMT                                                   AS A_AMT3
		  , '  '                                                        AS A_TITLE4
		  , 0                                                           AS A_AMT4
		  , D.PAY_AMT + D.SALE_AMT + D.INT_AMT                          AS A_AMT5
		  , SFPMS_GET_A1_RATIO('HOU', #HOUSE_CODE#, 'MIN') 				AS MIN_RATIO
		  , SFPMS_GET_A1_RATIO('HOU', #HOUSE_CODE#, 'MAX') 				AS MAX_RATIO
		  , F.OPOST_NO
		  , F.OADDR1
		  , F.OADDR2
		  , F.OTEL_NO
		  , F.OFAX_NO
		  , D.*
		  , C.BILL_DIV
		  , C.TR_DATE
		  , C.TR_NO
		  , A.HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO AS AUTO_CODE
		  , (SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
                      FROM TBCOM_CMMN_CODE
                     WHERE GRP_CODE = 'PCOM05'
                       AND CODE = '06')                                AS BIZ_NO
	      , V.BANK1
	      , V.ACCT_NO1
	      , V.BANK2
	      , V.ACCT_NO2
	      , V.BANK3
	      , V.ACCT_NO3
	      , V.BANK4
	      , V.ACCT_NO4
		FROM TBSLS_HCNTRCTR A
		  , TBSLS_HOUSE_INFO B
		  , TBSLS_HOUSE_CSTMR H
		  , VA_BILL C
		  , VI_VA_MAST V
		  ,(
		        SELECT CRT_ID
		          , BANK_CD
		          , VACCT_NO
		          , MAX(DECODE(ROWNUM, 1, CORT_NM, ''))      AS CORT_NM1
		          , MAX(DECODE(ROWNUM, 1, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE1
		          , SUM(DECODE(ROWNUM, 1, PAY_AMT, NULL))    AS PAY_AMT1
		          , SUM(DECODE(ROWNUM, 1, SALE_AMT, NULL))   AS SALE_AMT1
		          , SUM(DECODE(ROWNUM, 1, INT_AMT, NULL))    AS INT_AMT1
		          , SUM(DECODE(ROWNUM, 1, BILL_AMT, NULL))   AS BILL_AMT1
		          , MAX(DECODE(ROWNUM, 2, CORT_NM, ''))      AS CORT_NM2
		          , MAX(DECODE(ROWNUM, 2, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE2
		          , SUM(DECODE(ROWNUM, 2, PAY_AMT, NULL))    AS PAY_AMT2
		          , SUM(DECODE(ROWNUM, 2, SALE_AMT, NULL))   AS SALE_AMT2
		          , SUM(DECODE(ROWNUM, 2, INT_AMT, NULL))    AS INT_AMT2
		          , SUM(DECODE(ROWNUM, 2, BILL_AMT, NULL))   AS BILL_AMT2
		          , MAX(DECODE(ROWNUM, 3, CORT_NM, ''))      AS CORT_NM3
		          , MAX(DECODE(ROWNUM, 3, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE3
		          , SUM(DECODE(ROWNUM, 3, PAY_AMT, NULL))    AS PAY_AMT3
		          , SUM(DECODE(ROWNUM, 3, SALE_AMT, NULL))   AS SALE_AMT3
		          , SUM(DECODE(ROWNUM, 3, INT_AMT, NULL))    AS INT_AMT3
		          , SUM(DECODE(ROWNUM, 3, BILL_AMT, NULL))   AS BILL_AMT3
		          , MAX(DECODE(ROWNUM, 4, CORT_NM, ''))      AS CORT_NM4
		          , MAX(DECODE(ROWNUM, 4, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE4
		          , SUM(DECODE(ROWNUM, 4, PAY_AMT, NULL))    AS PAY_AMT4
		          , SUM(DECODE(ROWNUM, 4, SALE_AMT, NULL))   AS SALE_AMT4
		          , SUM(DECODE(ROWNUM, 4, INT_AMT, NULL))    AS INT_AMT4
		          , SUM(DECODE(ROWNUM, 4, BILL_AMT, NULL))   AS BILL_AMT4
		          , MAX(DECODE(ROWNUM, 5, CORT_NM, ''))      AS CORT_NM5
		          , MAX(DECODE(ROWNUM, 5, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE5
		          , SUM(DECODE(ROWNUM, 5, PAY_AMT, NULL))    AS PAY_AMT5
		          , SUM(DECODE(ROWNUM, 5, SALE_AMT, NULL))   AS SALE_AMT5
		          , SUM(DECODE(ROWNUM, 5, INT_AMT, NULL))    AS INT_AMT5
		          , SUM(DECODE(ROWNUM, 5, BILL_AMT, NULL))   AS BILL_AMT5
		          , MAX(DECODE(ROWNUM, 6, CORT_NM, ''))      AS CORT_NM6
		          , MAX(DECODE(ROWNUM, 6, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE6
		          , SUM(DECODE(ROWNUM, 6, PAY_AMT, NULL))    AS PAY_AMT6
		          , SUM(DECODE(ROWNUM, 6, SALE_AMT, NULL))   AS SALE_AMT6
		          , SUM(DECODE(ROWNUM, 6, INT_AMT, NULL))    AS INT_AMT6
		          , SUM(DECODE(ROWNUM, 6, BILL_AMT, NULL))   AS BILL_AMT6
		          , MAX(DECODE(ROWNUM, 7, CORT_NM, ''))      AS CORT_NM7
		          , MAX(DECODE(ROWNUM, 7, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE7
		          , SUM(DECODE(ROWNUM, 7, PAY_AMT, NULL))    AS PAY_AMT7
		          , SUM(DECODE(ROWNUM, 7, SALE_AMT, NULL))   AS SALE_AMT7
		          , SUM(DECODE(ROWNUM, 7, INT_AMT, NULL))    AS INT_AMT7
		          , SUM(DECODE(ROWNUM, 7, BILL_AMT, NULL))   AS BILL_AMT7
		          , MAX(DECODE(ROWNUM, 8, CORT_NM, ''))      AS CORT_NM8
		          , MAX(DECODE(ROWNUM, 8, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE8
		          , SUM(DECODE(ROWNUM, 8, PAY_AMT, NULL))    AS PAY_AMT8
		          , SUM(DECODE(ROWNUM, 8, SALE_AMT, NULL))   AS SALE_AMT8
		          , SUM(DECODE(ROWNUM, 8, INT_AMT, NULL))    AS INT_AMT8
		          , SUM(DECODE(ROWNUM, 8, BILL_AMT, NULL))   AS BILL_AMT8
		          , MAX(DECODE(ROWNUM, 9, CORT_NM, ''))      AS CORT_NM9
		          , MAX(DECODE(ROWNUM, 9, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE9
		          , SUM(DECODE(ROWNUM, 9, PAY_AMT, NULL))    AS PAY_AMT9
		          , SUM(DECODE(ROWNUM, 9, SALE_AMT, NULL))   AS SALE_AMT9
		          , SUM(DECODE(ROWNUM, 9, INT_AMT, NULL))    AS INT_AMT9
		          , SUM(DECODE(ROWNUM, 9, BILL_AMT, NULL))   AS BILL_AMT9
		          , MAX(DECODE(ROWNUM, 10, CORT_NM, ''))     AS CORT_NM10
		          , MAX(DECODE(ROWNUM, 10, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE10
		          , SUM(DECODE(ROWNUM, 10, PAY_AMT, NULL))   AS PAY_AMT10
		          , SUM(DECODE(ROWNUM, 10, SALE_AMT, NULL))  AS SALE_AMT10
		          , SUM(DECODE(ROWNUM, 10, INT_AMT, NULL))   AS INT_AMT10
		          , SUM(DECODE(ROWNUM, 10, BILL_AMT, NULL))  AS BILL_AMT10
		          , MAX(DECODE(ROWNUM, 11, CORT_NM, ''))     AS CORT_NM11
		          , MAX(DECODE(ROWNUM, 11, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE11
		          , SUM(DECODE(ROWNUM, 11, PAY_AMT, NULL))   AS PAY_AMT11
		          , SUM(DECODE(ROWNUM, 11, SALE_AMT, NULL))  AS SALE_AMT11
		          , SUM(DECODE(ROWNUM, 11, INT_AMT, NULL))   AS INT_AMT11
		          , SUM(DECODE(ROWNUM, 11, BILL_AMT, NULL))  AS BILL_AMT11
		          , MAX(DECODE(ROWNUM, 12, CORT_NM, ''))     AS CORT_NM12
		          , MAX(DECODE(ROWNUM, 12, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE12
		          , SUM(DECODE(ROWNUM, 12, PAY_AMT, NULL))   AS PAY_AMT12
		          , SUM(DECODE(ROWNUM, 12, SALE_AMT, NULL))  AS SALE_AMT12
		          , SUM(DECODE(ROWNUM, 12, INT_AMT, NULL))   AS INT_AMT12
		          , SUM(DECODE(ROWNUM, 12, BILL_AMT, NULL))  AS BILL_AMT12
		          , MAX(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN CORT_NM
		                END) AS CORT_NM13
		          , MAX(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN PAYEND_DATE
		                END) AS PAYEND_DATE13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN PAY_AMT
		                END) AS PAY_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN SALE_AMT
		                END) AS SALE_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN INT_AMT
		                END) AS INT_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN BILL_AMT
		                END)      AS BILL_AMT13
		          , SUM(PAY_AMT)  AS PAY_AMT
		          , SUM(SALE_AMT) AS SALE_AMT
		          , SUM(INT_AMT)  AS INT_AMT
		          , SUM(BILL_AMT) AS BILL_AMT
		        FROM
		            (
		                SELECT A.*
		                  , DECODE(CORT_CODE, 'RN', TO_CHAR(PAYEND_DATE, 'YYYY-MM '), '') || SFCMP_GET_CODENM('HOU0A1',
		                    CORT_CODE) AS CORT_NM
		                FROM VA_BILL_DETAIL a
		                WHERE BANK_CD = #BANK_CD#
		                AND VACCT_NO  = #VACCT_NO#
		                AND CRT_ID    = #CNTRCTR_NO#
		                ORDER BY PAYEND_DATE
		            )
		            B
		        GROUP BY CRT_ID
		          , BANK_CD
		          , VACCT_NO
		    )
		    D
		  ,(
		        SELECT CHRCTR_PREPAR_VALUE_0 AS OPOST_NO
		          , CHRCTR_PREPAR_VALUE_1    AS OADDR1
		          , CHRCTR_PREPAR_VALUE_2    AS OADDR2
		          , '전화:' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_0
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'SL'
		            ) AS OTEL_NO
		          , 'FAX :' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_1
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'SL'
		            ) AS OFAX_NO
		        FROM TBCOM_CMMN_CODE A
		        WHERE GRP_CODE = 'COM027'
		        AND CODE       = 'SL'
		    )
		    F
		WHERE A.CNTRCTR_NO   = C.CRT_ID
		AND A.HOUSE_CODE     = B.HOUSE_CODE(+)
		AND C.BANK_CD        = D.BANK_CD
		AND C.VACCT_NO       = D.VACCT_NO
		AND C.CRT_ID         = D.CRT_ID
		AND A.HOUSE_CSTMR_NO = H.HOUSE_CSTMR_NO
		AND A.CNTRCTR_NO     = V.CRT_ID
		AND V.CRT_DIV        = 'SL'    /* 가상계좌부서구분 : LN-보상판매처(토지), SL-보상판매처(주택), RN-주거복지처(영구임대), MA-관리비(다가구), BS-주거복지처(보증금지원) */
    <isEqual property="OPT" compareValue="1">
    	  AND v.opt1 = '1'
    </isEqual>
    <isEqual property="OPT" compareValue="2">
          AND v.opt2 = '1'
    </isEqual>  		
	</select>

	<!-- 납부서 출력	(융자금) -->
	<select id="SLS000000DAO.selectBillPrintListHouse_Loan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.HOUSE_CODE
		  , A.MAIN_CODE AS DONG
		  , A.DETAIL_CODE AS HO
		  , H.CSTMR_NM
		  , B.HOUSE_NM || ' ' ||TRIM(TO_NUMBER(A.MAIN_CODE) ||'-'|| TO_NUMBER(A.DETAIL_CODE)) AS APT_ADDR
		  , h.zip AS postno
		  , TRIM (h.adres) AS addr1
		 , TRIM (h.adres_detail)  AS addr2
       	  , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'YYYY') 		AS BILL_YEAR
       	  , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'MM') 			AS BILL_MONTH
		  , SUBSTR(C.TR_DATE, 1, 4)                                     AS CAL_YEAR
		  , SUBSTR(C.TR_DATE, 5, 2)                                     AS CAL_MONTH
		  , SUBSTR(C.TR_DATE, 7, 2)                                     AS CAL_DAY
		  , SUBSTR(C.TR_EDATE, 1, 4)                                    AS END_YEAR
		  , SUBSTR(C.TR_EDATE, 5, 2)                                    AS END_MONTH
		  , SUBSTR(C.TR_EDATE, 7, 2)                                    AS END_DAY
		  , '주택(아파트)'                                               	AS C_TITLE1
		  , B.HOUSE_NM                                                  AS C_CONT1
		  , '동   호   수'                                               	AS C_TITLE2
		  , TRIM(TO_NUMBER(A.MAIN_CODE) ||'-'|| TO_NUMBER(A.DETAIL_CODE))             AS C_CONT2
		  , '납   부   자'                                               	AS C_TITLE3
		  , H.CSTMR_NM                                                  AS C_CONT3
		  , '자동이체코드'                                               	AS C_TITLE4
		  , A.HOUSE_CODE ||'-'|| A.MAIN_CODE ||'-'|| A.DETAIL_CODE                    AS C_CONT4
		  , '납부대상금액'                                               	AS A_TITLE1
		  , D.PAY_AMT                                                   AS A_AMT1
		  , '차감금액'                                                   AS A_TITLE2
		  , D.SALE_AMT                                                  AS A_AMT2
		  , '연체금액'                                                   AS A_TITLE3
		  , D.INT_AMT                                                   AS A_AMT3
		  , '  '                                                        AS A_TITLE4
		  , 0                                                           AS A_AMT4
		  , D.PAY_AMT + D.SALE_AMT + D.INT_AMT                          AS A_AMT5
		  , SFPMS_GET_A1_RATIO('HOU', #HOUSE_CODE#, 'MIN') 				AS MIN_RATIO
		  , SFPMS_GET_A1_RATIO('HOU', #HOUSE_CODE#, 'MAX') 				AS MAX_RATIO
		  , F.OPOST_NO
		  , F.OADDR1
		  , F.OADDR2
		  , F.OTEL_NO
		  , F.OFAX_NO
		  , D.*
		  , C.BILL_DIV
		  , C.TR_DATE
		  , C.TR_NO
		  , A.HOUSE_CODE ||'-'|| A.MAIN_CODE ||'-'|| A.DETAIL_CODE AS AUTO_CODE
		  , (SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
                      FROM TBCOM_CMMN_CODE
                     WHERE GRP_CODE = 'PCOM05'
                       AND CODE = '06')                                AS BIZ_NO
	      , V.BANK1
	      , V.ACCT_NO1
	      , V.BANK2
	      , V.ACCT_NO2
	      , V.BANK3
	      , V.ACCT_NO3
	      , V.BANK4
	      , V.ACCT_NO4
		FROM  TBSLS_HOUSE_LANMN_CNTRCTR A		          
		  , TBSLS_HOUSE_INFO B
		  , TBSLS_HOUSE_CSTMR H
		  , VA_BILL C
		  , VI_VA_MAST V
		  ,(
		        SELECT CRT_ID
		          , BANK_CD
		          , VACCT_NO
		          , MAX(DECODE(ROWNUM, 1, CORT_NM, ''))      AS CORT_NM1
		          , MAX(DECODE(ROWNUM, 1, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE1
		          , SUM(DECODE(ROWNUM, 1, PAY_AMT, NULL))    AS PAY_AMT1
		          , SUM(DECODE(ROWNUM, 1, SALE_AMT, NULL))   AS SALE_AMT1
		          , SUM(DECODE(ROWNUM, 1, INT_AMT, NULL))    AS INT_AMT1
		          , SUM(DECODE(ROWNUM, 1, BILL_AMT, NULL))   AS BILL_AMT1
		          , MAX(DECODE(ROWNUM, 2, CORT_NM, ''))      AS CORT_NM2
		          , MAX(DECODE(ROWNUM, 2, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE2
		          , SUM(DECODE(ROWNUM, 2, PAY_AMT, NULL))    AS PAY_AMT2
		          , SUM(DECODE(ROWNUM, 2, SALE_AMT, NULL))   AS SALE_AMT2
		          , SUM(DECODE(ROWNUM, 2, INT_AMT, NULL))    AS INT_AMT2
		          , SUM(DECODE(ROWNUM, 2, BILL_AMT, NULL))   AS BILL_AMT2
		          , MAX(DECODE(ROWNUM, 3, CORT_NM, ''))      AS CORT_NM3
		          , MAX(DECODE(ROWNUM, 3, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE3
		          , SUM(DECODE(ROWNUM, 3, PAY_AMT, NULL))    AS PAY_AMT3
		          , SUM(DECODE(ROWNUM, 3, SALE_AMT, NULL))   AS SALE_AMT3
		          , SUM(DECODE(ROWNUM, 3, INT_AMT, NULL))    AS INT_AMT3
		          , SUM(DECODE(ROWNUM, 3, BILL_AMT, NULL))   AS BILL_AMT3
		          , MAX(DECODE(ROWNUM, 4, CORT_NM, ''))      AS CORT_NM4
		          , MAX(DECODE(ROWNUM, 4, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE4
		          , SUM(DECODE(ROWNUM, 4, PAY_AMT, NULL))    AS PAY_AMT4
		          , SUM(DECODE(ROWNUM, 4, SALE_AMT, NULL))   AS SALE_AMT4
		          , SUM(DECODE(ROWNUM, 4, INT_AMT, NULL))    AS INT_AMT4
		          , SUM(DECODE(ROWNUM, 4, BILL_AMT, NULL))   AS BILL_AMT4
		          , MAX(DECODE(ROWNUM, 5, CORT_NM, ''))      AS CORT_NM5
		          , MAX(DECODE(ROWNUM, 5, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE5
		          , SUM(DECODE(ROWNUM, 5, PAY_AMT, NULL))    AS PAY_AMT5
		          , SUM(DECODE(ROWNUM, 5, SALE_AMT, NULL))   AS SALE_AMT5
		          , SUM(DECODE(ROWNUM, 5, INT_AMT, NULL))    AS INT_AMT5
		          , SUM(DECODE(ROWNUM, 5, BILL_AMT, NULL))   AS BILL_AMT5
		          , MAX(DECODE(ROWNUM, 6, CORT_NM, ''))      AS CORT_NM6
		          , MAX(DECODE(ROWNUM, 6, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE6
		          , SUM(DECODE(ROWNUM, 6, PAY_AMT, NULL))    AS PAY_AMT6
		          , SUM(DECODE(ROWNUM, 6, SALE_AMT, NULL))   AS SALE_AMT6
		          , SUM(DECODE(ROWNUM, 6, INT_AMT, NULL))    AS INT_AMT6
		          , SUM(DECODE(ROWNUM, 6, BILL_AMT, NULL))   AS BILL_AMT6
		          , MAX(DECODE(ROWNUM, 7, CORT_NM, ''))      AS CORT_NM7
		          , MAX(DECODE(ROWNUM, 7, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE7
		          , SUM(DECODE(ROWNUM, 7, PAY_AMT, NULL))    AS PAY_AMT7
		          , SUM(DECODE(ROWNUM, 7, SALE_AMT, NULL))   AS SALE_AMT7
		          , SUM(DECODE(ROWNUM, 7, INT_AMT, NULL))    AS INT_AMT7
		          , SUM(DECODE(ROWNUM, 7, BILL_AMT, NULL))   AS BILL_AMT7
		          , MAX(DECODE(ROWNUM, 8, CORT_NM, ''))      AS CORT_NM8
		          , MAX(DECODE(ROWNUM, 8, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE8
		          , SUM(DECODE(ROWNUM, 8, PAY_AMT, NULL))    AS PAY_AMT8
		          , SUM(DECODE(ROWNUM, 8, SALE_AMT, NULL))   AS SALE_AMT8
		          , SUM(DECODE(ROWNUM, 8, INT_AMT, NULL))    AS INT_AMT8
		          , SUM(DECODE(ROWNUM, 8, BILL_AMT, NULL))   AS BILL_AMT8
		          , MAX(DECODE(ROWNUM, 9, CORT_NM, ''))      AS CORT_NM9
		          , MAX(DECODE(ROWNUM, 9, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE9
		          , SUM(DECODE(ROWNUM, 9, PAY_AMT, NULL))    AS PAY_AMT9
		          , SUM(DECODE(ROWNUM, 9, SALE_AMT, NULL))   AS SALE_AMT9
		          , SUM(DECODE(ROWNUM, 9, INT_AMT, NULL))    AS INT_AMT9
		          , SUM(DECODE(ROWNUM, 9, BILL_AMT, NULL))   AS BILL_AMT9
		          , MAX(DECODE(ROWNUM, 10, CORT_NM, ''))     AS CORT_NM10
		          , MAX(DECODE(ROWNUM, 10, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE10
		          , SUM(DECODE(ROWNUM, 10, PAY_AMT, NULL))   AS PAY_AMT10
		          , SUM(DECODE(ROWNUM, 10, SALE_AMT, NULL))  AS SALE_AMT10
		          , SUM(DECODE(ROWNUM, 10, INT_AMT, NULL))   AS INT_AMT10
		          , SUM(DECODE(ROWNUM, 10, BILL_AMT, NULL))  AS BILL_AMT10
		          , MAX(DECODE(ROWNUM, 11, CORT_NM, ''))     AS CORT_NM11
		          , MAX(DECODE(ROWNUM, 11, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE11
		          , SUM(DECODE(ROWNUM, 11, PAY_AMT, NULL))   AS PAY_AMT11
		          , SUM(DECODE(ROWNUM, 11, SALE_AMT, NULL))  AS SALE_AMT11
		          , SUM(DECODE(ROWNUM, 11, INT_AMT, NULL))   AS INT_AMT11
		          , SUM(DECODE(ROWNUM, 11, BILL_AMT, NULL))  AS BILL_AMT11
		          , MAX(DECODE(ROWNUM, 12, CORT_NM, ''))     AS CORT_NM12
		          , MAX(DECODE(ROWNUM, 12, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE12
		          , SUM(DECODE(ROWNUM, 12, PAY_AMT, NULL))   AS PAY_AMT12
		          , SUM(DECODE(ROWNUM, 12, SALE_AMT, NULL))  AS SALE_AMT12
		          , SUM(DECODE(ROWNUM, 12, INT_AMT, NULL))   AS INT_AMT12
		          , SUM(DECODE(ROWNUM, 12, BILL_AMT, NULL))  AS BILL_AMT12
		          , MAX(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN CORT_NM
		                END) AS CORT_NM13
		          , MAX(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN PAYEND_DATE
		                END) AS PAYEND_DATE13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN PAY_AMT
		                END) AS PAY_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN SALE_AMT
		                END) AS SALE_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN INT_AMT
		                END) AS INT_AMT13
		          , SUM(
		                CASE
		                    WHEN ROWNUM > 12
		                    THEN BILL_AMT
		                END)      AS BILL_AMT13
		          , SUM(PAY_AMT)  AS PAY_AMT
		          , SUM(SALE_AMT) AS SALE_AMT
		          , SUM(INT_AMT)  AS INT_AMT
		          , SUM(BILL_AMT) AS BILL_AMT
		        FROM
		            (
		                SELECT A.*
		                  , DECODE(CORT_CODE, 'RN', TO_CHAR(PAYEND_DATE, 'YYYY-MM '), '') || SFCMP_GET_CODENM('HOU0A1',
		                    CORT_CODE) AS CORT_NM
		                FROM VA_BILL_DETAIL a
		                WHERE BANK_CD = #BANK_CD#
		                AND VACCT_NO  = #VACCT_NO#
		                AND CRT_ID    = #CNTRCTR_NO#
		                ORDER BY PAYEND_DATE
		            )
		            B
		        GROUP BY CRT_ID
		          , BANK_CD
		          , VACCT_NO
		    )
		    D
		  ,(
		        SELECT CHRCTR_PREPAR_VALUE_0 AS OPOST_NO
		          , CHRCTR_PREPAR_VALUE_1    AS OADDR1
		          , CHRCTR_PREPAR_VALUE_2    AS OADDR2
		          , '전화:' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_0
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'SL'
		            ) AS OTEL_NO
		          , 'FAX :' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_1
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'SL'
		            ) AS OFAX_NO
		        FROM TBCOM_CMMN_CODE A
		        WHERE GRP_CODE = 'COM027'
		        AND CODE       = 'SL'
		    )
		    F
		WHERE A.CNTRCTR_NO   = C.CRT_ID
		AND A.HOUSE_CODE     = B.HOUSE_CODE(+)
		AND C.BANK_CD        = D.BANK_CD
		AND C.VACCT_NO       = D.VACCT_NO
		AND C.CRT_ID         = D.CRT_ID
		AND A.HOUSE_CSTMR_NO = H.HOUSE_CSTMR_NO
		AND A.CNTRCTR_NO     = V.CRT_ID
		AND V.CRT_DIV        = 'SL'    /* 가상계좌부서구분 : LN-보상판매처(토지), SL-보상판매처(주택), RN-주거복지처(영구임대), MA-관리비(다가구), BS-주거복지처(보증금지원) */
    <isEqual property="OPT" compareValue="1">
    	  AND v.opt1 = '1'
    </isEqual>
    <isEqual property="OPT" compareValue="2">
          AND v.opt2 = '1'
    </isEqual>  		
	</select>
	
	<!-- 납부서 일괄출력	(주택: 분양, 임대) -->
	<select id="SLS000000DAO.selectBillPrintListHouseALL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT A.HOUSE_CODE
          , A.DONG
          , A.HO
          , H.CSTMR_NM
          , B.HOUSE_NM || ' ' ||TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO)) AS APT_ADDR
		    , CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231')<![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN    
                 DECODE (NVL (a.bass_adres_dm, '0'), '0', b.locplc_zip, a.zip_dm )
		            ELSE DECODE (NVL (a.bass_adres_dm, '0'), '0', b.locplc_zip, h.zip ) 
		       END AS postno,
		       CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231')<![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN
		               DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (b.locplc_bass_adres || ' ' || b.locplc_detail_adres),
		                       TRIM (a.bass_adres_dm || ' ' || a.detail_adres_dm)
		                      ) 
		            ELSE 
		              DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (h.adres),
		                       TRIM (a.bass_adres_dm)
		                      ) 
		       END AS addr1,
		       CASE WHEN b.HOUSE_SE in('S2','S4') AND nvl(a.RENT_BGNDE,'99991231') <![CDATA[	 < ]]> to_char(sysdate,'yyyymmdd') THEN
				             DECODE (NVL (a.bass_adres_dm, '0'),
				                   '0', b.house_nm
				                    || ' '
				                    || TRIM (TO_NUMBER (a.dong) || '-' || TO_NUMBER (a.ho)),
				                   '')
				            ELSE 
				                     DECODE (NVL (a.bass_adres_dm, '0'),
		                       '0', TRIM (h.adres_detail),
		                       TRIM (a.detail_adres_dm)
		                      )  
				END  AS addr2				    
             , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'YYYY')         AS BILL_YEAR
             , TO_CHAR(TO_DATE(PAYEND_DATE1, 'YYYY-MM-DD'), 'MM')             AS BILL_MONTH
          , SUBSTR(C.TR_DATE, 1, 4)                                     AS CAL_YEAR
          , SUBSTR(C.TR_DATE, 5, 2)                                     AS CAL_MONTH
          , SUBSTR(C.TR_DATE, 7, 2)                                     AS CAL_DAY
          , SUBSTR(C.TR_EDATE, 1, 4)                                    AS END_YEAR
          , SUBSTR(C.TR_EDATE, 5, 2)                                    AS END_MONTH
          , SUBSTR(C.TR_EDATE, 7, 2)                                    AS END_DAY
          , '주택(아파트)'                                                   AS C_TITLE1
          , B.HOUSE_NM                                                  AS C_CONT1
          , '동   호   수'                                                   AS C_TITLE2
          , TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO))             AS C_CONT2
          , '납   부   자'                                                   AS C_TITLE3
          , H.CSTMR_NM                                                  AS C_CONT3
          , '자동이체코드'                                                   AS C_TITLE4
          , A.HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO                    AS C_CONT4
          , '납부대상금액'                                                   AS A_TITLE1
          , D.PAY_AMT                                                   AS A_AMT1
          , '차감금액'                                                   AS A_TITLE2
          , D.SALE_AMT                                                  AS A_AMT2
          , '연체금액'                                                   AS A_TITLE3
          , D.INT_AMT                                                   AS A_AMT3
          , '  '                                                        AS A_TITLE4
          , 0                                                           AS A_AMT4
          , D.PAY_AMT + D.SALE_AMT + D.INT_AMT                          AS A_AMT5
          , SFPMS_GET_A1_RATIO('HOU', A.HOUSE_CODE, 'MIN')                 AS MIN_RATIO
          , SFPMS_GET_A1_RATIO('HOU', A.HOUSE_CODE, 'MAX')                 AS MAX_RATIO          
          , F.OPOST_NO
          , F.OADDR1
          , F.OADDR2
          , F.OTEL_NO
          , F.OFAX_NO
          , D.*
          , C.BILL_DIV
          , C.TR_DATE
          , C.TR_NO
          , A.HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO AS AUTO_CODE
          , (SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
                      FROM TBCOM_CMMN_CODE
                     WHERE GRP_CODE = 'PCOM05'
                       AND CODE = '06')                                     AS BIZ_NO
          , V.BANK1
          , V.ACCT_NO1
          , V.BANK2
          , V.ACCT_NO2
          , V.BANK3
          , V.ACCT_NO3
          , V.BANK4
          , V.ACCT_NO4
        FROM TBSLS_HCNTRCTR A
          , TBSLS_HOUSE_INFO B
          , TBSLS_HOUSE_CSTMR H
          , VA_BILL C
          , (select * from VI_VA_MAST where 1=1
          <isNotEmpty property="BJ_YN">           
              <isEqual property="BJ_YN" compareValue="B">
                  and opt2 = '1'
               </isEqual>
               <isEqual property="BJ_YN" compareValue="">
                  and opt1 = '1'
               </isEqual> 
          </isNotEmpty>    
             ) V
          , (
                SELECT CRT_ID
                  , BANK_CD
                  , VACCT_NO
                  , MAX(DECODE(SN, 1, CORT_NM, ''))      AS CORT_NM1
                  , MAX(DECODE(SN, 1, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE1
                  , SUM(DECODE(SN, 1, PAY_AMT, NULL))    AS PAY_AMT1
                  , SUM(DECODE(SN, 1, SALE_AMT, NULL))   AS SALE_AMT1
                  , SUM(DECODE(SN, 1, INT_AMT, NULL))    AS INT_AMT1
                  , SUM(DECODE(SN, 1, BILL_AMT, NULL))   AS BILL_AMT1
                  , MAX(DECODE(SN, 2, CORT_NM, ''))      AS CORT_NM2
                  , MAX(DECODE(SN, 2, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE2
                  , SUM(DECODE(SN, 2, PAY_AMT, NULL))    AS PAY_AMT2
                  , SUM(DECODE(SN, 2, SALE_AMT, NULL))   AS SALE_AMT2
                  , SUM(DECODE(SN, 2, INT_AMT, NULL))    AS INT_AMT2
                  , SUM(DECODE(SN, 2, BILL_AMT, NULL))   AS BILL_AMT2
                  , MAX(DECODE(SN, 3, CORT_NM, ''))      AS CORT_NM3
                  , MAX(DECODE(SN, 3, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE3
                  , SUM(DECODE(SN, 3, PAY_AMT, NULL))    AS PAY_AMT3
                  , SUM(DECODE(SN, 3, SALE_AMT, NULL))   AS SALE_AMT3
                  , SUM(DECODE(SN, 3, INT_AMT, NULL))    AS INT_AMT3
                  , SUM(DECODE(SN, 3, BILL_AMT, NULL))   AS BILL_AMT3
                  , MAX(DECODE(SN, 4, CORT_NM, ''))      AS CORT_NM4
                  , MAX(DECODE(SN, 4, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE4
                  , SUM(DECODE(SN, 4, PAY_AMT, NULL))    AS PAY_AMT4
                  , SUM(DECODE(SN, 4, SALE_AMT, NULL))   AS SALE_AMT4
                  , SUM(DECODE(SN, 4, INT_AMT, NULL))    AS INT_AMT4
                  , SUM(DECODE(SN, 4, BILL_AMT, NULL))   AS BILL_AMT4
                  , MAX(DECODE(SN, 5, CORT_NM, ''))      AS CORT_NM5
                  , MAX(DECODE(SN, 5, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE5
                  , SUM(DECODE(SN, 5, PAY_AMT, NULL))    AS PAY_AMT5
                  , SUM(DECODE(SN, 5, SALE_AMT, NULL))   AS SALE_AMT5
                  , SUM(DECODE(SN, 5, INT_AMT, NULL))    AS INT_AMT5
                  , SUM(DECODE(SN, 5, BILL_AMT, NULL))   AS BILL_AMT5
                  , MAX(DECODE(SN, 6, CORT_NM, ''))      AS CORT_NM6
                  , MAX(DECODE(SN, 6, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE6
                  , SUM(DECODE(SN, 6, PAY_AMT, NULL))    AS PAY_AMT6
                  , SUM(DECODE(SN, 6, SALE_AMT, NULL))   AS SALE_AMT6
                  , SUM(DECODE(SN, 6, INT_AMT, NULL))    AS INT_AMT6
                  , SUM(DECODE(SN, 6, BILL_AMT, NULL))   AS BILL_AMT6
                  , MAX(DECODE(SN, 7, CORT_NM, ''))      AS CORT_NM7
                  , MAX(DECODE(SN, 7, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE7
                  , SUM(DECODE(SN, 7, PAY_AMT, NULL))    AS PAY_AMT7
                  , SUM(DECODE(SN, 7, SALE_AMT, NULL))   AS SALE_AMT7
                  , SUM(DECODE(SN, 7, INT_AMT, NULL))    AS INT_AMT7
                  , SUM(DECODE(SN, 7, BILL_AMT, NULL))   AS BILL_AMT7
                  , MAX(DECODE(SN, 8, CORT_NM, ''))      AS CORT_NM8
                  , MAX(DECODE(SN, 8, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE8
                  , SUM(DECODE(SN, 8, PAY_AMT, NULL))    AS PAY_AMT8
                  , SUM(DECODE(SN, 8, SALE_AMT, NULL))   AS SALE_AMT8
                  , SUM(DECODE(SN, 8, INT_AMT, NULL))    AS INT_AMT8
                  , SUM(DECODE(SN, 8, BILL_AMT, NULL))   AS BILL_AMT8
                  , MAX(DECODE(SN, 9, CORT_NM, ''))      AS CORT_NM9
                  , MAX(DECODE(SN, 9, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), ''))  AS PAYEND_DATE9
                  , SUM(DECODE(SN, 9, PAY_AMT, NULL))    AS PAY_AMT9
                  , SUM(DECODE(SN, 9, SALE_AMT, NULL))   AS SALE_AMT9
                  , SUM(DECODE(SN, 9, INT_AMT, NULL))    AS INT_AMT9
                  , SUM(DECODE(SN, 9, BILL_AMT, NULL))   AS BILL_AMT9
                  , MAX(DECODE(SN, 10, CORT_NM, ''))     AS CORT_NM10
                  , MAX(DECODE(SN, 10, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE10
                  , SUM(DECODE(SN, 10, PAY_AMT, NULL))   AS PAY_AMT10
                  , SUM(DECODE(SN, 10, SALE_AMT, NULL))  AS SALE_AMT10
                  , SUM(DECODE(SN, 10, INT_AMT, NULL))   AS INT_AMT10
                  , SUM(DECODE(SN, 10, BILL_AMT, NULL))  AS BILL_AMT10
                  , MAX(DECODE(SN, 11, CORT_NM, ''))     AS CORT_NM11
                  , MAX(DECODE(SN, 11, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE11
                  , SUM(DECODE(SN, 11, PAY_AMT, NULL))   AS PAY_AMT11
                  , SUM(DECODE(SN, 11, SALE_AMT, NULL))  AS SALE_AMT11
                  , SUM(DECODE(SN, 11, INT_AMT, NULL))   AS INT_AMT11
                  , SUM(DECODE(SN, 11, BILL_AMT, NULL))  AS BILL_AMT11
                  , MAX(DECODE(SN, 12, CORT_NM, ''))     AS CORT_NM12
                  , MAX(DECODE(SN, 12, TO_CHAR(PAYEND_DATE, 'YYYY-MM-DD'), '')) AS PAYEND_DATE12
                  , SUM(DECODE(SN, 12, PAY_AMT, NULL))   AS PAY_AMT12
                  , SUM(DECODE(SN, 12, SALE_AMT, NULL))  AS SALE_AMT12
                  , SUM(DECODE(SN, 12, INT_AMT, NULL))   AS INT_AMT12
                  , SUM(DECODE(SN, 12, BILL_AMT, NULL))  AS BILL_AMT12
                  , MAX(
                        CASE
                            WHEN SN > 12
                            THEN CORT_NM
                        END) AS CORT_NM13
                  , MAX(
                        CASE
                            WHEN SN > 12
                            THEN PAYEND_DATE
                        END) AS PAYEND_DATE13
                  , SUM(
                        CASE
                            WHEN SN > 12
                            THEN PAY_AMT
                        END) AS PAY_AMT13
                  , SUM(
                        CASE
                            WHEN SN > 12
                            THEN SALE_AMT
                        END) AS SALE_AMT13
                  , SUM(
                        CASE
                            WHEN SN > 12
                            THEN INT_AMT
                        END) AS INT_AMT13
                  , SUM(
                        CASE
                            WHEN SN > 12
                            THEN BILL_AMT
                        END)      AS BILL_AMT13
                  , SUM(PAY_AMT)  AS PAY_AMT
                  , SUM(SALE_AMT) AS SALE_AMT
                  , SUM(INT_AMT)  AS INT_AMT
                  , SUM(BILL_AMT) AS BILL_AMT
                FROM
                    (
                        SELECT ROW_NUMBER() OVER(PARTITION BY a.crt_id  ORDER BY a.crt_id, a.payend_date)  AS SN
                                   , A.*
                          , DECODE(CORT_CODE, 'RN', TO_CHAR(PAYEND_DATE, 'YYYY-MM '), '') || SFCMP_GET_CODENM('HOU0A1',
                            CORT_CODE) AS CORT_NM
                        FROM VA_BILL_DETAIL a
                       WHERE BANK_CD = '031'
                       ORDER BY crt_id, PAYEND_DATE
                    )
                    B
                GROUP BY CRT_ID
                  , BANK_CD
                  , VACCT_NO
            )
            D
          ,(
                SELECT CHRCTR_PREPAR_VALUE_0 AS OPOST_NO
                  , CHRCTR_PREPAR_VALUE_1    AS OADDR1
                  , CHRCTR_PREPAR_VALUE_2    AS OADDR2
                  , '전화:' ||
                    (
                        SELECT CHRCTR_PREPAR_VALUE_0
                        FROM TBCOM_CMMN_CODE
                        WHERE GRP_CODE = 'COM027'
                        AND CODE_NM    = 'SL'
                    ) AS OTEL_NO
                  , 'FAX :' ||
                    (
                        SELECT CHRCTR_PREPAR_VALUE_1
                        FROM TBCOM_CMMN_CODE
                        WHERE GRP_CODE = 'COM027'
                        AND CODE_NM    = 'SL'
                    ) AS OFAX_NO
                FROM TBCOM_CMMN_CODE A
                WHERE GRP_CODE = 'COM027'
                AND CODE       = 'SL'
            )
            F
        WHERE A.CNTRCTR_NO   = C.CRT_ID
          AND A.HOUSE_CODE     = B.HOUSE_CODE(+)
          AND C.BANK_CD        = D.BANK_CD
          AND C.VACCT_NO       = D.VACCT_NO
          AND C.CRT_ID         = D.CRT_ID
          AND A.HOUSE_CSTMR_NO = H.HOUSE_CSTMR_NO
          AND A.CNTRCTR_NO     = V.CRT_ID
	<isNotEmpty property="CNTRCTR_NO">
	      AND A.CNTRCTR_NO IN
	<iterate property="ARR_CNTRCTR_NO"  open="(" close=")" conjunction="," >
	      #ARR_CNTRCTR_NO[]#
	</iterate>
	</isNotEmpty>            
          AND C.TR_DATE = #TR_DATE#
          AND V.CRT_DIV = 'SL' 
          AND C.BANK_CD = '031'   /* 가상계좌부서구분 : LN-보상판매처(토지), SL-보상판매처(주택), RN-주거복지처(영구임대), MA-관리비(다가구), BS-주거복지처(보증금지원) */
		ORDER BY HOUSE_CODE , DONG , HO          
	</select>	
	
	
</sqlMap>