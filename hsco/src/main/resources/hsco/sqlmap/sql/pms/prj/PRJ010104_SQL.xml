<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="PRJ010104_SQL">
	
	<select id="PRJ010104DAO.selectDs" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT k1.BSNS_CODE
		      ,k1.BSNS_NM
		      ,TO_CHAR(TO_DATE(k1.BGNDE_PD, 'YYYYMMDD'), 'YY/MM/DD')        AS BGNDE_PD
		      ,TO_CHAR(TO_DATE(k1.ENDDE_PD, 'YYYYMMDD'), 'YY/MM/DD')        AS ENDDE_PD
		      ,k1.TOT_CNTRWK_PD
		      ,k1.PROGRS_CNTRWK_PD
		      ,k1.REMNDR_CNTRWK_PD
		      ,k1.PLN_CSTP_RT
		      ,k1.PRCS_ARSL_RT
		      ,k1.ACHIV_RT
		      ,k1.PXCOND_PYMNT_RT
		      ,TO_CHAR(k1.THSYY_BUDGET_AMOUNT, 'FM999,999,999,999,999')     AS THSYY_BUDGET_AMOUNT
		      ,TO_CHAR(k1.THSYY_DECSN_AMOUNT,  'FM999,999,999,999,999')     AS THSYY_DECSN_AMOUNT
		      ,TO_CHAR(k1.TOT_BSNS_AMOUNT,     'FM999,999,999,999,999')     AS TOT_BSNS_AMOUNT
		      ,TO_CHAR(k1.TOT_CHIT_AMOUNT,     'FM999,999,999,999,999')     AS TOT_CHIT_AMOUNT
		      ,k1.CNTRCT_CNT
		      ,k1.CNTRCT_STTUS_PROGRS
		      ,k1.CNTRCT_STTUS_COMPT
		      ,k1.CNTRCT_STTUS_STPGE
		      ,DECODE(NVL(k1.TOT_CNTRWK_PD,0), 0, NULL, ROUND(k1.PROGRS_CNTRWK_PD / k1.TOT_CNTRWK_PD * 100, 2)       )                  AS CNTRWK_PD_RT
		      ,DECODE(NVL(k1.TOT_CNTRWK_PD,0), 0, NULL, ROUND(k1.PROGRS_CNTRWK_PD / k1.TOT_CNTRWK_PD * 100, 2) || '%')                  AS CNTRWK_PD_RT_PER
		      ,DECODE(k1.PLN_CSTP_RT,  NULL, NULL, k1.PLN_CSTP_RT  || '%')                                                              AS PLN_CSTP_RT_PER
		      ,DECODE(k1.PRCS_ARSL_RT, NULL, NULL, k1.PRCS_ARSL_RT || '%')                                                              AS PRCS_ARSL_RT_PER
		      ,DECODE(NVL(k1.THSYY_BUDGET_AMOUNT,0), 0, NULL, ROUND(k1.THSYY_DECSN_AMOUNT / k1.THSYY_BUDGET_AMOUNT * 100, 2)       )    AS THSYY_RT
		      ,DECODE(NVL(k1.THSYY_BUDGET_AMOUNT,0), 0, NULL, ROUND(k1.THSYY_DECSN_AMOUNT / k1.THSYY_BUDGET_AMOUNT * 100, 2) || '%')    AS THSYY_RT_PER
		      ,DECODE(NVL(k1.TOT_BSNS_AMOUNT,0), 0, NULL, ROUND(k1.TOT_CHIT_AMOUNT / k1.TOT_BSNS_AMOUNT * 100, 2)       )               AS TOT_RT
		      ,DECODE(NVL(k1.TOT_BSNS_AMOUNT,0), 0, NULL, ROUND(k1.TOT_CHIT_AMOUNT / k1.TOT_BSNS_AMOUNT * 100, 2) || '%')               AS TOT_RT_PER
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_PROGRS / k1.CNTRCT_CNT * 100, 2)       )                     AS CNTRCT_PROGRS_RT
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_PROGRS / k1.CNTRCT_CNT * 100, 2) || '%')                     AS CNTRCT_PROGRS_RT_PER
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_COMPT  / k1.CNTRCT_CNT * 100, 2)       )                     AS CNTRCT_COMPT_RT
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_COMPT  / k1.CNTRCT_CNT * 100, 2) || '%')                     AS CNTRCT_COMPT_RT_PER
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_STPGE  / k1.CNTRCT_CNT * 100, 2)       )                     AS CNTRCT_STPGE_RT
		      ,DECODE(NVL(k1.CNTRCT_CNT,0), 0, NULL, ROUND(k1.CNTRCT_STTUS_STPGE  / k1.CNTRCT_CNT * 100, 2) || '%')                     AS CNTRCT_STPGE_RT_PER
		FROM   (
		        SELECT t1.BSNS_CODE
		              ,t1.BSNS_NM
		              ,t2.BGNDE_PD
		              ,t2.ENDDE_PD
		              ,DECODE(t2.PD_ERROR_AT, '1', NULL, TO_DATE(t2.ENDDE_PD, 'YYYYMMDD') - TO_DATE(t2.BGNDE_PD, 'YYYYMMDD') + 1)       AS TOT_CNTRWK_PD
		              ,DECODE(t2.PD_ERROR_AT, '1', NULL, TO_DATE(t2.SYS_DATE, 'YYYYMMDD') - TO_DATE(t2.BGNDE_PD, 'YYYYMMDD') + 1)       AS PROGRS_CNTRWK_PD
		              ,DECODE(t2.PD_ERROR_AT, '1', NULL, TO_DATE(t2.ENDDE_PD, 'YYYYMMDD') - TO_DATE(t2.SYS_DATE, 'YYYYMMDD')    )       AS REMNDR_CNTRWK_PD
		              ,t3.PLN_CSTP_RT
		              ,t3.PRCS_ARSL_RT
		              ,t3.ACHIV_RT
		              ,t3.PXCOND_PYMNT_RT
		              ,t5.THSYY_BUDGET_AMOUNT
		              ,t6.THSYY_DECSN_AMOUNT
		              ,t2.TOT_WCT                                   AS TOT_BSNS_AMOUNT
		              ,NVL(t4.BDN_LDCS,0) + NVL(t4.BDN_MUXP,0)      AS TOT_CHIT_AMOUNT
		              ,t7.CNTRCT_CNT
		              ,t7.CNTRCT_STTUS_PROGRS
		              ,t7.CNTRCT_STTUS_COMPT
		              ,t7.CNTRCT_STTUS_STPGE
		        FROM   TBPRJ_BSNS_CODE t1
		               LEFT OUTER JOIN (
		                                SELECT BSNS_CODE
		                                      ,BGNDE_PD
		                                      ,ENDDE_PD
		                                      ,(CASE WHEN ENDDE_PD < TO_CHAR(SYSDATE,'YYYYMMDD') THEN ENDDE_PD ELSE TO_CHAR(SYSDATE,'YYYYMMDD') END)                    AS SYS_DATE
		                                      ,(CASE WHEN BGNDE_PD IS NULL OR ENDDE_PD IS NULL OR LENGTH(ENDDE_PD) <> 8 OR LENGTH(ENDDE_PD) <> 8 THEN 1 ELSE 0 END)     AS PD_ERROR_AT
		                                      ,TOT_WCT
		                                FROM   TBPRJ_BSNS_SUMRY
		                               ) t2
		                    ON t1.BSNS_CODE = t2.BSNS_CODE
		               LEFT OUTER JOIN (
		                                SELECT CNTRCT_NO
		                                      ,BSNS_CODE
		                                      ,PLN_CSTP_RT
		                                      ,PRCS_ARSL_RT
		                                      ,DECODE(PLN_CSTP_RT, 0, 0, ROUND(PRCS_ARSL_RT / PLN_CSTP_RT * 100, 2)) AS ACHIV_RT
		                                      ,PXCOND_PYMNT_RT
		                                FROM   (
		                                        SELECT s1.CNTRCT_NO
		                                              ,s3.BSNS_CODE
		                                              ,SUM(NVL(s1.PLN_CSTP_RT,0))           AS PLN_CSTP_RT
		                                              ,SUM(NVL(s2.PRCS_ARSL_RT,0))          AS PRCS_ARSL_RT
		                                              ,SUM(NVL(s2.PXCOND_PYMNT_RT,0))       AS PXCOND_PYMNT_RT
		                                        FROM   (
		                                                SELECT p1.CNTRCT_NO
		                                                      ,p1.CHG_TO
		                                                      ,p1.PLN_W
		                                                      ,SUM(p1.PLN_CSTP_RT)      AS PLN_CSTP_RT
		                                                FROM   TBBF_PLN_PRCS_DTLS p1
		                                                       INNER JOIN (
		                                                                   SELECT CNTRCT_NO
		                                                                         ,MAX(CHG_TO)      AS CHG_TO
		                                                                   FROM   TBBF_PLN_PRCS
		                                                                   GROUP BY CNTRCT_NO
		                                                                  ) p2
		                                                            ON p1.CNTRCT_NO = p2.CNTRCT_NO
		                                                           AND p1.CHG_TO = p2.CHG_TO
		                                                WHERE  TO_CHAR(SYSDATE,'YYYYMMDD') > PLN_BGNDE
		                                                GROUP BY p1.CNTRCT_NO
		                                                        ,p1.CHG_TO
		                                                        ,p1.PLN_W
		                                               ) s1
		                                               LEFT OUTER JOIN TBBF_PRCS_PPLS_ARSL s2
		                                                    ON s1.CNTRCT_NO = s2.CNTRCT_NO
		                                                   AND s1.PLN_W = s2.PPLS_ARSL_Y_W
		                                               LEFT oUTER JOIN TBCTR_CNTRCT s3
		                                                    ON s1.CNTRCT_NO = s3.CNTRCT_NO
		                                        GROUP BY s1.CNTRCT_NO
		                                                ,s3.BSNS_CODE
		                                       )
		                                WHERE  1=1
		                               ) t3
		                    ON t1.BSNS_CODE = t3.BSNS_CODE
		               LEFT OUTER JOIN (
		                                SELECT s1.BSNS_CODE
		                                      ,SUM(CASE WHEN s2.BUDGET_ACNT_NM IN ('용지비','자산취득비등') THEN NVL(s1.CRDIT_AMOUNT,0) ELSE 0 END)                            AS BDN_LDCS
		                                      ,SUM(CASE WHEN s2.BUDGET_ACNT_NM IN ('조성비', '건설비','이전금','운영경비','판매비','반환금') THEN NVL(s1.CRDIT_AMOUNT,0) ELSE 0 END) AS BDN_MUXP
		                                FROM   TBACC_CHIT_DETAIL s1
		                                       LEFT OUTER JOIN TBBDG_BUDGET_ACNT_CODE s2
		                                            ON s1.BUDGET_YEAR = s2.YEAR
		                                           AND s1.BSNS_SE = s2.BSNS_SE
		                                           AND s1.BALC_SE = s2.BALC_SE
		                                           AND s1.BUDGET_ACNT_CODE = s2.BUDGET_ACNT_CODE
		                                WHERE  s1.BSNS_CODE IS NOT NULL
		                                GROUP BY s1.BSNS_CODE
		                               ) t4
		                    ON t1.BSNS_CODE = t4.BSNS_CODE
		               LEFT OUTER JOIN (
		                                SELECT s1.DETAIL_BSNS_CODE                  AS BSNS_CODE
		                                      ,NVL(SUM(s1.ORIBDGT),0)
		                                       + NVL(SUM(s1.RVSPBGT_1_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_2_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_3_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_4_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_5_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_6_ODR),0)
		                                       + NVL(SUM(s1.RVSPBGT_7_ODR),0)
		                                       + NVL(SUM(s1.CYFD_BUDGET),0)
		                                       + NVL(SUM(s1.TRSF_AM),0)
		                                       + NVL(SUM(s1.DVR_AM),0)
		                                       + NVL(SUM(s1.MVMN_AM),0)
		                                       + NVL(SUM(s1.BUKIP_MVMN_AM),0)
		                                       + NVL(SUM(s1.RSVFND_REQST_AM),0)     AS THSYY_BUDGET_AMOUNT
		                                FROM   TBBDG_EXECUT_BUDGET s1
		                                WHERE  s1.YEAR = TO_CHAR(SYSDATE, 'YYYY')
		                                AND    s1.BALC_SE = '2'
		                                GROUP BY s1.DETAIL_BSNS_CODE
		                               ) t5
		                    ON t1.BSNS_CODE = t5.BSNS_CODE
		               LEFT OUTER JOIN (
		                                SELECT s1.BSNS_CODE
		                                      ,NVL(SUM(DECODE(s1.ANACT_KND,'05', s1.DECSN_AMOUNT*-1, s1.DECSN_AMOUNT)),0)   AS THSYY_DECSN_AMOUNT
		                                FROM   VHACC_EXP_DSN_MASTR s1
		                                WHERE  s1.BUDGET_YEAR = TO_CHAR(SYSDATE, 'YYYY')
		                                AND    s1.BALC_SE = '2'
		                                GROUP BY s1.BSNS_CODE
		                               ) t6
		                    ON t1.BSNS_CODE = t6.BSNS_CODE
		               LEFT OUTER JOIN (
		                                SELECT BSNS_CODE
		                                      ,COUNT(1)                                         AS CNTRCT_CNT
		                                      ,SUM(DECODE(PROGRS_SE, '001', 1, 0)          )    AS CNTRCT_STTUS_PROGRS
		                                      ,SUM(DECODE(PROGRS_SE, '002', 1, 0)          )    AS CNTRCT_STTUS_COMPT
		                                      ,SUM(DECODE(PROGRS_SE, '003', 1, '004', 1, 0))    AS CNTRCT_STTUS_STPGE
		                                FROM   TBCTR_CNTRCT
		                                GROUP BY BSNS_CODE
		                                ) t7
		               ON t1.BSNS_CODE = t7.BSNS_CODE
		       ) k1
		WHERE  k1.BSNS_CODE = #BSNS_CODE#
		ORDER BY k1.BSNS_CODE
	]]>
	</select>
	
	
	<!-- 주요계약진행현황 -->
	<select id="PRJ010104DAO.selectCntrProgres" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT t1.BSNS_CODE
		      ,t1.CNTRCT_NO
		      ,t1.CNTRCT_NM
		      ,t1.CNTRCT_DE
		      ,t1.CNTRCT_AMOUNT
		      ,t1.STRWRK_DE
		      ,t1.COMPET_DE
		      ,t2.PLN_CSTP_RT
		      ,t2.PRCS_ARSL_RT
		      ,t2.PXCOND_PYMNT_RT
		FROM   TBCTR_CNTRCT t1
		       LEFT OUTER JOIN (
		                        SELECT s1.CNTRCT_NO
		                              ,SUM(NVL(s1.PLN_CSTP_RT,0)) || '%'           AS PLN_CSTP_RT
		                              ,SUM(NVL(s2.PRCS_ARSL_RT,0)) || '%'          AS PRCS_ARSL_RT
		                              ,SUM(NVL(s2.PXCOND_PYMNT_RT,0)) || '%'       AS PXCOND_PYMNT_RT
		                        FROM   (
		                                SELECT p1.CNTRCT_NO
		                                      ,p1.CHG_TO
		                                      ,p1.PLN_W
		                                      ,SUM(p1.PLN_CSTP_RT)      AS PLN_CSTP_RT
		                                FROM   TBBF_PLN_PRCS_DTLS p1
		                                       INNER JOIN (
		                                                   SELECT CNTRCT_NO
		                                                         ,MAX(CHG_TO)      AS CHG_TO
		                                                   FROM   TBBF_PLN_PRCS
		                                                   GROUP BY CNTRCT_NO
		                                                  ) p2
		                                            ON p1.CNTRCT_NO = p2.CNTRCT_NO
		                                           AND p1.CHG_TO = p2.CHG_TO
		                                WHERE  TO_CHAR(SYSDATE,'YYYYMMDD') > PLN_BGNDE
		                                GROUP BY p1.CNTRCT_NO
		                                        ,p1.CHG_TO
		                                        ,p1.PLN_W
		                               ) s1
		                               LEFT OUTER JOIN TBBF_PRCS_PPLS_ARSL s2
		                                    ON s1.CNTRCT_NO = s2.CNTRCT_NO
		                                   AND s1.PLN_W = s2.PPLS_ARSL_Y_W
		                        GROUP BY s1.CNTRCT_NO
		                       ) t2
		       ON t1.CNTRCT_NO = t2.CNTRCT_NO
		]]>
		WHERE  1=1
		  AND  t1.BSNS_CODE = #BSNS_CODE#
		ORDER BY t1.CNTRCT_NO
	</select>
	
</sqlMap>