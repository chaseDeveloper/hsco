<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RNT02051400SQL">	

	<!-- 쿼리명 : 계약현황
	설명 : 계약현황
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2016.10.05
	-->
	<select id="RNT02051400DAO.getList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
/* 매입임대 기존주택관리현황 */
SELECT AREA_SE
     , MAX(DECODE(YYYY , '2005' , DONG , 0)) AS DONG_2005
     , MAX(DECODE(YYYY , '2005' , HO , 0)) AS HO_2005
     , MAX(DECODE(YYYY , '2006' , DONG , 0)) AS DONG_2006
     , MAX(DECODE(YYYY , '2006' , HO , 0)) AS HO_2006
     , MAX(DECODE(YYYY , '2007' , DONG , 0)) AS DONG_2007
     , MAX(DECODE(YYYY , '2007' , HO , 0)) AS HO_2007
     , MAX(DECODE(YYYY , '2008' , DONG , 0)) AS DONG_2008
     , MAX(DECODE(YYYY , '2008' , HO , 0)) AS HO_2008
     , MAX(DECODE(YYYY , '2009' , DONG , 0)) AS DONG_2009
     , MAX(DECODE(YYYY , '2009' , HO , 0)) AS HO_2009
     , MAX(DECODE(YYYY , '2010' , DONG , 0)) AS DONG_2010
     , MAX(DECODE(YYYY , '2010' , HO , 0)) AS HO_2010
     , MAX(DECODE(YYYY , '2011' , DONG , 0)) AS DONG_2011
     , MAX(DECODE(YYYY , '2011' , HO , 0)) AS HO_2011
     , MAX(DECODE(YYYY , '2012' , DONG , 0)) AS DONG_2012
     , MAX(DECODE(YYYY , '2012' , HO , 0)) AS HO_2012
     , MAX(DECODE(YYYY , '2013' , DONG , 0)) AS DONG_2013
     , MAX(DECODE(YYYY , '2013' , HO , 0)) AS HO_2013    
     , MAX(DECODE(YYYY , '2014' , DONG , 0)) AS DONG_2014
     , MAX(DECODE(YYYY , '2014' , HO , 0)) AS HO_2014    
     , MAX(DECODE(YYYY , '2015' , DONG , 0)) AS DONG_2015
     , MAX(DECODE(YYYY , '2015' , HO , 0)) AS HO_2015    
     , MAX(DECODE(YYYY , '2016' , DONG , 0)) AS DONG_2016
     , MAX(DECODE(YYYY , '2016' , HO , 0)) AS HO_2016
     , SUM(DONG) AS TOT_DONG
     , SUM(HO) AS TOT_HO                                                       
  FROM 
  (
     SELECT SUBSTR(PUCHAS_DE,1,4) AS YYYY
          , SFCOM_CODE_NM('RNT004' , AREA_SE , 'CODE_NM') AS AREA_SE
          , COUNT(DISTINCT A.RENT_HOUSE_CODE) AS DONG
          , COUNT(HO) AS HO
       FROM TBRNT_PUCHAS_HOUSE A
       JOIN TBRNT_PUCHAS_HOUSE_BILD B ON A.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
      WHERE PUCHAS_DE BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#
      GROUP BY SUBSTR(PUCHAS_DE,1,4), AREA_SE
      ORDER BY 1,2   
  )
  GROUP BY AREA_SE   
	</select>
	
	<!-- 쿼리명 : 나이별
	설명 : 나이별
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2016.10.05
	-->
	<select id="RNT02051400DAO.getList1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  SELECT YYYY
     , SUM(A) AS AGE_19
     , SUM(B) AS AGE_20
     , SUM(C) AS AGE_30
     , SUM(D) AS AGE_40
     , SUM(E) AS AGE_50
     , SUM(F) AS AGE_60
     , SUM(A) + SUM(B) + SUM(C) + SUM(D) + SUM(E)+ SUM(F) AS TOTAL
  FROM( 
        SELECT SUBSTR(A.FRST_CNTRCT_DE , 1 , 4) AS YYYY
              ,(CASE WHEN 19 >= FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 , '20' ,'19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) THEN COUNT(*) ELSE 0 END) AS A 
              ,(CASE WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 ,'20', '19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) BETWEEN 20 AND 29 THEN COUNT(*) ELSE 0 END) AS B
              ,(CASE WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 ,'20', '19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) BETWEEN 30 AND 39 THEN COUNT(*) ELSE 0 END) AS C
              ,(CASE WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 ,'20', '19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) BETWEEN 40 AND 49 THEN COUNT(*) ELSE 0 END) AS D
              ,(CASE WHEN FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 ,'20', '19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) BETWEEN 50 AND 59 THEN COUNT(*) ELSE 0 END) AS E
              ,(CASE WHEN 60 <![CDATA[  <= ]]>  FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(DECODE(SUBSTR(SFCOM_DEC_ALL(IHIDNUM),7,1) , 3 , '20' , 4 , '20', '19')||SUBSTR(SFCOM_DEC_ALL(IHIDNUM),1,6),'YYYYMMDD')) / 12) THEN COUNT(*) ELSE 0 END) AS F        
          FROM TBRNT_PUCHAS_CNTRCT A
          JOIN TBRNT_PUCHAS_RENT_CSTMR B ON A.PUCHAS_CSTMR_NO = B.PUCHAS_CSTMR_NO
         WHERE 1=1
           AND FRST_CNTRCT_DE BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#
           AND SFCOM_DEC_ALL(IHIDNUM) IS NOT NULL
           AND LENGTH(SFCOM_DEC_ALL(IHIDNUM)) = 13     
           AND SUBSTR(SFCOM_DEC_ALL(IHIDNUM),5,2) BETWEEN '01' AND '31'
           AND SUBSTR(SFCOM_DEC_ALL(IHIDNUM),3,2) BETWEEN '01' AND '12'          
           <isEqual property="CHK" compareValue="2">
           AND NOT EXISTS (SELECT 1 FROM TBRNT_PUCHAS_RESCI Z WHERE A.CNTRCTR_NO = Z.CNTRCTR_NO AND Z.CANCL_DE BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#)
           </isEqual>
         GROUP BY SUBSTR(A.FRST_CNTRCT_DE , 1 , 4)  , IHIDNUM   
        )      
  GROUP BY YYYY     
  ORDER BY 1	
	</select>
	
	<!-- 쿼리명 : 사업비
	설명 : 사업비
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2016.10.05
	-->
	<select id="RNT02051400DAO.getList2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	</select>
	
	
	<!-- 쿼리명 : 평균소득
	설명 : 평균소득
	수정일  수정자  수정내용
	작성자 : 이광원
	최초작성일 : 2016.10.05
	-->
    <select id="RNT02051400DAO.getList3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    
SELECT  MAX(DECODE(CODE , 1 , CNT , 0)) AS CODE_1
      , MAX(DECODE(CODE , 2 , CNT , 0)) AS CODE_2
      , MAX(DECODE(CODE , 3 , CNT , 0)) AS CODE_3
      , SUM(CNT) AS TOT
  FROM
  (     
     SELECT  CHRCTR_PREPAR_VALUE_4 AS CODE
           , COUNT(*) AS CNT
       FROM TBRNT_PUCHAS_CNTRCT A
       JOIN TBCOM_CMMN_CODE B ON A.QUALF_SE = B.CODE
      WHERE B.GRP_CODE = 'RNT001'        
        AND A.FRST_CNTRCT_DE BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#
        <isEqual property="CHK" compareValue="2">
        AND NOT EXISTS (SELECT 1 FROM TBRNT_PUCHAS_RESCI Z WHERE A.CNTRCTR_NO = Z.CNTRCTR_NO AND Z.CANCL_DE BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#)
        </isEqual>         
     GROUP BY CHRCTR_PREPAR_VALUE_4
     ORDER BY CHRCTR_PREPAR_VALUE_4
   )      

    </select>
	  
	
	
</sqlMap>