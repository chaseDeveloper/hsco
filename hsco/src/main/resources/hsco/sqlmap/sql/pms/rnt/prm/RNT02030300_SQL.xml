<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RNT02030300_SQL">

	<!-- 쿼리명 : 매입임대 재계약목록 조회
		    설명 : 매입임대 재계약목록 조회 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<select id="RNT02030300DAO.selectPuchasReCntrctList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* RNT02030300DAO.selectPuchasReCntrctList[매입임대 재계약목록 조회] */
		SELECT A.CNTRCTR_NO,									/* 계약번호 */
			   NVL2(A.CNTRCT_DE, '1', '0') AS CNTRCT_AT,		/* 계약여부 */
			   B.RENT_HOUSE_CODE,								/* 주택코드 */
			   F.RENT_HOUSE_NM,									/* 주택명 */
			   B.DONG,											/* 동 */
			   B.HO,											/* 호 */
			   D.DVR_AR,										/* 면적 */
			   D.AEA,											/* 평 */
			   C.NM,											/* 계약자명 */
			   SFCOM_DEC_ALL(C.IHIDNUM) AS IHIDNUM,				/* 주민번호 */
			   F.RENT_HOUSE_NM || ' ' || B.DONG || '동 ' || B.HO || '호' AS HOUSE_ADRES,	/* 임대주택 주소 */
			   C.ZIP,											/* 우편번호 */
			   C.TELNO,											/* 연락처2 */
			   C.MBTLNO,										/* 연락처1 */
			   B.RM,											/* 비고 */
			   A.CNTRCT_DE,										/* 재계약일자 */
			   /*   변경전   */
			   A.QUALF_SE_BFCHG,								/* 자격구분_변경전 */
			   A.GTN_BFCHG,										/* 보증금_변경전 */
			   A.RNTCHRG_BFCHG,									/* 임대료_변경전 */
			   A.RENT_BGNDE_BFCHG,								/* 임대시작일자_변경전 */
			   A.RENT_ENDDE_BFCHG,								/* 임대종료일자_변경전 */
			   /*   변경후   */
			   A.PAY_TMLMT,										/* 납부기한_변경후 */
			   A.QUALF_SE,										/* 자격구분_변경후 */
			   A.GTN,											/* 보증금_변경후 */
			   A.RNTCHRG,										/* 월임대료_변경후 */
			   A.RENT_BGNDE,									/* 임대시작일자_변경후 */
			   A.RENT_ENDDE,									/* 임대종료일자_변경후 */
			   /*  기타정보  */
			   NVL(SIGN(H.SEIZR_CNT), 0) AS SEIZR_AT,			/* 압류여부 */
			   NVL(B.HOUSE_POSESN_AT, '0') AS HOUSE_POSESN_AT,	/* 주택소유여부 */
			   NVL(B.DEATH_AT, '0') AS DEATH_AT,				/* 사망여부 */
			   (SELECT SIGN(COUNT(0))
				  FROM TBRNT_PUCHAS_LWST Z
				 WHERE Z.CNTRCTR_NO = A.CNTRCTR_NO) AS LWST_AT,	/* 소송여부 */
			 <!--  ,NVL(SIGN(G.DEL_AMT), 0) AS DEL_AT				/* 체납여부 */ -->
			   (SELECT SIGN(COUNT (1)) AS CNT
				  FROM TBRNT_PUCHAS_MT_RNTCHRG R
				 WHERE R.CNTRCTR_NO = A.CNTRCTR_NO
				   AND SUBSTR(R.PAY_TMLMT,1, 6) <![CDATA[<]]> SUBSTR(A.RENT_ENDDE_BFCHG,1, 6)
				   AND R.RCIV_DE IS NULL
				   AND ROWNUM = 1
			   ) AS DEL_AT,										/* 체납여부 */
			   H.SEIZR_CNT,										/* 압류건수 */
			   E.ZIP AS CONT_ZIP,								/* 계약자 우편번호 */
			   E.ADRES || ' ' || E.ADRES_DETAIL AS CONT_ADRES,	/* 계약자 주소 */
			   C.PUCHAS_CSTMR_NO
			  ,v.bank1 as bank1, v.acct_no1 as acct_no1
	          ,v.bank2 as bank2, v.acct_no2 as acct_no2
	          ,v.bank3 as bank3, v.acct_no3 as acct_no3
	          ,v.bank4 as bank4, v.acct_no4 as acct_no4
	          ,v.bank5 as bank5, v.acct_no5 as acct_no5
	          ,v.bank6 as bank6, v.acct_no6 as acct_no6
		  FROM TBRNT_PUCHAS_RE_CNTRCT A							/* 매입재계약 */
		 INNER JOIN TBRNT_PUCHAS_CNTRCT B						/* 매입계약 */
			ON B.CNTRCTR_NO = A.CNTRCTR_NO
		 INNER JOIN TBRNT_PUCHAS_RENT_CSTMR C					/* 매입임대고객 */
			ON C.PUCHAS_CSTMR_NO = B.PUCHAS_CSTMR_NO
		 INNER JOIN TBRNT_PUCHAS_HOUSE_BILD D					/* 매입주택건축물 */
			ON D.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		   AND D.DONG = B.DONG
		   AND D.HO = B.HO
		 INNER JOIN TBRNT_PUCHAS_HOUSE_DONG E					/* 매입주택동 */
			ON E.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		   AND E.DONG = B.DONG
		 INNER JOIN TBRNT_PUCHAS_HOUSE F						/* 매입주택 */
			ON F.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		  LEFT JOIN TBRNT_PUCHAS_RESCI G						/* 매입해약 */
			ON G.CNTRCTR_NO = A.CNTRCTR_NO
		  LEFT JOIN (											/* 압류정보 조회 */
					SELECT CNTRCTR_NO,
						   COUNT(0) AS SEIZR_CNT
					  FROM TBRNT_PUCHAS_SEIZR
					 WHERE RELIS_DE IS NULL
					 GROUP BY CNTRCTR_NO
			   ) H
			ON H.CNTRCTR_NO = A.CNTRCTR_NO
		<!-- 
		  LEFT JOIN (											/* 체납내역조회 */
					SELECT CNTRCTR_NO
						  ,SUM(RNTCHRG + OVDINTR) AS DEL_AMT
					  FROM TBRNT_PUCHAS_MT_RNTCHRG
					 WHERE RCIV_DE IS NULL
					 GROUP BY CNTRCTR_NO
			   ) I
			ON I.CNTRCTR_NO = A.CNTRCTR_NO -->
			LEFT JOIN (select * from VIRNT_VA_MAST_ETC where crt_div = 'RN') v
			ON V.CRT_ID = A.CNTRCTR_NO
		 WHERE SUBSTR(RENT_ENDDE_BFCHG, 1, 6) BETWEEN #stEndde# AND #edEndde#
		<isNotEmpty property="rentHouseCode">
		   AND D.RENT_HOUSE_CODE = #rentHouseCode#
		</isNotEmpty>
		<isNotEmpty property="dong">
		   AND D.DONG = LPAD(#dong#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="ho">
		   AND D.HO = LPAD(#ho#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="nm">
		   AND C.NM LIKE '%' || #nm# || '%'
		</isNotEmpty>
		<isEqual property="canclSe" compareValue="0" >
		   AND A.CNTRCT_DE IS NULL
		</isEqual>
		<isEqual property="canclSe" compareValue="1" >
		   AND A.CNTRCT_DE IS NOT NULL
		</isEqual>
		<isEqual property="houseAt" compareValue="1">
		   AND NVL(B.HOUSE_POSESN_AT, '0') = '0'
		</isEqual>
		<isEqual property="resci" compareValue="0">
		   AND B.CANCL_DE IS NULL
		</isEqual>
		 ORDER BY B.RENT_HOUSE_CODE, TO_NUMBER(B.DONG), TO_NUMBER(B.HO), A.RENT_ENDDE_BFCHG DESC
	</select>


	<!-- 쿼리명 : 재계약 목록 건수
		   설명 : 재계약 목록 건수
		 수정일 : 수정자  수정내용
		 작성자 : 변승우
	 최초작성일 : 2016.01.29
	-->
	<select id="RNT02030300DAO.puchasReCntrctCnt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* RNT02030300DAO.puchasReCntrctCnt[재계약 목록 건수] */
		SELECT COUNT(0) CNT
		  FROM TBRNT_PUCHAS_RE_CNTRCT A
		 INNER JOIN TBRNT_PUCHAS_CNTRCT B
			ON B.CNTRCTR_NO = A.CNTRCTR_NO
		 INNER JOIN TBRNT_PUCHAS_HOUSE_BILD C
			ON C.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		 WHERE ROWNUM = 1
		  AND TO_CHAR(TO_DATE(A.RENT_ENDDE_BFCHG, 'YYYYMMDD'),'YYYYMM') = #stdrMt#
		<isNotEmpty property="rentHouseCode">
		  AND B.RENT_HOUSE_CODE = #rentHouseCode#		/* 임대주택코드 */
		</isNotEmpty>
	</select>


	<!-- 쿼리명 : 매입임대 재계약정보 생성
		   설명 : 매입임대 재계약정보 생성 쿼리
		 수정일 : 수정자  수정내용
		 작성자 : 변승우
	 최초작성일 : 2016.01.29
	-->
	<insert id="RNT02030300DAO.puchasReCntrctAllC" parameterClass="java.util.HashMap">
		INSERT INTO TBRNT_PUCHAS_RE_CNTRCT(
			   CNTRCTR_NO,								/* 계약자번호 */
			   RENT_ENDDE_BFCHG,						/* 임대종료일자_변경전 */
			   CNTRCT_DE,								/* 계약일자 */
			   PAY_TMLMT,								/* 납부기한 */
			   RENT_BGNDE_BFCHG,						/* 임대시작일자_변경전 */
			   CNTRCT_DE_BFCHG,							/* 계약일자_변경전 */
			   QUALF_SE_BFCHG,							/* 자격구분_변경전 */
			   GTN_BFCHG,								/* 보증금_변경전 */
			   RNTCHRG_BFCHG,							/* 임대료_변경전 */
			   QUALF_SE,								/* 자격구분 */
			   GTN,										/* 보증금 */
			   RNTCHRG,									/* 임대료 */
			   RENT_BGNDE,								/* 임대시작일자 */
			   RENT_ENDDE,								/* 임대종료일자 */
			   GDCC_SNDNG_DE,							/* 안내문발송일자 */
			   FILE_SN,									/* 파일일련번호 */
			   REGISTER_ID,								/* 등록자ID */
			   REGIST_DT,								/* 등록일시 */
			   UPDUSR_ID,								/* 수정자ID */
			   UPDT_DT									/* 수정일시 */
		)
		SELECT A.CNTRCTR_NO,							/* 계약자번호 */
			   TO_CHAR(LAST_DAY(TO_DATE(#stdrMt#, 'YYYYMM')), 'YYYYMMDD') AS RENT_ENDDE_BFCHG,				/* 임대종료일자_변경전 */
			   NULL AS CNTRCT_DE,						/* 계약일자 */
			   TO_CHAR(LAST_DAY(TO_DATE(#stdrMt#, 'YYYYMM')), 'YYYYMMDD') AS PAY_TMLMT,						/* 납부기한 */
			   CASE WHEN SUBSTR(A.RENT_BGNDE, 1, 4) <![CDATA[<]]> SUBSTR(#stdrMt#, 1, 4) - 2
					THEN TO_CHAR(ADD_MONTHS(TO_DATE(#stdrMt#, 'YYYYMM'), -23), 'YYYYMMDD')
					ELSE A.RENT_BGNDE
				END AS RENT_BGNDE_BFCHG,				/* 임대시작일자_변경전 */
			   A.CNTRCT_DE AS CNTRCT_DE_BFCHG,			/* 계약일자_변경전 */
			   A.QUALF_SE AS QUALF_SE_BFCHG,			/* 자격구분_변경전 */
			   NVL(A.GTN, 0) AS GTN_BFCHG,				/* 보증금_변경전 */
			   A.RNTCHRG AS RNTCHRG_BFCHG,				/* 임대료_변경전 */
			   A.QUALF_SE AS QUALF_SE,					/* 자격구분 */
			   NVL(S.RENT_GTN, 0) AS GTN,				/* 보증금 */
			   NVL(S.MT_RNTCHRG, 0) AS RNTCHRG,			/* 임대료 */
			   TO_CHAR(ADD_MONTHS(TO_DATE(#stdrMt#, 'YYYYMM'), 1), 'YYYYMMDD') AS RENT_BGNDE,				/* 임대시작일자 */
			   TO_CHAR(ADD_MONTHS(TO_DATE(#stdrMt#, 'YYYYMM'), 24), 'YYYY') || C.LAST_DAY AS RENT_ENDDE,	/* 임대종료일자 */
			   NULL AS GDCC_SNDNG_DE,					/* 안내문발송일자 */
			   NULL AS FILE_SN,							/* 파일일련번호 */
			   #S_USER_ID# AS REGISTER_ID,				/* 등록자 */
			   SYSDATE AS REGIST_DT,					/* 등록일시 */
			   #S_USER_ID# AS UPDUSR_ID,				/* 수정자 */
			   SYSDATE AS UPDT_DT						/* 수정일시 */
		  FROM TBRNT_PUCHAS_CNTRCT A
		 INNER JOIN TBRNT_PUCHAS_HOUSE_BILD B
			ON B.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		   AND B.DONG = A.DONG
		   AND B.HO = A.HO
		 INNER JOIN TBRNT_PUCHAS_HOUSE H
			ON H.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		 INNER JOIN VI_RN_QUARTER_YEAR C
			ON SUBSTR(#stdrMt#, 5, 2) BETWEEN C.MIN_MM AND C.MAX_MM
		  LEFT JOIN TBRNT_PUCHAS_STDR S
			ON S.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		   AND S.DONG = A.DONG
		   AND S.HO = A.HO
		   AND S.STDR_YEAR = TO_CHAR(ADD_MONTHS(TO_DATE(#stdrMt#, 'YYYYMM'), 1), 'YYYY')
		 WHERE A.QUALF_SE <![CDATA[<>]]> '28'			/* 자격구분[28:기존계약자]는 제외하고 생성 */
		   AND H.USE_AT = '1'
		   AND A.CANCL_DE IS NULL
		<isNotEmpty property="rentHouseCode">
		   AND A.RENT_HOUSE_CODE = #rentHouseCode#
		</isNotEmpty>
		   AND SUBSTR(A.RENT_ENDDE, 1, 4) <![CDATA[<=]]> SUBSTR (#stdrMt#, 1, 4)		/* 임대종료일자가 기준년보다 이전 */
		   AND SUBSTR(A.RENT_ENDDE, 5, 2) = SUBSTR (#stdrMt#, 5, 2)						/* 임대종료일자의 월은 기준월과 동일한 월 */
		   AND MOD(TO_NUMBER(SUBSTR(A.RENT_ENDDE, 1, 4)),2) = MOD(TO_NUMBER(SUBSTR(#stdrMt#, 1, 4)), 2)
		   AND NOT EXISTS (SELECT CNTRCTR_NO
							 FROM TBRNT_PUCHAS_RE_CNTRCT R
							WHERE R.CNTRCTR_NO = A.CNTRCTR_NO
							  AND SUBSTR(RENT_ENDDE_BFCHG, 1, 6) = #stdrMt#
						  )
	</insert>


	<!-- 쿼리명 : 매입임대 재계약정보 일괄삭제
		    설명 : 매입임대 재계약정보 일괄삭제 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.29
	-->
	<delete id="RNT02030300DAO.puchasReCntrctAllD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasReCntrctAllD[매입임대 재계약정보 일괄삭제] */
		DELETE
		  FROM TBRNT_PUCHAS_RE_CNTRCT A
		 WHERE TO_CHAR(TO_DATE(RENT_ENDDE_BFCHG, 'YYYYMMDD'),'YYYYMM') = #stdrMt#	/* 기준월 */
		   AND CNTRCT_DE IS NULL													/* 재계약 상태가 미계약인 정보를 대상으로 변경 */
		   AND EXISTS(
					SELECT 1
					  FROM TBRNT_PUCHAS_CNTRCT B
					 INNER JOIN TBRNT_PUCHAS_HOUSE C
						ON B.RENT_HOUSE_CODE = C.RENT_HOUSE_CODE
					 WHERE B.CNTRCTR_NO = A.CNTRCTR_NO
		<isNotEmpty property="rentHouseCode">
					   AND B.RENT_HOUSE_CODE = #rentHouseCode#						/* 임대주택코드 */
		</isNotEmpty>
			   )
	</delete>


	<!-- 쿼리명 : 매입임대 재계약정보 수정
		    설명 : 매입임대 재계약정보 수정 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<update id="RNT02030300DAO.puchasReCntrctU" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasReCntrctU[매입임대 재계약정보 수정] */
		UPDATE TBRNT_PUCHAS_RE_CNTRCT
		   SET QUALF_SE = #QUALF_SE#,					/* 자격구분 */
			   GTN = #GTN#,								/* 보증금 */
			   RNTCHRG = #RNTCHRG#,						/* 임대료 */
			   RENT_BGNDE = #RENT_BGNDE#,				/* 임대시작일자 */
			   RENT_ENDDE = #RENT_ENDDE#,				/* 임대종료일자 */
			   PAY_TMLMT = #PAY_TMLMT#,					/* 납부기한 */
			   UPDUSR_ID = #S_USER_ID#,					/* 수정자 */
			   UPDT_DT = SYSDATE						/* 수정일 */
		WHERE CNTRCTR_NO = #CNTRCTR_NO#
		AND   RENT_ENDDE_BFCHG = #RENT_ENDDE_BFCHG#
	</update>


	<!-- 쿼리명 : 매입임대 재계약정보 삭제
		    설명 : 매입임대 재계약정보 삭제 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<delete id="RNT02030300DAO.puchasReCntrctD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasReCntrctD[매입임대 재계약 정보 삭제] */
		DELETE
		  FROM TBRNT_PUCHAS_RE_CNTRCT
		 WHERE CNTRCT_DE IS NULL						/* 재계약 상태가 미계약인 정보를 대상으로 변경 */
		   AND CNTRCTR_NO = #CNTRCTR_NO#				/* 계약자번호 */
		   AND RENT_ENDDE_BFCHG = #RENT_ENDDE_BFCHG#	/* 임대종료일자_변경전 */
	</delete>


	<!-- 매입 보증금 정보 일괄생성(재계약 정보 일괄 생성시) -->
	<insert id="RNT02030300DAO.puchasGtnAllC" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasGtnAllC[매입 보증금 정보 일괄생성(재계약 정보 일괄 생성시)] */
		INSERT INTO TBRNT_PUCHAS_GTN(
			   CNTRCTR_NO							/* 계약자번호 */
			  ,GTN_SN								/* 보증금순번 */
			  ,GTN_SE								/* 보증금구분 */
			  ,CNTRCT_YEAR							/* 계약년도 */
			  ,GTN									/* 보증금 */
			  ,PAY_TMLMT							/* 납부기한 */
			  ,RCIV_DE								/* 수납일자 */
			  ,SN									/* 일련번호 */
			  ,RM									/* 비고 */
			  ,REGISTER_ID							/* 등록자ID */
			  ,REGIST_DT							/* 등록일시 */
			  ,UPDUSR_ID							/* 수정자ID */
			  ,UPDT_DT								/* 수정일시 */
		)	
		SELECT A.CNTRCTR_NO,
			   (SELECT NVL(MAX(GTN_SN), 0) + 1 FROM TBRNT_PUCHAS_GTN G WHERE G.CNTRCTR_NO = A.CNTRCTR_NO),		/* 보증금순번 */
			   '5',									/* 보증금구분[5:재계약(보증금)] */
			   SUBSTR(A.RENT_ENDDE_BFCHG, 1, 4),	/* 계약년도 */
			   A.GTN - A.GTN_BFCHG,					/* 보증금 */
			   A.PAY_TMLMT,							/* 납부기한 */
			   NULL,								/* 수납일자 */
			   (SELECT NVL(MAX(GTN_SN), 0) + 1 FROM TBRNT_PUCHAS_GTN G WHERE G.CNTRCTR_NO = A.CNTRCTR_NO),		/* 보증금순번 */
			   NULL,								/* 비고 */
			   #S_USER_ID#,
			   SYSDATE,
			   #S_USER_ID#,
			   SYSDATE
		  FROM TBRNT_PUCHAS_RE_CNTRCT A
		 INNER JOIN TBRNT_PUCHAS_CNTRCT B
			ON B.CNTRCTR_NO = A.CNTRCTR_NO
		 WHERE A.CNTRCT_DE IS NULL
		   AND A.GTN > A.GTN_BFCHG
		<isNotEmpty property="rentHouseCode">
		   AND B.RENT_HOUSE_CODE = #rentHouseCode#		/* 임대주택코드 */
		</isNotEmpty>
		   AND SUBSTR(A.RENT_ENDDE_BFCHG, 1, 6) = #stdrMt#
		   AND NOT EXISTS (
					SELECT 1		/* 기준월에 재계약(보증금)이 존재하지 않으면. */
					  FROM TBRNT_PUCHAS_GTN G
					 WHERE G.CNTRCTR_NO = A.CNTRCTR_NO
					   AND G.GTN_SE = '5'				/* 보증금구분[5:재계약(보증금)] */
					   AND G.CNTRCT_YEAR = SUBSTR(#stdrMt#, 1, 4)
					   AND G.RCIV_DE IS NULL
			   )
	</insert>


	<!-- 매입 보증금 정보 일괄삭제(재계약 정보 일괄삭제시) -->
	<delete id="RNT02030300DAO.puchasGtnAllD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasGtnAllD[매입 보증금 정보 일괄삭제(재계약 정보 일괄삭제시)] */
		DELETE
		  FROM TBRNT_PUCHAS_GTN G
		 WHERE G.GTN_SE = '5'		/* 보증금구분[5:재계약(보증금)] */
		   AND G.CNTRCTR_NO IN (
				 SELECT B.CNTRCTR_NO
				  FROM TBRNT_PUCHAS_RE_CNTRCT A						/* 재계약정보 테이블 */
				 INNER JOIN TBRNT_PUCHAS_CNTRCT B					/* 계약정보 테이블 */
					ON B.CNTRCTR_NO = A.CNTRCTR_NO
				 WHERE A.CNTRCT_DE IS NULL
				   AND SUBSTR(A.RENT_ENDDE_BFCHG, 1, 6) = #stdrMt#
		<isNotEmpty property="rentHouseCode">
				   AND B.RENT_HOUSE_CODE = #rentHouseCode#		/* 임대주택코드 */
		</isNotEmpty>
			   )
		   AND G.CNTRCT_YEAR = SUBSTR(#stdrMt#, 1, 4)
		   AND G.GTN_SE = '5'		/* 납부구분[5:재계약(보증금)] */
		   AND G.RCIV_DE IS NULL
	</delete>


    <!-- 매입 보증금 납입기한 일괄변경-->
	<delete id="RNT02030300DAO.puchasGtnAllU" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasGtnAllU[매입 보증금 납입기한 일괄변경] */
		UPDATE TBRNT_PUCHAS_GTN G
		     SET PAY_TMLMT = #payTmlmt#
		 WHERE G.GTN_SE = '5'		/* 보증금구분[5:재계약(보증금)] */
		   AND G.CNTRCTR_NO IN (
												 SELECT B.CNTRCTR_NO
												  FROM TBRNT_PUCHAS_RE_CNTRCT A						/* 재계약정보 테이블 */
												 INNER JOIN TBRNT_PUCHAS_CNTRCT B					/* 계약정보 테이블 */
													ON B.CNTRCTR_NO = A.CNTRCTR_NO
												 WHERE A.CNTRCT_DE IS NULL
												   AND SUBSTR(A.RENT_ENDDE_BFCHG, 1, 6) = #stdrMt#
										<isNotEmpty property="rentHouseCode">
												   AND B.RENT_HOUSE_CODE = #rentHouseCode#		/* 임대주택코드 */
										</isNotEmpty>
											   )
		   AND G.CNTRCT_YEAR = SUBSTR(#stdrMt#, 1, 4)
		   AND G.RCIV_DE IS NULL
	</delete>

	<!-- 매입 보증금 정보 수정(재계약수정시) -->
	<update id="RNT02030300DAO.puchasGtnU" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasGtnU[매입 보증금 정보 수정(재계약수정시)] */
		MERGE INTO TBRNT_PUCHAS_GTN G
			 USING (
					SELECT '5' AS GTN_SE,					/* 보증금구분[5:재계약(보증금)] */
						   #CNTRCTR_NO# AS CNTRCTR_NO,
						   #RENT_ENDDE_BFCHG# AS RENT_ENDDE_BFCHG,
						   #GTN# AS GTN
					  FROM DUAL
				   ) C
				ON (	G.GTN_SE	  = C.GTN_SE
					AND G.CNTRCTR_NO  = C.CNTRCTR_NO
					AND G.CNTRCT_YEAR = SUBSTR(C.RENT_ENDDE_BFCHG, 1, 4)
					AND G.GTN_SE = '5'		/* 납부구분[5:재계약(보증금)] */
					AND G.RCIV_DE IS NULL
				   )
			  WHEN MATCHED THEN
					UPDATE
					   SET GTN		 = #GTN# - #GTN_BFCHG#,
						   PAY_TMLMT = #PAY_TMLMT#,			/* 납부기한 */
						   UPDUSR_ID = #S_USER_ID#,
						   UPDT_DT	 = SYSDATE
			  WHEN NOT MATCHED THEN
					INSERT(
					   CNTRCTR_NO,							/* 계약자번호 */
					   GTN_SN,								/* 보증금순번 */
					   GTN_SE,								/* 보증금구분 */
					   CNTRCT_YEAR,							/* 계약년도 */
					   GTN,									/* 보증금 */
					   PAY_TMLMT,							/* 납부기한 */
					   RCIV_DE,								/* 수납일자 */
					   SN,									/* 일련번호 */
					   RM,									/* 비고 */
					   REGISTER_ID,							/* 등록자ID */
					   REGIST_DT,							/* 등록일시 */
					   UPDUSR_ID,							/* 수정자ID */
					   UPDT_DT								/* 수정일시 */
					)
					VALUES(
					   #CNTRCTR_NO#,						/* 계약자번호 */
					   (SELECT NVL(MAX(GTN_SN), 0) + 1 FROM TBRNT_PUCHAS_GTN WHERE CNTRCTR_NO = #CNTRCTR_NO#),		/* 보증금순번 */
					   '5',									/* 보증금구분[5:재계약(보증금)] */
					   SUBSTR(#RENT_ENDDE_BFCHG#, 1, 4),	/* 계약년도 */
					   #GTN# - #GTN_BFCHG#,					/* 증액보증금 */
					   #PAY_TMLMT#,							/* 납부기한 */
					   NULL,								/* 수납일자 */
					   (SELECT NVL(MAX(GTN_SN), 0) + 1 FROM TBRNT_PUCHAS_GTN WHERE CNTRCTR_NO = #CNTRCTR_NO#),		/* 일련번호 */
					   NULL,								/* 비고 */
					   #S_USER_ID#,
					   SYSDATE,
					   #S_USER_ID#,
					   SYSDATE
					)
	</update>


	<!-- 매입 보증금 정보 삭제(재계약삭제시) -->
	<delete id="RNT02030300DAO.puchasGtnD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasGtnD[매입 보증금 정보 삭제(재계약삭제시)] */
		DELETE
		  FROM TBRNT_PUCHAS_GTN G
		 WHERE G.GTN_SE		 = '5'			/* 보증금구분[5:재계약(보증금)] */
		   AND G.CNTRCTR_NO	 = #CNTRCTR_NO#
		   AND G.CNTRCT_YEAR = SUBSTR(#RENT_ENDDE_BFCHG#, 1, 4)
		   AND G.RCIV_DE IS NULL
	</delete>


	<!-- 쿼리명 : 매입임대 납부기한일괄변경
		    설명 : 매입임대 납부기한일괄변경 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.29
	-->
	<update id="RNT02030300DAO.puchasReCntrctAllU" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.puchasReCntrctAllU[매입임대 납부기한일괄변경] */
		UPDATE TBRNT_PUCHAS_RE_CNTRCT A
		   SET PAY_TMLMT = #payTmlmt#
		 WHERE TO_CHAR(TO_DATE(RENT_ENDDE_BFCHG, 'YYYYMMDD'),'YYYYMM') = #stdrMt#	/* 기준월 */
		   AND CNTRCT_DE IS NULL													/* 재계약 상태가 미계약인 정보를 대상으로 변경 */
		   AND EXISTS(
					SELECT 1
					  FROM TBRNT_PUCHAS_CNTRCT B
					 INNER JOIN TBRNT_PUCHAS_HOUSE C
						ON B.RENT_HOUSE_CODE = C.RENT_HOUSE_CODE
					 WHERE B.CNTRCTR_NO = A.CNTRCTR_NO
		<isNotEmpty property="rentHouseCode">
					   AND B.RENT_HOUSE_CODE = #rentHouseCode#						/* 임대주택코드 */
		</isNotEmpty>
					 )
	</update>


	<!-- 쿼리명 : 매입임대 안내장 조회
		    설명 : 매입임대 안내장 조회 쿼리
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<select id="RNT02030300DAO.selectInfoDocList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* RNT02030300DAO.selectInfoDocList[매입임대 안내장 조회] */
		SELECT GDCC_NO,				/* 안내문번호 */
			   GDCC_KND,			/* 안내문종류 */
			   ZIP,					/* 우편번호 */
			   ADRES,				/* 주소 */
			   TELNO,				/* 전화번호 */
			   FAX,					/* 팩스 */
			   DPRLR,				/* 부서장 */
			   CHARGER,				/* 담당자 */
			   SJ,					/* 제목 */
			   DOC_NO,				/* 문서번호 */
			   MANAGE_NO,			/* 관리번호 */
			   OPERTN_DE,			/* 시행일자 */
			   BGNDE,				/* 시작일자 */
			   ENDDE,				/* 종료일자 */
			   INQIRE_YM,			/* 조회년월 */
			   INCRSE_RT,			/* 인상률 */
			   CNCLS_DT,			/* 체결일시 */
			   CNTRCT_PLACE_1,		/* 계약장소1 */
			   CNTRCT_PLACE_2,		/* 계약장소2 */
			   CNTRCT_PLACE_3		/* 계약장소3 */
		  FROM TBRNT_PUCHAS_GDCC
		 WHERE 1 = 1
		<isNotEmpty property="GDCC_NO">
		   AND GDCC_NO = #GDCC_NO#			/* 안내문번호 */
		</isNotEmpty>
		<isNotEmpty property="GDCC_KND">
		   AND GDCC_KND = #GDCC_KND#		/* 안내문종류 */
		</isNotEmpty>
	</select>


	<!-- 쿼리명 : 일괄납부 생성 프로시저
		    설명 : 일괄납부 생성 프로시저 call
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<parameterMap id="sp_va_bill_uid_all" class="java.util.HashMap">
		<parameter property="in_CRT_DIV"   jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_CORT_DIV"  jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_APT_CLASS" jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_BANK_CD"   jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_CUST_ID"   jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_billym"    jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_dec_date"  jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_tr_date"   jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_tr_sdate"  jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="in_tr_edate"  jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="S_USER_ID"    jdbcType="VARCHAR" javaType="string" mode="IN" />
	</parameterMap>
	<procedure id="RNT02030300DAO.spVaBillUidAll" parameterMap="sp_va_bill_uid_all">
	{ CALL SP_VA_BILL_UID_ALL(? ,? ,? ,? ,? ,? ,? ,? ,? ,? ,?)}
	</procedure>


	<!-- 쿼리명 : 재계약정보 납부서
		    설명 : 재계약정보 납부서 조회
		  수정일 : 수정자  수정내용
		  작성자 : 변승우
	 최초작성일 : 2016.01.26
	-->
	<select id="RNT02030300DAO.billPrintList" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.billPrintList[재계약정보 납부서] */
		SELECT B.CNTRCTR_NO,													/* 계약자번호 */
			   B.RENT_HOUSE_CODE,												/* 임대주택코드 */
			   B.DONG,															/* 동 */
			   B.HO,															/* 호 */
			   C.NM,															/* 납부자명 */
			   E.ZIP,															/* 우편번호 */
			   TRIM(E.ADRES) || ' ' || TRIM(E.ADRES_DETAIL) AS ADDR1,			/* 주소 */
			   D.RENT_HOUSE_NM || ' ' || TO_NUMBER(B.DONG) || '-' || TO_NUMBER(B.HO) AS ADDR2,		/* 상세주소 */
			   SUBSTR(VB.PAYEND_DATE, 1, 6) AS BILL_YM,							/* 납부년월 */
			   VB.PAYEND_DATE,													/* 납부기한 */
			   '주택(아파트)' AS C_TITLE1,											/* 납부대상물건 및 납부자 - 타이틀1 */
			   D.RENT_HOUSE_NM AS C_CONT1,										/* 납부대상물건 및 납부자 - 내용1 */
			   '동   호   수' AS C_TITLE2,											/* 납부대상물건 및 납부자 - 타이틀2 */
			   TRIM(TO_NUMBER(B.DONG) || '-' || TO_NUMBER(B.HO)) AS C_CONT2,	/* 납부대상물건 및 납부자 - 내용3 */
			   '납   부   자' AS C_TITLE3,											/* 납부대상물건 및 납부자 - 타이틀3 */
			   C.NM AS C_CONT3,													/* 납부대상물건 및 납부자 - 내용3 */
			   '자동이체코드' AS C_TITLE4,											/* 납부대상물건 및 납부자 - 타이틀4 */
			   B.RENT_HOUSE_CODE || '-' || B.DONG || '-' || B.HO AS C_CONT4,	/* 납부대상물건 및 납부자 - 내용4 */
			   '보 증 금' AS A_TITLE1,												/* 납부내역 및 금액 - 타이틀1 */
			   VB.PAY_AMT AS A_AMT1,											/* 납부내역 및 금액 - 내용1 */
			   '' AS A_TITLE2,													/* 납부내역 및 금액 - 타이틀2 */
			   '' AS A_AMT2,													/* 납부내역 및 금액 - 내용2 */
			   '' AS A_TITLE3,													/* 납부내역 및 금액 - 타이틀3 */
			   '' AS A_AMT3,													/* 납부내역 및 금액 - 내용3 */
			   '' AS A_TITLE4,													/* 납부내역 및 금액 - 타이틀4 */
			   '' AS A_AMT4,													/* 납부내역 및 금액 - 내용4 */
			   VB.PAY_AMT AS A_AMT5,											/* 납부내역 및 금액 - 내용5 */
			   VB.PAY_AMT AS PAY_AMT,											/* 합계 - 납부대상금액 */
			   VB.SALE_AMT,														/* 합계 - 차감금액 */
			   VB.INT_AMT,														/* 합계 - 연체금액 */
			   VB.TOT_AMT,														/* 합계 - 납부하실금액 */
			   TO_CHAR (VB.PAYEND_DATE, 'YYYY-MM') AS MONTH1,					/* 납부내역 - 구분 */
			   TO_CHAR(VB.PAYEND_DATE, 'YYYY-MM-DD') AS PAYEND_DATE1,			/* 납부내역 - 납부기한 */
			   VB.PAY_AMT  AS PAY_AMT1,											/* 납부내역 - 납부대상금액 */
			   VB.SALE_AMT AS SALE_AMT1,										/* 납부내역 - 차감금액 */
			   VB.INT_AMT  AS INT_AMT1,											/* 납부내역 - 연체금액 */
			   VB.TOT_AMT  AS TOT_AMT1,											/* 납부내역 - 납부하실금액 */
			   VV.BANK1,
			   VV.ACCT_NO1,
			   VV.BANK2,
			   VV.ACCT_NO2,
			   VV.BANK3,
			   VV.ACCT_NO3,
			   VV.BANK4,
			   VV.ACCT_NO4,
			   VV.BANK5,
			   VV.ACCT_NO5,
			   B.RENT_HOUSE_CODE || '-' || B.DONG || '-' || B.HO AS AUTO_CODE,	/* 자동이체코드 */
			   (
				SELECT MSTK_PREPAR_VALUE
				  FROM TBCOM_CMMN_CODE
				 WHERE GRP_CODE = 'COM027'
				   AND CODE = 'RN'
			   ) AS BIZ_NO,														/* 기관코드 */
			   D.RENT_HOUSE_NM || ' ' || TO_NUMBER(B.DONG) || '-' || TO_NUMBER(B.HO) AS APT_ADDR,	/* 아파트주소 */
			   TO_CHAR(VB.PAYEND_DATE, 'YYYY') BILL_YEAR,						/* 납부년 */
			   TO_CHAR(VB.PAYEND_DATE, 'MM') BILL_MONTH,						/* 납부월 */
			   SUBSTR(VB.TR_DATE, 1, 4)  AS CAL_YEAR,							/* 기준년 */
			   SUBSTR(VB.TR_DATE, 5, 2)  AS CAL_MONTH,							/* 기준월 */
			   SUBSTR(VB.TR_DATE, 7, 2)  AS CAL_DAY,							/* 기준일 */
			   SUBSTR(VB.TR_EDATE, 1, 4) AS END_YEAR,							/* 납부기한 년 */
			   SUBSTR(VB.TR_EDATE, 5, 2) AS END_MONTH,							/* 납부기한 월 */
			   SUBSTR(VB.TR_EDATE, 7, 2) AS END_DAY								/* 납부기한 일 */
		  FROM TBRNT_PUCHAS_RE_CNTRCT A
		 INNER JOIN TBRNT_PUCHAS_CNTRCT B
			ON B.CNTRCTR_NO = A.CNTRCTR_NO
		   AND B.CANCL_DE IS NULL
		 INNER JOIN TBRNT_PUCHAS_RENT_CSTMR C
			ON C.PUCHAS_CSTMR_NO = B.PUCHAS_CSTMR_NO
		 INNER JOIN TBRNT_PUCHAS_HOUSE D
			ON D.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		 INNER JOIN TBRNT_PUCHAS_HOUSE_DONG E
			ON E.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE
		   AND E.DONG = B.DONG
		 INNER JOIN VA_MAST V
			ON V.CUST_CD = A.CNTRCTR_NO
		   AND V.CRT_DIV = 'RN'
		   AND V.OPT2 = '1'
		 INNER JOIN (
					SELECT B.BANK_CD,
						   B.VACCT_NO,
						   MAX(B.PAYEND_DATE) AS PAYEND_DATE,
						   MAX(B.PAY_AMT)  AS PAY_AMT,
						   MAX(B.SALE_AMT) AS SALE_AMT,
						   MAX(B.INT_AMT)  AS INT_AMT,
						   MAX(B.BILL_AMT) AS TOT_AMT,
						   MAX(A.TR_DATE)  AS TR_DATE,
						   MAX(A.TR_EDATE) AS TR_EDATE
					  FROM VA_BILL A
					 INNER JOIN VA_BILL_DETAIL B
						ON B.BANK_CD = A.BANK_CD
					   AND B.VACCT_NO = A.VACCT_NO
					   AND B.CRT_DIV = 'RN'
					   AND B.CORT_CODE = 'R0'		/* R0 : 보증금 */
					 GROUP BY B.BANK_CD, B.VACCT_NO
			   ) VB
			ON VB.BANK_CD = V.BANK_CD
		   AND VB.VACCT_NO = V.VACCT_NO
		  LEFT JOIN VI_VA_MAST VV
			ON VV.CRT_ID = A.CNTRCTR_NO
		   AND VV.CRT_DIV = 'RN'
		 WHERE A.CNTRCT_DE IS NULL
		   AND A.GTN - A.GTN_BFCHG > 0
		   AND SUBSTR(A.RENT_ENDDE_BFCHG, 1 , 6) = #stdrMt#
		<isNotEmpty property="rentHouseCode">
		   AND B.RENT_HOUSE_CODE = #rentHouseCode#
		</isNotEmpty>
		<isNotEmpty property="dong">
		   AND B.DONG = LPAD(#dong#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="ho">
		   AND B.HO = LPAD(#ho#, 4, '0')
		</isNotEmpty>
		<isNotEmpty property="nm">
		   AND C.NM LIKE '%' || #nm# || '%'
		</isNotEmpty>
		<isEqual property="houseAt" compareValue="1">
		   AND NVL(B.HOUSE_POSESN_AT, '0') = '0'
		</isEqual>
	</select>


	<!-- 납부요청 정보 삭제(재계약삭제시) -->
	<delete id="RNT02030300DAO.vaBillD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.vaVillD[납부요청 정보 삭제(재계약삭제시)] */
		BEGIN
			/* VA_BILL 삭제 */
			DELETE
			  FROM VA_BILL
			 WHERE (BANK_CD, VACCT_NO) IN (
											SELECT V.BANK_CD, V.VACCT_NO
											  FROM TBRNT_PUCHAS_RE_CNTRCT A
											 INNER JOIN TBRNT_PUCHAS_CNTRCT B
											    ON B.CNTRCTR_NO = A.CNTRCTR_NO
											   and B.CANCL_DE IS NULL
											   and NVL(B.HOUSE_POSESN_AT,'0') = '0'
											 INNER JOIN VA_MAST V
											    ON V.CUST_CD = A.CNTRCTR_NO
											   AND v.CRT_DIV = 'RN'
											   AND NVL(V.OPT2,'0') = '1'  /* 대표계좌 */
											 WHERE A.CNTRCT_DE IS NULL
											   AND A.GTN - A.GTN_BFCHG > 0
											<isNotEmpty property="CNTRCTR_NO">
											   AND A.CNTRCTR_NO = #CNTRCTR_NO#
											</isNotEmpty>
											<isNotEmpty property="RENT_ENDDE_BFCHG">
											   AND A.RENT_ENDDE_BFCHG = #RENT_ENDDE_BFCHG#
											</isNotEmpty>
											);

			/* VA_BILL_DETAIL 삭제 */
			DELETE
			  FROM VA_BILL_DETAIL
			 WHERE (BANK_CD, VACCT_NO) IN (
											SELECT V.BANK_CD, V.VACCT_NO
											  FROM TBRNT_PUCHAS_RE_CNTRCT A
											 INNER JOIN TBRNT_PUCHAS_CNTRCT B
											    ON B.CNTRCTR_NO = A.CNTRCTR_NO
											   and B.CANCL_DE IS NULL
											   and NVL(B.HOUSE_POSESN_AT,'0') = '0'
											 INNER JOIN VA_MAST V
											    ON V.CUST_CD = A.CNTRCTR_NO
											   AND v.CRT_DIV = 'RN'
											   AND NVL(V.OPT2,'0') = '1'  /* 대표계좌 */
											 WHERE A.CNTRCT_DE IS NULL
											   AND A.GTN - A.GTN_BFCHG > 0
											<isNotEmpty property="CNTRCTR_NO">
											   AND A.CNTRCTR_NO = #CNTRCTR_NO#
											</isNotEmpty>
											<isNotEmpty property="RENT_ENDDE_BFCHG">
											   AND A.RENT_ENDDE_BFCHG = #RENT_ENDDE_BFCHG#
											</isNotEmpty>
											);
		END;
	</delete>


	<!-- 납부요청 정보 삭제(재계약일괄삭제시) -->
	<delete id="RNT02030300DAO.vaBillAllD" parameterClass="java.util.HashMap">
		/* RNT02030300DAO.vaBillAllD[납부요청 정보 삭제(재계약일괄삭제시)] */
		BEGIN
			/* VA_BILL 삭제 */
			DELETE
			  FROM VA_BILL
			 WHERE (BANK_CD, VACCT_NO) IN (
											SELECT V.BANK_CD, V.VACCT_NO
											  FROM TBRNT_PUCHAS_RE_CNTRCT A
											 INNER JOIN TBRNT_PUCHAS_CNTRCT B
											    ON B.CNTRCTR_NO = A.CNTRCTR_NO
											   and B.CANCL_DE IS NULL
											   and NVL(B.HOUSE_POSESN_AT,'0') = '0'
											 INNER JOIN VA_MAST V
											    ON V.CUST_CD = A.CNTRCTR_NO
											   AND v.CRT_DIV = 'RN'
											   AND NVL(V.OPT2,'0') = '1'  /* 대표계좌 */
											 WHERE A.CNTRCT_DE IS NULL
											   AND A.GTN - A.GTN_BFCHG > 0
											   AND A.RENT_ENDDE_BFCHG LIKE #stdrMt# || '%'
											<isNotEmpty property="rentHouseCode">
											   AND B.RENT_HOUSE_CODE = #rentHouseCode#
											</isNotEmpty>
											);

			/* VA_BILL_DETAIL 삭제 */
			DELETE
			  FROM VA_BILL_DETAIL
			 WHERE (BANK_CD, VACCT_NO) IN (
											SELECT V.BANK_CD, V.VACCT_NO
											  FROM TBRNT_PUCHAS_RE_CNTRCT A
											 INNER JOIN TBRNT_PUCHAS_CNTRCT B
											    ON B.CNTRCTR_NO = A.CNTRCTR_NO
											   and B.CANCL_DE IS NULL
											   and NVL(B.HOUSE_POSESN_AT,'0') = '0'
											 INNER JOIN VA_MAST V
											    ON V.CUST_CD = A.CNTRCTR_NO
											   AND v.CRT_DIV = 'RN'
											   AND NVL(V.OPT2,'0') = '1'  /* 대표계좌 */
											 WHERE A.CNTRCT_DE IS NULL
											   AND A.GTN - A.GTN_BFCHG > 0
											   AND A.RENT_ENDDE_BFCHG LIKE #stdrMt# || '%'
											<isNotEmpty property="rentHouseCode">
											   AND B.RENT_HOUSE_CODE = #rentHouseCode#
											</isNotEmpty>
											);
		END;
	</delete>
</sqlMap>