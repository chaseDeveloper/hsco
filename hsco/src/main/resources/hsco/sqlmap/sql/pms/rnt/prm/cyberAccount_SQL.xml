<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="cyberAccount_SQL" >
	<!-- 쿼리명 : 매입임대 가상계좌 목록 조회
		    설명 : 매입임대 가상계좌 목록 조회 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.vacctNoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.vacctNoList[매입임대 가상계좌 목록 조회] */
		SELECT BANK_CD,																			/* 은행코드 */
			   SFCMP_GET_CODENM('COM021', BANK_CD) AS BANK_NM,									/* 은행명 */
			   VACCT_NO,																		/* 가상계좌번호 */
			   '[' || SFCMP_GET_CODENM('COM021', BANK_CD) || ']' || ' ' || VACCT_NO AS FULL_NM,	/* 은행명 + 계좌번호 */
			   OPT1,
			   OPT2,
			   CRT_DIV,
			   DECODE(CRT_DIV, 'MA', 'MA', DECODE(OPT1, '1', 'RN', 'R0')) AS CORD_CODE			/* 계좌구분 */
		  FROM VA_MAST A
		 WHERE BANK_CD = '031'				/* 매입임대에서는 화성은행으로 고정 */
		   AND NVL(OPT3, '0') = '0'			/* 주거급여계좌가 아닌. */
		<isNotEmpty property="cntrctrNo">
		   AND CUST_CD = #cntrctrNo#		/* 계약자번호 */
		</isNotEmpty>
		ORDER BY BANK_CD, VACCT_NO
	</select>


	<!-- 쿼리명 : 매입임대 미납금액 조회
		    설명 : 매입임대 미납금액 조회 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.nonPaymentList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.nonPaymentList[매입임대 미납금액 조회] */
		/**************************   임대료   **************************/ 
		SELECT 0 AS CHK,
			   CNTRCTR_NO,																	/* 계약자번호 */
			   PAY_TMLMT,																	/* 납부기한 */
			   NVL(RNTCHRG, 0) AS CORT_AMOUNT,												/* 임대료 */
			   NVL(RDCAMT_AMOUNT, 0) AS RDCAMT_AMOUNT,										/* 차액금액 */
			   NVL(OVDINTR, 0) AS OVDINTR,													/* 연체이자 */
			   NVL(RNTCHRG, 0) + NVL(RDCAMT_AMOUNT, 0) + NVL(OVDINTR, 0) AS TOT_AMOUNT,		/* 총 납부금 */
			   0 AS RCIV_NO,																/* 납부 번호 */
			   '임대료' AS CORT_CODE_NM,
			   '' AS OCCRRNC_YM,
			   'RN' AS CORT_CODE
		  FROM TBRNT_PUCHAS_MT_RNTCHRG														/* 매입월임대료 테이블 */
		 WHERE CNTRCTR_NO = #cntrctrNo#
		   AND RCIV_DE IS NULL
		   AND NVL(RNTCHRG, 0) + NVL(RDCAMT_AMOUNT, 0) + NVL(OVDINTR, 0) > 0
		   AND 'RN' IN 
		<iterate property="arr_cortCode"  open="(" close=")" conjunction="," >
			#arr_cortCode[]#
		</iterate>
		 UNION ALL

		/**************************   보증금   **************************/ 
		SELECT 0 AS CHK,
			   CNTRCTR_NO,																	/* 계약자번호 */
			   PAY_TMLMT,																	/* 납부기한 */
			   NVL(GTN, 0) AS CORT_AMOUNT,													/* 보증금 */
			   0 AS RDCAMT_AMOUNT,															/* 차액금액 */
			   0 AS OVDINTR,																/* 연체이자 */
			   NVL(GTN, 0) AS TOT_AMOUNT,													/* 총 납부금 */
			   0 AS RCIV_NO,
			   '보증금' AS CORT_CODE_NM,
			   '' AS OCCRRNC_YM,
			   'R0' AS CORT_CODE
		  FROM TBRNT_PUCHAS_GTN																/* 매입보증금 테이블 */
		 WHERE CNTRCTR_NO = #cntrctrNo#
		   AND RCIV_DE IS NULL
		   AND PAY_TMLMT LIKE (
								SELECT SUBSTR(MAX(PAY_TMLMT), 1, 4) || '%'		/* 마지막 미납보증금 납부년도 */
								  FROM TBRNT_PUCHAS_GTN
								 WHERE CNTRCTR_NO = #cntrctrNo#)
		   AND 'R0' IN 
		<iterate property="arr_cortCode" open="(" close=")" conjunction=",">
			#arr_cortCode[]#
		</iterate>
		 UNION ALL

		/**************************   소송비   **************************/ 
		SELECT 0 AS CHK,
			   CNTRCTR_NO,																	/* 계약자번호 */
			   JUDMN_DE AS PAY_TMLMT,														/* 납부기한 */
			   NVL(LWST_AMOUNT, 0) - NVL(RCIV_AMOUNT, 0) AS CORT_AMOUNT,					/* 임대료 */
			   0 AS RDCAMT_AMOUNT,															/* 차액금액 */
			   0 AS OVDINTR,																/* 연체이자 */
			   NVL(LWST_AMOUNT, 0) - NVL(RCIV_AMOUNT, 0) AS TOT_AMOUNT,						/* 총 납부금 */
			   0 AS RCIV_NO,
			   '소송비' AS CORT_CODE_NM,
			   '' AS OCCRRNC_YM,
			   'T2' AS CORT_CODE
		  FROM TBRNT_PUCHAS_LWST															/* 매입소송 테이블 */
		 WHERE CNTRCTR_NO = #cntrctrNo#
		   AND NVL(LWST_AMOUNT, 0) - NVL(RCIV_AMOUNT, 0) > 0
		   AND 'T2' IN 
		<iterate property="arr_cortCode" open="(" close=")" conjunction=",">
			#arr_cortCode[]#
		</iterate>
		UNION ALL
		
		SELECT   0 AS CHK,
		         a.CNTRCTR_NO ,
		         MAX(PAY_TMLMT) AS PAY_TMLMT ,
		         SUM(NVL(a.MINAB, 0)) - SUM(NVL(a.MANAGECT, 0))                                          AS CORT_AMOUNT ,
		         SUM(RDCAMT_AMOUNT)          - (SUM(NVL(a.TOTAL, 0)) - TRUNC(SUM(NVL(a.TOTAL, 0)), - 1)) AS RDCAMT_AMOUNT,
		         SUM(OVDINTR)                                                                            AS OVDINTR,
		         TRUNC(SUM(NVL(a.TOTAL, 0)), - 1)                                                        AS TOT_AMOUNT ,
		         0                                                                                       AS RCIV_NO,
		         '관리비'                                                                               AS CORT_CODE_NM,
		         OCCRRNC_YM,
		         'MA' AS CORT_CODE
		FROM     (SELECT CNTRCTR_NO ,
		                 PAY_TMLMT ,
		                 OCCRRNC_YM ,
		                 RCIV_DE ,
		                 NVL(RDCAMT_AMOUNT, 0) AS RDCAMT_AMOUNT ,(
		                 CASE
		                         WHEN RCIV_DE IS NOT NULL
		                         THEN NVL(MANAGECT, 0) + NVL(OVDINTR, 0) + NVL(RDCAMT_AMOUNT, 0)
		                         ELSE 0
		                 END )                                                      AS MANAGECT ,
		                 NVL(MANAGECT, 0) + NVL(OVDINTR, 0) + NVL(RDCAMT_AMOUNT, 0) AS TOTAL,
		                 NVL(MANAGECT, 0) + NVL(OVDINTR, 0)                         AS MINAB,
		                 OVDINTR
		         FROM    TBRNT_MT_MANAGECT
		         WHERE   CNTRCTR_NO = #cntrctrNo#
		         )
		         a
		WHERE    a.RCIV_DE IS NULL
		   AND 'MA' IN 
		<iterate property="arr_cortCode" open="(" close=")" conjunction=",">
			#arr_cortCode[]#
		</iterate>
		 GROUP BY CNTRCTR_NO, OCCRRNC_YM
	</select>



	<!-- 쿼리명 : 매입임대 입금내역 조회
		    설명 : 매입임대 입금내역 조회 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.receiptList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.receiptList[매입임대 입금내역 조회] */
		SELECT BANK_CD,														/* 은행코드 */
			   SFCMP_GET_CODENM('COM021', BANK_CD) AS BANK_NM,				/* 은행명 */
			   VACCT_NO,													/* 가상계좌번호 */
			   IN_DATE,														/* 수납일자 */
			   PAYEND_DATE,													/* 납입기한 */
			   BILL_AMT,													/* 청구금액 */
			   PAY_NUM,														/* 청구순번 */
			   DECODE(CRT_DIV, 'RN', DECODE(CORT_CODE, 'RN', '임대료', 'R0', '보증금', 'T2', '소송비', 'BS', '지원금', CORT_CODE)
							 , 'MA', DECODE(CORT_CODE, 'MA', '관리비', CORT_CODE)
							 , 'BS', '지원금') AS CORT_CODE					/* 납부구분 */
		  FROM VA_RECEIPT
		 WHERE CRT_ID = #cntrctrNo#
		   AND CORT_CODE IN 
		<iterate property="arr_cortCode"  open="(" close=")" conjunction="," >
			#arr_cortCode[]#
		</iterate>
		ORDER BY IN_DATE DESC, PAYEND_DATE
	</select> 


	<!-- 쿼리명 : 매입임대 납부내역 조회
		    설명 : 매입임대 납부내역 조회 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.billList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.billList[매입임대 납부내역 조회] */
		SELECT BANK_CD,														/* 은행코드 */
			   SFCMP_GET_CODENM('COM021', BANK_CD) AS BANK_NM,				/* 은행명 */
			   VACCT_NO,													/* 가상계좌번호 */
			   TO_DATE(TR_DATE ,'YYYY-MM-DD') AS TR_DATE,					/* 거래일자 */
			   TR_NO,														/* 거래번호 */
			   TO_DATE(TR_SDATE ,'YYYY-MM-DD') AS TR_SDATE,					/* 거래시작일 */
			   TO_DATE(TR_EDATE ,'YYYY-MM-DD') AS TR_EDATE,					/* 거래종료일 */
			   BILL_AMT,													/* 청구금액 */
			   IN_DATE,														/* 입금일자 */
			   CRT_DIV,														/* 계약구분 */
			   CRT_ID,														/* 계약번호 */
			   EXT1															/* 비고 */
		  FROM VA_BILL A
		 WHERE BANK_CD = #bankCd#
		   AND VACCT_NO = #vacctNo#
		   AND CRT_DIV = #crtDiv#
		   AND CRT_ID  = #cntrctrNo#
	</select>


	<!-- 쿼리명 : 매입임대 납부내역상세 조회
		    설명 : 매입임대 납부내역상세 조회 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.billDetailList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.billDetailList[매입임대 납부내역상세 조회] */
		SELECT SFCMP_GET_CODENM('COM021', bank_cd) AS BANK_NM,		/* 은행명 */
			   VACCT_NO,											/* 가상계좌번호 */
			   PAYEND_DATE,											/* 납부기한 */
			   DECODE(CORT_CODE, 'RN', '임대료'
							   , 'R0', '보증금'
							   , 'T2', '소송비'
							   , 'MA', '관리비'
							   , 'BS', '지원금'
							   , '기타') AS CORT_CODE_NM,				/* 납부코드명 */
			   BILL_AMT												/* 청구금액 */
		  FROM VA_BILL_DETAIL A
		 WHERE BANK_CD = #bankCd#
		   AND CRT_ID  = #cntrctrNo#
		   AND VACCT_NO = #vacctNo#
		   AND TR_DATE = SUBSTR(#trDate#, 0, 8)
		 ORDER BY BANK_CD, CORT_CODE
	</select>


	<!-- 쿼리명 : 매입임대 납부요청 프로시저
		    설명 : 매입임대 납부요청 프로시저 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<parameterMap id="sp_va_bill_uid_param" class="java.util.HashMap">
		<parameter property="IN_FLAG"		 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_BANK_CD"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_ACCT_NO"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_TR_DATE"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_TR_SDATE"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_TR_EDATE"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_CRT_DIV"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_CRT_ID"		 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_BILL_SEQ"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_CORT_CODE"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_PAY_NUM"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_REC_CLASS"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_REC_SEQ"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_PAYEND_DATE" jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_BILL_AMT"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_PAY_AMT"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_SALE_AMT"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_INT_AMT"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_BILL_DIV"	 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="S_USER_ID"		 jdbcType="VARCHAR" javaType="string" mode="IN"/>
		<parameter property="IN_BJ_YN"		 jdbcType="VARCHAR" javaType="string" mode="IN"/>
	</parameterMap>
	<procedure id="puchasCyberAccountDAO.SP_VA_BILL_UID" parameterMap="sp_va_bill_uid_param">
		{ call SP_VA_BILL_UID(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>


	<!-- 쿼리명 : 매입임대 납부서 출력 
		    설명 : 매입임대 납부서 출력  쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.selectBillPrintList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.selectBillPrintList[매입임대 납부서 출력 ] */
			SELECT DISTINCT
				  	a.RENT_HOUSE_CODE
					,a.DONG
					,a.HO
					,m.NM
					,b1.ZIP
					,trim(b1.ADRES) || ' ' || trim(b1.ADRES_DETAIL) AS ADDR1
					,b.RENT_HOUSE_NM || ' ' || trim(to_number(a.DONG) || '-' || to_number(a.HO)) AS ADDR2
					,SUBSTR(d.PAYEND_DATE1, 1,6) AS BILL_YM
					,d.PAYEND_DATE1 AS PAYEND_DATE
					,'주택(아파트)' AS C_TITLE1
					,b.RENT_HOUSE_NM AS C_CONT1
					,'동   호   수' AS C_TITLE2
					,trim(to_number(a.DONG) || '-' || to_number(a.HO)) AS C_CONT2
					,'납   부   자' AS C_TITLE3
					,m.NM AS C_CONT3
					,'자동이체코드' AS C_TITLE4
					,a.RENT_HOUSE_CODE || '-' || a.DONG || '-' || a.HO AS C_CONT4
					,#acctGubun# AS A_TITLE1
					/*,'임 대 료' AS A_TITLE1*/
					,d.PAY_AMT AS A_AMT1
					,'연체금액' AS A_TITLE2
					,d.INT_AMT AS A_AMT2
					,'차감금액' AS A_TITLE3
					,d.SALE_AMT AS A_AMT3
					,'  ' AS A_TITLE4
					,0 AS A_AMT4
					,d.PAY_AMT + d.SALE_AMT + d.INT_AMT AS A_AMT5
					,f.OPOST_NO
					,f.OADDR1
					,f.OADDR2
					,f.OTEL_NO
					,f.OFAX_NO
					,decode(s.CNTRCTR_NO, '', v.BANK1, '') AS BANK1
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO1, '') AS ACCT_NO1
					,decode(s.CNTRCTR_NO, '', v.BANK2, '') AS BANK2
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO2, '') AS ACCT_NO2
					,decode(s.CNTRCTR_NO, '', v.BANK3, '') AS BANK3
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO3, '') AS ACCT_NO3
					,decode(s.CNTRCTR_NO, '', v.BANK4, '') AS BANK4
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO4, '') AS ACCT_NO4
					,decode(s.CNTRCTR_NO, '', v.BANK5, '') AS BANK5
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO5, '') AS ACCT_NO5
					,decode(s.CNTRCTR_NO, '', v.BANK6, '') AS BANK6
					,decode(s.CNTRCTR_NO, '', v.ACCT_NO6, '') AS ACCT_NO6
					,d.PAY_AMT AS PAY_AMT
					,d.SALE_AMT
					,d.INT_AMT
					,d.TOT_AMT
					,d.MONTH1
					,to_char(d.PAYEND_DATE1, 'yyyy-mm-dd') AS PAYEND_DATE1
					,d.PAY_AMT1
					,d.SALE_AMT1
					,d.INT_AMT1
					,d.TOT_AMT1
					,d.MONTH2
					,to_char(d.PAYEND_DATE2, 'yyyy-mm-dd') AS PAYEND_DATE2
					,d.PAY_AMT2
					,d.SALE_AMT2
					,d.INT_AMT2
					,d.TOT_AMT2
					,d.MONTH3
					,to_char(d.PAYEND_DATE3, 'yyyy-mm-dd') AS PAYEND_DATE3
					,d.PAY_AMT3
					,d.SALE_AMT3
					,d.INT_AMT3
					,d.TOT_AMT3
					,d.MONTH4
					,to_char(d.PAYEND_DATE4, 'yyyy-mm-dd') AS PAYEND_DATE4
					,d.PAY_AMT4
					,d.SALE_AMT4
					,d.INT_AMT4
					,d.TOT_AMT4
					,d.MONTH5
					,to_char(d.PAYEND_DATE5, 'yyyy-mm-dd') AS PAYEND_DATE5
					,d.PAY_AMT5
					,d.SALE_AMT5
					,d.INT_AMT5
					,d.TOT_AMT5
					,d.MONTH6
					,to_char(d.PAYEND_DATE6, 'yyyy-mm-dd') AS PAYEND_DATE6
					,d.PAY_AMT6
					,d.SALE_AMT6
					,d.INT_AMT6
					,d.TOT_AMT6
					,d.MONTH7
					,to_char(d.PAYEND_DATE7, 'yyyy-mm-dd') AS PAYEND_DATE7
					,d.PAY_AMT7
					,d.SALE_AMT7
					,d.INT_AMT7
					,d.TOT_AMT7
					,d.MONTH8
					,to_char(d.PAYEND_DATE8, 'yyyy-mm-dd') AS PAYEND_DATE8
					,d.PAY_AMT8
					,d.SALE_AMT8
					,d.INT_AMT8
					,d.TOT_AMT8
					,d.MONTH9
					,to_char(d.PAYEND_DATE9, 'yyyy-mm-dd') AS PAYEND_DATE9
					,d.PAY_AMT9
					,d.SALE_AMT9
					,d.INT_AMT9
					,d.TOT_AMT9
					,d.MONTH10
					,to_char(d.PAYEND_DATE10, 'yyyy-mm-dd') AS PAYEND_DATE10
					,d.PAY_AMT10
					,d.SALE_AMT10
					,d.INT_AMT10
					,d.TOT_AMT10
					,d.MONTH11
					,to_char(d.PAYEND_DATE11, 'yyyy-mm-dd') AS PAYEND_DATE11
					,d.PAY_AMT11
					,d.SALE_AMT11
					,d.INT_AMT11
					,d.TOT_AMT11
					,d.MONTH12
					,to_char(d.PAYEND_DATE12, 'yyyy-mm-dd') AS PAYEND_DATE12
					,d.PAY_AMT12
					,d.SALE_AMT12
					,d.INT_AMT12
					,d.TOT_AMT12
					,d.MONTH13
					,to_char(d.PAYEND_DATE13, 'yyyy-mm-dd') AS PAYEND_DATE13
					,d.PAY_AMT13
					,d.SALE_AMT13
					,d.INT_AMT13
					,d.TOT_AMT13
					,'' AS REC_DE
					,a.RENT_HOUSE_CODE || '-' || a.DONG || '-' || a.HO AS AUTO_CODE
					,(SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
                      FROM TBCOM_CMMN_CODE
                     WHERE GRP_CODE = 'PCOM05'
                       AND CODE = '03') AS BIZ_NO
					,b.RENT_HOUSE_NM || ' ' || trim(to_number(a.DONG) || '-' || to_number(a.HO)) AS APT_ADDR
					,to_char(d.PAYEND_DATE1, 'yyyy') BILL_YEAR
					,to_char(d.PAYEND_DATE1, 'mm') BILL_MONTH
					,SUBSTR(c.TR_DATE, 1, 4) AS CAL_YEAR
					,SUBSTR(c.TR_DATE, 5, 2) AS CAL_MONTH
					,SUBSTR(c.TR_DATE, 7, 2) AS CAL_DAY
					,SUBSTR(c.TR_EDATE, 1, 4) AS END_YEAR
					,SUBSTR(c.TR_EDATE, 5, 2) AS END_MONTH
					,SUBSTR(c.TR_EDATE, 7, 2) AS END_DAY
					,c.BILL_DIV
					,c.TR_DATE
					,c.TR_NO
					,SFCMP_GET_CODENM('COM021', d.BANK_CD) || ' - ' || d.VACCT_NO AS BANK_G
					,d.BANK_CD
					,d.VACCT_NO
					,a.CNTRCTR_NO
					,#crtDiv# AS CRT_DIV
					,0 AS USE_VOLUME
					,0 COST_AMT
					,0 TFAMILY_CNT
					,0 TSALE_AMT_06
					,0 SALE_AMT_06
			FROM TBRNT_PUCHAS_CNTRCT a
				,TBRNT_PUCHAS_HOUSE b
				,TBRNT_PUCHAS_HOUSE_DONG b1
			  ,TBRNT_PUCHAS_RENT_CSTMR m
				,VA_BILL c
				,(
					SELECT CRT_ID
						,BANK_CD
						,VACCT_NO
						,MAX(DECODE(ROWNUM, 1, CORT_NM, ''))     AS MONTH1
						,MAX(DECODE(ROWNUM, 1, PAYEND_DATE, '')) AS PAYEND_DATE1
						,SUM(DECODE(ROWNUM, 1, PAY_AMT, NULL))   AS PAY_AMT1
						,SUM(DECODE(ROWNUM, 1, SALE_AMT, NULL))  AS SALE_AMT1
						,SUM(DECODE(ROWNUM, 1, INT_AMT, NULL))   AS INT_AMT1
						,SUM(DECODE(ROWNUM, 1, BILL_AMT, NULL))  AS TOT_AMT1
						,MAX(DECODE(ROWNUM, 2, CORT_NM, ''))     AS MONTH2
						,MAX(DECODE(ROWNUM, 2, PAYEND_DATE, '')) AS PAYEND_DATE2
						,SUM(DECODE(ROWNUM, 2, PAY_AMT, NULL))   AS PAY_AMT2
						,SUM(DECODE(ROWNUM, 2, SALE_AMT, NULL))  AS SALE_AMT2
						,SUM(DECODE(ROWNUM, 2, INT_AMT, NULL))   AS INT_AMT2
						,SUM(DECODE(ROWNUM, 2, BILL_AMT, NULL))  AS TOT_AMT2
						,MAX(DECODE(ROWNUM, 3, CORT_NM, ''))     AS MONTH3
						,MAX(DECODE(ROWNUM, 3, PAYEND_DATE, '')) AS PAYEND_DATE3
						,SUM(DECODE(ROWNUM, 3, PAY_AMT, NULL))   AS PAY_AMT3
						,SUM(DECODE(ROWNUM, 3, SALE_AMT, NULL))  AS SALE_AMT3
						,SUM(DECODE(ROWNUM, 3, INT_AMT, NULL))   AS INT_AMT3
						,SUM(DECODE(ROWNUM, 3, BILL_AMT, NULL))  AS TOT_AMT3
						,MAX(DECODE(ROWNUM, 4, CORT_NM, ''))     AS MONTH4
						,MAX(DECODE(ROWNUM, 4, PAYEND_DATE, '')) AS PAYEND_DATE4
						,SUM(DECODE(ROWNUM, 4, PAY_AMT, NULL))   AS PAY_AMT4
						,SUM(DECODE(ROWNUM, 4, SALE_AMT, NULL))  AS SALE_AMT4
						,SUM(DECODE(ROWNUM, 4, INT_AMT, NULL))   AS INT_AMT4
						,SUM(DECODE(ROWNUM, 4, BILL_AMT, NULL))  AS TOT_AMT4
						,MAX(DECODE(ROWNUM, 5, CORT_NM, ''))     AS MONTH5
						,MAX(DECODE(ROWNUM, 5, PAYEND_DATE, '')) AS PAYEND_DATE5
						,SUM(DECODE(ROWNUM, 5, PAY_AMT, NULL))   AS PAY_AMT5
						,SUM(DECODE(ROWNUM, 5, SALE_AMT, NULL))  AS SALE_AMT5
						,SUM(DECODE(ROWNUM, 5, INT_AMT, NULL))   AS INT_AMT5
						,SUM(DECODE(ROWNUM, 5, BILL_AMT, NULL))  AS TOT_AMT5
						,MAX(DECODE(ROWNUM, 6, CORT_NM, ''))     AS MONTH6
						,MAX(DECODE(ROWNUM, 6, PAYEND_DATE, '')) AS PAYEND_DATE6
						,SUM(DECODE(ROWNUM, 6, PAY_AMT, NULL))   AS PAY_AMT6
						,SUM(DECODE(ROWNUM, 6, SALE_AMT, NULL))  AS SALE_AMT6
						,SUM(DECODE(ROWNUM, 6, INT_AMT, NULL))   AS INT_AMT6
						,SUM(DECODE(ROWNUM, 6, BILL_AMT, NULL))  AS TOT_AMT6
						,MAX(DECODE(ROWNUM, 7, CORT_NM, ''))     AS MONTH7
						,MAX(DECODE(ROWNUM, 7, PAYEND_DATE, '')) AS PAYEND_DATE7
						,SUM(DECODE(ROWNUM, 7, PAY_AMT, NULL))   AS PAY_AMT7
						,SUM(DECODE(ROWNUM, 7, SALE_AMT, NULL))  AS SALE_AMT7
						,SUM(DECODE(ROWNUM, 7, INT_AMT, NULL))   AS INT_AMT7
						,SUM(DECODE(ROWNUM, 7, BILL_AMT, NULL))  AS TOT_AMT7
						,MAX(DECODE(ROWNUM, 8, CORT_NM, ''))     AS MONTH8
						,MAX(DECODE(ROWNUM, 8, PAYEND_DATE, '')) AS PAYEND_DATE8
						,SUM(DECODE(ROWNUM, 8, PAY_AMT, NULL))   AS PAY_AMT8
						,SUM(DECODE(ROWNUM, 8, SALE_AMT, NULL))  AS SALE_AMT8
						,SUM(DECODE(ROWNUM, 8, INT_AMT, NULL))   AS INT_AMT8
						,SUM(DECODE(ROWNUM, 8, BILL_AMT, NULL))  AS TOT_AMT8
						,MAX(DECODE(ROWNUM, 9, CORT_NM, ''))     AS MONTH9
						,MAX(DECODE(ROWNUM, 9, PAYEND_DATE, '')) AS PAYEND_DATE9
						,SUM(DECODE(ROWNUM, 9, PAY_AMT, NULL))   AS PAY_AMT9
						,SUM(DECODE(ROWNUM, 9, SALE_AMT, NULL))  AS SALE_AMT9
						,SUM(DECODE(ROWNUM, 9, INT_AMT, NULL))   AS INT_AMT9
						,SUM(DECODE(ROWNUM, 9, BILL_AMT, NULL))  AS TOT_AMT9
						,MAX(DECODE(ROWNUM, 10, CORT_NM, ''))    AS MONTH10
						,MAX(DECODE(ROWNUM, 10, PAYEND_DATE, '')) AS PAYEND_DATE10
						,SUM(DECODE(ROWNUM, 10, PAY_AMT, NULL))   AS PAY_AMT10
						,SUM(DECODE(ROWNUM, 10, SALE_AMT, NULL))  AS SALE_AMT10
						,SUM(DECODE(ROWNUM, 10, INT_AMT, NULL))   AS INT_AMT10
						,SUM(DECODE(ROWNUM, 10, BILL_AMT, NULL))  AS TOT_AMT10
						,MAX(DECODE(ROWNUM, 11, CORT_NM, ''))     AS MONTH11
						,MAX(DECODE(ROWNUM, 11, PAYEND_DATE, '')) AS PAYEND_DATE11
						,SUM(DECODE(ROWNUM, 11, PAY_AMT, NULL))   AS PAY_AMT11
						,SUM(DECODE(ROWNUM, 11, SALE_AMT, NULL))  AS SALE_AMT11
						,SUM(DECODE(ROWNUM, 11, INT_AMT, NULL))   AS INT_AMT11
						,SUM(DECODE(ROWNUM, 11, BILL_AMT, NULL))  AS TOT_AMT11
						,MAX(DECODE(ROWNUM, 12, CORT_NM, ''))     AS MONTH12
						,MAX(DECODE(ROWNUM, 12, PAYEND_DATE, '')) AS PAYEND_DATE12
						,SUM(DECODE(ROWNUM, 12, PAY_AMT, NULL))   AS PAY_AMT12
						,SUM(DECODE(ROWNUM, 12, SALE_AMT, NULL))  AS SALE_AMT12
						,SUM(DECODE(ROWNUM, 12, INT_AMT, NULL))   AS INT_AMT12
						,SUM(DECODE(ROWNUM, 12, BILL_AMT, NULL))  AS TOT_AMT12
						,SUBSTR(MIN(CASE WHEN ROWNUM > 12 THEN CORT_NM END), 1, 7) || '~' ||
						 SUBSTR(MAX(CASE WHEN ROWNUM > 12 THEN CORT_NM END), 1, 7) ||
						 TRIM(SUBSTR(MAX(CASE WHEN ROWNUM > 12 THEN CORT_NM END), 8, 20)) AS MONTH13
						,MAX(CASE WHEN ROWNUM > 12 THEN PAYEND_DATE END) AS PAYEND_DATE13
						,SUM(CASE WHEN ROWNUM > 12 THEN PAY_AMT END)  AS PAY_AMT13
						,SUM(CASE WHEN ROWNUM > 12 THEN SALE_AMT END) AS SALE_AMT13
						,SUM(CASE WHEN ROWNUM > 12 THEN INT_AMT END)  AS INT_AMT13
						,SUM(CASE WHEN ROWNUM > 12 THEN BILL_AMT END) AS TOT_AMT13
						,SUM(PAY_AMT) AS PAY_AMT
						,SUM(SALE_AMT) AS SALE_AMT
						,SUM(INT_AMT) AS INT_AMT
						,SUM(BILL_AMT) AS TOT_AMT
					FROM (
						SELECT A.*
							,DECODE(CORT_CODE, 'RN', TO_CHAR(PAYEND_DATE, 'YYYY-MM '), '') || DECODE(CORT_CODE, 'RN', '임대료', 'R0', '보증금', 'T2', '소송비', '기타수입') AS CORT_NM
						FROM VA_BILL_DETAIL A
						WHERE BANK_CD = #bankCd#
							AND VACCT_NO = #vacctNo#
							AND CRT_ID = #cntrctrNo#
						ORDER BY PAYEND_DATE DESC
						) B
					GROUP BY CRT_ID
						,BANK_CD
						,VACCT_NO
					) d
				,(
			     SELECT 
			         CHRCTR_PREPAR_VALUE_0 AS OPOST_NO
				              ,CHRCTR_PREPAR_VALUE_1 AS OADDR1
				              ,CHRCTR_PREPAR_VALUE_2 AS OADDR2
			      ,'전화:' || (SELECT CHRCTR_PREPAR_VALUE_0 FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'COM027' AND CODE_NM = 'RN') AS OTEL_NO
			      ,'FAX :' || (SELECT CHRCTR_PREPAR_VALUE_1 FROM TBCOM_CMMN_CODE WHERE GRP_CODE = 'COM027' AND CODE_NM = 'RN') AS OFAX_NO
			      FROM TBCOM_CMMN_CODE A
			      WHERE GRP_CODE = 'COM027'
			      AND CODE = 'RN'
					) f
				,(
					SELECT CNTRCTR_NO
						,(
							SELECT CODE_NM
			          FROM TBCOM_CMMN_CODE
			          WHERE GRP_CODE = 'COM021'
								AND CODE = BANK_CODE
							) AS BANK_NM
			       ,ACNUTNO
			       , DPSTR
					FROM TBPMS_ATCNG
					WHERE ATCNG_CANCL_DE IS NULL
					  AND JOB_SE = 'RN1'
					) s
				,VI_VA_MAST v 
			WHERE a.CNTRCTR_NO = c.CRT_ID
			  AND a.PUCHAS_CSTMR_NO = m.PUCHAS_CSTMR_NO
				AND a.RENT_HOUSE_CODE = b.RENT_HOUSE_CODE(+)
				AND c.BANK_CD = d.BANK_CD
				AND c.VACCT_NO = d.VACCT_NO
				AND c.CRT_ID = d.CRT_ID
				AND a.RENT_HOUSE_CODE = b1.RENT_HOUSE_CODE(+)
				AND a.DONG = b1.DONG(+)
				AND a.CNTRCTR_NO = s.CNTRCTR_NO(+)
				AND a.CNTRCTR_NO = v.CRT_ID
				AND v.CRT_DIV = #crtDiv#
				<isEqual property="opt" compareValue="1">
	            AND v.opt1 = '1'
	            </isEqual>
	            <isEqual property="opt" compareValue="2">
	            AND v.opt2 = '1'
	            </isEqual>   
	</select>
	
	<!-- 쿼리명 : 매입임대 납부서 출력(관리비)
		    설명 : 매입임대 납부서 출력(관리비) 쿼리
		  수정일 : 수정자  수정내용	
		  작성자 : 변승우
	    최초작성일 : 2015.10.23
	-->
	<select id="puchasCyberAccountDAO.selectManagectBillPrint" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* puchasCyberAccountDAO.selectManagectBillPrint[매입임대 납부서(관리비) 출력 ] */
		SELECT A.RENT_HOUSE_CODE
		  , A.DONG
		  , A.HO
		  , H.NM
		  , B1.ZIP
		  , RTRIM(B1.ADRES || ' ' || B1.ADRES_DETAIL)                                	AS ADDR1
		  , B.RENT_HOUSE_NM || ' ' ||TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO)) 	AS ADDR2
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm') 						AS BILL_YM
		  , D.PAYEND_DATE1 									AS PAYEND_DATE
		  , '주택(아파트)'                                  	AS C_TITLE1
		  , B.RENT_HOUSE_NM                                 AS C_CONT1
		  , '동   호   수'                                  	AS C_TITLE2
		  , TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO)) AS C_CONT2
		  , '납   부   자'                                  	AS C_TITLE3
		  , H.NM                                            AS C_CONT3
		  , '자동이체코드'                                  	AS C_TITLE4
		  , A.RENT_HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO   AS C_CONT4
		  , '관리비'                                        	AS A_TITLE1
		  , D.TOT_AMT                                       AS A_AMT1
		  , '  '                                            AS A_TITLE2
		  , 0                                               AS A_AMT2
		  , '  '                                            AS A_TITLE3
		  , 0                                               AS A_AMT3
		  , '  '                                            AS A_TITLE4
		  , 0                                               AS A_AMT4
		  , D.TOT_AMT                                       AS A_AMT5
		  , 0 MIN_RATIO
		  , 0 MAX_RATIO
		  , F.OPOST_NO
		  , F.OADDR1
		  , F.OADDR2
		  , F.OTEL_NO
		  , F.OFAX_NO
		  , DECODE(S.CNTRCTR_NO, '', V.BANK1, '')    AS BANK1
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO1, '') AS ACCT_NO1
		  , DECODE(S.CNTRCTR_NO, '', V.BANK2, '')    AS BANK2
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO2, '') AS ACCT_NO2
		  , DECODE(S.CNTRCTR_NO, '', V.BANK3, '')    AS BANK3
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO3, '') AS ACCT_NO3
		  , DECODE(S.CNTRCTR_NO, '', V.BANK4, '')    AS BANK4
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO4, '') AS ACCT_NO4
		  , DECODE(S.CNTRCTR_NO, '', V.BANK5, '')    AS BANK5
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO5, '') AS ACCT_NO5
		  , DECODE(S.CNTRCTR_NO, '', V.BANK6, '')    AS BANK6
		  , DECODE(S.CNTRCTR_NO, '', V.ACCT_NO6, '') AS ACCT_NO6
		  , D.PAY_AMT                                AS PAY_AMT
		  , D.CHA_AMT
		  , D.APAY_AMT
		  , D.TOT_AMT
		  , D.MONTH1
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE1
		  , D.PAY_AMT1
		  , D.CHA_AMT1
		  , D.APAY_AMT1
		  , D.TOT_AMT1
		  , D.MONTH2
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE2, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE2
		  , D.PAY_AMT2
		  , D.CHA_AMT2
		  , D.APAY_AMT2
		  , D.TOT_AMT2
		  , D.MONTH3
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE3, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE3
		  , D.PAY_AMT3
		  , D.CHA_AMT3
		  , D.APAY_AMT3
		  , D.TOT_AMT3
		  , D.MONTH4
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE4, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE4
		  , D.PAY_AMT4
		  , D.CHA_AMT4
		  , D.APAY_AMT4
		  , D.TOT_AMT4
		  , D.MONTH5
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE5, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE5
		  , D.PAY_AMT5
		  , D.CHA_AMT5
		  , D.APAY_AMT5
		  , D.TOT_AMT5
		  , D.MONTH6
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE6, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE6
		  , D.PAY_AMT6
		  , D.CHA_AMT6
		  , D.APAY_AMT6
		  , D.TOT_AMT6
		  , D.MONTH7
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE7, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE7
		  , D.PAY_AMT7
		  , D.CHA_AMT7
		  , D.APAY_AMT7
		  , D.TOT_AMT7
		  , D.MONTH8
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE8, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE8
		  , D.PAY_AMT8
		  , D.CHA_AMT8
		  , D.APAY_AMT8
		  , D.TOT_AMT8
		  , D.MONTH9
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE9, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE9
		  , D.PAY_AMT9
		  , D.CHA_AMT9
		  , D.APAY_AMT9
		  , D.TOT_AMT9
		  , D.MONTH10
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE10, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE10
		  , D.PAY_AMT10
		  , D.CHA_AMT10
		  , D.APAY_AMT10
		  , D.TOT_AMT10
		  , D.MONTH11
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE11, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE11
		  , D.PAY_AMT11
		  , D.CHA_AMT11
		  , D.APAY_AMT11
		  , D.TOT_AMT11
		  , D.MONTH12
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE12, 'YYYYMMDD'), 'yyyy-mm-dd') AS PAYEND_DATE12
		  , D.PAY_AMT12
		  , D.CHA_AMT12
		  , D.APAY_AMT12
		  , D.TOT_AMT12
		  , D.MONTH13
		  , ' ' AS PAYEND_DATE13
		  , D.PAY_AMT13
		  , D.CHA_AMT13
		  , D.APAY_AMT13
		  , D.TOT_AMT13
		  , '' AS REC_DATE
		  , 0  AS REC_AMT
		  , S.BANK_NM
		  , S.ACNUTNO
		  , S.DPSTR
		  , A.RENT_HOUSE_CODE ||'-'|| A.DONG ||'-'|| A.HO                            	AS AUTO_CODE
		  , (SELECT CHRCTR_PREPAR_VALUE_2 AS AUTO_NO
               FROM TBCOM_CMMN_CODE
              WHERE GRP_CODE = 'PCOM05'
                AND CODE = '04')                                                        AS BIZ_NO
		  , B.RENT_HOUSE_NM || ' ' ||TRIM(TO_NUMBER(A.DONG) ||'-'|| TO_NUMBER(A.HO)) 	AS APT_ADDR
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyy') 						AS BILL_YEAR
		  , TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'mm') 							AS BILL_MONTH
		  , SUBSTR(C.TR_DATE, 1, 4)  AS CAL_YEAR
		  , SUBSTR(C.TR_DATE, 5, 2)  AS CAL_MONTH
		  , SUBSTR(C.TR_DATE, 7, 2)  AS CAL_DAY
		  , SUBSTR(C.TR_EDATE, 1, 4) AS END_YEAR
		  , SUBSTR(C.TR_EDATE, 5, 2) AS END_MONTH
		  , SUBSTR(C.TR_EDATE, 7, 2) AS END_DAY
		  , C.BILL_DIV
		  , C.TR_DATE
		  , C.TR_NO
		  , D.BANK_CD
		  , D.VACCT_NO
		  , A.CNTRCTR_NO
		  , SFCMP_GET_CODENM('COM021', D.BANK_CD) || ' - ' || D.VACCT_NO AS BANK_G
		  , 'MA' AS CRT_DIV
		  ,(
		        SELECT USGQTY
		        FROM TBRNT_MANAGECT_UNTPC W
		        WHERE W.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		        AND W.DONG              = A.DONG
		        AND W.OCCRRNC_YM        = TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm')
		        AND MANAGECT_CODE       = '06'		/* 관리비 코드 */
		    ) AS USE_VOLUME		/* 사용량 */
		  ,(
		        SELECT LEVY_AMOUNT
		        FROM TBRNT_MANAGECT_UNTPC W
		        WHERE W.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		        AND W.DONG              = A.DONG
		        AND W.OCCRRNC_YM        = TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm')
		        AND MANAGECT_CODE       = '06'
		    ) AS COST_AMT		/* 부과금액 */
		  ,(
		        SELECT TOT_HSHLD_NMPR_CO
		        FROM TBRNT_MANAGECT_UNTPC W
		        WHERE W.RENT_HOUSE_CODE = A.RENT_HOUSE_CODE
		        AND W.DONG              = A.DONG
		        AND W.OCCRRNC_YM        = TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm')
		        AND MANAGECT_CODE       = '06'
		    ) AS TFAMILY_CNT	/* 총세대원수 */
		  ,(
		        SELECT SUM(NVL(RDCAMT_AMOUNT, 0))
		            /* 감액금액 */
		        FROM TBRNT_MT_MANAGECT W
		        WHERE W.CNTRCTR_NO  = A.CNTRCTR_NO
		        AND W.OCCRRNC_YM    = TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm')
		        AND W.MANAGECT_CODE = '06'
		    ) AS TCHA_AMT_06	/* 총감면금액 */
		  ,(
		        SELECT SUM(NVL(RDCAMT_AMOUNT, 0))
		        FROM TBRNT_MT_MANAGECT W
		        WHERE W.CNTRCTR_NO  = A.CNTRCTR_NO
		        AND W.OCCRRNC_YM    = TO_CHAR(TO_DATE(D.PAYEND_DATE1, 'YYYYMMDD'), 'yyyymm')
		        AND W.MANAGECT_CODE = '06'
		    ) AS CHA_AMT_06		/* 감면금액 */
		FROM TBRNT_PUCHAS_CNTRCT A
		  , TBRNT_PUCHAS_HOUSE B
		  , TBRNT_PUCHAS_HOUSE_DONG B1
		  , VA_BILL C
		  ,(
		        SELECT CNTRCTR_NO
		          , BANK_CD
		          , VACCT_NO
		          , SUM(PAY_AMT)                           AS PAY_AMT
		          , SUM(CHA_AMT - TRUNC_AMT)               AS CHA_AMT
		          , 0                                      AS APAY_AMT
		          , SUM(PAY_AMT + CHA_AMT - TRUNC_AMT)     AS TOT_AMT
		          , '수도료'                                AS MONTH1
		          , MAX(PAYEND_DATE1)                      AS PAYEND_DATE1
		          , SUM(PAY_AMT1)                          AS PAY_AMT1
		          , SUM(CHA_AMT1)                          AS CHA_AMT1
		          , 0                                      AS APAY_AMT1
		          , SUM(PAY_AMT1 + CHA_AMT1)               AS TOT_AMT1
		          , '공용전기'                              AS MONTH2
		          , MAX(PAYEND_DATE2)                      AS PAYEND_DATE2
		          , SUM(PAY_AMT2)                          AS PAY_AMT2
		          , SUM(CHA_AMT2)                          AS CHA_AMT2
		          , 0                                      AS APAY_AMT2
		          , SUM(PAY_AMT2 + CHA_AMT2)               AS TOT_AMT2
		          , '청소비'                                AS MONTH3
		          , MAX(PAYEND_DATE3)                      AS PAYEND_DATE3
		          , SUM(PAY_AMT3)                          AS PAY_AMT3
		          , SUM(CHA_AMT3)                          AS CHA_AMT3
		          , 0                                      AS APAY_AMT3
		          , SUM(PAY_AMT3 + CHA_AMT3)               AS TOT_AMT3
		          , '정화조'                                AS MONTH4
		          , MAX(PAYEND_DATE4)                      AS PAYEND_DATE4
		          , SUM(PAY_AMT4)                          AS PAY_AMT4
		          , SUM(CHA_AMT4)                          AS CHA_AMT4
		          , 0                                      AS APAY_AMT4
		          , SUM(PAY_AMT4 + CHA_AMT4)               AS TOT_AMT4
		          , '감액'                            	   AS MONTH5
		          , MAX(PAYEND_DATE5)                      AS PAYEND_DATE5
		          , SUM(PAY_AMT5)                          AS PAY_AMT5
		          , SUM(CHA_AMT5)                          AS CHA_AMT5
		          , 0                                      AS APAY_AMT5
		          , SUM(PAY_AMT5 + CHA_AMT5)               AS TOT_AMT5
		          , '기타요금'                              AS MONTH6
		          , MAX(PAYEND_DATE6)                      AS PAYEND_DATE6
		          , SUM(PAY_AMT6)                          AS PAY_AMT6
		          , SUM(CHA_AMT6)                          AS CHA_AMT6
		          , 0                                      AS APAY_AMT6
		          , SUM(PAY_AMT6 + CHA_AMT6)               AS TOT_AMT6
		          , '  '                                   AS MONTH7
		          , MAX(PAYEND_DATE7)                      AS PAYEND_DATE7
		          , SUM(PAY_AMT7)                          AS PAY_AMT7
		          , SUM(CHA_AMT7)                          AS CHA_AMT7
		          , 0                                      AS APAY_AMT7
		          , SUM(PAY_AMT7 + CHA_AMT7)               AS TOT_AMT7
		          , TO_CHAR(MAX(PAYEND_DATE8))  AS MONTH8
		          , MAX(PAYEND_DATE8)                      AS PAYEND_DATE8
		          , SUM(PAY_AMT8)                          AS PAY_AMT8
		          , SUM(CHA_AMT8)                          AS CHA_AMT8
		          , 0                                      AS APAY_AMT8
		          , SUM(PAY_AMT8 + CHA_AMT8)               AS TOT_AMT8
		          , TO_CHAR(MAX(PAYEND_DATE9))  AS MONTH9
		          , MAX(PAYEND_DATE9)                      AS PAYEND_DATE9
		          , SUM(PAY_AMT9)                          AS PAY_AMT9
		          , SUM(CHA_AMT9)                          AS CHA_AMT9
		          , 0                                      AS APAY_AMT9
		          , SUM(PAY_AMT9 + CHA_AMT9)               AS TOT_AMT9
		          , TO_CHAR(MAX(PAYEND_DATE10)) AS MONTH10
		          , MAX(PAYEND_DATE10)                     AS PAYEND_DATE10
		          , SUM(PAY_AMT10)                         AS PAY_AMT10
		          , SUM(CHA_AMT10)                         AS CHA_AMT10
		          , 0                                      AS APAY_AMT10
		          , SUM(PAY_AMT10 + CHA_AMT10)             AS TOT_AMT10
		          , TO_CHAR(MAX(PAYEND_DATE11)) AS MONTH11
		          , MAX(PAYEND_DATE11)                     AS PAYEND_DATE11
		          , SUM(PAY_AMT11)                         AS PAY_AMT11
		          , SUM(CHA_AMT11)                         AS CHA_AMT11
		          , 0                                      AS APAY_AMT11
		          , SUM(PAY_AMT11 + CHA_AMT11)             AS TOT_AMT11
		          , TO_CHAR(MAX(PAYEND_DATE12)) AS MONTH12
		          , MAX(PAYEND_DATE12)                     AS PAYEND_DATE12
		          , SUM(PAY_AMT12)                         AS PAY_AMT12
		          , SUM(CHA_AMT12)                         AS CHA_AMT12
		          , 0                                      AS APAY_AMT12
		          , SUM(PAY_AMT12 + NVL(CHA_AMT12, 0))     AS TOT_AMT12
		          , '절사금액'                              AS MONTH13
		          , ''                                     AS PAYEND_DATE13
		          , SUM(PAY_AMT13)                         AS PAY_AMT13
		          , SUM(CHA_AMT13) * - 1                   AS CHA_AMT13
		          , 0                                      AS APAY_AMT13
		          , SUM(PAY_AMT13 + CHA_AMT13) * - 1       AS TOT_AMT13
		        FROM
		            (
		                SELECT C.CNTRCTR_NO
		                  , BANK_CD
		                  , VACCT_NO
		                  , C.MANAGECT      AS PAY_AMT
		                  , C.RDCAMT_AMOUNT AS CHA_AMT
		                  , C.TRUNC_AMT
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT + C.RDCAMT_AMOUNT, 0)                                                    AS PAY_AMT0
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE1
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT01, 0)                                                                    AS PAY_AMT1
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT01, 0)                                                               AS CHA_AMT1
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE2
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT02, 0)                                                                    AS PAY_AMT2
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT02, 0)                                                               AS CHA_AMT2
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE3
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT03, 0)                                                                    AS PAY_AMT3
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT03, 0)                                                               AS CHA_AMT3
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE4
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT04, 0)                                                                    AS PAY_AMT4
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT04, 0)                                                               AS CHA_AMT4
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE5
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT05, 0)                                                                    AS PAY_AMT5
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT05, 0)                                                               AS CHA_AMT5
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE6
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT06, 0)                                                                    AS PAY_AMT6
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT06, 0)                                                               AS CHA_AMT6
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.PAY_TMLMT, NULL)                                                                  AS PAYEND_DATE7
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.MANAGECT_ETC, 0)                                                                  AS PAY_AMT7
		                  , DECODE(C.OCCRRNC_YM, A.YYYYMM, C.RDCAMT_AMOUNT_ETC, 0)                                                             AS CHA_AMT7
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 1), 'yyyymm'), C.PAY_TMLMT, NULL)  AS PAYEND_DATE8
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 1), 'yyyymm'), C.MANAGECT, 0)      AS PAY_AMT8
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 1), 'yyyymm'), C.RDCAMT_AMOUNT, 0) AS CHA_AMT8
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 2), 'yyyymm'), C.PAY_TMLMT, NULL)  AS PAYEND_DATE9
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 2), 'yyyymm'), C.MANAGECT, 0)      AS PAY_AMT9
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 2), 'yyyymm'), C.RDCAMT_AMOUNT, 0) AS CHA_AMT9
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 3), 'yyyymm'), C.PAY_TMLMT, NULL)  AS PAYEND_DATE10
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 3), 'yyyymm'), C.MANAGECT, 0)      AS PAY_AMT10
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 3), 'yyyymm'), C.RDCAMT_AMOUNT, 0) AS CHA_AMT10
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 4), 'yyyymm'), C.PAY_TMLMT, NULL)  AS PAYEND_DATE11
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 4), 'yyyymm'), C.MANAGECT, 0)      AS PAY_AMT11
		                  , DECODE(C.OCCRRNC_YM, TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 4), 'yyyymm'), C.RDCAMT_AMOUNT, 0) AS CHA_AMT11
		                  , CASE
		                        WHEN C.OCCRRNC_YM <![CDATA[ <= ]]> TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 5), 'yyyymm')
		                        THEN C.PAY_TMLMT
		                    END AS PAYEND_DATE12
		                  , CASE
		                        WHEN C.OCCRRNC_YM <![CDATA[ <= ]]> TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 5), 'yyyymm')
		                        THEN C.MANAGECT
		                        ELSE 0
		                    END AS PAY_AMT12
		                  , CASE
		                        WHEN C.OCCRRNC_YM <![CDATA[ <= ]]> TO_CHAR(ADD_MONTHS(TO_DATE(A.YYYYMM ||'01', 'YYYYMMDD'), - 5), 'yyyymm')
		                        THEN C.RDCAMT_AMOUNT
		                        ELSE 0
		                    END  AS CHA_AMT12
		                  , NULL AS PAYEND_DATE13
		                  , 0    AS PAY_AMT13
		                  , TRUNC_AMT CHA_AMT13
		                FROM
		                    (
		                        SELECT CRT_ID                           AS CNTRCTR_NO
		                          , TO_CHAR(MAX(PAYEND_DATE), 'yyyymm') AS YYYYMM
		                        FROM VA_BILL_DETAIL
		                        WHERE BANK_CD = #bankCd#
		                        AND VACCT_NO  = #vacctNo#
		                        AND CRT_ID    = #cntrctrNo#
		                        GROUP BY CRT_ID
		                    )
		                    A
		                  ,(
		                        SELECT CRT_ID AS CNTRCTR_NO
		                          , PAYEND_DATE
		                          , BANK_CD
		                          , VACCT_NO
		                        FROM VA_BILL_DETAIL
		                        WHERE BANK_CD = #bankCd#
		                        AND VACCT_NO  = #vacctNo#
		                        AND CRT_ID    = #cntrctrNo#
		                    )
		                    B
		                  , VWRNT_PUCHAS_MANAGECT C
		                WHERE A.CNTRCTR_NO                     = B.CNTRCTR_NO
		                AND B.CNTRCTR_NO                       = C.CNTRCTR_NO
		                AND TO_CHAR(B.PAYEND_DATE, 'YYYYMMDD') = C.PAY_TMLMT
		            )
		            B
		        GROUP BY CNTRCTR_NO
		          , BANK_CD
		          , VACCT_NO
		    )
		    D
		  ,(
		        SELECT CHRCTR_PREPAR_VALUE_0 AS OPOST_NO
		          , CHRCTR_PREPAR_VALUE_1    AS OADDR1
		          , CHRCTR_PREPAR_VALUE_2    AS OADDR2
		          , '전화:' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_0
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'RN'
		            ) AS OTEL_NO
		          , 'FAX :' ||
		            (
		                SELECT CHRCTR_PREPAR_VALUE_1
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM027'
		                AND CODE_NM    = 'RN'
		            ) AS OFAX_NO
		        FROM TBCOM_CMMN_CODE A
		        WHERE GRP_CODE = 'COM027'
		        AND CODE       = 'RN'
		    )
		    F
		  ,(
		        SELECT DISTINCT CNTRCTR_NO
		          ,(
		                SELECT CODE_NM
		                FROM TBCOM_CMMN_CODE
		                WHERE GRP_CODE = 'COM021'
		                AND CODE       = BANK_CODE
		            ) AS BANK_NM
		          , ACNUTNO
		          , DPSTR
		        FROM TBPMS_ATCNG
		        WHERE JOB_SE = 'RN2'
		        AND PAY_SE   = '04'
		    )
		    S
		  , VI_VA_MAST V
		  , TBRNT_PUCHAS_RENT_CSTMR H
		WHERE A.CNTRCTR_NO    = C.CRT_ID
		AND A.RENT_HOUSE_CODE = B.RENT_HOUSE_CODE(+)
		AND C.BANK_CD         = D.BANK_CD
		AND C.VACCT_NO        = D.VACCT_NO
		AND C.CRT_ID          = D.CNTRCTR_NO
		AND A.RENT_HOUSE_CODE = B1.RENT_HOUSE_CODE(+)
		AND A.DONG            = B1.DONG(+)
		AND A.CNTRCTR_NO      = S.CNTRCTR_NO(+)
		AND A.CNTRCTR_NO      = V.CRT_ID
		AND A.PUCHAS_CSTMR_NO = H.PUCHAS_CSTMR_NO
		AND V.CRT_DIV         = 'MA'
	</select>
	
</sqlMap>