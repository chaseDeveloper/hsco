<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="SLS060201_SQL">	
    <!--  설명  : 분양금 보증금 현황
	작성자 : 지효정 -->

	<!-- 메인 목록 -->
	<select id="SLS060201DAO.mainList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT HOUSE_CODE, HOUSE_NM, #PAY_TMLMT# AS PAY_TMLMT,
		       SUM(NVL(TOT_AMT,0)) AS TOT_AMT, SUM(NVL(PAYAMT,0)) AS PAYAMT, SUM(NVL(SB_AMT,0)) AS SB_AMT, SUM(NVL(SB_AMT1,0)) AS SB_AMT1, SUM(NVL(SB_AMT2,0)) AS SB_AMT2,
		       SUM(NVL(RCIV_AMOUNT,0)) AS RCIV_AMOUNT,
		       SUM(NVL(RCIV_AMOUNT0,0)) AS RCIV_AMOUNT0, SUM(NVL(RCIV_AMOUNT1,0)) AS RCIV_AMOUNT1, SUM(NVL(RCIV_AMOUNT2,0)) AS RCIV_AMOUNT2,
		       SUM(NVL(RCIV_AMOUNT3,0)) AS RCIV_AMOUNT3, SUM(NVL(RCIV_AMOUNT4,0)) AS RCIV_AMOUNT4, SUM(NVL(RCIV_AMOUNT5,0)) AS RCIV_AMOUNT5, SUM(NVL(RCIV_AMOUNT9,0)) AS RCIV_AMOUNT9,
		       SUM(NVL(REC_SB,0)) AS REC_SB, SUM(NVL(REC_SB1,0)) AS REC_SB1, SUM(NVL(REC_SB2,0)) AS REC_SB2,
		       SUM(NVL(DC_SUN,0)+NVL(DC_POINT,0)+NVL(DC_SB,0)+NVL(DC_BOJANG,0)) AS DC_TOT,
		       SUM(NVL(DC_SUN,0)) AS DC_SUN, SUM(NVL(DC_POINT,0)) AS DC_POINT, SUM(NVL(DC_SB,0)) AS DC_SB, SUM(NVL(DC_BOJANG,0)) AS DC_BOJANG,
		       SUM(NVL(MI_AMT,0)) AS MI_AMT, SUM(NVL(MI_AMT0,0)) AS MI_AMT0, SUM(NVL(MI_AMT1,0)) AS MI_AMT1, SUM(NVL(MI_AMT2,0)) AS MI_AMT2,
		       SUM(NVL(MI_AMT3,0)) AS MI_AMT3, SUM(NVL(MI_AMT4,0)) AS MI_AMT4, SUM(NVL(MI_AMT5,0)) AS MI_AMT5, SUM(NVL(MI_AMT9,0)) AS MI_AMT9, SUM(NVL(MI_SB,0)) AS MI_SB,
		       SUM(NVL(NEXT_AMT,0)) AS NEXT_AMT, SUM(NVL(NEXT_AMT0,0)) AS NEXT_AMT0, SUM(NVL(NEXT_AMT1,0)) AS NEXT_AMT1, SUM(NVL(NEXT_AMT2,0)) AS NEXT_AMT2,
		       SUM(NVL(NEXT_AMT3,0)) AS NEXT_AMT3, SUM(NVL(NEXT_AMT4,0)) AS NEXT_AMT4, SUM(NVL(NEXT_AMT5,0)) AS NEXT_AMT5, SUM(NVL(NEXT_AMT9,0)) AS NEXT_AMT9, SUM(NVL(NEXT_SB,0)) AS NEXT_SB
		  FROM (
		        SELECT A.HOUSE_CODE, A.DONG ||'-' || A.HO AS DONGHO, 
		               '['|| A.HOUSE_CODE || ']' || C.HOUSE_NM AS HOUSE_NM,
		               G.ADRES|| ' ' || G.ADRES_DETAIL AS ADRES, CNTRCT_DE,
		               V.PAY_TMLMT, V.RCIV_DE, T.HOUSE_DVR_AR,
		               CASE WHEN C.HOUSE_SE = 'S1' THEN NVL(B.LTTOT_AMOUNT,F.PAYAMT)
		                  ELSE NVL(B.BASS_LTTOT_AMOUNT,F.PAYAMT) END AS TOT_AMT, V.PAYAMT, 
		               SB_AMT, SB_AMT1, SB_AMT2,
		               RCIV_AMOUNT, RCIV_AMOUNT0, RCIV_AMOUNT1, RCIV_AMOUNT2, RCIV_AMOUNT3, RCIV_AMOUNT4, RCIV_AMOUNT5, RCIV_AMOUNT9,
		               REC_SB, REC_SB1, REC_SB2,
		               DC_TOT, DC_SUN,  DC_POINT, DC_SB,  V.DC_BOJANG,
		               MI_AMT, MI_AMT0, MI_AMT1, MI_AMT2, MI_AMT3, MI_AMT4, MI_AMT5, MI_AMT9, MI_SB,
		               NEXT_AMT, NEXT_AMT0, NEXT_AMT1, NEXT_AMT2, NEXT_AMT3, NEXT_AMT4, NEXT_AMT5, NEXT_AMT9, NEXT_SB,
		               NVL(V.PAYAMT,0) + SB_AMT + DC_TOT AS CHA_AMT
		          FROM TBSLS_HCNTRCTR A,
		               TBSLS_HOUSE_DONG_HO B,
		               TBSLS_HOUSE_CSTMR G, 
		               TBSLS_HOUSE_TY T,
		               (       
		               SELECT A.CNTRCTR_NO, MAX(NVL(PAY_TMLMT,'') ) AS PAY_TMLMT, MAX(NVL(RCIV_DE,'') ) AS RCIV_DE,
		               SUM(PAYAMT) AS PAYAMT, SUM(SB_AMT) AS SB_AMT, SUM(SB_AMT1) AS SB_AMT1, SUM(SB_AMT2) AS SB_AMT2,
		               SUM(RCIV_AMOUNT) AS RCIV_AMOUNT,
		               SUM(RCIV_AMOUNT0) AS RCIV_AMOUNT0, SUM(RCIV_AMOUNT1) AS RCIV_AMOUNT1, SUM(RCIV_AMOUNT2) AS RCIV_AMOUNT2,
		               SUM(RCIV_AMOUNT3) AS RCIV_AMOUNT3, SUM(RCIV_AMOUNT4) AS RCIV_AMOUNT4, SUM(RCIV_AMOUNT5) AS RCIV_AMOUNT5, SUM(RCIV_AMOUNT9) AS RCIV_AMOUNT9,
		               SUM(REC_SB) AS REC_SB, SUM(REC_SB1) AS REC_SB1, SUM(REC_SB2) AS REC_SB2,
		               SUM(DC_SUN+DC_POINT+DC_SB+DC_BOJANG) AS DC_TOT,
		               SUM(DC_SUN) AS DC_SUN, SUM(DC_POINT) AS DC_POINT, SUM(DC_SB) AS DC_SB, SUM(DC_BOJANG) AS DC_BOJANG,
		               SUM(MI_AMT) AS MI_AMT, SUM(MI_AMT0) AS MI_AMT0, SUM(MI_AMT1) AS MI_AMT1, SUM(MI_AMT2) AS MI_AMT2,
		               SUM(MI_AMT3) AS MI_AMT3, SUM(MI_AMT4) AS MI_AMT4, SUM(MI_AMT5) AS MI_AMT5, SUM(MI_AMT9) AS MI_AMT9, SUM(MI_SB) AS MI_SB,
		               SUM(NEXT_AMT) AS NEXT_AMT, SUM(NEXT_AMT0) AS NEXT_AMT0, SUM(NEXT_AMT1) AS NEXT_AMT1, SUM(NEXT_AMT2) AS NEXT_AMT2,
		               SUM(NEXT_AMT3) AS NEXT_AMT3, SUM(NEXT_AMT4) AS NEXT_AMT4, SUM(NEXT_AMT5) AS NEXT_AMT5, SUM(NEXT_AMT9) AS NEXT_AMT9, SUM(NEXT_SB) AS NEXT_SB
		          FROM (
		                 SELECT A.CNTRCTR_NO,
		                        CASE WHEN PAY_CODE NOT IN('SB','SC') THEN PAYAMT ELSE 0 END AS PAYAMT,
		                        CASE WHEN PAY_CODE IN('SB','SC') THEN PAYAMT ELSE 0 END AS SB_AMT,
		                        CASE WHEN PAY_CODE IN('SB','SC') AND A.CNTRCT_DE = B.PAY_TMLMT  THEN PAYAMT ELSE 0 END AS SB_AMT1,
		                        CASE WHEN PAY_CODE IN('SB','SC') AND A.CNTRCT_DE <![CDATA[<>]]> B.PAY_TMLMT THEN PAYAMT ELSE 0 END AS SB_AMT2,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE NOT IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R0','S0') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT0,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R1','S1') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT1,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R2','S2') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT2,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R3','S3') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT3,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R4','S4') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT4,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R5','S5') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT5,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('R9','S9') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT9,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('SB','SC') AND A.CNTRCT_DE = B.PAY_TMLMT THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB1,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT#  AND PAY_CODE IN('SB','SC') AND A.CNTRCT_DE <![CDATA[<>]]> B.PAY_TMLMT THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB2,
		                        (CASE WHEN ARRRG_AMOUNT <![CDATA[<]]> 0 AND PAY_CODE NOT IN('SB','SC') THEN ARRRG_AMOUNT ELSE 0 END) AS DC_SUN,                                                                               
		                        NVL(POINT_DSCNT_AM,0) AS DC_POINT,
		                        (CASE WHEN ARRRG_AMOUNT <![CDATA[<]]> 0 AND PAY_CODE IN('SB','SC') THEN ARRRG_AMOUNT ELSE 0 END) +
		                        (CASE WHEN PAY_CODE IN('SB','SC') AND RCIV_DE IS NOT NULL  AND RCIV_DE <![CDATA[<=]]> #PAY_TMLMT# AND TMPR_RCIV_NO = -100 THEN PAYAMT ELSE 0 END) DC_SB,
		                        (CASE WHEN B.RM = '분양금보장제' THEN PAYAMT ELSE 0 END) DC_BOJANG,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R0','S0') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT0,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R1','S1') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT1, 
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R2','S2') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT2,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R3','S3') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT3,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R4','S4') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT4,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R5','S5') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT5,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('R9','S9') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT9,  
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[<=]]> #PAY_TMLMT# AND PAY_CODE IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_SB,                                                         
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE > #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R0','S0') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT0,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R1','S1') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT1,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R2','S2') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT2,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R3','S3') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT3,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R4','S4') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT4,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R5','S5') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT5,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('R9','S9') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT9,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE <![CDATA[>]]> #PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1) <![CDATA[>]]> #PAY_TMLMT# AND PAY_CODE IN('SB','SC') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0) <![CDATA[>=]]> 0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_SB,
		                        (CASE WHEN PAY_CODE IN('S9','R9') THEN PAY_TMLMT END) AS PAY_TMLMT
		                 FROM TBSLS_HCNTRCTR A, TBSLS_HOUSE_LTTOT_PAY B
		                WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
		                AND B.PAY_CODE LIKE DECODE(A.RENT_LTTOT_CNVRS_DE,NULL,'%','S%')
		                ) A                 
		             , (SELECT CNTRCTR_NO, MAX(RCIV_DE) AS RCIV_DE FROM TBSLS_HOUSE_LTTOT_PAY A
		                 WHERE PAY_CODE IN('S9','R9') 
		                   AND NOT EXISTS(SELECT 1 FROM TBSLS_HOUSE_LTTOT_PAY B 
		                                   WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
		                                     AND (B.RCIV_DE IS NULL OR B.RCIV_DE <![CDATA[>]]> #PAY_TMLMT#))
		                 GROUP BY CNTRCTR_NO
		               ) R
		            WHERE A.CNTRCTR_NO = R.CNTRCTR_NO(+)
		            GROUP BY A.CNTRCTR_NO
		                ) V,
		                TBSLS_HOUSE_INFO C,
		                (SELECT HOUSE_CODE, HOUSE_TY_CODE, SUM(PAYAMT) AS PAYAMT
		                   FROM TBSLS_HOUSE_TYBY_PAY
		                  GROUP BY HOUSE_CODE, HOUSE_TY_CODE
		                ) F
		         WHERE A.CNTRCTR_NO       = V.CNTRCTR_NO(+)
		           AND A.HOUSE_CODE    = B.HOUSE_CODE
		           AND A.DONG        = B.DONG
		           AND A.HO          = B.HO
		           AND A.HOUSE_CSTMR_NO = G.HOUSE_CSTMR_NO
		           AND A.HOUSE_CODE    = C.HOUSE_CODE
		           <isNotEmpty property="ST_HOUSE_CODE">
		           AND B.HOUSE_CODE  <![CDATA[>=]]> #ST_HOUSE_CODE#
		           </isNotEmpty>
		           <isNotEmpty property="ED_HOUSE_CODE">
		           AND B.HOUSE_CODE  <![CDATA[<=]]> #ED_HOUSE_CODE#
		           </isNotEmpty>
		           AND B.HOUSE_CODE     = F.HOUSE_CODE(+)
		           AND B.HOUSE_TY_CODE  = F.HOUSE_TY_CODE(+)
		           AND A.CNTRCTR_STTUS_CODE = '01'
		           AND B.HOUSE_CODE     = T.HOUSE_CODE(+)
		           AND B.HOUSE_TY_CODE  = T.HOUSE_TY_CODE(+)
		           AND NVL(A.RENT_LTTOT_CNVRS_DE,A.CNTRCT_DE) BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#
		 ) GROUP BY HOUSE_CODE, HOUSE_NM
		 ORDER BY 1
    </select>
    
	<select id="SLS060201DAO.mainDetailList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.HOUSE_CODE, A.DONG ||'-' || A.HO AS DONGHO,  G.CSTMR_NM,
		       SFCOM_DEC_ALL(G.IHIDNUM) AS CPERSONNO, G.TELNO, G.MBTLNO,
		       '['|| A.HOUSE_CODE || ']' || C.HOUSE_NM AS HOUSE_NM,
		       G.ADRES|| ' ' || G.ADRES_DETAIL AS ADRES, CNTRCT_DE, A.RENT_LTTOT_CNVRS_DE,
		       V.PAY_TMLMT, V.RCIV_DE, T.HOUSE_DVR_AR,
		       CASE WHEN C.HOUSE_SE = 'S1' THEN NVL(B.LTTOT_AMOUNT,F.PAYAMT)
		          ELSE NVL(B.BASS_LTTOT_AMOUNT,F.PAYAMT) END AS TOT_AMT, V.PAYAMT, 
		       SB_AMT, SB_AMT1, SB_AMT2,
		       RCIV_AMOUNT, RCIV_AMOUNT0, RCIV_AMOUNT1, RCIV_AMOUNT2, RCIV_AMOUNT3, RCIV_AMOUNT4, RCIV_AMOUNT5, RCIV_AMOUNT9,
		       REC_SB, REC_SB1, REC_SB2,
		       DC_TOT, DC_SUN,  DC_POINT, DC_SB,  V.DC_BOJANG,
		       MI_AMT, MI_AMT0, MI_AMT1, MI_AMT2, MI_AMT3, MI_AMT4, MI_AMT5, MI_AMT9, MI_SB,
		       NEXT_AMT, NEXT_AMT0, NEXT_AMT1, NEXT_AMT2, NEXT_AMT3, NEXT_AMT4, NEXT_AMT5, NEXT_AMT9, NEXT_SB,
		       NVL(V.PAYAMT,0) + SB_AMT + DC_TOT AS CHA_AMT
		  FROM TBSLS_HCNTRCTR A,
		       TBSLS_HOUSE_DONG_HO B,
		       TBSLS_HOUSE_CSTMR G, 
		       TBSLS_HOUSE_TY T,
		       (       
		       SELECT A.CNTRCTR_NO, MAX(NVL(PAY_TMLMT,'') ) AS PAY_TMLMT, MAX(NVL(RCIV_DE,'') ) AS RCIV_DE,
		               SUM(PAYAMT) AS PAYAMT, SUM(SB_AMT) AS SB_AMT, SUM(SB_AMT1) AS SB_AMT1, SUM(SB_AMT2) AS SB_AMT2,
		               SUM(RCIV_AMOUNT) AS RCIV_AMOUNT,
		               SUM(RCIV_AMOUNT0) AS RCIV_AMOUNT0, SUM(RCIV_AMOUNT1) AS RCIV_AMOUNT1, SUM(RCIV_AMOUNT2) AS RCIV_AMOUNT2,
		               SUM(RCIV_AMOUNT3) AS RCIV_AMOUNT3, SUM(RCIV_AMOUNT4) AS RCIV_AMOUNT4, SUM(RCIV_AMOUNT5) AS RCIV_AMOUNT5, SUM(RCIV_AMOUNT9) AS RCIV_AMOUNT9,
		               SUM(REC_SB) AS REC_SB, SUM(REC_SB1) AS REC_SB1, SUM(REC_SB2) AS REC_SB2,
		               SUM(DC_SUN+DC_POINT+DC_SB+DC_BOJANG) AS DC_TOT,
		               SUM(DC_SUN) AS DC_SUN, SUM(DC_POINT) AS DC_POINT, SUM(DC_SB) AS DC_SB, SUM(DC_BOJANG) AS DC_BOJANG,
		               SUM(MI_AMT) AS MI_AMT, SUM(MI_AMT0) AS MI_AMT0, SUM(MI_AMT1) AS MI_AMT1, SUM(MI_AMT2) AS MI_AMT2,
		               SUM(MI_AMT3) AS MI_AMT3, SUM(MI_AMT4) AS MI_AMT4, SUM(MI_AMT5) AS MI_AMT5, SUM(MI_AMT9) AS MI_AMT9, SUM(MI_SB) AS MI_SB,
		               SUM(NEXT_AMT) AS NEXT_AMT, SUM(NEXT_AMT0) AS NEXT_AMT0, SUM(NEXT_AMT1) AS NEXT_AMT1, SUM(NEXT_AMT2) AS NEXT_AMT2,
		               SUM(NEXT_AMT3) AS NEXT_AMT3, SUM(NEXT_AMT4) AS NEXT_AMT4,SUM(NEXT_AMT5) AS NEXT_AMT5, SUM(NEXT_AMT9) AS NEXT_AMT9, SUM(NEXT_SB) AS NEXT_SB
		          FROM (
		                 SELECT A.CNTRCTR_NO,
		                        CASE WHEN PAY_CODE NOT IN('SB','SC') THEN PAYAMT ELSE 0 END AS PAYAMT,
		                        CASE WHEN PAY_CODE IN('SB','SC') THEN PAYAMT ELSE 0 END AS SB_AMT,
		                        CASE WHEN PAY_CODE IN('SB','SC') AND A.CNTRCT_DE = B.PAY_TMLMT  THEN PAYAMT ELSE 0 END AS SB_AMT1,
		                        CASE WHEN PAY_CODE IN('SB','SC') AND A.CNTRCT_DE<![CDATA[  <>  ]]>B.PAY_TMLMT THEN PAYAMT ELSE 0 END AS SB_AMT2,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE NOT IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R0','S0') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT0,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R1','S1') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT1,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R2','S2') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT2,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R3','S3') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT3,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R4','S4') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT4,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R5','S5') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT5,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R9','S9') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS RCIV_AMOUNT9,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('SB','SC') AND A.CNTRCT_DE = B.PAY_TMLMT THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB1,
		                        (CASE WHEN RCIV_DE IS NOT NULL AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT#  AND PAY_CODE IN('SB','SC') AND A.CNTRCT_DE<![CDATA[  <>  ]]>B.PAY_TMLMT THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE RCIV_AMOUNT END ELSE 0 END) AS REC_SB2,
		                        (CASE WHEN ARRRG_AMOUNT<![CDATA[  <  ]]>0 AND PAY_CODE NOT IN('SB','SC') THEN ARRRG_AMOUNT ELSE 0 END) AS DC_SUN,                                                                               
		                        NVL(POINT_DSCNT_AM,0) AS DC_POINT,
		                        (CASE WHEN ARRRG_AMOUNT<![CDATA[  <  ]]>0 AND PAY_CODE IN('SB','SC') THEN ARRRG_AMOUNT ELSE 0 END) +
		                        (CASE WHEN PAY_CODE IN('SB','SC') AND RCIV_DE IS NOT NULL  AND RCIV_DE<![CDATA[  <=  ]]>#PAY_TMLMT# AND TMPR_RCIV_NO = -100 THEN PAYAMT ELSE 0 END) DC_SB,
		                        (CASE WHEN B.RM = '분양금보장제' THEN PAYAMT ELSE 0 END) DC_BOJANG,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R0','S0') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT0,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R1','S1') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT1, 
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R2','S2') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT2,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R3','S3') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT3,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R4','S4') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT4,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R5','S5') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT5,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R9','S9') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_AMT9,  
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('SB','SC') THEN
		                                   CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS MI_SB,                                                         
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R0','S0') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT0,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R1','S1') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT1,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R2','S2') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT2,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R3','S3') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT3,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R4','S4') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT4,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R5','S5') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT5,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('R9','S9') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_AMT9,
		                        (CASE WHEN (RCIV_DE IS NULL OR RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#) AND NVL(PAY_TMLMT,SYSDATE + 1)<![CDATA[  >  ]]>#PAY_TMLMT# AND PAY_CODE IN('SB','SC') THEN
		                              CASE WHEN NVL(ARRRG_AMOUNT,0)<![CDATA[  >=  ]]>0 THEN PAYAMT + NVL(POINT_DSCNT_AM,0)  ELSE PAYAMT + ARRRG_AMOUNT + NVL(POINT_DSCNT_AM,0) END
		                                   ELSE 0 END) AS NEXT_SB,
		                        (CASE WHEN PAY_CODE IN('S9','R9') THEN PAY_TMLMT END) AS PAY_TMLMT
		                 FROM TBSLS_HCNTRCTR A, TBSLS_HOUSE_LTTOT_PAY B
		                WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
		                 AND B.PAY_CODE LIKE DECODE(A.RENT_LTTOT_CNVRS_DE,NULL,'%','S%')                
		                ) A                 
		             , (SELECT CNTRCTR_NO, MAX(RCIV_DE) AS RCIV_DE FROM TBSLS_HOUSE_LTTOT_PAY A
		                 WHERE PAY_CODE IN('S9','R9') 
		                   AND NOT EXISTS(SELECT 1 FROM TBSLS_HOUSE_LTTOT_PAY B 
		                                   WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
		                                     AND (B.RCIV_DE IS NULL OR B.RCIV_DE<![CDATA[  >  ]]>#PAY_TMLMT#))
		                 GROUP BY CNTRCTR_NO
		               ) R
		            WHERE A.CNTRCTR_NO = R.CNTRCTR_NO(+)
		            GROUP BY A.CNTRCTR_NO      
		        ) V,
		        TBSLS_HOUSE_INFO C,
		        (SELECT HOUSE_CODE, HOUSE_TY_CODE, SUM(PAYAMT) AS PAYAMT
		           FROM TBSLS_HOUSE_TYBY_PAY
		          GROUP BY HOUSE_CODE, HOUSE_TY_CODE
		        ) F
		 WHERE A.CNTRCTR_NO       = V.CNTRCTR_NO(+)
		   AND A.HOUSE_CODE    = B.HOUSE_CODE
		   AND A.DONG        = B.DONG
		   AND A.HO          = B.HO
		   AND A.HOUSE_CSTMR_NO = G.HOUSE_CSTMR_NO
		   AND A.HOUSE_CODE    = C.HOUSE_CODE
		   AND A.HOUSE_CODE    LIKE #HOUSE_CODE#
		   AND B.HOUSE_CODE     = F.HOUSE_CODE(+)
		   AND B.HOUSE_TY_CODE  = F.HOUSE_TY_CODE(+)
		   AND A.CNTRCTR_STTUS_CODE = '01'
		   AND B.HOUSE_CODE     = T.HOUSE_CODE(+)
		   AND B.HOUSE_TY_CODE  = T.HOUSE_TY_CODE(+)
<isEqual property="CNTRCTR_SE" compareValue="1">
		   AND NVL(A.RENT_LTTOT_CNVRS_DE,A.CNTRCT_DE) BETWEEN #ST_CNTRCT_DE# AND #ED_CNTRCT_DE#
</isEqual>		
<isEqual property="CNTRCTR_SE" compareValue="0">		   
		 UNION ALL 
		SELECT B.HOUSE_CODE, B.DONG ||'-' || B.HO AS DONGHO,  '' AS CSTMR_NM, '' AS CPERSONNO, '' TELNO, '' MBTLNO,
		       '['|| B.HOUSE_CODE || ']' || C.HOUSE_NM AS HOUSE_NM,
		       '' AS CADDR, NULL AS CNTRCT_DE, NULL,  NULL, NULL, T.HOUSE_DVR_AR,
		       CASE WHEN C.HOUSE_SE = 'S1' THEN NVL(B.LTTOT_AMOUNT,F.PAYAMT)
		          ELSE NVL(B.BASS_LTTOT_AMOUNT,F.PAYAMT) END AS TOT_AMT, F.PAYAMT,        
		       0 AS SB_AMT,0 AS SB_AMT1, 0 AS SB_AMT2,
		       0 AS RCIV_AMOUNT,0 AS RCIV_AMOUNT0, 0 AS RCIV_AMOUNT1, 0 AS RCIV_AMOUNT2, 0 AS RCIV_AMOUNT3, 0 AS RCIV_AMOUNT4, 0 AS RCIV_AMOUNT5, 0 AS RCIV_AMOUNT9,
		       0 AS REC_SB, 0 AS REC_SB1, 0 AS REC_SB2,
		       0 AS DC_TOT, 0 AS DC_SUN, 0 AS DC_POINT,0 AS DC_SB, 0 AS DC_BOJANG,
		       MI_AMT, MI_AMT0, MI_AMT1, MI_AMT2, MI_AMT3, MI_AMT4, MI_AMT5, MI_AMT9, 0 MI_SB,
		       NEXT_AMT, NEXT_AMT0, NEXT_AMT1, NEXT_AMT2, NEXT_AMT3, NEXT_AMT4, NEXT_AMT5, NEXT_AMT9, 0  NEXT_SB,
		       0 AS CHA_AMT
		  FROM TBSLS_HOUSE_DONG_HO B,
		           TBSLS_HOUSE_INFO C,
		           TBSLS_HOUSE_TY T,
		        (SELECT HOUSE_CODE, HOUSE_TY_CODE, SUM(PAYAMT) AS PAYAMT, 
		                SUM(MI_AMT) AS MI_AMT, SUM(MI_AMT0) AS MI_AMT0, SUM(MI_AMT1) AS MI_AMT1, SUM(MI_AMT2) AS MI_AMT2, 
		                SUM(MI_AMT3) AS MI_AMT3, SUM(MI_AMT4) AS MI_AMT4, SUM(MI_AMT5) AS MI_AMT5, SUM(MI_AMT9) AS MI_AMT9,
		                SUM(NEXT_AMT) AS NEXT_AMT,SUM(NEXT_AMT0) AS NEXT_AMT0, SUM(NEXT_AMT1) AS NEXT_AMT1, SUM(NEXT_AMT2) AS NEXT_AMT2, 
		                SUM(NEXT_AMT3) AS NEXT_AMT3, SUM(NEXT_AMT4) AS NEXT_AMT4, SUM(NEXT_AMT5) AS NEXT_AMT5, SUM(NEXT_AMT9) AS NEXT_AMT9
		           FROM (SELECT HOUSE_CODE, HOUSE_TY_CODE, PAYAMT,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# THEN PAYAMT ELSE 0 END) AS MI_AMT,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R0','S0') THEN PAYAMT ELSE 0 END) AS MI_AMT0,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R1','S1') THEN PAYAMT ELSE 0 END) AS MI_AMT1,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R2','S2') THEN PAYAMT ELSE 0 END) AS MI_AMT2,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R3','S3') THEN PAYAMT ELSE 0 END) AS MI_AMT3,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R4','S4') THEN PAYAMT ELSE 0 END) AS MI_AMT4,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R5','S5') THEN PAYAMT ELSE 0 END) AS MI_AMT5,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  <=  ]]>#PAY_TMLMT# AND PAY_CODE IN('R9','S9') THEN PAYAMT ELSE 0 END) AS MI_AMT9,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  THEN PAYAMT ELSE 0 END) AS NEXT_AMT,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R0','S0') THEN PAYAMT ELSE 0 END) AS NEXT_AMT0,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R1','S1') THEN PAYAMT ELSE 0 END) AS NEXT_AMT1,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R2','S2') THEN PAYAMT ELSE 0 END) AS NEXT_AMT2,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R3','S3') THEN PAYAMT ELSE 0 END) AS NEXT_AMT3,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R4','S4') THEN PAYAMT ELSE 0 END) AS NEXT_AMT4,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R5','S5') THEN PAYAMT ELSE 0 END) AS NEXT_AMT5,
		                        (CASE WHEN DECODE(SUBSTR(PAY_CODE,2,1),'9',TO_DATE('2900-01-01'), PAY_TMLMT)<![CDATA[  >  ]]>#PAY_TMLMT#  AND PAY_CODE IN('R9','S9') THEN PAYAMT ELSE 0 END) AS NEXT_AMT9
		                   FROM TBSLS_HOUSE_TYBY_PAY
		                 )
		          GROUP BY HOUSE_CODE, HOUSE_TY_CODE
		        ) F         
		 WHERE B.HOUSE_CODE    = C.HOUSE_CODE
		   AND B.HOUSE_CODE    LIKE #HOUSE_CODE#
		   AND B.HOUSE_CODE     = F.HOUSE_CODE(+)
		   AND B.HOUSE_TY_CODE  = F.HOUSE_TY_CODE(+)
		   AND NOT EXISTS(SELECT 1 FROM TBSLS_HCNTRCTR A
		                   WHERE A.HOUSE_CODE = B.HOUSE_CODE
		                     AND A.DONG     = B.DONG
		                     AND A.HO       = B.HO
		                     AND A.CNTRCTR_STTUS_CODE = '01')
		   AND B.HOUSE_CODE     = T.HOUSE_CODE(+)
		   AND B.HOUSE_TY_CODE  = T.HOUSE_TY_CODE(+)
</isEqual>		   
		 ORDER BY 1, 2
	</select>










    	
	<!-- 주택 총액 목록 -->
	<select id="SLS060201DAO.payList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT *
		FROM(
		    SELECT 
		        CNTRCTR_NO                              				/* 계약자번호 */
		        ,MAX(GYEYAK_PAY_TMLMT) AS GYEYAK_PAY_TMLMT      		/* 계약금 납부기한 */
		        ,SUM(NVL(GYEYAK_PAYAMT,0)) AS GYEYAK_PAYAMT            	/* 계약금 납부금액 */
		        ,SUM(NVL(GYEYAK_RCIV_AMOUNT,0)) AS GYEYAK_RCIV_AMOUNT  	/* 계약금 수납금액 */
		        ,SUM(NVL(GYEYAK_PA,0)) AS GYEYAK_PA                    	/* 계약금 선납액 */
		        ,SUM(NVL(GYEYAK_PP,0)) AS GYEYAK_PP                    	/* 계약금 연체료 */
		
		        ,MAX(JUNGDO1_PAY_TMLMT) AS JUNGDO1_PAY_TMLMT      		/* 1차중도금 납부기한 */
		        ,SUM(NVL(JUNGDO1_PAYAMT,0)) AS JUNGDO1_PAYAMT           /* 1차중도금 납부금액 */
		        ,SUM(NVL(JUNGDO1_RCIV_AMOUNT,0)) AS JUNGDO1_RCIV_AMOUNT /* 1차중도금 수납금액 */
		        ,SUM(NVL(JUNGDO1_PA,0)) AS JUNGDO1_PA                   /* 1차중도금 선납액 */
		        ,SUM(NVL(JUNGDO1_PP,0)) AS JUNGDO1_PP                   /* 1차중도금 연체료 */
		
		        ,MAX(JUNGDO2_PAY_TMLMT) AS JUNGDO2_PAY_TMLMT      		/* 1차중도금 납부기한 */
		        ,SUM(NVL(JUNGDO2_PAYAMT,0)) AS JUNGDO2_PAYAMT           /* 2차중도금 납부금액 */
		        ,SUM(NVL(JUNGDO2_RCIV_AMOUNT,0)) AS JUNGDO2_RCIV_AMOUNT /* 2차중도금 수납금액 */
		        ,SUM(NVL(JUNGDO2_PA,0)) AS JUNGDO2_PA                   /* 2차중도금 선납액 */
		        ,SUM(NVL(JUNGDO2_PP,0)) AS JUNGDO2_PP                   /* 2차중도금 연체료 */
		
		        ,MAX(JUNGDO3_PAY_TMLMT) AS JUNGDO3_PAY_TMLMT      		/* 3차중도금 납부기한 */
		        ,SUM(NVL(JUNGDO3_PAYAMT,0)) AS JUNGDO3_PAYAMT           /* 3차중도금 납부금액 */
		        ,SUM(NVL(JUNGDO3_RCIV_AMOUNT,0)) AS JUNGDO3_RCIV_AMOUNT /* 3차중도금 수납금액 */
		        ,SUM(NVL(JUNGDO3_PA,0)) AS JUNGDO3_PA                   /* 3차중도금 선납액 */
		        ,SUM(NVL(JUNGDO3_PP,0)) AS JUNGDO3_PP                   /* 3차중도금 연체료 */
		
		        ,MAX(JUNGDO4_PAY_TMLMT) AS JUNGDO4_PAY_TMLMT      		/* 4차중도금 납부기한 */
		        ,SUM(NVL(JUNGDO4_PAYAMT,0)) AS JUNGDO4_PAYAMT           /* 4차중도금 납부금액 */
		        ,SUM(NVL(JUNGDO4_RCIV_AMOUNT,0)) AS JUNGDO4_RCIV_AMOUNT /* 4차중도금 수납금액 */
		        ,SUM(NVL(JUNGDO4_PA,0)) AS JUNGDO4_PA                   /* 4차중도금 선납액 */
		        ,SUM(NVL(JUNGDO4_PP,0)) AS JUNGDO4_PP                   /* 4차중도금 연체료 */
		
		        ,MAX(JUNGDO5_PAY_TMLMT) AS JUNGDO5_PAY_TMLMT  			/* 5차중도금 납부기한 */
		        ,SUM(NVL(JUNGDO5_PAYAMT,0)) AS JUNGDO5_PAYAMT     		/* 5차중도금 납부금액 */
		        ,SUM(NVL(JUNGDO5_RCIV_AMOUNT,0)) AS JUNGDO5_RCIV_AMOUNT /* 5차중도금 수납금액 */
		        ,SUM(NVL(JUNGDO5_PA,0)) AS JUNGDO5_PA                   /* 5차중도금 선납액 */
		        ,SUM(NVL(JUNGDO5_PP,0)) AS JUNGDO5_PP                   /* 5차중도금 연체료 */
		
		        ,MAX(JANPAY_TMLMT) AS JANPAY_TMLMT      				/* 잔금 납부기한 */
		        ,SUM(NVL(JANPAYAMT,0)) AS JANPAYAMT            			/* 잔금 납부금액 */
		        ,SUM(NVL(JANRCIV_AMOUNT,0)) AS JANRCIV_AMOUNT  			/* 잔금 수납금액 */
		        ,SUM(NVL(JANPA,0)) AS JANPA                    			/* 잔금 선납액 */
		        ,SUM(NVL(JANPP,0)) AS JANPP                    			/* 잔금 연체료 */
		       
		        ,SUM(NVL(TOT_PAYAMT,0)) AS TOT_PAYAMT          			/* 합계 납부금액 */
		        ,SUM(NVL(TOT_RCIV_AMOUNT,0)) AS TOT_RCIV_AMOUNT			/* 합계 수납금액 */
		        ,SUM(NVL(TOT_PA,0)) AS TOT_PA                  			/* 합계 연체료 */
		        ,SUM(NVL(TOT_PP,0)) AS TOT_PP                  			/* 합계 선납액 */
		        
		        ,SUM(NVL(TOT_PAYAMT,0)) - SUM(NVL(TOT_RCIV_AMOUNT,0)) AS CHAI_AMOUNT   /* 차이액 */
		    FROM(
			    SELECT 
			         CNTRCTR_NO
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '0', PAY_TMLMT)) AS GYEYAK_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', PAYAMT)) AS GYEYAK_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', RCIV_AMOUNT)) AS GYEYAK_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS GYEYAK_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS GYEYAK_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '1', PAY_TMLMT)) AS JUNGDO1_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', PAYAMT)) AS JUNGDO1_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', RCIV_AMOUNT)) AS JUNGDO1_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JUNGDO1_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JUNGDO1_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '2', PAY_TMLMT)) AS JUNGDO2_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', PAYAMT)) AS JUNGDO2_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', RCIV_AMOUNT)) AS JUNGDO2_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JUNGDO2_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JUNGDO2_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '3', PAY_TMLMT)) AS JUNGDO3_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', PAYAMT)) AS JUNGDO3_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', RCIV_AMOUNT)) AS JUNGDO3_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JUNGDO3_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JUNGDO3_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '4', PAY_TMLMT)) AS JUNGDO4_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', PAYAMT)) AS JUNGDO4_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', RCIV_AMOUNT)) AS JUNGDO4_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JUNGDO4_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JUNGDO4_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '5', PAY_TMLMT)) AS JUNGDO5_PAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', PAYAMT)) AS JUNGDO5_PAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', RCIV_AMOUNT)) AS JUNGDO5_RCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JUNGDO5_PA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JUNGDO5_PP
			        
			        ,MAX(DECODE(SUBSTR(PAY_CODE,2,1), '9', PAY_TMLMT)) AS JANPAY_TMLMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', PAYAMT)) AS JANPAYAMT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', RCIV_AMOUNT)) AS JANRCIV_AMOUNT
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT))) AS JANPA
			        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT))) AS JANPP
			        
			        ,SUM(PAYAMT) AS TOT_PAYAMT
 					,SUM(RCIV_AMOUNT) AS TOT_RCIV_AMOUNT
			        ,SUM(DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT)) AS TOT_PA
			        ,SUM(DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT)) AS TOT_PP
			    FROM 
			    	TBSLS_HOUSE_LTTOT_PAY		/* 주택분양납부 */
			    WHERE CNTRCTR_NO = CNTRCTR_NO 
			    AND   (SELECT CHRCTR_PREPAR_VALUE_1
						FROM TBCOM_CMMN_CODE
						WHERE GRP_CODE = 'HOU0A1' AND CODE = PAY_CODE) IN ('R', 'S')
 				<isNotEmpty property="rcivDe">
			    AND   RCIV_DE <![CDATA[>=]]> #rcivDe#
			    </isNotEmpty>
			    GROUP BY CNTRCTR_NO, PAY_NO
			    ORDER BY CNTRCTR_NO, PAY_NO
		    )
		    GROUP BY CNTRCTR_NO
		)A,
		(
		    SELECT 
		        A.CNTRCTR_NO            /* 계약자번호 */
		        ,A.HOUSE_CODE           /* 주택코드 */
		        ,A.DONG                 /* 동 */
		        ,A.HO                   /* 호 */
		        ,B.CSTMR_NM                   /* 계약자명 */
		        ,B.IHIDNUM              /* 주민등록번호 */
		        ,C.LTTOT_AMOUNT    		/* 총분양금 */
		        ,D.TY_AEA               /* 평형 */
		        ,E.HOUSE_NM
		    FROM 
		    	TBSLS_HCNTRCTR A		/* 주택계약자 */
		    	,TBSLS_HOUSE_CSTMR B	/* 주택고객 */
		    	,TBSLS_HOUSE_DONG_HO C	/* 주택동호 */
		    	,TBSLS_HOUSE_TY D		/* 주택타입 */
		    	,TBSLS_HOUSE_INFO E		/* 주택정보 */
		    WHERE A.HOUSE_CSTMR_NO = B.HOUSE_CSTMR_NO
		    AND   A.HOUSE_CODE = C.HOUSE_CODE
		    AND   A.DONG = C.DONG
		    AND   A.HO = C.HO
		    AND   D.HOUSE_CODE = C.HOUSE_CODE
		    AND   D.HOUSE_TY_CODE = C.HOUSE_TY_CODE
		    AND   A.HOUSE_CODE = E.HOUSE_CODE
		    <!-- 2016.06.24
		    <isNotEmpty property="stHouseCode">
		    AND   A.HOUSE_CODE <![CDATA[>=]]> #stHouseCode#
		    </isNotEmpty>
		    <isNotEmpty property="edHouseCode">
		    AND   A.HOUSE_CODE <![CDATA[<=]]> #edHouseCode#
		    </isNotEmpty>
		     -->
		    <isNotEmpty property="houseCode">
	    	AND   A.HOUSE_CODE = #houseCode#
	    	</isNotEmpty>
	    
		    <isNotEmpty property="stCntrctDe">
		    AND   A.CNTRCT_DE <![CDATA[>=]]> #stCntrctDe#
		    </isNotEmpty>
		    <isNotEmpty property="edCntrctDe">
		    AND   A.CNTRCT_DE <![CDATA[<=]]> #edCntrctDe#
		    </isNotEmpty>
		    ORDER BY A.HOUSE_CODE, B.CSTMR_NM
		)B
		WHERE A.CNTRCTR_NO = B.CNTRCTR_NO
		order by house_code, dong, ho 
    </select>
    
    <!-- 수납 총괄 목록 -->
    <select id="SLS060201DAO.payTotList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		     PAY_CODE                      		/* 요금종류 */
		    ,RCIV_DE                      		/* 수납일자 */
		    ,NVL(PAYAMT,0) AS PAYAMT       		/* 납부금액 */
		    ,NVL(RCIV_AMOUNT,0) AS RCIV_AMOUNT  /* 수납금액 */
		    ,NVL(PAYAMT,0) - NVL(RCIV_AMOUNT,0) AS CHAI_AMOUNT	/* 차이액 */
		    ,DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT) AS PA	/* 선납액 */
		    ,DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT) AS PP	/* 연체금액 */
		FROM TBSLS_HOUSE_LTTOT_PAY		/* 주택분양납부 */
		WHERE CNTRCTR_NO = #CNTRCTR_NO#
		AND  (SELECT CHRCTR_PREPAR_VALUE_1
				FROM TBCOM_CMMN_CODE
				WHERE GRP_CODE = 'HOU0A1' AND CODE = PAY_CODE) IN ('R', 'S')
    </select>
    
    <!-- VAT 연산 포함 목록 -->
    <select id="SLS060201DAO.payVatList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
	         SUM(NVL(GYEYAK_PAYAMT,0)) AS GYEYAK_PAYAMT            	/* 계약금 납부금액 */
	        ,SUM(NVL(GYEYAK_RCIV_AMOUNT,0)) AS GYEYAK_RCIV_AMOUNT  	/* 계약금 수납금액 */
	
	        ,SUM(NVL(JUNGDO1_PAYAMT,0)) AS JUNGDO1_PAYAMT           /* 1차중도금 납부금액 */
	        ,SUM(NVL(JUNGDO1_RCIV_AMOUNT,0)) AS JUNGDO1_RCIV_AMOUNT /* 1차중도금 수납금액 */
	
	        ,SUM(NVL(JUNGDO2_PAYAMT,0)) AS JUNGDO2_PAYAMT           /* 2차중도금 납부금액 */
	        ,SUM(NVL(JUNGDO2_RCIV_AMOUNT,0)) AS JUNGDO2_RCIV_AMOUNT /* 2차중도금 수납금액 */
	
	        ,SUM(NVL(JUNGDO3_PAYAMT,0)) AS JUNGDO3_PAYAMT           /* 3차중도금 납부금액 */
	        ,SUM(NVL(JUNGDO3_RCIV_AMOUNT,0)) AS JUNGDO3_RCIV_AMOUNT /* 3차중도금 수납금액 */
	
	        ,SUM(NVL(JUNGDO4_PAYAMT,0)) AS JUNGDO4_PAYAMT           /* 4차중도금 납부금액 */
	        ,SUM(NVL(JUNGDO4_RCIV_AMOUNT,0)) AS JUNGDO4_RCIV_AMOUNT /* 4차중도금 수납금액 */
	
	        ,SUM(NVL(JUNGDO5_PAYAMT,0)) AS JUNGDO5_PAYAMT     		/* 5차중도금 납부금액 */
	        ,SUM(NVL(JUNGDO5_RCIV_AMOUNT,0)) AS JUNGDO5_RCIV_AMOUNT /* 5차중도금 수납금액 */
	
	        ,SUM(NVL(JAN_RCIV_AMOUNT,0)) AS JAN_RCIV_AMOUNT  		/* 잔금 납부금액 */
	        ,SUM(NVL(JAN_PAYAMT,0)) AS JAN_PAYAMT            		/* 잔금 수납금액 */
	       
	        ,SUM(NVL(TOT_PAYAMT,0)) AS TOT_PAYAMT          			/* 합계 납부금액 */
	        ,SUM(NVL(TOT_RCIV_AMOUNT,0)) AS TOT_RCIV_AMOUNT			/* 합계 수납금액 */
	        
	        ,SUM(NVL(TOT_PAYAMT,0)) - SUM(NVL(TOT_RCIV_AMOUNT,0)) AS CHAI_AMOUNT   /* 차이액 */
	    FROM(
		    SELECT 
		         CNTRCTR_NO
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', PAYAMT)) AS GYEYAK_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '0', RCIV_AMOUNT)) AS GYEYAK_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', PAYAMT)) AS JUNGDO1_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '1', RCIV_AMOUNT)) AS JUNGDO1_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', PAYAMT)) AS JUNGDO2_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '2', RCIV_AMOUNT)) AS JUNGDO2_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', PAYAMT)) AS JUNGDO3_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '3', RCIV_AMOUNT)) AS JUNGDO3_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', PAYAMT)) AS JUNGDO4_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '4', RCIV_AMOUNT)) AS JUNGDO4_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', PAYAMT)) AS JUNGDO5_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '5', RCIV_AMOUNT)) AS JUNGDO5_RCIV_AMOUNT
		        
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', PAYAMT)) AS JAN_PAYAMT
		        ,SUM(DECODE(SUBSTR(PAY_CODE,2,1), '9', RCIV_AMOUNT)) AS JAN_RCIV_AMOUNT
	
                ,SUM(DECODE(SIGN(TMPR_RCIV_AMOUNT-0), 1,TMPR_RCIV_AMOUNT)) AS TOT_PA
		        ,SUM(DECODE(SIGN(TMPR_RCIV_AMOUNT-0),-1,TMPR_RCIV_AMOUNT)) AS TOT_PP
		        
		        ,SUM(PAYAMT) AS TOT_PAYAMT
		        ,SUM(RCIV_AMOUNT) AS TOT_RCIV_AMOUNT
		    FROM 
		    	TBSLS_HOUSE_LTTOT_PAY		/* 주택분양납부 */
		    WHERE CNTRCTR_NO = #CNTRCTR_NO#
		    AND   PAY_NO = PAY_NO
		    AND   (SELECT CHRCTR_PREPAR_VALUE_1
					FROM TBCOM_CMMN_CODE
					WHERE GRP_CODE = 'HOU0A1' AND CODE = PAY_CODE) IN ('R', 'S')
		    GROUP BY CNTRCTR_NO, PAY_NO
		    ORDER BY CNTRCTR_NO, PAY_NO
	    )
	    GROUP BY CNTRCTR_NO
    </select>
</sqlMap>