<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="EIS020100_SQL">	
	<typeAlias alias="egovMap"          type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	<!-- 경영분석지표 조회 -->
	<select id="EIS020100DAO.selectMngmtixList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/* EIS020100DAO.selectMngmtixList[경영분석지표 조회] */
		<![CDATA[
		SELECT RNUM,
			   #STDR_YEAR# AS STDR_YEAR,
			   GUBUN,
			   MNGMT_IX,
			   MNGMT_IX_NM,
			   CN,
			   UNIT,
			   UNIT_FORMAT,
			   NAME_T,
			   YEAR_RATE1,
			   YEAR_RATE2,
			   YEAR_RATE1 - YEAR_RATE2 AS YEAR_RATE3,
			   (SELECT AVRG_RATE
				  FROM TBEIS_MNGMT_IX I
				 WHERE I.STDR_YEAR = #STDR_YEAR#
				   AND I.MNGMT_IX = A.MNGMT_IX
			   ) AS AVRG_RATE
		  FROM (SELECT B.*,
					   CASE /* 유 동 비 율 - 금년 */
							WHEN RNUM = 1 AND C_CNT_15 <> 0
							THEN ROUND((C_CNT_1 / C_CNT_15) * 100, 1)
							/* 당 좌 비 율 - 금년 */
							WHEN RNUM = 2 AND C_CNT_15 <> 0
							THEN ROUND(((C_CNT_5 + C_CNT_6 + C_CNT_7) / C_CNT_15) * 100, 1)
							/* 자기자본구성비율 - 금년 */
							WHEN RNUM = 3 AND (C_CNT_14 + C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND(((C_CNT_17 + C_CNT_25) / (C_CNT_14 + C_CNT_17 + C_CNT_25)) * 100, 1)
							/* 부 채 비 율 - 금년 */
							WHEN RNUM = 4 AND (C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_14 / (C_CNT_17 + C_CNT_25)) * 100, 1)
							/* 고정장기적합율 - 금년 */
							WHEN RNUM = 5 AND (C_CNT_16 + C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_14 / (C_CNT_16 + C_CNT_17 + C_CNT_25)) * 100, 1)
							/* 매출액순이익율 - 금년 */
							WHEN RNUM = 6 AND C_CNT_18 <> 0
							THEN ROUND((C_CNT_25 / C_CNT_18) * 100, 1)
							/* 자기자본순이익율 - 금년 */
							WHEN RNUM = 7 AND (C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_25 / (C_CNT_17 + C_CNT_25)) * 100, 1)
							/* 자기자본경상이익율 - 금년 */
							WHEN RNUM = 8 AND (C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_24 / (C_CNT_17 + C_CNT_25)) * 100, 1)
							/* 총자본경상이익율 - 금년 */
							WHEN RNUM = 9 AND (C_CNT_14 + C_CNT_17) <> 0
							THEN ROUND((C_CNT_24 / (C_CNT_14 + C_CNT_17)) * 100, 1)
							/* 총자본회전율 - 금년 */
							WHEN RNUM = 10 AND (C_CNT_14 + C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_18 / (C_CNT_14 + C_CNT_17 + C_CNT_25)), 1)
							/* 자기자본회전율 - 금년 */
							WHEN RNUM = 11 AND (C_CNT_17 + C_CNT_25) <> 0
							THEN ROUND((C_CNT_18 / (C_CNT_17 + C_CNT_25)), 2)
							/* 매출채권회전율 - 금년 */
							WHEN RNUM = 12 AND C_CNT_6 <> 0
							THEN ROUND((C_CNT_18 / C_CNT_6), 2)
							/* 재고자산회전율 - 금년 */
							WHEN RNUM = 13 AND (C_CNT_8 + C_CNT_9 + C_CNT_10 + C_CNT_11) <> 0
							THEN ROUND((C_CNT_18 / (C_CNT_8 + C_CNT_9 + C_CNT_10 + C_CNT_11)), 2)
							/* 유형자산회전율 - 금년 */
							WHEN RNUM = 14 AND C_CNT_4 <> 0
							THEN ROUND(C_CNT_18 / C_CNT_4, 2)
							/* 감가상각율 - 금년 */
							WHEN RNUM = 15 AND (C_CNT_4 + C_CNT_14 - C_CNT_3 - C_CNT_12 + C_CNT_26) <> 0
							THEN ROUND((C_CNT_26 / (C_CNT_4 + C_CNT_14 - C_CNT_3 - C_CNT_12 + C_CNT_26)) * 100, 2)
							/* 총수지비율 - 금년 */
							WHEN RNUM = 16 AND (C_CNT_21 + C_CNT_22 + C_CNT_23) <> 0
							THEN ROUND(((C_CNT_18 + C_CNT_19 + C_CNT_20) / (C_CNT_21 + C_CNT_22 + C_CNT_23)) * 100, 1)
							/* 경사수지비율 - 금년 */
							WHEN RNUM = 17 AND (C_CNT_21 + C_CNT_22) <> 0
							THEN ROUND(((C_CNT_18 + C_CNT_19) / (C_CNT_21 + C_CNT_22)) * 100, 1)
							/* 영업수지비율 - 금년 */
							WHEN RNUM = 18 AND C_CNT_21 <> 0
							THEN ROUND((C_CNT_18 / C_CNT_21) * 100, 1)
							/* 기채원금상환대 영업수익비율 - 금년 */
							WHEN RNUM = 19 AND C_CNT_18 <> 0
							THEN ROUND((0 / C_CNT_18) * 100, 2)
							/* 이자비용대 영업수익비율 - 금년 */
							WHEN RNUM = 20 AND C_CNT_18 <> 0
							THEN ROUND((C_CNT_27 / C_CNT_18) * 100, 2)
							/* 인건비대 영업수익비율 - 금년 */
							WHEN RNUM = 21 AND C_CNT_18 <> 0
							THEN ROUND((C_CNT_29 / C_CNT_18) * 100, 2)
							/* 직원1인당 영업수익 - 금년 */
							WHEN RNUM = 22 AND C_CNT_28 <> 0
							THEN ROUND((C_CNT_18 / C_CNT_28) / 1000000)
							/* 직원1인당 영업이익 - 금년 */
							WHEN RNUM = 23 AND C_CNT_28 <> 0
							THEN ROUND(( (C_CNT_18 - C_CNT_21) / C_CNT_28) / 1000000)
							/* 직원1인당 인 건 비 - 금년 */
							WHEN RNUM = 24 AND C_CNT_28 <> 0
							THEN ROUND((C_CNT_29 / C_CNT_28) / 1000000)
							ELSE 0
						END AS YEAR_RATE1,
					   CASE /* 유 동 비 율 - 전년 */
							WHEN RNUM = 1 AND B_CNT_15 <> 0
							THEN ROUND((B_CNT_1 / B_CNT_15) * 100, 1)
							/* 당 좌 비 율 - 전년 */
							WHEN RNUM = 2 AND B_CNT_15 <> 0
							THEN ROUND(((B_CNT_5 + B_CNT_6 + B_CNT_7) / B_CNT_15) * 100, 1)
							/* 자기자본구성비율 - 전년 */
							WHEN RNUM = 3 AND (B_CNT_14 + B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND(((B_CNT_17 + B_CNT_25) / (B_CNT_14 + B_CNT_17 + B_CNT_25)) * 100, 1)
							/* 부 채 비 율 - 전년 */
							WHEN RNUM = 4 AND (B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_14 / (B_CNT_17 + B_CNT_25)) * 100, 1)
							/* 고정장기적합율 - 전년 */
							WHEN RNUM = 5 AND (B_CNT_16 + B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_14 / (B_CNT_16 + B_CNT_17 + B_CNT_25)) * 100, 1)
							/* 매출액순이익율 - 전년 */
							WHEN RNUM = 6 AND B_CNT_18 <> 0
							THEN ROUND((B_CNT_25 / B_CNT_18) * 100, 1)
							/* 자기자본순이익율 - 전년 */
							WHEN RNUM = 7 AND (B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_25 / (B_CNT_17 + B_CNT_25)) * 100, 1)
							/* 자기자본경상이익율 - 전년 */
							WHEN RNUM = 8 AND (B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_24 / (B_CNT_17 + B_CNT_25)) * 100, 1)
							/* 총자본경상이익율 - 전년 */
							WHEN RNUM = 9 AND (B_CNT_14 + B_CNT_17) <> 0
							THEN ROUND((B_CNT_24 / (B_CNT_14 + B_CNT_17)) * 100, 1)
							/* 총자본회전율 - 전년 */
							WHEN RNUM = 10 AND (B_CNT_14 + B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_18 / (B_CNT_14 + B_CNT_17 + B_CNT_25)), 1)
							/* 자기자본회전율 - 전년 */
							WHEN RNUM = 11 AND (B_CNT_17 + B_CNT_25) <> 0
							THEN ROUND((B_CNT_18 / (B_CNT_17 + B_CNT_25)), 2)
							/* 매출채권회전율 - 전년 */
							WHEN RNUM = 12 AND B_CNT_6 <> 0
							THEN ROUND((B_CNT_18 / B_CNT_6), 2)
							/* 재고자산회전율 - 전년 */
							WHEN RNUM = 13 AND (B_CNT_8 + B_CNT_9 + B_CNT_10 + B_CNT_11) <> 0
							THEN ROUND((B_CNT_18 / (B_CNT_8 + B_CNT_9 + B_CNT_10 + B_CNT_11)), 2)
							/* 유형자산회전율 - 전년 */
							WHEN RNUM = 14 AND (B_CNT_4) <> 0
							THEN ROUND((B_CNT_18 / (B_CNT_4)), 2)
							/* 감가상각율 - 전년 */
							WHEN RNUM = 15 AND (B_CNT_4 + B_CNT_14 - B_CNT_3 - B_CNT_12 + B_CNT_26) <> 0
							THEN ROUND((B_CNT_26 / (B_CNT_4 + B_CNT_14 - B_CNT_3 - B_CNT_12 + B_CNT_26)) * 100, 2)
							/* 총수지비율 - 전년 */
							WHEN RNUM = 16 AND (B_CNT_21 + B_CNT_22 + B_CNT_23) <> 0
							THEN ROUND(((B_CNT_18 + B_CNT_19 + B_CNT_20) / (B_CNT_21 + B_CNT_22 + B_CNT_23)) * 100, 1)
							/* 경사수지비율 - 전년 */
							WHEN RNUM = 17 AND (B_CNT_21 + B_CNT_22) <> 0
							THEN ROUND(((B_CNT_18 + B_CNT_19) / (B_CNT_21 + B_CNT_22)) * 100, 1)
							/* 영업수지비율 - 전년 */
							WHEN RNUM = 18 AND B_CNT_21 <> 0
							THEN ROUND((B_CNT_18 / B_CNT_21) * 100, 1)
							/* 기채원금상환대 영업수익비율 - 전년 */
							WHEN RNUM = 19 AND B_CNT_18 <> 0
							THEN ROUND((0 / B_CNT_18) * 100, 2)
							/* 이자비용대 영업수익비율 - 전년 */
							WHEN RNUM = 20 AND B_CNT_18 <> 0
							THEN ROUND((B_CNT_27 / B_CNT_18) * 100, 2)
							/* 인건비대 영업수익비율 - 전년 */
							WHEN RNUM = 21 AND B_CNT_18 <> 0
							THEN ROUND((B_CNT_29 / B_CNT_18) * 100, 2)
							/* 직원1인당 영업수익 - 전년 */
							WHEN RNUM = 22 AND B_CNT_28 <> 0
							THEN ROUND((B_CNT_18 / B_CNT_28) / 1000000)
							/* 직원1인당 영업이익 - 전년 */
							WHEN RNUM = 23 AND B_CNT_28 <> 0
							THEN ROUND(( (B_CNT_18 - B_CNT_21) / B_CNT_28) / 1000000)
							/* 직원1인당 인 건 비 - 전년 */
							WHEN RNUM = 24 AND B_CNT_28 <> 0
							THEN ROUND((B_CNT_29 / B_CNT_28) / 1000000)
							ELSE 0
						END AS YEAR_RATE2
				  FROM (
						SELECT '1100000' AS CODE_1,  MAX(DECODE(CODE, '1100000', C_CNT)) AS C_CNT_1,  MAX(DECODE(CODE, '1100000', B_CNT)) AS B_CNT_1,			/* 유동자산 */
							   '1101000' AS CODE_2,  MAX(DECODE(CODE, '1101000', C_CNT)) AS C_CNT_2,  MAX(DECODE(CODE, '1101000', B_CNT)) AS B_CNT_2,			/* 예금 */
							   '1102000' AS CODE_3,  MAX(DECODE(CODE, '1102000', C_CNT)) AS C_CNT_3,  MAX(DECODE(CODE, '1102000', B_CNT)) AS B_CNT_3,			/* 미수금 */
							   '1104000' AS CODE_4,  MAX(DECODE(CODE, '1104000', C_CNT)) AS C_CNT_4,  MAX(DECODE(CODE, '1104000', B_CNT)) AS B_CNT_4,			/* 미수수익 */
							   '1105000' AS CODE_5,  MAX(DECODE(CODE, '1105000', C_CNT)) AS C_CNT_5,  MAX(DECODE(CODE, '1105000', B_CNT)) AS B_CNT_5,			/* 완성주택 */
							   '1106000' AS CODE_6,  MAX(DECODE(CODE, '1106000', C_CNT)) AS C_CNT_6,  MAX(DECODE(CODE, '1106000', B_CNT)) AS B_CNT_6,			/* 미성주택 */
							   '1107000' AS CODE_7,  MAX(DECODE(CODE, '1107000', C_CNT)) AS C_CNT_7,  MAX(DECODE(CODE, '1107000', B_CNT)) AS B_CNT_7,			/* 완성토지 */
							   '1108000' AS CODE_8,  MAX(DECODE(CODE, '1108000', C_CNT)) AS C_CNT_8,  MAX(DECODE(CODE, '1108000', B_CNT)) AS B_CNT_8,			/* 미성토지 */
							   '1300000' AS CODE_9,  MAX(DECODE(CODE, '1300000', C_CNT)) AS C_CNT_9,  MAX(DECODE(CODE, '1300000', B_CNT)) AS B_CNT_9,			/* 비유동자산 */
							   '1302000' AS CODE_10, MAX(DECODE(CODE, '1302000', C_CNT)) AS C_CNT_10, MAX(DECODE(CODE, '1302000', B_CNT)) AS B_CNT_10,			/* 유형자산 */
							   '1302010' AS CODE_11, MAX(DECODE(CODE, '1302010', C_CNT)) AS C_CNT_11, MAX(DECODE(CODE, '1302010', B_CNT)) AS B_CNT_11,			/* 토지 */
							   '1302090' AS CODE_12, MAX(DECODE(CODE, '1302090', C_CNT)) AS C_CNT_12, MAX(DECODE(CODE, '1302090', B_CNT)) AS B_CNT_12,			/* 건설중인자산 */
							   '1303000' AS CODE_13, MAX(DECODE(CODE, '1303000', C_CNT)) AS C_CNT_13, MAX(DECODE(CODE, '1303000', B_CNT)) AS B_CNT_13,			/* 무형자산 */
							   '2000000' AS CODE_14, MAX(DECODE(CODE, '2000000', C_CNT)) AS C_CNT_14, MAX(DECODE(CODE, '2000000', B_CNT)) AS B_CNT_14,			/* 부채 */
							   '2100000' AS CODE_15, MAX(DECODE(CODE, '2100000', C_CNT)) AS C_CNT_15, MAX(DECODE(CODE, '2100000', B_CNT)) AS B_CNT_15,			/* 유동부채 */
							   '2200000' AS CODE_16, MAX(DECODE(CODE, '2200000', C_CNT)) AS C_CNT_16, MAX(DECODE(CODE, '2200000', B_CNT)) AS B_CNT_16,			/* 비유동부채 */
							   '3000000' AS CODE_17, MAX(DECODE(CODE, '3000000', C_CNT)) AS C_CNT_17, MAX(DECODE(CODE, '3000000', B_CNT)) AS B_CNT_17,			/* 자본 */
							   '5100000' AS CODE_18, MAX(DECODE(CODE, '5100000', C_CNT)) AS C_CNT_18, MAX(DECODE(CODE, '5100000', B_CNT)) AS B_CNT_18,			/* 매출액 */
							   '5200000' AS CODE_19, MAX(DECODE(CODE, '5200000', C_CNT)) AS C_CNT_19, MAX(DECODE(CODE, '5200000', B_CNT)) AS B_CNT_19,			/* 영업외수익 */
							   '5300000' AS CODE_20, MAX(DECODE(CODE, '5300000', C_CNT)) AS C_CNT_20, MAX(DECODE(CODE, '5300000', B_CNT)) AS B_CNT_20,			/* 특별이익 */
							   '6100000' AS CODE_21, MAX(DECODE(CODE, '6100000', C_CNT)) AS C_CNT_21, MAX(DECODE(CODE, '6100000', B_CNT)) AS B_CNT_21,			/* 매출원가 */
							   '6106000' AS CODE_22, MAX(DECODE(CODE, '6106000', C_CNT)) AS C_CNT_22, MAX(DECODE(CODE, '6106000', B_CNT)) AS B_CNT_22,			/* 감가상각비 */
							   '6200000' AS CODE_23, MAX(DECODE(CODE, '6200000', C_CNT)) AS C_CNT_23, MAX(DECODE(CODE, '6200000', B_CNT)) AS B_CNT_23,			/* 영업외비용 */
							   '6201000' AS CODE_24, MAX(DECODE(CODE, '6201000', C_CNT)) AS C_CNT_24, MAX(DECODE(CODE, '6201000', B_CNT)) AS B_CNT_24,			/* 이자비용 */
							   '6300000' AS CODE_25, MAX(DECODE(CODE, '6300000', C_CNT)) AS C_CNT_25, MAX(DECODE(CODE, '6300000', B_CNT)) AS B_CNT_25,			/* 특별손실 */
							   '6500000' AS CODE_26, MAX(DECODE(CODE, '6500000', C_CNT)) AS C_CNT_26, MAX(DECODE(CODE, '6500000', B_CNT)) AS B_CNT_26,			/* 경상이익 */
							   '6800000' AS CODE_27, MAX(DECODE(CODE, '6800000', C_CNT)) AS C_CNT_27, MAX(DECODE(CODE, '6800000', B_CNT)) AS B_CNT_27,			/* 당기순이익(손실) */
							   '900002'  AS CODE_28, MAX(DECODE(CODE, '900002',  C_CNT)) AS C_CNT_28, MAX(DECODE(CODE, '900002',  B_CNT)) AS B_CNT_28,			/* 총직원수 */
							   '900001'  AS CODE_29, MAX(DECODE(CODE, '900001',  C_CNT)) AS C_CNT_29, MAX(DECODE(CODE, '900001',  B_CNT)) AS B_CNT_29			/* 인건비 */
						  FROM (
								SELECT ACCNUT_ACNT_CODE AS CODE,
									   C_CNT,
									   B_CNT
								 FROM (
									   SELECT ACCNUT_ACNT_CODE,
											  DECODE(THSTRM_SM, 0, THSTRM_AMOUNT, THSTRM_SM) AS C_CNT,
											  DECODE(FRMTRM_SM, 0, FRMTRM_AMOUNT, FRMTRM_SM) AS B_CNT
										 FROM TBACC_PRFLOS_BILL
										WHERE ACCNUT_YEAR = #STDR_YEAR#
										  AND ACCNUT_MT = '12'
									   UNION ALL
									  SELECT ACCNUT_ACNT_CODE,
											 DECODE(THSTRM_SM, 0, THSTRM_AMOUNT, THSTRM_SM) AS C_CNT,
											 DECODE(FRMTRM_SM, 0, FRMTRM_AMOUNT, FRMTRM_SM) AS B_CNT
										FROM TBACC_FNNR_STS_TAB
									   WHERE ACCNUT_YEAR = #STDR_YEAR#
										 AND ACCNUT_MT = '12'
									   )
								 WHERE ACCNUT_ACNT_CODE IN (
												   '1100000',		/* 유동자산 */
												   '1101000',		/* 예금 */
												   '1102000',		/* 미수금 */
												   '1104000',		/* 미수수익 */
												   '1105000',		/* 완성주택 */
												   '1106000',		/* 미성주택 */
												   '1107000',		/* 완성토지 */
												   '1108000',		/* 미성토지 */
												   '1300000',		/* 비유동자산 */
												   '1302000',		/* 유형자산 */
												   '1302010',		/* 토지 */
												   '1302090',		/* 건설중인자산 */
												   '1303000',		/* 무형자산 */
												   '2000000',		/* 부채 */
												   '2100000',		/* 유동부채 */
												   '2200000',		/* 비유동부채 */
												   '3000000',		/* 자본 */
												   '5100000',		/* 매출액 */
												   '5200000',		/* 영업외수익 */
												   '5300000',		/* 특별이익 */
												   '6100000',		/* 매출원가 */
												   '6106000',		/* 감가상각비 */
												   '6200000',		/* 영업외비용 */
												   '6201000',		/* 이자비용 */
												   '6300000',		/* 특별손실 */
												   '6500000',		/* 경상이익 */
												   '6800000'		/* 당기순이익(손실) */
									   )
								 UNION ALL
								SELECT CODE, C_CNT, B_CNT
								  FROM (
										SELECT '900002' AS CODE,	/* 총직원수 */
											   (SELECT COUNT(1)
												  FROM TBHRM_HR_MASTR
												 WHERE SUBSTR(ECNY_DE, 1, 4) <= #STDR_YEAR#
												   AND NVL(SUBSTR(RETIRE_DE, 1, 4), '9999') > #STDR_YEAR#
											   ) AS C_CNT,
											   (SELECT COUNT(1)
												  FROM TBHRM_HR_MASTR
												 WHERE SUBSTR(ECNY_DE, 1, 4) <= #STDR_YEAR# - 1
												   AND NVL(SUBSTR(RETIRE_DE, 1, 4), '9999') > #STDR_YEAR# - 1
											   ) AS B_CNT
										  FROM DUAL
										 UNION ALL
										SELECT '900001' AS CODE,	/* 인건비 */
											   SUM(decode(substr(PYMNT_YM, 1, 4), #STDR_YEAR#, TOT_PYMNTAMT)) AS C_PAY_TOT,
											   SUM(decode(substr(PYMNT_YM, 1, 4), #STDR_YEAR# - 1, TOT_PYMNTAMT)) AS B_PAY_TOT
										  FROM TBSAL_MT_SALARY_PYMNT
										 WHERE substr(PYMNT_YM, 1, 4) between TO_CHAR(#STDR_YEAR# - 1) and #STDR_YEAR#
									   )
							   )
					   ) A,
					   (
						SELECT CODE AS MNGMT_IX,
							   CODE_ORDR AS RNUM,
							   CHRCTR_PREPAR_VALUE_0 AS GUBUN,
							   CODE_NM AS MNGMT_IX_NM,
							   CODE_CN AS CN,
							   CHRCTR_PREPAR_VALUE_1 AS UNIT,
							   CHRCTR_PREPAR_VALUE_2 AS NAME_T,
							   DECODE(CHRCTR_PREPAR_VALUE_1, '%', '999,999.0'
														   , '회', '9,999.00'
														   ,'백만원', '999,999') AS UNIT_FORMAT
						  FROM TBCOM_CMMN_CODE
						 WHERE GRP_CODE = 'EIS003'
						   AND USE_AT = '1'
					   ) B
			   ) A
		 ORDER BY RNUM
		]]>
	</select>


	<!-- 경영지표정보 수정 -->
	<update id="EIS020100DAO.MngmtixU" parameterClass="java.util.HashMap">
		/* EIS020100DAO.MngmtixU[경영지표정보 수정] */
		MERGE INTO TBEIS_MNGMT_IX I
			 USING (
					SELECT #STDR_YEAR# AS STDR_YEAR,
						   #MNGMT_IX# AS MNGMT_IX
					  FROM DUAL
				   ) C
				ON (	I.STDR_YEAR = C.STDR_YEAR
					AND I.MNGMT_IX  = C.MNGMT_IX
				   )
			  WHEN MATCHED THEN
					UPDATE
					   SET AVRG_RATE = #AVRG_RATE#,
						   UPDUSR_ID = #S_USER_ID#,
						   UPDT_DT	 = SYSDATE
			  WHEN NOT MATCHED THEN
					INSERT(
					   STDR_YEAR,				/* 기준년도 */
					   MNGMT_IX,				/* 경영지표 */
					   AVRG_RATE,				/* 평균비율 */
					   REGISTER_ID,				/* 등록자ID */
					   REGIST_DT,				/* 등록일시 */
					   UPDUSR_ID,				/* 수정자ID */
					   UPDT_DT					/* 수정일시 */
					)
					VALUES(
					   #STDR_YEAR#,				/* 기준년도 */
					   #MNGMT_IX#,				/* 경영지표 */
					   #AVRG_RATE#,				/* 평균비율 */
					   #S_USER_ID#,
					   SYSDATE,
					   #S_USER_ID#,
					   SYSDATE
					)
	</update>
</sqlMap>