@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
	font-family: sans-serif;
	-ms-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
}

body {
	margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
	display: block;
}

audio,
canvas,
progress,
video {
	display: inline-block;
	vertical-align: baseline;
}

audio:not([controls]) {
	display: none;
	height: 0;
}

[hidden],
template {
	display: none;
}

a {
	background-color: transparent;
}

a:active,
a:hover {
	outline: 0;
}

abbr[title] {
	border-bottom: 1px dotted;
}

b,
strong {
	font-weight: bold;
}

dfn {
	font-style: italic;
}

h1 {
	font-size: 2em;
	margin: 0.67em 0;
}

mark {
	background: #ff0;
	color: #000;
}

small {
	font-size: 80%;
}

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sup {
	top: -0.5em;
}

sub {
	bottom: -0.25em;
}

img {
	border: 0;
}

svg:not(:root) {
	overflow: hidden;
}

figure {
	margin: 1em 40px;
}

hr {
	-webkit-box-sizing: content-box;
	   -moz-box-sizing: content-box;
	        box-sizing: content-box;
	height: 0;
}

pre {
	overflow: auto;
}

code,
kbd,
pre,
samp {
	font-family: monospace, monospace;
	font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
	color: inherit;
	font: inherit;
	margin: 0;
}

button {
	overflow: visible;
}

button,
select {
	text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
	-webkit-appearance: button;
	cursor: pointer;
}

button[disabled],
html input[disabled] {
	cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
	border: 0;
	padding: 0;
}

input {
	line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
	height: auto;
}

input[type="search"] {
	-webkit-appearance: textfield;
	-webkit-box-sizing: content-box;
	   -moz-box-sizing: content-box;
	        box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
	-webkit-appearance: none;
}

fieldset {
	border: 1px solid #c0c0c0;
	margin: 0 2px;
	padding: 0.35em 0.625em 0.75em;
}

legend {
	border: 0;
	padding: 0;
}

textarea {
	overflow: auto;
}

optgroup {
	font-weight: bold;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

td,
th {
	padding: 0;
}

/*
---------------------------------------------------------------
*
* base
*
---------------------------------------------------------------
*/
/* CSS Document */
/* css reset */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p,
blockquote, pre, a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub,
sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section,
summary, time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
	display: block;
}

ol, ul, li {
	list-style: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
	table-layout: fixed;
}

body, div, h1, h2, h3, h4, h5, h6, ul, ol, li, dl, dt, dd, p,
form, fieldset, input, table, tr, th, td {
	margin: 0;
	padding: 0;
}

h1, h2, h3, h4, h5, h6 {
	font-size: 100%;
	font-weight: normal;
}

fieldset, img {
	border: 0;
	vertical-align: top;
}

address {
	font-style: normal;
}

/* a-style */
a {
	text-decoration: none;
	color: #333;
}

a:hover, a:active, a:focus {
	text-decoration: none;
}

legend {
	display: none;
}

button {
	padding: 0;
}

/*
---------------------------------------------------------------
*
* common
*
---------------------------------------------------------------
*/
@font-face {
	font-family: 'NotoSansCJKkr-r';
	font-style: 200;
	src: url("../fonts/NotoSansCJKkr-Regular.eot");
	src: url("../fonts/NotoSansCJKkr-Regular.eot") format("embedded-opentype"), url("../fonts/NotoSansCJKkr-Regular.woff") format("woff"), url("../fonts/NotoSansCJKkr-Regular.otf") format("truetype");
}

@font-face {
	font-family: 'NotoSansCJKkr-m';
	font-style: 200;
	src: url("../fonts/NotoSansCJKkr-Medium.eot");
	src: url("../fonts/NotoSansCJKkr-Medium.eot") format("embedded-opentype"), url("../fonts/NotoSansCJKkr-Medium.woff") format("woff"), url("../fonts/NotoSansCJKkr-Medium.otf") format("truetype");
}

@font-face {
	font-family: 'NotoSansCJKkr-dl';
	font-style: 200;
	src: url("../fonts/NotoSansCJKkr-DemiLight.eot");
	src: url("../fonts/NotoSansCJKkr-DemiLight.eot") format("embedded-opentype"), url("../fonts/NotoSansCJKkr-DemiLight.woff") format("woff"), url("../fonts/NotoSansCJKkr-DemiLight.otf") format("truetype");
}

@font-face {
	font-family: 'NotoSansCJKkr-b';
	font-style: 200;
	src: url("../fonts/NotoSansCJKkr-Bold.eot");
	src: url("../fonts/NotoSansCJKkr-Bold.eot") format("embedded-opentype"), url("../fonts/NotoSansCJKkr-Bold.woff") format("woff"), url("../fonts/NotoSansCJKkr-Bold.otf") format("truetype");
}

@font-face {
	font-family: 'NotoSansCJKkr-l';
	font-style: 200;
	src: url("../fonts/NotoSansCJKkr-Light.eot");
	src: url("../fonts/NotoSansCJKkr-Light.eot") format("embedded-opentype"), url("../fonts/NotoSansCJKkr-Light.woff") format("woff"), url("../fonts/NotoSansCJKkr-Light.otf") format("truetype");
}

@font-face {
	font-family: 'Poppins-SemiBold';
	font-style: 200;
	src: url("../fonts/Poppins-SemiBold.eot");
	src: url("../fonts/Poppins-SemiBold.eot") format("embedded-opentype"), url("../fonts/Poppins-SemiBold.woff") format("woff"), url("../fonts/Poppins-SemiBold.otf") format("truetype");
}

body {
	margin: 0;
	padding: 0;
	list-style: none;
	font-family: 'NotoSansCJKkr-dl, Sans serif';
	font-size: 1rem;
}

/*a { text-decoration: none; color: #333;}*/
a {
	text-decoration: none;
	color: #333;
}

a:hover {
	text-decoration: underline;
}

img {
	vertical-align: top;
}

body {
	font-family: 'NotoSansCJKkr-dl';
	overflow-x: hidden;
}

.guide {
	width: 1240px;
	margin: 0 auto;
	position: relative;
}

@media (max-width: 1330px) {
	.guide {
		width: 95%;
	}
}

.block {
	display: block;
}

.blind {
	font-size: 0;
	position: absolute;
	top: -999999px;
}

.mid_helper {
	display: inline-block;
	height: 100%;
	vertical-align: middle;
}

.text_cut {
	display: inline-block;
	width: 100%;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

button {
	border: none;
	background-color: transparent;
}

::-webkit-input-placeholder {
	color: #a3a3a3;
	font-size: 13px;
}

::-moz-placeholder {
	color: #a3a3a3;
	font-size: 13px;
}

:-ms-input-placeholder {
	color: #a3a3a3;
	font-size: 13px;
}

:-moz-placeholder {
	color: #a3a3a3;
	font-size: 13px;
}

/* mobile font resizing */
@media (max-width: 380px) {
	html {
		font-size: 9px;
	}
}

@media (min-width: 381px) and (max-width: 580px) {
	html {
		font-size: 10px;
	}
}

@media (min-width: 581px) and (max-width: 767px) {
	html {
		font-size: 11.5px;
	}
}

@media (min-width: 581px) and (max-width: 767px) {
	html {
		font-size: 11px;
	}
}

@media (min-width: 768px) and (max-width: 991px) {
	html {
		font-size: 11.5px;
	}
}

@media (min-width: 992px) {
	html {
		font-size: 12px;
	}
}

body {
	font-size: 1.167rem;
}

/* mobile font resizing */
@media (max-width: 380px) {
	input::-webkit-input-placeholder {
		font-size: 9px;
	}
	input::-moz-placeholder {
		font-size: 9px;
	}
	input:-ms-input-placeholder {
		font-size: 9px;
	}
	input::placeholder {
		font-size: 9px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 9px;
	}
	textarea::-moz-placeholder {
		font-size: 9px;
	}
	textarea:-ms-input-placeholder {
		font-size: 9px;
	}
	textarea::placeholder {
		font-size: 9px;
	}
}

@media (min-width: 381px) and (max-width: 580px) {
	input::-webkit-input-placeholder {
		font-size: 10px;
	}
	input::-moz-placeholder {
		font-size: 10px;
	}
	input:-ms-input-placeholder {
		font-size: 10px;
	}
	input::placeholder {
		font-size: 10px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 10px;
	}
	textarea::-moz-placeholder {
		font-size: 10px;
	}
	textarea:-ms-input-placeholder {
		font-size: 10px;
	}
	textarea::placeholder {
		font-size: 10px;
	}
}

@media (min-width: 581px) and (max-width: 767px) {
	input::-webkit-input-placeholder {
		font-size: 11.5px;
	}
	input::-moz-placeholder {
		font-size: 11.5px;
	}
	input:-ms-input-placeholder {
		font-size: 11.5px;
	}
	input::placeholder {
		font-size: 11.5px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 11.5px;
	}
	textarea::-moz-placeholder {
		font-size: 11.5px;
	}
	textarea:-ms-input-placeholder {
		font-size: 11.5px;
	}
	textarea::placeholder {
		font-size: 11.5px;
	}
}

@media (min-width: 581px) and (max-width: 767px) {
	input::-webkit-input-placeholder {
		font-size: 11px;
	}
	input::-moz-placeholder {
		font-size: 11px;
	}
	input:-ms-input-placeholder {
		font-size: 11px;
	}
	input::placeholder {
		font-size: 11px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 11px;
	}
	textarea::-moz-placeholder {
		font-size: 11px;
	}
	textarea:-ms-input-placeholder {
		font-size: 11px;
	}
	textarea::placeholder {
		font-size: 11px;
	}
}

@media (min-width: 768px) and (max-width: 991px) {
	input::-webkit-input-placeholder {
		font-size: 11.5px;
	}
	input::-moz-placeholder {
		font-size: 11.5px;
	}
	input:-ms-input-placeholder {
		font-size: 11.5px;
	}
	input::placeholder {
		font-size: 11.5px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 11.5px;
	}
	textarea::-moz-placeholder {
		font-size: 11.5px;
	}
	textarea:-ms-input-placeholder {
		font-size: 11.5px;
	}
	textarea::placeholder {
		font-size: 11.5px;
	}
}

@media (min-width: 992px) {
	input::-webkit-input-placeholder {
		font-size: 12px;
	}
	input::-moz-placeholder {
		font-size: 12px;
	}
	input:-ms-input-placeholder {
		font-size: 12px;
	}
	input::placeholder {
		font-size: 12px;
	}
	textarea::-webkit-input-placeholder {
		font-size: 12px;
	}
	textarea::-moz-placeholder {
		font-size: 12px;
	}
	textarea:-ms-input-placeholder {
		font-size: 12px;
	}
	textarea::placeholder {
		font-size: 12px;
	}
}

.proposal_wrap {
	max-width: 820px;
	margin: 0 auto;
}

.proposal_wrap section {
	margin-top: 30px;
}

.proposal_wrap table {
	width: 100%;
}

.proposal_wrap table caption {
	position: static;
	overflow: hidden;
	width: 1px;
	height: 1px;
	margin: 0;
	padding: 0;
	font-size: 1px;
	text-indent: -9999px;
}

.proposal_wrap table td, .proposal_wrap table th {
	height: 45px;
	padding: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	line-height: 1.6;
	word-break: keep-all;
}

.proposal_wrap table th {
	background-color: #eef1f2;
}

.proposal_wrap table tbody tr {
	border-bottom: 1px solid #c3c9cd;
}

.proposal_wrap .tbl_st_box {
	border-top: 2px solid #004f9b;
}

.proposal_wrap .tbl_st_box.th_tbl {
	border-top: none;
}

.proposal_wrap .tbl_st_box.th_tbl table {
	border-top: 2px solid #004f9b;
}

.proposal_wrap .tbl_st_box.th_tbl + .th_tbl {
	margin-top: 10px;
}

.proposal_wrap .tbl_st_box.tbl_scroll {
	overflow-x: auto;
}

.proposal_wrap .tbl_st_box.tbl_scroll table {
	min-width: 680px;
}

.proposal_wrap .tbl_st_box.tbl_scroll table th, .proposal_wrap .tbl_st_box.tbl_scroll table td {
	text-align: center;
}

.proposal_wrap .tbl_st_box.tbl_scroll table th {
	position: relative;
}

.proposal_wrap .tbl_st_box.tbl_scroll table th:after {
	content: '';
	width: 1px;
	height: 24%;
	background-color: #c3c9cd;
	position: absolute;
	left: 0;
	top: 38%;
}

.proposal_wrap .tbl_st_box.tbl_scroll table th:first-child:after {
	display: none;
}

.proposal_wrap .txt_cut {
	display: inline-block;
	width: 100%;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	text-align: left;
}

/* 제안서 타이틀 */
.proposal_title {
	background: #00a1d4;
	background: -webkit-linear-gradient(left, #00a1d4 0%, #2989d8 61%, #1e5799 100%, #004f9b 100%);
	background: -webkit-gradient(linear, left top, right top, from(#00a1d4), color-stop(61%, #2989d8), color-stop(100%, #1e5799), to(#004f9b));
	background: -o-linear-gradient(left, #00a1d4 0%, #2989d8 61%, #1e5799 100%, #004f9b 100%);
	background: linear-gradient(to right, #00a1d4 0%, #2989d8 61%, #1e5799 100%, #004f9b 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00a1d4', endColorstr='#004f9b',GradientType=1 );
	display: table;
	width: 100%;
	position: relative;
}

.proposal_title .proposal_tit {
	display: table-cell;
	vertical-align: middle;
	padding: 90px 50px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.proposal_title .proposal_tit h2 {
	font-size: 2.667rem;
	font-family: 'NotoSansCJKkr-m';
	color: #fff;
}

.proposal_title .proposal_tit h2 span {
	background-color: #000;
	display: inline-block;
	padding-right: 5px;
}

.proposal_title .proposal_tit h2 b {
	display: block;
	font-weight: normal;
}

.proposal_title .proposal_tit img {
	position: absolute;
	bottom: -16px;
	right: 0;
}

.proposer_wrap {
	padding: 20px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.proposer_wrap input[type="text"],
.proposer_wrap input[type="tel"],
.proposer_wrap input[type="name"] {
	border: 1px solid #c3c9cd;
	height: 43px;
	border-radius: 3px;
	padding-left: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	width: 100%;
}

.proposer_wrap input[type="text"]:disabled,
.proposer_wrap input[type="tel"]:disabled,
.proposer_wrap input[type="name"]:disabled {
	background-color: #e5e7e8;
	color: #666;
}

.proposer_wrap textarea {
	width: 100%;
	resize: none;
	border: 1px solid #c3c9cd;
	border-radius: 3px;
	padding: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.proposer_wrap .pro_tit, .proposer_wrap .pro_tit_sub {
	margin: 20px 0 10px;
}

.proposer_wrap .pro_tit {
	position: relative;
	padding-left: 10px;
	color: #000;
	font-family: 'NotoSansCJKkr-b';
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	-ms-box-sizing: border-box;
	box-sizing: border-box;
}

.proposer_wrap .pro_tit:after {
	content: '·';
	position: absolute;
	left: 0;
}

.proposer_wrap .pro_tit.bgtit {
	-webkit-background-size: 1.2rem 1.2rem;
	        background-size: 1.2rem;
	background-repeat: no-repeat;
	background-position: right 2px;
	background-image: url("../images/proposal/pro_tit_bg.png");
	display: inline-block;
	padding-right: 18px;
}

.proposer_wrap .pro_tit_sub {
	font-family: 'NotoSansCJKkr-m';
	color: #333;
}

/* 제안자 정보 */
.proposer_box {
	background-color: #eef1f2;
	padding: 5px 30px 60px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	margin-top: 0 !important;
}

.proposer_box .info_box {
	overflow: hidden;
}

.proposer_box .info_box li {
	float: left;
	padding-right: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	width: 23%;
	position: relative;
}

.proposer_box .info_box li:last-child {
	width: 31%;
	padding-right: 0;
}

.proposer_box .info_box li input {
	height: 43px;
	border-radius: 3px;
}

.proposer_box .info_box li.search_name {
	position: relative;
}

.proposer_box .info_box li.search_name input {
	padding-right: 30px;
}

.proposer_box .info_box li.search_name button {
	position: absolute;
	right: 16px;
	top: 11px;
	font-size: 20px;
	font-weight: bold;
}

.proposer_box .info_box + .info_box {
	margin-top: 5px;
}

.button_box {
	position: relative;
	margin-top: -30px;
	text-align: right;
	padding-bottom: 5px;
}

.button_box button {
	border-radius: 3px;
}

.button_box.add_btn button {
	background-color: #004f9b;
	color: #fff;
	width: 16px;
	height: 16px;
	text-align: center;
	display: inline-block;
	position: relative;
	bottom: -3px;
}

.button_box.file_btn {
	margin-bottom: 10px;
}

.button_box.file_btn .file_btn_label {
	border: 1px solid #004f9b;
	padding: 3px 10px;
	background-color: #fff;
	color: #0063c3;
	font-size: 12px;
}

.button_box.file_btn .file_btn_label img {
	vertical-align: middle;
	margin-right: 2px;
	margin-top: -3px;
}
/*
.button_box.file_btn input[type="file"] {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	border: 0;
}
*/

.file_box {
	border: 1px dashed #c4cace;
	background-color: #e5e7e8;
	padding: 20px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.file_box .file_prev {
	padding: 30px 0;
	text-align: center;
	word-break: keep-all;
	color: #666;
}

.file_box p {
	display: block;
}

.file_box p a {
	display: inline-block;
	-webkit-background-size: 1rem 1rem;
	        background-size: 1rem;
	background-repeat: no-repeat;
	background-position: left 2px;
	background-image: url("../images/proposal/ic_file.png");
	padding-left: 16px;
}

.file_box p button {
	vertical-align: top;
	margin: 5px;
}

.file_box input[type="text"].form_file {
	display: inline-block;
	width: auto;
	height: auto;
	-webkit-background-size: 1rem 1rem;
	        background-size: 1rem;
	background-repeat: no-repeat;
	background-position: left 2px;
	background-image: url("../images/proposal/ic_file.png");
	padding-left: 16px;
	border: none;
}

.file_box input[type="text"].form_file + button {
	vertical-align: top;
	margin: 5px;
}

.txt_down_btn {
	background-color: #004f9b;
	width: 100%;
	height: 40px;
	line-height: 40px;
	color: #fff;
}

.txt_down_btn p {
	position: relative;
	width: 95%;
	margin: 0 auto;
	text-align: left;
	-webkit-background-size: auto auto;
	        background-size: auto;
	background-repeat: no-repeat;
	background-position: center left;
	background-image: url("../images/proposal/ic_write.png");
	padding-left: 25px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.txt_down_btn p span {
	position: absolute;
	right: 0;
	top: 40%;
}

.proposal_txt {
	padding: 25px 30px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	border: 1px solid #c3c9cd;
	line-height: 1.8;
	display: none;
}

.proposal_txt p {
	color: #666;
	word-break: keep-all;
}

.proposal_txt p.txt_sub {
	padding-left: 2rem;
	text-indent: -0.7rem;
}

.proposal_txt p b {
	color: #333;
}

/* 제안 상세 */
.pro_detail {
	border: 1px solid #c3c9cd;
	padding: 5px 30px 30px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.check_box {
	overflow: hidden;
}

.check_box li {
	width: 33.3%;
	float: left;
	padding-right: 2%;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	margin-bottom: 10px;
}

.check_box li:nth-child(3n) {
	padding-right: 0;
}

.check_box label {
	width: 100%;
	padding: 15px 5px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	border: 1px solid #c3c9cd;
	display: inline-block;
	text-align: center;
	border-radius: 3px;
	cursor: pointer;
}

.check_box label span {
	display: block;
	height: 20px;
}

.check_box label span i {
	color: #d0d0d0;
}

.check_box input[type="radio"],
.check_box input[type="checkbox"] {
	width: 0;
	height: 0;
	position: absolute;
}

.check_box input[type="radio"]:checked + label,
.check_box input[type="checkbox"]:checked + label {
	background-color: #f7fdff;
	border: 1px solid #00a0d3;
	color: #00a0d3;
	font-family: 'NotoSansCJKkr-b';
}

.check_box input[type="radio"]:checked + label span i,
.check_box input[type="checkbox"]:checked + label span i {
	color: #00a0d3;
}

.btn_wrap {
	text-align: center;
	margin: 20px 0 40px;
}

.btn_wrap button {
	color: #fff;
	font-family: 'NotoSansCJKkr-m';
	background-color: #004f9b;
	min-width: 100px;
	min-height: 40px;
	border-radius: 3px;
	padding: 5px 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

/* 팝업 */
.search_info_wrap {
	position: fixed;
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
	background: rgba(0, 0, 0, 0.5);
	display: none;
}

.search_info_wrap tr {
	cursor: pointer;
}

.search_info_tbl {
	display: table;
	width: 100%;
	height: 100%;
}

.search_info_tbl .search_info_cell {
	display: table-cell;
	vertical-align: middle;
	text-align: center;
}

.search_info_box {
	display: inline-block;
	max-width: 500px;
	width: 90%;
	background: #fff;
}

.search_info_box .search_info_tit {
	padding: 15px 20px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	background-color: #0080be;
	color: #fff;
	position: relative;
}

.search_info_box .search_info_tit p {
	width: 90%;
	text-align: left;
	font-size: 1.333rem;
	line-height: 40px;
}

.search_info_box .search_info_tit button {
	padding: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	position: absolute;
	right: 10px;
	top: 1.5rem;
}

.search_info_box .search_info_tit button i {
	font-size: 18px;
}

.search_info_box .search_info_content {
	padding: 20px 20px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
	border-top: 1px solid #e5e5e5;
}

.search_info_box .search_form {
	position: relative;
}

.search_info_box .search_form select, .search_info_box .search_form input[type='text'] {
	border: 1px solid #c3c9cd;
	height: 43px;
	border-radius: 3px;
}

.search_info_box .search_form select {
	width: 35%;
}

.search_info_box .search_form input[type='text'] {
	width: 63%;
	padding: 0 40px 0 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.search_info_box .search_form .search_btn {
	position: absolute;
	right: 10px;
	top: 10px;
}

.search_info_box .search_form .search_btn i {
	font-size: 24px;
}

.search_info_box .search_info_list {
	padding: 0 20px 20px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.pro_detail_view {
	margin-top: 0px !important;
}

.pro_detail_view .pro_tit {
	color: #004f9b;
	font-size: 1.24rem;
}

.pro_detail_view .file_box {
	border: none;
	background: none;
	padding: 0 0 0 10px;
}

.pro_detail_view .file_box p {
	margin-bottom: 5px;
}

.pro_detail_view .pro_search {
	border: 1px solid #c3c9cd;
	background-color: #eef1f2;
	padding: 5px 20px 10px;
	margin-bottom: 20px;
}

.pro_detail_view .pro_search select, .pro_detail_view .pro_search input[type='text'] {
	width: 45%;
	height: 38px;
	border: 1px solid #c3c9cd;
	border-radius: 3px;
	padding: 0 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.pro_detail_view .pro_search .search_sel {
	overflow: hidden;
}

.pro_detail_view .pro_search .search_sel > div {
	float: left;
	width: 50%;
}

.pro_detail_view .pro_search .search_sel, .pro_detail_view .pro_search .search_txt {
	margin-top: 5px;
}

.pro_detail_view .pro_search .search_date .ui-datepicker-trigger {
	position: relative;
	right: 20px;
	top: 13px;
}

.pro_detail_view .pro_search .search_date > span {
	display: inline-block;
}

.pro_detail_view .pro_search .search_date input {
	-webkit-background-size: auto auto;
	        background-size: auto;
	background-repeat: no-repeat;
	background-position: 95% center;
	background-image: url("../images/proposal/calendar.png");
	width: 46%;
}

.pro_detail_view .pro_search .search_option select {
	width: 48%;
}

.pro_detail_view .pro_search .search_option select:nth-child(2) {
	margin-right: 2%;
}

.pro_detail_view .pro_search .search_txt {
	position: relative;
}

.pro_detail_view .pro_search .search_txt select {
	width: 23%;
}

.pro_detail_view .pro_search .search_txt input[type="text"] {
	width: 76%;
}

.pro_detail_view .pro_search .search_txt .search_btn {
	position: absolute;
	right: 3px;
	top: 10px;
	height: 100%;
	top: 0;
	padding: 10px;
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

.ui-datepicker select.ui-datepicker-month, .ui-datepicker select.ui-datepicker-year {
	vertical-align: top;
}

@media (max-width: 730px) {
	.proposal_title .proposal_tit {
		padding: 50px 40px;
	}
	.proposal_title .proposal_tit h2 {
		font-size: 2.2rem;
	}
	.proposal_title .proposal_tit img {
		width: 40%;
	}
	.proposer_box .info_box li {
		width: 33.3%;
	}
	.proposer_box .info_box li:nth-child(3) {
		padding-right: 0;
	}
	.proposer_box .info_box li:last-child {
		width: 100%;
		margin-top: 5px;
	}
	.check_box label {
		padding: 10px 5px;
	}
	.check_box label span i {
		display: none;
	}
	.proposer_wrap textarea {
		height: 80px;
	}
	.proposer_wrap table th, .proposer_wrap table td {
		height: 40px;
	}
	.search_info_box .search_info_tit {
		padding: 5px 20px;
	}
	.search_info_box .search_info_tit button {
		top: 0.5rem;
	}
	.search_info_box .search_form select, .search_info_box .search_form input[type='text'] {
		height: 35px;
	}
	.search_info_box .search_form .search_btn {
		top: 5px;
	}
	.pro_detail_view .pro_search select, .pro_detail_view .pro_search input[type='text'] {
		padding: 0 5px;
	}
}

@media (max-width: 450px) {
	.pro_detail,
	.proposer_box {
		padding: 5px 15px 30px;
	}
	.proposer_wrap input[type="text"],
	.proposer_wrap input[type="tel"],
	.proposer_wrap input[type="name"] {
		height: 35px;
	}
	.proposer_wrap .pro_tit,
	.proposer_wrap .pro_tit_sub {
		margin: 10px 0 10px;
	}
	.proposer_wrap table th, .proposer_wrap table td {
		padding: 10px 3px;
	}
	.proposer_box .info_box li input {
		height: 35px;
	}
	.btn_wrap button {
		height: 35px;
	}
	.button_box.add_btn button {
		width: 20px;
		height: 20px;
		margin-left: 3px;
	}
	.proposer_box .info_box li {
		width: 100%;
		padding-right: 0;
		margin-top: 5px;
	}
	.check_box li {
		width: 100%;
		padding-right: 0;
	}
	.check_box label {
		padding: 10px 5px;
	}
	.check_box label span {
		height: auto;
	}
	.proposer_box .info_box li.search_name button {
		top: 7px;
		right: 10px;
	}
	.pro_detail_view .pro_search .search_sel > div {
		float: inherit;
		width: 100%;
	}
	.pro_detail_view .pro_search .search_date {
		margin-bottom: 5px;
	}
	.pro_detail_view .pro_search .search_date input {
		width: 47%;
	}
	.pro_detail_view .pro_search .search_txt select {
		width: 35%;
	}
	.pro_detail_view .pro_search .search_txt input[type="text"] {
		width: 63%;
	}
}

@media (max-width: 380px) {
	.proposal_title .proposal_tit {
		padding: 30px 20px;
	}
	.proposal_title .proposal_tit h2 {
		font-size: 2rem;
	}
	.proposer_box .info_box li.search_name button {
		right: 10px;
		top: 7px;
	}
	.proposal_wrap section {
		margin-top: 20px;
	}
	.proposer_wrap textarea {
		height: 65px;
	}
	.check_box label {
		padding: 8px 5px;
	}
	.file_box .file_prev {
		padding: 0;
	}
	.search_info_box .search_info_content {
		padding: 15px 20px;
	}
}

/*****************************/
/*******    Paging    ********/
/*****************************/
@media (min-width: 768px) {
	.paging_wrap .pageview a:hover {
		text-decoration: none;
		color: #004f9b;
	}
	.paging_wrap .pageview a:hover:after {
		width: 100%;
	}
}

.paging_wrap {
	margin: 30px auto 0;
	text-align: center;
}

.paging_wrap .pageview {
	display: inline-block;
}

.paging_wrap .pageview a {
	display: block;
	float: left;
	color: #444;
	text-align: center;
	-webkit-transition: all .3s;
	-o-transition: all .3s;
	transition: all .3s;
	padding: 0 10px;
	line-height: 30px;
	position: relative;
	margin: 0 3px;
}

.paging_wrap .pageview a:after {
	content: '';
	width: 0;
	height: 1px;
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	margin: 0 auto;
	background-color: #004f9b;
	-webkit-transition: all .3s;
	-o-transition: all .3s;
	transition: all .3s;
}

.paging_wrap .pageview a.active {
	color: #004f9b;
}

.paging_wrap .pageview a.active:after {
	width: 100%;
}

.paging_wrap .pageview a.arrow {
	border: 1px solid #bfbfbf;
	width: 30px;
	height: 30px;
	line-height: 30px;
	margin: 0 4px;
	-webkit-background-size: auto auto;
	        background-size: auto;
	background-repeat: no-repeat;
	background-position: center;
	padding: 0;
}

.paging_wrap .pageview a.arrow:after {
	display: none;
}

.paging_wrap .pageview a.arrow:hover:after {
	display: none;
}

.paging_wrap .pageview a.dub {
	background-image: url(../images/proposal/ic_dub_arrow.png);
}

.paging_wrap .pageview a.next {
	-webkit-transform: rotate(180deg);
	    -ms-transform: rotate(180deg);
	     -o-transform: rotate(180deg);
	        transform: rotate(180deg);
}

.paging_wrap .pageview a.sing {
	background-image: url(../images/proposal/ic_arrow.png);
	margin-right: 25px;
}

.paging_wrap .pageview a.sing.next {
	margin-right: 0;
	margin-left: 25px;
}

@media (max-width: 580px) {
	.paging_wrap .pageview a {
		padding: 0 5px;
		line-height: 25px;
		margin: 0 5px;
	}
	.paging_wrap .pageview a.arrow {
		width: 25px;
		height: 25px;
	}
	.paging_wrap .pageview a.sing {
		margin-right: 15px;
	}
	.paging_wrap .pageview a.sing.next {
		margin-left: 15px;
	}
}

@media (max-width: 380px) {
	.paging_wrap .pageview a.arrow {
		width: 20px;
	}
	.paging_wrap .pageview a.sing {
		margin-right: 10px;
	}
	.paging_wrap .pageview a.sing.next {
		margin-left: 10px;
	}
}

.btn_wrap {
	text-align: right;
}

.btn_wrap a {
	display: inline-block;
	padding: 8px 25px;
	background-color: #004f9b;
	color: #fff;
}

.file_box .filebox input[type="file"] {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}



.file_box {
	overflow: hidden;
}

.file_box .filebox {
    position: relative;
}

.file_box .filebox input[type="file"] {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.file_box .filebox input[type="text"] { 
	height: 34px;
    padding-left: 0;
    padding-right: 10rem;
    background: rgba(255,255,255,.8);
    border-radius: 0;
    border: 1px solid #c3c9cd;
    padding-left: 10px;
    box-sizing: border-box;
}

.file_box .filebox label {
	position: absolute;
	right: 0;
	top: 0;
    display: inline-block;
    color: #6b6b6b;
    font-size: inherit;
    line-height: normal;
    vertical-align: middle;
    background: #dcdcdc;
    cursor: pointer;
    height: 32px;
    line-height: 32px;
    text-align: center;
    font-size: 13px;
    font-family: 'noto-sans-scott-l';
    background: #fff;
	border: 1px solid #c3c9cd;
    padding: 0 15px;
}

.file_box .filebox label img {
	vertical-align: middle;
    margin: -3px 5px 0 0;
}




/*# sourceMappingURL=data:application/json;base64, */